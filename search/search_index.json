{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"\u673d\u6728\u81ea\u96d5 \u00b6 \u6d3b\u5728\u5f53\u4e0b\uff0c\u6d3b\u5728\u5c31\u8981\u53d1\u6325\uff0c\u5c31\u8981\u521b\u9020 \u4e2a\u4eba\u7231\u597d\uff0c\u7eaf\u5c5e\u626f\u86cb \u00b6 \u6350\u8d60 \u00b6 \u5982\u679c\u4f60\u89c9\u5f97\u8fd9\u5199\u6587\u7ae0\u80fd\u5e2e\u52a9\u5230\u4e86\u4f60\uff0c\u4f60\u53ef\u4ee5\u5e2e\u4f5c\u8005\u4e70\u4e00\u676f\u679c\u6c41\u8868\u793a\u9f13\u52b1 Paypal Me","title":"\u4ecb\u7ecd"},{"location":"#_1","text":"\u6d3b\u5728\u5f53\u4e0b\uff0c\u6d3b\u5728\u5c31\u8981\u53d1\u6325\uff0c\u5c31\u8981\u521b\u9020","title":"\u673d\u6728\u81ea\u96d5"},{"location":"#_2","text":"","title":"\u4e2a\u4eba\u7231\u597d\uff0c\u7eaf\u5c5e\u626f\u86cb"},{"location":"#_3","text":"\u5982\u679c\u4f60\u89c9\u5f97\u8fd9\u5199\u6587\u7ae0\u80fd\u5e2e\u52a9\u5230\u4e86\u4f60\uff0c\u4f60\u53ef\u4ee5\u5e2e\u4f5c\u8005\u4e70\u4e00\u676f\u679c\u6c41\u8868\u793a\u9f13\u52b1 Paypal Me","title":"\u6350\u8d60"},{"location":"docker/docker/","text":"Docker \u00b6 Docker\u7b80\u4ecb \u00b6 Docker\u662f\u5f00\u6e90\u5e94\u7528\u5bb9\u5668\u5f15\u64ce\uff0c\u8f7b\u91cf\u7ea7\u5bb9\u5668\u6280\u672f\u3002 \u57fa\u4e8eGo\u8bed\u8a00\uff0c\u5e76\u9075\u5faaApache2.0\u534f\u8bae\u5f00\u6e90 Docker\u53ef\u4ee5\u8ba9\u5f00\u53d1\u8005\u6253\u5305\u4ed6\u4eec\u7684\u5e94\u7528\u4ee5\u53ca\u4f9d\u8d56\u5305\u5230\u4e00\u4e2a\u8f7b\u91cf\u7ea7\u3001\u53ef\u79fb\u690d\u7684\u5bb9\u5668\u4e2d\uff0c\u7136\u540e\u53d1\u5e03\u5230\u4efb\u4f55\u6d41\u884c\u7684Linux\u7cfb\u7edf\u4e0a\uff0c\u4e5f\u53ef\u4ee5\u5b9e\u73b0\u865a\u62df\u5316 \u5bb9\u5668\u5b8c\u5168\u4f7f\u7528\u6c99\u7bb1\u6280\u672f\uff0c\u76f8\u4e92\u4e4b\u95f4\u4e0d\u4f1a\u6709\u4efb\u4f55\u63a5\u53e3 \u7c7b\u4f3c\u4e8e\u865a\u62df\u673a\u6280\u672f(vmware\u3001vitural)\uff0c\u4f46docker\u76f4\u63a5\u8fd0\u884c\u5728\u64cd\u4f5c\u7cfb\u7edf(Linux)\u4e0a\uff0c\u800c\u4e0d\u662f\u8fd0\u884c\u5728\u865a\u62df\u673a\u4e2d\uff0c\u901f\u5ea6\u5feb\uff0c\u6027\u80fd\u5f00\u9500\u6781\u4f4e \u767d\u8bdd\u6587\uff0c\u7b80\u4ecb\u5c31\u662f: Docker\u652f\u6301\u5c06\u8f6f\u4ef6\u7f16\u8bd1\u6210\u4e00\u4e2a\u955c\u50cf\uff0c\u7136\u540e\u5728\u955c\u50cf\u4e2d\u5404\u79cd\u8f6f\u4ef6\u505a\u597d\u914d\u7f6e\uff0c\u5c06\u955c\u50cf\u53d1\u5e03\u51fa\u53bb\uff0c\u5176\u4ed6\u4f7f\u7528\u8005\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\u8fd9\u4e2a\u955c\u50cf\u3002 \u8fd0\u884c\u4e2d\u7684\u8fd9\u4e2a\u955c\u50cf\u79f0\u4e3a\u5bb9\u5668\uff0c\u5bb9\u5668\u542f\u52a8\u662f\u975e\u5e38\u5feb\u901f\u7684\u3002\u7c7b\u4f3cwindows\u91cc\u9762\u7684ghost\u64cd \u4f5c\u7cfb\u7edf\uff0c\u5b89\u88c5\u597d\u540e\u4ec0\u4e48\u90fd\u6709\u4e86\u3002 \u4ec0\u4e48\u662fDocker \u00b6 Docker \u662f\u4e00\u4e2a\u5f00\u6e90\u7684\u5e94\u7528\u5bb9\u5668\u5f15\u64ce\uff0c\u57fa\u4e8eGo\u8bed\u8a00\uff0c\u8bde\u751f\u4e8e2013\u5e74\u521d\uff0c\u6700\u521d\u53d1\u8d77\u8005\u662fdotCloud\u516c\u53f8\uff0c\u5f00\u53d1\u8005\u53ef\u4ee5\u6253\u5305\u5e94\u7528\u5230\u4e00\u4e2a\u8f7b\u91cf\u7ea7\u3001\u53ef\u79fb\u690d\u7684\u5bb9\u5668\u4e2d\uff0c\u7136\u540e\u53d1\u5e03\u5230\u4e3b\u6d41Linux\u7cfb\u7edf\u4e0a\u8fd0\u884c\u3002 \u4e3a\u4ec0\u4e48\u7528Docker \u6301\u7eed\u4ea4\u4ed8\u548c\u90e8\u7f72\uff1a\u4f7f\u7528Docker\u53ef\u4ee5\u901a\u8fc7\u5b9a\u5236\u5e94\u7528\u955c\u50cf\u6765\u5b9e\u73b0\u6301\u7eed\u96c6\u6210\uff0c\u6301\u7eed\u4ea4\u4ed8\uff0c\u90e8\u7f72\u3002\u5f00\u53d1\u4eba\u5458\u6784\u5efa\u540e\u7684\u955c\u50cf\uff0c\u7ed3\u5408\u6301\u7eed\u96c6\u6210\u7cfb\u7edf\u8fdb\u884c\u96c6\u6210\u6d4b\u8bd5\uff0c\u800c\u8fd0\u7ef4\u4eba\u5458\u5219\u53ef\u4ee5\u5728\u751f\u4ea7\u73af\u5883\u4e2d\u5feb\u901f\u90e8\u7f72\u8be5\u955c\u50cf\uff0c\u4e5f\u53ef\u4ee5\u7ed3\u5408\u6301\u7eed\u90e8\u7f72\u7cfb\u7edf\u8fdb\u884c\u81ea\u52a8\u90e8\u7f72\u3002 \u66f4\u9ad8\u6548\u7684\u8d44\u6e90\u5229\u7528\uff1aDocker\u662f\u57fa\u4e8e\u5185\u6838\u7ea7\u7684\u865a\u62df\u5316\uff0c\u53ef\u4ee5\u5b9e\u73b0\u66f4\u9ad8\u6548\u7684\u6027\u80fd\uff0c\u540c\u65f6\u5bf9\u8d44\u6e90\u7684\u989d\u5916\u9700\u6c42\u5f88\u4f4e\uff0c\u76f8\u6bd4\u4f20\u7edf\u865a\u62df\u673a\u65b9\u5f0f\uff0c\u76f8\u540c\u914d\u7f6e\u7684\u4e3b\u673a\u80fd\u591f\u8fd0\u884c\u66f4\u591a\u7684\u5e94\u7528\u3002 \u66f4\u8f7b\u677e\u7684\u8fc1\u79fb\u548c\u6269\u5c55\uff1aDocker\u5bb9\u5668\u51e0\u4e4e\u53ef\u4ee5\u5728\u4efb\u4f55\u5e73\u53f0\u4e0a\u8fd0\u884c\uff0c\u540c\u65f6\u652f\u6301\u4e3b\u6d41\u7684\u64cd\u4f5c\u7cfb\u7edf\u53d1\u884c\u7248\u672c\u3002 \u66f4\u5feb\u901f\u7684\u542f\u52a8\u65f6\u95f4\uff1a\u4f20\u7edf\u7684\u865a\u62df\u673a\u6280\u672f\u542f\u52a8\u5e94\u7528\u670d\u52a1\u5f80\u5f80\u9700\u8981\u6570\u5206\u949f\uff0c\u800cDocker\u5bb9\u5668\u5e94\u7528\uff0c\u7531\u4e8e\u76f4\u63a5\u8fd0\u884c\u4e8e\u5bbf\u4e3b\u5185\u6838\uff0c\u65e0\u9700\u542f\u52a8\u5b8c\u6574\u7684\u64cd\u4f5c\u7cfb\u7edf\uff0c\u56e0\u6b64\u53ef\u4ee5\u505a\u5230\u5999\u7ea7\uff0c\u751a\u81f3\u6beb\u79d2\u7ea7\u7684\u542f\u52a8\u65f6\u95f4\uff0c\u5927\u5927\u7684\u8282\u7ea6\u4e86\u5f00\u53d1\uff0c\u6d4b\u8bd5\uff0c\u90e8\u7f72\u7684\u65f6\u95f4\u3002 Docker\u4e0e\u4f20\u7edf\u865a\u62df\u673a\u5dee\u5f02 \u4f20\u7edf\u865a\u62df\u5316\u65b9\u5f0f \u00b6 Docker\u865a\u62df\u5316\u65b9\u5f0f \u00b6 \u4f20\u7edf\u865a\u62df\u5316\u662f\u5728\u786c\u4ef6\u5c42\u9762\u5b9e\u73b0\u865a\u62df\u5316\uff0c\u9700\u8981\u6709\u989d\u5916\u7684\u865a\u62df\u673a\u7ba1\u7406\u5e94\u7528\u548c\u865a\u62df\u673a\u64cd\u4f5c\u7cfb\u7edf\u5c42\uff0c\u800cDocker\u5bb9\u5668\u662f\u5728\u64cd\u4f5c\u7cfb\u7edf\u5c42\u9762\u5b9e\u73b0\u865a\u62df\u5316\uff0c\u76f4\u63a5\u590d\u7528\u672c\u5730\u4e3b\u673a\u64cd\u4f5c\u7cfb\u7edf\uff0c\u66f4\u52a0\u8f7b\u91cf\u7ea7\u3002 \u6838\u5fc3\u6982\u5ff5 \u00b6 Docker\u955c\u50cf\uff1a\u7c7b\u4f3c\u4e8e\u865a\u62df\u673a\u91cc\u7684\u955c\u50cf\uff0c\u662f\u4e00\u4e2a\u53ea\u8bfb\u7684\u6a21\u677f\uff0c\u4e00\u4e2a\u72ec\u7acb\u7684\u6587\u4ef6\u7cfb\u7edf\uff0c\u4f7f\u7528\u955c\u50cf\u53ef\u4ee5\u521b\u5efa\u5bb9\u5668\uff0c\u53ef\u4ee5\u7406\u89e3\u4e3a\u955c\u50cf\u662f\u5bb9\u5668\u7684\u57fa\u77f3\u3002 Docker\u5bb9\u5668\uff1a\u662f\u7531Docker\u955c\u50cf\u521b\u5efa\u7684\u8fd0\u884c\u5b9e\u4f8b\uff0c\u7c7b\u4f3c\u4e8e\u8f7b\u91cf\u7ea7\u7684\u6c99\u7bb1\uff0c\u6bcf\u4e2a\u5bb9\u5668\u4e4b\u95f4\u90fd\u662f\u76f8\u4e92\u9694\u79bb\u7684\u3002\u652f\u6301\u7684\u64cd\u4f5c\u6709\u542f\u52a8\uff0c\u505c\u6b62\uff0c\u5220\u9664\u7b49\u3002 docker\u5ba2\u6237\u7aef(Client)\uff1a\u5ba2\u6237\u7aef\u901a\u8fc7\u547d\u4ee4\u884c\u6216\u5176\u4ed6\u5de5\u5177\u4f7f\u7528Docker API( https://docs.docker.com/reference/api/docker_remote_api)\u4e0eDocker\u7684\u5b88\u62a4\u8fdb\u7a0b\u8fdb\u884c\u901a\u4fe1 docker\u4e3b\u673a(Host)\uff1a\u4e00\u4e2a\u7269\u7406\u6216\u865a\u62df\u7684\u673a\u5668\u7528\u6765\u6267\u884cDocker\u5b88\u62a4\u8fdb\u7a0b\u548c\u5bb9\u5668 docker\u4ed3\u5e93(Registry)\uff1aDocker\u4ed3\u5e93\u7528\u6765\u5b58\u50a8\u955c\u50cf\uff0c\u53ef\u4ee5\u7406\u89e3\u4e3a\u4ee3\u7801\u63a7\u5236\u4e2d\u7684\u4ee3\u7801\u4ed3\u5e93\uff0cDocker Hub( https://hub.docker.com ) \u63d0\u4f9b\u4e86\u5e9e\u5927\u7684\u955c\u50cf\u96c6\u5408\u4f9b\u4f7f\u7528 Docker\u5b89\u88c5\u53ca\u542f\u505c \u00b6 \u67e5\u770bcentos\u7248\u672c Docker \u8981\u6c42 CentOS \u7cfb\u7edf\u7684\u5185\u6838\u7248\u672c\u9ad8\u4e8e 3.10 \u901a\u8fc7\u547d\u4ee4\uff1auname -r \u67e5\u770b\u5f53\u524dcentos\u7248\u672c\uff0c\u5982\u7248\u672c\u4e0d\u7b26\uff0c\u9700\u5347\u7ea7\u7cfb\u7edf\u7248\u672c \u5347\u7ea7\u8f6f\u4ef6\u5305\u53ca\u5185\u6838(\u53ef\u9009) yum update \u5b89\u88c5docker yum install docker \u542f\u52a8docker systemctl start docker \u5c06docker\u670d\u52a1\u8bbe\u4e3a\u5f00\u673a\u542f\u52a8 systemtctl enable docker \u505c\u6b62docker systemtctl stop docker Docker\u5e38\u7528\u547d\u4ee4\u53ca\u64cd\u4f5c \u00b6 docker\u955c\u50cf\u547d\u4ee4 docker search mysql ## \u641c\u7d22\u955c\u50cf docker pull mysql ## \u4e0b\u8f7d\u955c\u50cf \u4e0b\u8f7d\u547d\u540d\u4e3a\uff1adocker pull \u955c\u50cf\u540d:tag\uff0c\u5176\u4e2dtag\u591a\u4e3a\u7cfb\u7edf\u7684\u7248\u672c\uff0c\u53ef\u9009\u7684\uff0c\u9ed8\u8ba4\u4e3aleast docker images ## \u955c\u50cf\u5217\u8868 RESPOSITORY\u4e3a\u955c\u50cf\u540d TAG\u4e3a\u955c\u50cf\u7248\u672c\uff0cleast\u4ee3\u8868\u6700\u65b0 IMAGE_ID \u4e3a\u8be5\u955c\u50cf\u552f\u4e00ID CREATED \u4e3a\u8be5\u955c\u50cf\u521b\u5efa\u65f6\u95f4 SIZE \u4e3a\u8be5\u955c\u50cf\u5927\u5c0f docker rmi image-id ##\u5220\u9664\u6307\u5b9a\u955c\u50cf docker rmi $(docker images -q) ##\u5220\u9664\u6240\u6709\u955c\u50cf docker run --name container-name -d image-name ##\u6839\u636e\u955c\u50cf\u542f\u52a8\u5bb9\u5668 -- name\uff1a\u4e3a\u5bb9\u5668\u8d77\u4e00\u4e2a\u540d\u79f0 -d\uff1adetached\uff0c\u6267\u884c\u5b8c\u8fd9\u53e5\u547d\u4ee4\u540e\uff0c\u63a7\u5236\u53f0\u5c06\u4e0d\u4f1a\u963b\u585e\uff0c\u53ef\u4ee5\u7ee7\u7eed\u8f93\u5165\u547d\u4ee4\u64cd\u4f5c image-name\uff1a\u8981\u8fd0\u884c\u7684\u955c\u50cf\u540d\u79f0 docker ps ##\u67e5\u770b\u8fd0\u884c\u4e2d\u5bb9\u5668 CONTAINER ID\uff1a\u542f\u52a8\u65f6\u751f\u6210\u7684ID IMAGE\uff1a\u8be5\u5bb9\u5668\u4f7f\u7528\u7684\u955c\u50cf COMMAND\uff1a\u5bb9\u5668\u542f\u52a8\u65f6\u6267\u884c\u7684\u547d\u4ee4 CREATED\uff1a\u5bb9\u5668\u521b\u5efa\u65f6\u95f4 STATUS\uff1a\u5f53\u524d\u5bb9\u5668\u72b6\u6001 PORTS\uff1a\u5f53\u524d\u5bb9\u5668\u6240\u4f7f\u7528\u7684\u9ed8\u8ba4\u7aef\u53e3\u53f7 NAMES\uff1a\u542f\u52a8\u65f6\u7ed9\u5bb9\u5668\u8bbe\u7f6e\u7684\u540d\u79f0 docker stop container-name/container-id ## \u505c\u6b62\u8fd0\u884c\u4e2d\u5bb9\u5668 docker ps -a ##\u67e5\u770b\u6240\u6709\u7684\u5bb9\u5668 docker start container-name/container-id ##\u542f\u52a8\u5bb9\u5668 docker rm container-id ## \u5220\u9664\u5355\u4e2a\u5bb9\u5668 docker rm $(docker ps -a -q ) ## \u5220\u9664\u6240\u6709\u5bb9\u5668 docker run --name tomcat2 -d -p 8888:8080 tomcat ## \u542f\u52a8\u505a\u7aef\u53e3\u6620\u5c04\u7684\u5bb9\u5668 docker logs container-id/container-name ##\u67e5\u770b\u5bb9\u5668\u65e5\u5fd7 docker port container-id ## \u67e5\u770b\u7aef\u53e3\u6620\u5c04 docker exec -it container-id/container-name bash ##\u5bb9\u5668\u767b\u5f55\u547d\u4ee4\u4e3a exit ##\u5bb9\u5668\u9000\u51fa\u547d\u4ee4 \u66f4\u591a\u547d\u4ee4\u53ef\u4ee5\u53c2\u8003 \u955c\u50cf\u64cd\u4f5c\u6307\u4ee4 \u00b6 \u83b7\u53d6\u955c\u50cf\uff1a docker pull centos (\u9ed8\u8ba4\u83b7\u53d6centos\u6700\u65b0\u7684\u955c\u50cf) docker pull centos:7 (\u83b7\u53d6\u6307\u5b9a\u6807\u7b7e\u955c\u50cf) \u67e5\u770b\u672c\u5730\u955c\u50cf\uff1a docker images \u67e5\u770b\u955c\u50cf\u8be6\u7ec6\u4fe1\u606f\uff1a docker inspect centos:7 \u67e5\u770b\u955c\u50cf\u5386\u53f2\uff1a docker history centos:7 \u5220\u9664\u955c\u50cf\uff1a A:\u4f7f\u7528\u6807\u7b7e\u5220\u9664\uff1adocker rmi centos B:\u4f7f\u7528ID\u5220\u9664\uff1adocker rimi \u6784\u5efa\u955c\u50cf\uff1a A:\u4f7f\u7528docker commit\u547d\u4ee4 B:\u4f7f\u7528Dockerfile\u6784\u5efa \u4f7f\u7528docker commit \u00b6 \u4f8b\uff1a\u6784\u5efa\u4e00\u4e2a\u5e26\u6709jdk\u7684\u955c\u50cf \u6309\u7167\u5982\u4e0b\u6b65\u9aa4\u64cd\u4f5c [root@localhost ~]# docker run -it centos:7 /bin/bash [root@060793baf536 /]# yum install wget [root@060793baf536 /]# wget --no-check-certificate --no-cookies --header \"Cookie: oraclelicense=accept-securebackup-cookie\" http://download.oracle.com/otn-pub/java/jdk/8u131-b11/d54c1d3a095b4ff2b6607d096fa80163/jdk-8u131-linux-x64.rpm [root@060793baf536 /]# rpm -ivh jdk-8u131-linux-x64.rpm Preparing... ################################# [100%] Updating / installing... 1:jdk1.8.0_131-2000:1.8.0_131-fcs ################################# [100%] Unpacking JAR files... tools.jar... plugin.jar... javaws.jar... deploy.jar... rt.jar... jsse.jar... charsets.jar... localedata.jar... [root@060793baf536 /]# exit [root@localhost ~]# docker commit 060793baf536 centos/jdk:2.0 \u901a\u8fc7docker images\u547d\u4ee4\u53ef\u4ee5\u770b\u5230\u65b0\u589e\u4e86centos/jdk \u6807\u7b7e\u4e3a2.0\u7684\u955c\u50cf \u4f7f\u7528Dockerfile\u6784\u5efa \u00b6 \u5b9e\u9645\u4f7f\u7528\u4e2d\u4e0d\u63a8\u8350\u4f7f\u7528docker commit\u6784\u5efa\uff0c\u5e94\u4f7f\u7528\u66f4\u7075\u6d3b\u548c\u5f3a\u5927\u7684Dockerfile\u6784\u5efadocker\u955c\u50cf\uff0c\u76f4\u63a5\u4e3e\u4f8b\u6765\u8ba4\u8bc6Dockerfile\u3002 \u4f8b\uff1a\u6784\u5efa\u4e00\u4e2a\u5e26\u6709jdk\u7684centos7\u955c\u50cf [root@localhost Dockerfile]# mkdir Dockerfile [root@localhost Dockerfile]# cd Dockerfile \u7f16\u5199Dockerfile\uff1a FROM centos:7 MAINTAINER Java-Road \"Java-Road@qq.com\" RUN mkdir /usr/local/jdk COPY jdk-8u171-linux-x64.rpm /usr/local/jdk/ RUN rpm -ivh /usr/local/jdk/jdk-8u171-linux-x64.rpm \u6267\u884c\u5982\u4e0b\u6307\u4ee4\uff1a [root@localhost Dockerfile]# docker build -t centos/jdk . \u8fd0\u884c\u7ed3\u679c\u5982\u4e0b\uff1a docker images\u53ef\u4ee5\u770b\u5230\u65b0\u751f\u6210\u7684centos/jdk\u955c\u50cf \u5bb9\u5668\u64cd\u4f5c\u6307\u4ee4 \u00b6 \u521b\u5efa\u542f\u52a8\u5bb9\u5668\uff1a [root@localhost ~]# docker run centos:7 /bin/echo'hello world' \u5bb9\u5668\u8fd0\u884c\u5b8c\u540e\u76f4\u63a5\u9000\u51fa \u4ea4\u4e92\u5f62\u5f0f\u521b\u5efa\u542f\u52a8\u5bb9\u5668 [root@localhost ~]# docker run -it centos:7 /bin/bash [root@802e3623e566 /]# ps PID TTY TIME CMD 1 ? 00:00:00 bash 13 ? 00:00:00 ps [root@802e3623e566 /]# exit \u6267\u884cexit\u624d\u80fd\u9000\u51fa\u5bb9\u5668 ``` * \u5b88\u62a4\u72b6\u6001\u8fd0\u884c\u5bb9\u5668 ``` [root@localhost ~]# docker run -d centos:7 /bin/sh -c \"while true; do echo hello world; sleep 1; done\" ``` * \u542f\u52a8\u5df2\u6709\u7684\u5bb9\u5668\uff1a docker start \u5bb9\u5668ID \u4f8b\uff1a [root@localhost ~]# docker start 802e3623e566 ``` * \u505c\u6b62\u8fd0\u884c\u7684\u5bb9\u5668\uff1a docker stop \u5bb9\u5668ID \u4f8b\uff1a [root@localhost ~]# docker stop 802e3623e566 ``` * \u5220\u9664\u5bb9\u5668\uff1a [root@localhost ~]# docker stop 89566e38c7fb [root@localhost ~]# docker rm 89566e38c7fb ``` \u8fdb\u5165\u8fd0\u884c\u7684\u5bb9\u5668\uff1a [root@localhost ~]# docker exec -it cbd8b1f35dcc /bin/bash ``` * \u5bfc\u51fa\u5bb9\u5668\uff1a \u5bfc\u51fa\u5bb9\u5668cbd8b1f35dcc\u5230centos_test.tar\u6587\u4ef6 [root@localhost ~]# docker export -o centos_test.tar cbd8b1f35dcc \u5bfc\u51fa\u7684tar\u6587\u4ef6\u53ef\u4ee5\u5728\u5176\u4ed6\u673a\u5668\u4e0a\uff0c\u901a\u8fc7\u5bfc\u5165\u6765\u91cd\u65b0\u8fd0\u884c ``` \u5bfc\u5165\u5bb9\u5668\uff1a \u628a\u5bfc\u51fa\u7684\u6587\u4ef6centos_test.tar\u901a\u8fc7docker import\u5bfc\u5165\u53d8\u6210\u955c\u50cf [root@localhost ~]# docker import centos_test.tar test/centos \u901a\u8fc7docker images\u547d\u4ee4\u53ef\u4ee5\u770b\u5230\u589e\u52a0\u4e86\u4e2atest/centos\u955c\u50cf \u5b9e\u4f8b\uff1a\u5236\u4f5c\u81ea\u5df1\u7684 Docker \u5bb9\u5668 \u00b6 \u4e0b\u9762\u6211\u4ee5 koa-demos \u9879\u76ee\u4e3a\u4f8b\uff0c\u4ecb\u7ecd\u600e\u4e48\u5199 Dockerfile \u6587\u4ef6\uff0c\u5b9e\u73b0\u8ba9\u7528\u6237\u5728 Docker \u5bb9\u5668\u91cc\u9762\u8fd0\u884c Koa \u6846\u67b6\u3002 \u4f5c\u4e3a\u51c6\u5907\u5de5\u4f5c\uff0c\u8bf7\u5148\u4e0b\u8f7d\u6e90\u7801\u3002 $ git clone https://github.com/ruanyf/koa-demos.git $ cd koa-demos Dockerfile \u6587\u4ef6 \u00b6 \u9996\u5148\uff0c\u5728\u9879\u76ee\u7684\u6839\u76ee\u5f55\u4e0b\uff0c\u65b0\u5efa\u4e00\u4e2a\u6587\u672c\u6587\u4ef6.dockerignore\uff0c\u5199\u5165\u4e0b\u9762\u7684\u5185\u5bb9\u3002 .git node_modules npm-debug.log \u4e0a\u9762\u4ee3\u7801\u8868\u793a\uff0c\u8fd9\u4e09\u4e2a\u8def\u5f84\u8981\u6392\u9664\uff0c\u4e0d\u8981\u6253\u5305\u8fdb\u5165 image \u6587\u4ef6\u3002\u5982\u679c\u4f60\u6ca1\u6709\u8def\u5f84\u8981\u6392\u9664\uff0c\u8fd9\u4e2a\u6587\u4ef6\u53ef\u4ee5\u4e0d\u65b0\u5efa\u3002 \u7136\u540e\uff0c\u5728\u9879\u76ee\u7684\u6839\u76ee\u5f55\u4e0b\uff0c\u65b0\u5efa\u4e00\u4e2a\u6587\u672c\u6587\u4ef6 Dockerfile\uff0c\u5199\u5165\u4e0b\u9762\u7684\u5185\u5bb9\u3002 FROM node:8.4 COPY . /app WORKDIR /app RUN npm install --registry=https://registry.npm.taobao.org EXPOSE 3000 \u4e0a\u9762\u4ee3\u7801\u4e00\u5171\u4e94\u884c\uff0c\u542b\u4e49\u5982\u4e0b\u3002 * FROM node:8.4\uff1a\u8be5 image \u6587\u4ef6\u7ee7\u627f\u5b98\u65b9\u7684 node image\uff0c\u5192\u53f7\u8868\u793a\u6807\u7b7e\uff0c\u8fd9\u91cc\u6807\u7b7e\u662f8.4\uff0c\u53738.4\u7248\u672c\u7684 node\u3002 * COPY . /app\uff1a\u5c06\u5f53\u524d\u76ee\u5f55\u4e0b\u7684\u6240\u6709\u6587\u4ef6\uff08\u9664\u4e86.dockerignore\u6392\u9664\u7684\u8def\u5f84\uff09\uff0c\u90fd\u62f7\u8d1d\u8fdb\u5165 image \u6587\u4ef6\u7684/app\u76ee\u5f55\u3002 * WORKDIR /app\uff1a\u6307\u5b9a\u63a5\u4e0b\u6765\u7684\u5de5\u4f5c\u8def\u5f84\u4e3a/app\u3002 * RUN npm install\uff1a\u5728/app\u76ee\u5f55\u4e0b\uff0c\u8fd0\u884cnpm install\u547d\u4ee4\u5b89\u88c5\u4f9d\u8d56\u3002\u6ce8\u610f\uff0c\u5b89\u88c5\u540e\u6240\u6709\u7684\u4f9d\u8d56\uff0c\u90fd\u5c06\u6253\u5305\u8fdb\u5165 image \u6587\u4ef6\u3002 * EXPOSE 3000\uff1a\u5c06\u5bb9\u5668 3000 \u7aef\u53e3\u66b4\u9732\u51fa\u6765\uff0c \u5141\u8bb8\u5916\u90e8\u8fde\u63a5\u8fd9\u4e2a\u7aef\u53e3\u3002 \u521b\u5efa image \u6587\u4ef6 \u00b6 \u6709\u4e86 Dockerfile \u6587\u4ef6\u4ee5\u540e\uff0c\u5c31\u53ef\u4ee5\u4f7f\u7528docker image build\u547d\u4ee4\u521b\u5efa image \u6587\u4ef6\u4e86\u3002 $ docker image build -t koa-demo . # \u6216\u8005 $ docker image build -t koa-demo:0.0.1 . \u4e0a\u9762\u4ee3\u7801\u4e2d\uff0c-t\u53c2\u6570\u7528\u6765\u6307\u5b9a image \u6587\u4ef6\u7684\u540d\u5b57\uff0c\u540e\u9762\u8fd8\u53ef\u4ee5\u7528\u5192\u53f7\u6307\u5b9a\u6807\u7b7e\u3002\u5982\u679c\u4e0d\u6307\u5b9a\uff0c\u9ed8\u8ba4\u7684\u6807\u7b7e\u5c31\u662flatest\u3002\u6700\u540e\u7684\u90a3\u4e2a\u70b9\u8868\u793a Dockerfile \u6587\u4ef6\u6240\u5728\u7684\u8def\u5f84\uff0c\u4e0a\u4f8b\u662f\u5f53\u524d\u8def\u5f84\uff0c\u6240\u4ee5\u662f\u4e00\u4e2a\u70b9\u3002 \u5982\u679c\u8fd0\u884c\u6210\u529f\uff0c\u5c31\u53ef\u4ee5\u770b\u5230\u65b0\u751f\u6210\u7684 image \u6587\u4ef6koa-demo\u4e86\u3002 $ docker image ls \u751f\u6210\u5bb9\u5668 \u00b6 docker container run\u547d\u4ee4\u4f1a\u4ece image \u6587\u4ef6\u751f\u6210\u5bb9\u5668\u3002 $ docker container run -p 8000:3000 -it koa-demo /bin/bash # \u6216\u8005 $ docker container run -p 8000:3000 -it koa-demo:0.0.1 /bin/bash \u4e0a\u9762\u547d\u4ee4\u7684\u5404\u4e2a\u53c2\u6570\u542b\u4e49\u5982\u4e0b\uff1a -p\u53c2\u6570\uff1a\u5bb9\u5668\u7684 3000 \u7aef\u53e3\u6620\u5c04\u5230\u672c\u673a\u7684 8000 \u7aef\u53e3\u3002 -it\u53c2\u6570\uff1a\u5bb9\u5668\u7684 Shell \u6620\u5c04\u5230\u5f53\u524d\u7684 Shell\uff0c\u7136\u540e\u4f60\u5728\u672c\u673a\u7a97\u53e3\u8f93\u5165\u7684\u547d\u4ee4\uff0c\u5c31\u4f1a\u4f20\u5165\u5bb9\u5668\u3002 koa-demo:0.0.1\uff1aimage \u6587\u4ef6\u7684\u540d\u5b57\uff08\u5982\u679c\u6709\u6807\u7b7e\uff0c\u8fd8\u9700\u8981\u63d0\u4f9b\u6807\u7b7e\uff0c\u9ed8\u8ba4\u662f latest \u6807\u7b7e\uff09\u3002 /bin/bash\uff1a\u5bb9\u5668\u542f\u52a8\u4ee5\u540e\uff0c\u5185\u90e8\u7b2c\u4e00\u4e2a\u6267\u884c\u7684\u547d\u4ee4\u3002\u8fd9\u91cc\u662f\u542f\u52a8 Bash\uff0c\u4fdd\u8bc1\u7528\u6237\u53ef\u4ee5\u4f7f\u7528 Shell\u3002 \u5982\u679c\u4e00\u5207\u6b63\u5e38\uff0c\u8fd0\u884c\u4e0a\u9762\u7684\u547d\u4ee4\u4ee5\u540e\uff0c\u5c31\u4f1a\u8fd4\u56de\u4e00\u4e2a\u547d\u4ee4\u884c\u63d0\u793a\u7b26\u3002 root@66d80f4aaf1e:/app# \u8fd9\u8868\u793a\u4f60\u5df2\u7ecf\u5728\u5bb9\u5668\u91cc\u9762\u4e86\uff0c\u8fd4\u56de\u7684\u63d0\u793a\u7b26\u5c31\u662f\u5bb9\u5668\u5185\u90e8\u7684 Shell \u63d0\u793a\u7b26\u3002\u6267\u884c\u4e0b\u9762\u7684\u547d\u4ee4\u3002 root@66d80f4aaf1e:/app# node demos/01.js \u8fd9\u65f6\uff0cKoa \u6846\u67b6\u5df2\u7ecf\u8fd0\u884c\u8d77\u6765\u4e86\u3002\u6253\u5f00\u672c\u673a\u7684\u6d4f\u89c8\u5668\uff0c\u8bbf\u95ee http://127.0.0.1:8000 \uff0c\u7f51\u9875\u663e\u793a\"Not Found\"\uff0c\u8fd9\u662f\u56e0\u4e3a\u8fd9\u4e2a demo \u6ca1\u6709\u5199\u8def\u7531\u3002 \u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0cNode \u8fdb\u7a0b\u8fd0\u884c\u5728 Docker \u5bb9\u5668\u7684\u865a\u62df\u73af\u5883\u91cc\u9762\uff0c\u8fdb\u7a0b\u63a5\u89e6\u5230\u7684\u6587\u4ef6\u7cfb\u7edf\u548c\u7f51\u7edc\u63a5\u53e3\u90fd\u662f\u865a\u62df\u7684\uff0c\u4e0e\u672c\u673a\u7684\u6587\u4ef6\u7cfb\u7edf\u548c\u7f51\u7edc\u63a5\u53e3\u662f\u9694\u79bb\u7684\uff0c\u56e0\u6b64\u9700\u8981\u5b9a\u4e49\u5bb9\u5668\u4e0e\u7269\u7406\u673a\u7684\u7aef\u53e3\u6620\u5c04\uff08map\uff09\u3002 \u73b0\u5728\uff0c\u5728\u5bb9\u5668\u7684\u547d\u4ee4\u884c\uff0c\u6309\u4e0b Ctrl + c \u505c\u6b62 Node \u8fdb\u7a0b\uff0c\u7136\u540e\u6309\u4e0b Ctrl + d \uff08\u6216\u8005\u8f93\u5165 exit\uff09\u9000\u51fa\u5bb9\u5668\u3002\u6b64\u5916\uff0c\u4e5f\u53ef\u4ee5\u7528docker container kill\u7ec8\u6b62\u5bb9\u5668\u8fd0\u884c\u3002 # \u5728\u672c\u673a\u7684\u53e6\u4e00\u4e2a\u7ec8\u7aef\u7a97\u53e3\uff0c\u67e5\u51fa\u5bb9\u5668\u7684 ID $ docker container ls # \u505c\u6b62\u6307\u5b9a\u7684\u5bb9\u5668\u8fd0\u884c $ docker container kill [containerID] \u5bb9\u5668\u505c\u6b62\u8fd0\u884c\u4e4b\u540e\uff0c\u5e76\u4e0d\u4f1a\u6d88\u5931\uff0c\u7528\u4e0b\u9762\u7684\u547d\u4ee4\u5220\u9664\u5bb9\u5668\u6587\u4ef6\u3002 # \u67e5\u51fa\u5bb9\u5668\u7684 ID $ docker container ls --all # \u5220\u9664\u6307\u5b9a\u7684\u5bb9\u5668\u6587\u4ef6 $ docker container rm [containerID] \u4e5f\u53ef\u4ee5\u4f7f\u7528docker container run\u547d\u4ee4\u7684--rm\u53c2\u6570\uff0c\u5728\u5bb9\u5668\u7ec8\u6b62\u8fd0\u884c\u540e\u81ea\u52a8\u5220\u9664\u5bb9\u5668\u6587\u4ef6\u3002 $ docker container run --rm -p 8000:3000 -it koa-demo /bin/bash CMD \u547d\u4ee4 \u00b6 \u4e0a\u4e00\u8282\u7684\u4f8b\u5b50\u91cc\u9762\uff0c\u5bb9\u5668\u542f\u52a8\u4ee5\u540e\uff0c\u9700\u8981\u624b\u52a8\u8f93\u5165\u547d\u4ee4node demos/01.js\u3002\u6211\u4eec\u53ef\u4ee5\u628a\u8fd9\u4e2a\u547d\u4ee4\u5199\u5728 Dockerfile \u91cc\u9762\uff0c\u8fd9\u6837\u5bb9\u5668\u542f\u52a8\u4ee5\u540e\uff0c\u8fd9\u4e2a\u547d\u4ee4\u5c31\u5df2\u7ecf\u6267\u884c\u4e86\uff0c\u4e0d\u7528\u518d\u624b\u52a8\u8f93\u5165\u4e86\u3002 FROM node:8.4 COPY . /app WORKDIR /app RUN npm install --registry=https://registry.npm.taobao.org EXPOSE 3000 CMD node demos/01.js \u4e0a\u9762\u7684 Dockerfile \u91cc\u9762\uff0c\u591a\u4e86\u6700\u540e\u4e00\u884cCMD node demos/01.js\uff0c\u5b83\u8868\u793a\u5bb9\u5668\u542f\u52a8\u540e\u81ea\u52a8\u6267\u884cnode demos/01.js\u3002 \u4f60\u53ef\u80fd\u4f1a\u95ee\uff0cRUN\u547d\u4ee4\u4e0eCMD\u547d\u4ee4\u7684\u533a\u522b\u5728\u54ea\u91cc\uff1f\u7b80\u5355\u8bf4\uff0cRUN\u547d\u4ee4\u5728 image \u6587\u4ef6\u7684\u6784\u5efa\u9636\u6bb5\u6267\u884c\uff0c\u6267\u884c\u7ed3\u679c\u90fd\u4f1a\u6253\u5305\u8fdb\u5165 image \u6587\u4ef6\uff1bCMD\u547d\u4ee4\u5219\u662f\u5728\u5bb9\u5668\u542f\u52a8\u540e\u6267\u884c\u3002\u53e6\u5916\uff0c\u4e00\u4e2a Dockerfile \u53ef\u4ee5\u5305\u542b\u591a\u4e2aRUN\u547d\u4ee4\uff0c\u4f46\u662f\u53ea\u80fd\u6709\u4e00\u4e2aCMD\u547d\u4ee4\u3002 \u6ce8\u610f\uff0c\u6307\u5b9a\u4e86CMD\u547d\u4ee4\u4ee5\u540e\uff0cdocker container run\u547d\u4ee4\u5c31\u4e0d\u80fd\u9644\u52a0\u547d\u4ee4\u4e86\uff08\u6bd4\u5982\u524d\u9762\u7684/bin/bash\uff09\uff0c\u5426\u5219\u5b83\u4f1a\u8986\u76d6CMD\u547d\u4ee4\u3002\u73b0\u5728\uff0c\u542f\u52a8\u5bb9\u5668\u53ef\u4ee5\u4f7f\u7528\u4e0b\u9762\u7684\u547d\u4ee4\u3002 $ docker container run --rm -p 8000:3000 -it koa-demo:0.0.1 \u53d1\u5e03 image \u6587\u4ef6 \u00b6 \u5bb9\u5668\u8fd0\u884c\u6210\u529f\u540e\uff0c\u5c31\u786e\u8ba4\u4e86 image \u6587\u4ef6\u7684\u6709\u6548\u6027\u3002\u8fd9\u65f6\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u8003\u8651\u628a image \u6587\u4ef6\u5206\u4eab\u5230\u7f51\u4e0a\uff0c\u8ba9\u5176\u4ed6\u4eba\u4f7f\u7528\u3002 \u9996\u5148\uff0c\u53bb hub.docker.com \u6216 cloud.docker.com \u6ce8\u518c\u4e00\u4e2a\u8d26\u6237\u3002\u7136\u540e\uff0c\u7528\u4e0b\u9762\u7684\u547d\u4ee4\u767b\u5f55\u3002 $ docker login \u63a5\u7740\uff0c\u4e3a\u672c\u5730\u7684 image \u6807\u6ce8\u7528\u6237\u540d\u548c\u7248\u672c\u3002 $ docker image tag [imageName] [username]/[repository]:[tag] # \u5b9e\u4f8b $ docker image tag koa-demos:0.0.1 ruanyf/koa-demos:0.0.1 \u4e5f\u53ef\u4ee5\u4e0d\u6807\u6ce8\u7528\u6237\u540d\uff0c\u91cd\u65b0\u6784\u5efa\u4e00\u4e0b image \u6587\u4ef6\u3002 $ docker image build -t [username]/[repository]:[tag] . \u6700\u540e\uff0c\u53d1\u5e03 image \u6587\u4ef6\u3002 $ docker image push [username]/[repository]:[tag] \u53d1\u5e03\u6210\u529f\u4ee5\u540e\uff0c\u767b\u5f55 hub.docker.com\uff0c\u5c31\u53ef\u4ee5\u770b\u5230\u5df2\u7ecf\u53d1\u5e03\u7684 image \u6587\u4ef6\u3002 \u5176\u4ed6\u6709\u7528\u7684\u547d\u4ee4 \u00b6 docker \u7684\u4e3b\u8981\u7528\u6cd5\u5c31\u662f\u4e0a\u9762\u8fd9\u4e9b\uff0c\u6b64\u5916\u8fd8\u6709\u51e0\u4e2a\u547d\u4ee4\uff0c\u4e5f\u975e\u5e38\u6709\u7528\u3002 1. docker container start \u524d\u9762\u7684docker container run\u547d\u4ee4\u662f\u65b0\u5efa\u5bb9\u5668\uff0c\u6bcf\u8fd0\u884c\u4e00\u6b21\uff0c\u5c31\u4f1a\u65b0\u5efa\u4e00\u4e2a\u5bb9\u5668\u3002\u540c\u6837\u7684\u547d\u4ee4\u8fd0\u884c\u4e24\u6b21\uff0c\u5c31\u4f1a\u751f\u6210\u4e24\u4e2a\u4e00\u6a21\u4e00\u6837\u7684\u5bb9\u5668\u6587\u4ef6\u3002\u5982\u679c\u5e0c\u671b\u91cd\u590d\u4f7f\u7528\u5bb9\u5668\uff0c\u5c31\u8981\u4f7f\u7528docker container start\u547d\u4ee4\uff0c\u5b83\u7528\u6765\u542f\u52a8\u5df2\u7ecf\u751f\u6210\u3001\u5df2\u7ecf\u505c\u6b62\u8fd0\u884c\u7684\u5bb9\u5668\u6587\u4ef6\u3002 $ docker container start [containerID] 2. docker container stop \u524d\u9762\u7684docker container kill\u547d\u4ee4\u7ec8\u6b62\u5bb9\u5668\u8fd0\u884c\uff0c\u76f8\u5f53\u4e8e\u5411\u5bb9\u5668\u91cc\u9762\u7684\u4e3b\u8fdb\u7a0b\u53d1\u51fa SIGKILL \u4fe1\u53f7\u3002\u800cdocker container stop\u547d\u4ee4\u4e5f\u662f\u7528\u6765\u7ec8\u6b62\u5bb9\u5668\u8fd0\u884c\uff0c\u76f8\u5f53\u4e8e\u5411\u5bb9\u5668\u91cc\u9762\u7684\u4e3b\u8fdb\u7a0b\u53d1\u51fa SIGTERM \u4fe1\u53f7\uff0c\u7136\u540e\u8fc7\u4e00\u6bb5\u65f6\u95f4\u518d\u53d1\u51fa SIGKILL \u4fe1\u53f7\u3002 $ bash container stop [containerID] \u8fd9\u4e24\u4e2a\u4fe1\u53f7\u7684\u5dee\u522b\u662f\uff0c\u5e94\u7528\u7a0b\u5e8f\u6536\u5230 SIGTERM \u4fe1\u53f7\u4ee5\u540e\uff0c\u53ef\u4ee5\u81ea\u884c\u8fdb\u884c\u6536\u5c3e\u6e05\u7406\u5de5\u4f5c\uff0c\u4f46\u4e5f\u53ef\u4ee5\u4e0d\u7406\u4f1a\u8fd9\u4e2a\u4fe1\u53f7\u3002\u5982\u679c\u6536\u5230 SIGKILL \u4fe1\u53f7\uff0c\u5c31\u4f1a\u5f3a\u884c\u7acb\u5373\u7ec8\u6b62\uff0c\u90a3\u4e9b\u6b63\u5728\u8fdb\u884c\u4e2d\u7684\u64cd\u4f5c\u4f1a\u5168\u90e8\u4e22\u5931\u3002 3. docker container logs docker container logs\u547d\u4ee4\u7528\u6765\u67e5\u770b docker \u5bb9\u5668\u7684\u8f93\u51fa\uff0c\u5373\u5bb9\u5668\u91cc\u9762 Shell \u7684\u6807\u51c6\u8f93\u51fa\u3002\u5982\u679cdocker run\u547d\u4ee4\u8fd0\u884c\u5bb9\u5668\u7684\u65f6\u5019\uff0c\u6ca1\u6709\u4f7f\u7528-it\u53c2\u6570\uff0c\u5c31\u8981\u7528\u8fd9\u4e2a\u547d\u4ee4\u67e5\u770b\u8f93\u51fa\u3002 $ docker container logs [containerID] 4. docker container exec docker container exec\u547d\u4ee4\u7528\u4e8e\u8fdb\u5165\u4e00\u4e2a\u6b63\u5728\u8fd0\u884c\u7684 docker \u5bb9\u5668\u3002\u5982\u679cdocker run\u547d\u4ee4\u8fd0\u884c\u5bb9\u5668\u7684\u65f6\u5019\uff0c\u6ca1\u6709\u4f7f\u7528-it\u53c2\u6570\uff0c\u5c31\u8981\u7528\u8fd9\u4e2a\u547d\u4ee4\u8fdb\u5165\u5bb9\u5668\u3002\u4e00\u65e6\u8fdb\u5165\u4e86\u5bb9\u5668\uff0c\u5c31\u53ef\u4ee5\u5728\u5bb9\u5668\u7684 Shell \u6267\u884c\u547d\u4ee4\u4e86\u3002 $ docker container exec -it [containerID] /bin/bash 5. docker container cp docker container cp\u547d\u4ee4\u7528\u4e8e\u4ece\u6b63\u5728\u8fd0\u884c\u7684 Docker \u5bb9\u5668\u91cc\u9762\uff0c\u5c06\u6587\u4ef6\u62f7\u8d1d\u5230\u672c\u673a\u3002\u4e0b\u9762\u662f\u62f7\u8d1d\u5230\u5f53\u524d\u76ee\u5f55\u7684\u5199\u6cd5\u3002 $ docker container cp [containID]:[/path/to/file] .","title":"Docker\u5168\u79d1"},{"location":"docker/docker/#docker","text":"","title":"Docker"},{"location":"docker/docker/#docker_1","text":"Docker\u662f\u5f00\u6e90\u5e94\u7528\u5bb9\u5668\u5f15\u64ce\uff0c\u8f7b\u91cf\u7ea7\u5bb9\u5668\u6280\u672f\u3002 \u57fa\u4e8eGo\u8bed\u8a00\uff0c\u5e76\u9075\u5faaApache2.0\u534f\u8bae\u5f00\u6e90 Docker\u53ef\u4ee5\u8ba9\u5f00\u53d1\u8005\u6253\u5305\u4ed6\u4eec\u7684\u5e94\u7528\u4ee5\u53ca\u4f9d\u8d56\u5305\u5230\u4e00\u4e2a\u8f7b\u91cf\u7ea7\u3001\u53ef\u79fb\u690d\u7684\u5bb9\u5668\u4e2d\uff0c\u7136\u540e\u53d1\u5e03\u5230\u4efb\u4f55\u6d41\u884c\u7684Linux\u7cfb\u7edf\u4e0a\uff0c\u4e5f\u53ef\u4ee5\u5b9e\u73b0\u865a\u62df\u5316 \u5bb9\u5668\u5b8c\u5168\u4f7f\u7528\u6c99\u7bb1\u6280\u672f\uff0c\u76f8\u4e92\u4e4b\u95f4\u4e0d\u4f1a\u6709\u4efb\u4f55\u63a5\u53e3 \u7c7b\u4f3c\u4e8e\u865a\u62df\u673a\u6280\u672f(vmware\u3001vitural)\uff0c\u4f46docker\u76f4\u63a5\u8fd0\u884c\u5728\u64cd\u4f5c\u7cfb\u7edf(Linux)\u4e0a\uff0c\u800c\u4e0d\u662f\u8fd0\u884c\u5728\u865a\u62df\u673a\u4e2d\uff0c\u901f\u5ea6\u5feb\uff0c\u6027\u80fd\u5f00\u9500\u6781\u4f4e \u767d\u8bdd\u6587\uff0c\u7b80\u4ecb\u5c31\u662f: Docker\u652f\u6301\u5c06\u8f6f\u4ef6\u7f16\u8bd1\u6210\u4e00\u4e2a\u955c\u50cf\uff0c\u7136\u540e\u5728\u955c\u50cf\u4e2d\u5404\u79cd\u8f6f\u4ef6\u505a\u597d\u914d\u7f6e\uff0c\u5c06\u955c\u50cf\u53d1\u5e03\u51fa\u53bb\uff0c\u5176\u4ed6\u4f7f\u7528\u8005\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\u8fd9\u4e2a\u955c\u50cf\u3002 \u8fd0\u884c\u4e2d\u7684\u8fd9\u4e2a\u955c\u50cf\u79f0\u4e3a\u5bb9\u5668\uff0c\u5bb9\u5668\u542f\u52a8\u662f\u975e\u5e38\u5feb\u901f\u7684\u3002\u7c7b\u4f3cwindows\u91cc\u9762\u7684ghost\u64cd \u4f5c\u7cfb\u7edf\uff0c\u5b89\u88c5\u597d\u540e\u4ec0\u4e48\u90fd\u6709\u4e86\u3002","title":"Docker\u7b80\u4ecb"},{"location":"docker/docker/#docker_2","text":"Docker \u662f\u4e00\u4e2a\u5f00\u6e90\u7684\u5e94\u7528\u5bb9\u5668\u5f15\u64ce\uff0c\u57fa\u4e8eGo\u8bed\u8a00\uff0c\u8bde\u751f\u4e8e2013\u5e74\u521d\uff0c\u6700\u521d\u53d1\u8d77\u8005\u662fdotCloud\u516c\u53f8\uff0c\u5f00\u53d1\u8005\u53ef\u4ee5\u6253\u5305\u5e94\u7528\u5230\u4e00\u4e2a\u8f7b\u91cf\u7ea7\u3001\u53ef\u79fb\u690d\u7684\u5bb9\u5668\u4e2d\uff0c\u7136\u540e\u53d1\u5e03\u5230\u4e3b\u6d41Linux\u7cfb\u7edf\u4e0a\u8fd0\u884c\u3002 \u4e3a\u4ec0\u4e48\u7528Docker \u6301\u7eed\u4ea4\u4ed8\u548c\u90e8\u7f72\uff1a\u4f7f\u7528Docker\u53ef\u4ee5\u901a\u8fc7\u5b9a\u5236\u5e94\u7528\u955c\u50cf\u6765\u5b9e\u73b0\u6301\u7eed\u96c6\u6210\uff0c\u6301\u7eed\u4ea4\u4ed8\uff0c\u90e8\u7f72\u3002\u5f00\u53d1\u4eba\u5458\u6784\u5efa\u540e\u7684\u955c\u50cf\uff0c\u7ed3\u5408\u6301\u7eed\u96c6\u6210\u7cfb\u7edf\u8fdb\u884c\u96c6\u6210\u6d4b\u8bd5\uff0c\u800c\u8fd0\u7ef4\u4eba\u5458\u5219\u53ef\u4ee5\u5728\u751f\u4ea7\u73af\u5883\u4e2d\u5feb\u901f\u90e8\u7f72\u8be5\u955c\u50cf\uff0c\u4e5f\u53ef\u4ee5\u7ed3\u5408\u6301\u7eed\u90e8\u7f72\u7cfb\u7edf\u8fdb\u884c\u81ea\u52a8\u90e8\u7f72\u3002 \u66f4\u9ad8\u6548\u7684\u8d44\u6e90\u5229\u7528\uff1aDocker\u662f\u57fa\u4e8e\u5185\u6838\u7ea7\u7684\u865a\u62df\u5316\uff0c\u53ef\u4ee5\u5b9e\u73b0\u66f4\u9ad8\u6548\u7684\u6027\u80fd\uff0c\u540c\u65f6\u5bf9\u8d44\u6e90\u7684\u989d\u5916\u9700\u6c42\u5f88\u4f4e\uff0c\u76f8\u6bd4\u4f20\u7edf\u865a\u62df\u673a\u65b9\u5f0f\uff0c\u76f8\u540c\u914d\u7f6e\u7684\u4e3b\u673a\u80fd\u591f\u8fd0\u884c\u66f4\u591a\u7684\u5e94\u7528\u3002 \u66f4\u8f7b\u677e\u7684\u8fc1\u79fb\u548c\u6269\u5c55\uff1aDocker\u5bb9\u5668\u51e0\u4e4e\u53ef\u4ee5\u5728\u4efb\u4f55\u5e73\u53f0\u4e0a\u8fd0\u884c\uff0c\u540c\u65f6\u652f\u6301\u4e3b\u6d41\u7684\u64cd\u4f5c\u7cfb\u7edf\u53d1\u884c\u7248\u672c\u3002 \u66f4\u5feb\u901f\u7684\u542f\u52a8\u65f6\u95f4\uff1a\u4f20\u7edf\u7684\u865a\u62df\u673a\u6280\u672f\u542f\u52a8\u5e94\u7528\u670d\u52a1\u5f80\u5f80\u9700\u8981\u6570\u5206\u949f\uff0c\u800cDocker\u5bb9\u5668\u5e94\u7528\uff0c\u7531\u4e8e\u76f4\u63a5\u8fd0\u884c\u4e8e\u5bbf\u4e3b\u5185\u6838\uff0c\u65e0\u9700\u542f\u52a8\u5b8c\u6574\u7684\u64cd\u4f5c\u7cfb\u7edf\uff0c\u56e0\u6b64\u53ef\u4ee5\u505a\u5230\u5999\u7ea7\uff0c\u751a\u81f3\u6beb\u79d2\u7ea7\u7684\u542f\u52a8\u65f6\u95f4\uff0c\u5927\u5927\u7684\u8282\u7ea6\u4e86\u5f00\u53d1\uff0c\u6d4b\u8bd5\uff0c\u90e8\u7f72\u7684\u65f6\u95f4\u3002 Docker\u4e0e\u4f20\u7edf\u865a\u62df\u673a\u5dee\u5f02","title":"\u4ec0\u4e48\u662fDocker"},{"location":"docker/docker/#_1","text":"","title":"\u4f20\u7edf\u865a\u62df\u5316\u65b9\u5f0f"},{"location":"docker/docker/#docker_3","text":"\u4f20\u7edf\u865a\u62df\u5316\u662f\u5728\u786c\u4ef6\u5c42\u9762\u5b9e\u73b0\u865a\u62df\u5316\uff0c\u9700\u8981\u6709\u989d\u5916\u7684\u865a\u62df\u673a\u7ba1\u7406\u5e94\u7528\u548c\u865a\u62df\u673a\u64cd\u4f5c\u7cfb\u7edf\u5c42\uff0c\u800cDocker\u5bb9\u5668\u662f\u5728\u64cd\u4f5c\u7cfb\u7edf\u5c42\u9762\u5b9e\u73b0\u865a\u62df\u5316\uff0c\u76f4\u63a5\u590d\u7528\u672c\u5730\u4e3b\u673a\u64cd\u4f5c\u7cfb\u7edf\uff0c\u66f4\u52a0\u8f7b\u91cf\u7ea7\u3002","title":"Docker\u865a\u62df\u5316\u65b9\u5f0f"},{"location":"docker/docker/#_2","text":"Docker\u955c\u50cf\uff1a\u7c7b\u4f3c\u4e8e\u865a\u62df\u673a\u91cc\u7684\u955c\u50cf\uff0c\u662f\u4e00\u4e2a\u53ea\u8bfb\u7684\u6a21\u677f\uff0c\u4e00\u4e2a\u72ec\u7acb\u7684\u6587\u4ef6\u7cfb\u7edf\uff0c\u4f7f\u7528\u955c\u50cf\u53ef\u4ee5\u521b\u5efa\u5bb9\u5668\uff0c\u53ef\u4ee5\u7406\u89e3\u4e3a\u955c\u50cf\u662f\u5bb9\u5668\u7684\u57fa\u77f3\u3002 Docker\u5bb9\u5668\uff1a\u662f\u7531Docker\u955c\u50cf\u521b\u5efa\u7684\u8fd0\u884c\u5b9e\u4f8b\uff0c\u7c7b\u4f3c\u4e8e\u8f7b\u91cf\u7ea7\u7684\u6c99\u7bb1\uff0c\u6bcf\u4e2a\u5bb9\u5668\u4e4b\u95f4\u90fd\u662f\u76f8\u4e92\u9694\u79bb\u7684\u3002\u652f\u6301\u7684\u64cd\u4f5c\u6709\u542f\u52a8\uff0c\u505c\u6b62\uff0c\u5220\u9664\u7b49\u3002 docker\u5ba2\u6237\u7aef(Client)\uff1a\u5ba2\u6237\u7aef\u901a\u8fc7\u547d\u4ee4\u884c\u6216\u5176\u4ed6\u5de5\u5177\u4f7f\u7528Docker API( https://docs.docker.com/reference/api/docker_remote_api)\u4e0eDocker\u7684\u5b88\u62a4\u8fdb\u7a0b\u8fdb\u884c\u901a\u4fe1 docker\u4e3b\u673a(Host)\uff1a\u4e00\u4e2a\u7269\u7406\u6216\u865a\u62df\u7684\u673a\u5668\u7528\u6765\u6267\u884cDocker\u5b88\u62a4\u8fdb\u7a0b\u548c\u5bb9\u5668 docker\u4ed3\u5e93(Registry)\uff1aDocker\u4ed3\u5e93\u7528\u6765\u5b58\u50a8\u955c\u50cf\uff0c\u53ef\u4ee5\u7406\u89e3\u4e3a\u4ee3\u7801\u63a7\u5236\u4e2d\u7684\u4ee3\u7801\u4ed3\u5e93\uff0cDocker Hub( https://hub.docker.com ) \u63d0\u4f9b\u4e86\u5e9e\u5927\u7684\u955c\u50cf\u96c6\u5408\u4f9b\u4f7f\u7528","title":"\u6838\u5fc3\u6982\u5ff5"},{"location":"docker/docker/#docker_4","text":"\u67e5\u770bcentos\u7248\u672c Docker \u8981\u6c42 CentOS \u7cfb\u7edf\u7684\u5185\u6838\u7248\u672c\u9ad8\u4e8e 3.10 \u901a\u8fc7\u547d\u4ee4\uff1auname -r \u67e5\u770b\u5f53\u524dcentos\u7248\u672c\uff0c\u5982\u7248\u672c\u4e0d\u7b26\uff0c\u9700\u5347\u7ea7\u7cfb\u7edf\u7248\u672c \u5347\u7ea7\u8f6f\u4ef6\u5305\u53ca\u5185\u6838(\u53ef\u9009) yum update \u5b89\u88c5docker yum install docker \u542f\u52a8docker systemctl start docker \u5c06docker\u670d\u52a1\u8bbe\u4e3a\u5f00\u673a\u542f\u52a8 systemtctl enable docker \u505c\u6b62docker systemtctl stop docker","title":"Docker\u5b89\u88c5\u53ca\u542f\u505c"},{"location":"docker/docker/#docker_5","text":"docker\u955c\u50cf\u547d\u4ee4 docker search mysql ## \u641c\u7d22\u955c\u50cf docker pull mysql ## \u4e0b\u8f7d\u955c\u50cf \u4e0b\u8f7d\u547d\u540d\u4e3a\uff1adocker pull \u955c\u50cf\u540d:tag\uff0c\u5176\u4e2dtag\u591a\u4e3a\u7cfb\u7edf\u7684\u7248\u672c\uff0c\u53ef\u9009\u7684\uff0c\u9ed8\u8ba4\u4e3aleast docker images ## \u955c\u50cf\u5217\u8868 RESPOSITORY\u4e3a\u955c\u50cf\u540d TAG\u4e3a\u955c\u50cf\u7248\u672c\uff0cleast\u4ee3\u8868\u6700\u65b0 IMAGE_ID \u4e3a\u8be5\u955c\u50cf\u552f\u4e00ID CREATED \u4e3a\u8be5\u955c\u50cf\u521b\u5efa\u65f6\u95f4 SIZE \u4e3a\u8be5\u955c\u50cf\u5927\u5c0f docker rmi image-id ##\u5220\u9664\u6307\u5b9a\u955c\u50cf docker rmi $(docker images -q) ##\u5220\u9664\u6240\u6709\u955c\u50cf docker run --name container-name -d image-name ##\u6839\u636e\u955c\u50cf\u542f\u52a8\u5bb9\u5668 -- name\uff1a\u4e3a\u5bb9\u5668\u8d77\u4e00\u4e2a\u540d\u79f0 -d\uff1adetached\uff0c\u6267\u884c\u5b8c\u8fd9\u53e5\u547d\u4ee4\u540e\uff0c\u63a7\u5236\u53f0\u5c06\u4e0d\u4f1a\u963b\u585e\uff0c\u53ef\u4ee5\u7ee7\u7eed\u8f93\u5165\u547d\u4ee4\u64cd\u4f5c image-name\uff1a\u8981\u8fd0\u884c\u7684\u955c\u50cf\u540d\u79f0 docker ps ##\u67e5\u770b\u8fd0\u884c\u4e2d\u5bb9\u5668 CONTAINER ID\uff1a\u542f\u52a8\u65f6\u751f\u6210\u7684ID IMAGE\uff1a\u8be5\u5bb9\u5668\u4f7f\u7528\u7684\u955c\u50cf COMMAND\uff1a\u5bb9\u5668\u542f\u52a8\u65f6\u6267\u884c\u7684\u547d\u4ee4 CREATED\uff1a\u5bb9\u5668\u521b\u5efa\u65f6\u95f4 STATUS\uff1a\u5f53\u524d\u5bb9\u5668\u72b6\u6001 PORTS\uff1a\u5f53\u524d\u5bb9\u5668\u6240\u4f7f\u7528\u7684\u9ed8\u8ba4\u7aef\u53e3\u53f7 NAMES\uff1a\u542f\u52a8\u65f6\u7ed9\u5bb9\u5668\u8bbe\u7f6e\u7684\u540d\u79f0 docker stop container-name/container-id ## \u505c\u6b62\u8fd0\u884c\u4e2d\u5bb9\u5668 docker ps -a ##\u67e5\u770b\u6240\u6709\u7684\u5bb9\u5668 docker start container-name/container-id ##\u542f\u52a8\u5bb9\u5668 docker rm container-id ## \u5220\u9664\u5355\u4e2a\u5bb9\u5668 docker rm $(docker ps -a -q ) ## \u5220\u9664\u6240\u6709\u5bb9\u5668 docker run --name tomcat2 -d -p 8888:8080 tomcat ## \u542f\u52a8\u505a\u7aef\u53e3\u6620\u5c04\u7684\u5bb9\u5668 docker logs container-id/container-name ##\u67e5\u770b\u5bb9\u5668\u65e5\u5fd7 docker port container-id ## \u67e5\u770b\u7aef\u53e3\u6620\u5c04 docker exec -it container-id/container-name bash ##\u5bb9\u5668\u767b\u5f55\u547d\u4ee4\u4e3a exit ##\u5bb9\u5668\u9000\u51fa\u547d\u4ee4 \u66f4\u591a\u547d\u4ee4\u53ef\u4ee5\u53c2\u8003","title":"Docker\u5e38\u7528\u547d\u4ee4\u53ca\u64cd\u4f5c"},{"location":"docker/docker/#_3","text":"\u83b7\u53d6\u955c\u50cf\uff1a docker pull centos (\u9ed8\u8ba4\u83b7\u53d6centos\u6700\u65b0\u7684\u955c\u50cf) docker pull centos:7 (\u83b7\u53d6\u6307\u5b9a\u6807\u7b7e\u955c\u50cf) \u67e5\u770b\u672c\u5730\u955c\u50cf\uff1a docker images \u67e5\u770b\u955c\u50cf\u8be6\u7ec6\u4fe1\u606f\uff1a docker inspect centos:7 \u67e5\u770b\u955c\u50cf\u5386\u53f2\uff1a docker history centos:7 \u5220\u9664\u955c\u50cf\uff1a A:\u4f7f\u7528\u6807\u7b7e\u5220\u9664\uff1adocker rmi centos B:\u4f7f\u7528ID\u5220\u9664\uff1adocker rimi \u6784\u5efa\u955c\u50cf\uff1a A:\u4f7f\u7528docker commit\u547d\u4ee4 B:\u4f7f\u7528Dockerfile\u6784\u5efa","title":"\u955c\u50cf\u64cd\u4f5c\u6307\u4ee4"},{"location":"docker/docker/#docker-commit","text":"\u4f8b\uff1a\u6784\u5efa\u4e00\u4e2a\u5e26\u6709jdk\u7684\u955c\u50cf \u6309\u7167\u5982\u4e0b\u6b65\u9aa4\u64cd\u4f5c [root@localhost ~]# docker run -it centos:7 /bin/bash [root@060793baf536 /]# yum install wget [root@060793baf536 /]# wget --no-check-certificate --no-cookies --header \"Cookie: oraclelicense=accept-securebackup-cookie\" http://download.oracle.com/otn-pub/java/jdk/8u131-b11/d54c1d3a095b4ff2b6607d096fa80163/jdk-8u131-linux-x64.rpm [root@060793baf536 /]# rpm -ivh jdk-8u131-linux-x64.rpm Preparing... ################################# [100%] Updating / installing... 1:jdk1.8.0_131-2000:1.8.0_131-fcs ################################# [100%] Unpacking JAR files... tools.jar... plugin.jar... javaws.jar... deploy.jar... rt.jar... jsse.jar... charsets.jar... localedata.jar... [root@060793baf536 /]# exit [root@localhost ~]# docker commit 060793baf536 centos/jdk:2.0 \u901a\u8fc7docker images\u547d\u4ee4\u53ef\u4ee5\u770b\u5230\u65b0\u589e\u4e86centos/jdk \u6807\u7b7e\u4e3a2.0\u7684\u955c\u50cf","title":"\u4f7f\u7528docker commit"},{"location":"docker/docker/#dockerfile","text":"\u5b9e\u9645\u4f7f\u7528\u4e2d\u4e0d\u63a8\u8350\u4f7f\u7528docker commit\u6784\u5efa\uff0c\u5e94\u4f7f\u7528\u66f4\u7075\u6d3b\u548c\u5f3a\u5927\u7684Dockerfile\u6784\u5efadocker\u955c\u50cf\uff0c\u76f4\u63a5\u4e3e\u4f8b\u6765\u8ba4\u8bc6Dockerfile\u3002 \u4f8b\uff1a\u6784\u5efa\u4e00\u4e2a\u5e26\u6709jdk\u7684centos7\u955c\u50cf [root@localhost Dockerfile]# mkdir Dockerfile [root@localhost Dockerfile]# cd Dockerfile \u7f16\u5199Dockerfile\uff1a FROM centos:7 MAINTAINER Java-Road \"Java-Road@qq.com\" RUN mkdir /usr/local/jdk COPY jdk-8u171-linux-x64.rpm /usr/local/jdk/ RUN rpm -ivh /usr/local/jdk/jdk-8u171-linux-x64.rpm \u6267\u884c\u5982\u4e0b\u6307\u4ee4\uff1a [root@localhost Dockerfile]# docker build -t centos/jdk . \u8fd0\u884c\u7ed3\u679c\u5982\u4e0b\uff1a docker images\u53ef\u4ee5\u770b\u5230\u65b0\u751f\u6210\u7684centos/jdk\u955c\u50cf","title":"\u4f7f\u7528Dockerfile\u6784\u5efa"},{"location":"docker/docker/#_4","text":"\u521b\u5efa\u542f\u52a8\u5bb9\u5668\uff1a [root@localhost ~]# docker run centos:7 /bin/echo'hello world' \u5bb9\u5668\u8fd0\u884c\u5b8c\u540e\u76f4\u63a5\u9000\u51fa \u4ea4\u4e92\u5f62\u5f0f\u521b\u5efa\u542f\u52a8\u5bb9\u5668 [root@localhost ~]# docker run -it centos:7 /bin/bash [root@802e3623e566 /]# ps PID TTY TIME CMD 1 ? 00:00:00 bash 13 ? 00:00:00 ps [root@802e3623e566 /]# exit \u6267\u884cexit\u624d\u80fd\u9000\u51fa\u5bb9\u5668 ``` * \u5b88\u62a4\u72b6\u6001\u8fd0\u884c\u5bb9\u5668 ``` [root@localhost ~]# docker run -d centos:7 /bin/sh -c \"while true; do echo hello world; sleep 1; done\" ``` * \u542f\u52a8\u5df2\u6709\u7684\u5bb9\u5668\uff1a docker start \u5bb9\u5668ID \u4f8b\uff1a [root@localhost ~]# docker start 802e3623e566 ``` * \u505c\u6b62\u8fd0\u884c\u7684\u5bb9\u5668\uff1a docker stop \u5bb9\u5668ID \u4f8b\uff1a [root@localhost ~]# docker stop 802e3623e566 ``` * \u5220\u9664\u5bb9\u5668\uff1a [root@localhost ~]# docker stop 89566e38c7fb [root@localhost ~]# docker rm 89566e38c7fb ``` \u8fdb\u5165\u8fd0\u884c\u7684\u5bb9\u5668\uff1a [root@localhost ~]# docker exec -it cbd8b1f35dcc /bin/bash ``` * \u5bfc\u51fa\u5bb9\u5668\uff1a \u5bfc\u51fa\u5bb9\u5668cbd8b1f35dcc\u5230centos_test.tar\u6587\u4ef6 [root@localhost ~]# docker export -o centos_test.tar cbd8b1f35dcc \u5bfc\u51fa\u7684tar\u6587\u4ef6\u53ef\u4ee5\u5728\u5176\u4ed6\u673a\u5668\u4e0a\uff0c\u901a\u8fc7\u5bfc\u5165\u6765\u91cd\u65b0\u8fd0\u884c ``` \u5bfc\u5165\u5bb9\u5668\uff1a \u628a\u5bfc\u51fa\u7684\u6587\u4ef6centos_test.tar\u901a\u8fc7docker import\u5bfc\u5165\u53d8\u6210\u955c\u50cf [root@localhost ~]# docker import centos_test.tar test/centos \u901a\u8fc7docker images\u547d\u4ee4\u53ef\u4ee5\u770b\u5230\u589e\u52a0\u4e86\u4e2atest/centos\u955c\u50cf","title":"\u5bb9\u5668\u64cd\u4f5c\u6307\u4ee4"},{"location":"docker/docker/#docker_6","text":"\u4e0b\u9762\u6211\u4ee5 koa-demos \u9879\u76ee\u4e3a\u4f8b\uff0c\u4ecb\u7ecd\u600e\u4e48\u5199 Dockerfile \u6587\u4ef6\uff0c\u5b9e\u73b0\u8ba9\u7528\u6237\u5728 Docker \u5bb9\u5668\u91cc\u9762\u8fd0\u884c Koa \u6846\u67b6\u3002 \u4f5c\u4e3a\u51c6\u5907\u5de5\u4f5c\uff0c\u8bf7\u5148\u4e0b\u8f7d\u6e90\u7801\u3002 $ git clone https://github.com/ruanyf/koa-demos.git $ cd koa-demos","title":"\u5b9e\u4f8b\uff1a\u5236\u4f5c\u81ea\u5df1\u7684 Docker \u5bb9\u5668"},{"location":"docker/docker/#dockerfile_1","text":"\u9996\u5148\uff0c\u5728\u9879\u76ee\u7684\u6839\u76ee\u5f55\u4e0b\uff0c\u65b0\u5efa\u4e00\u4e2a\u6587\u672c\u6587\u4ef6.dockerignore\uff0c\u5199\u5165\u4e0b\u9762\u7684\u5185\u5bb9\u3002 .git node_modules npm-debug.log \u4e0a\u9762\u4ee3\u7801\u8868\u793a\uff0c\u8fd9\u4e09\u4e2a\u8def\u5f84\u8981\u6392\u9664\uff0c\u4e0d\u8981\u6253\u5305\u8fdb\u5165 image \u6587\u4ef6\u3002\u5982\u679c\u4f60\u6ca1\u6709\u8def\u5f84\u8981\u6392\u9664\uff0c\u8fd9\u4e2a\u6587\u4ef6\u53ef\u4ee5\u4e0d\u65b0\u5efa\u3002 \u7136\u540e\uff0c\u5728\u9879\u76ee\u7684\u6839\u76ee\u5f55\u4e0b\uff0c\u65b0\u5efa\u4e00\u4e2a\u6587\u672c\u6587\u4ef6 Dockerfile\uff0c\u5199\u5165\u4e0b\u9762\u7684\u5185\u5bb9\u3002 FROM node:8.4 COPY . /app WORKDIR /app RUN npm install --registry=https://registry.npm.taobao.org EXPOSE 3000 \u4e0a\u9762\u4ee3\u7801\u4e00\u5171\u4e94\u884c\uff0c\u542b\u4e49\u5982\u4e0b\u3002 * FROM node:8.4\uff1a\u8be5 image \u6587\u4ef6\u7ee7\u627f\u5b98\u65b9\u7684 node image\uff0c\u5192\u53f7\u8868\u793a\u6807\u7b7e\uff0c\u8fd9\u91cc\u6807\u7b7e\u662f8.4\uff0c\u53738.4\u7248\u672c\u7684 node\u3002 * COPY . /app\uff1a\u5c06\u5f53\u524d\u76ee\u5f55\u4e0b\u7684\u6240\u6709\u6587\u4ef6\uff08\u9664\u4e86.dockerignore\u6392\u9664\u7684\u8def\u5f84\uff09\uff0c\u90fd\u62f7\u8d1d\u8fdb\u5165 image \u6587\u4ef6\u7684/app\u76ee\u5f55\u3002 * WORKDIR /app\uff1a\u6307\u5b9a\u63a5\u4e0b\u6765\u7684\u5de5\u4f5c\u8def\u5f84\u4e3a/app\u3002 * RUN npm install\uff1a\u5728/app\u76ee\u5f55\u4e0b\uff0c\u8fd0\u884cnpm install\u547d\u4ee4\u5b89\u88c5\u4f9d\u8d56\u3002\u6ce8\u610f\uff0c\u5b89\u88c5\u540e\u6240\u6709\u7684\u4f9d\u8d56\uff0c\u90fd\u5c06\u6253\u5305\u8fdb\u5165 image \u6587\u4ef6\u3002 * EXPOSE 3000\uff1a\u5c06\u5bb9\u5668 3000 \u7aef\u53e3\u66b4\u9732\u51fa\u6765\uff0c \u5141\u8bb8\u5916\u90e8\u8fde\u63a5\u8fd9\u4e2a\u7aef\u53e3\u3002","title":"Dockerfile \u6587\u4ef6"},{"location":"docker/docker/#image","text":"\u6709\u4e86 Dockerfile \u6587\u4ef6\u4ee5\u540e\uff0c\u5c31\u53ef\u4ee5\u4f7f\u7528docker image build\u547d\u4ee4\u521b\u5efa image \u6587\u4ef6\u4e86\u3002 $ docker image build -t koa-demo . # \u6216\u8005 $ docker image build -t koa-demo:0.0.1 . \u4e0a\u9762\u4ee3\u7801\u4e2d\uff0c-t\u53c2\u6570\u7528\u6765\u6307\u5b9a image \u6587\u4ef6\u7684\u540d\u5b57\uff0c\u540e\u9762\u8fd8\u53ef\u4ee5\u7528\u5192\u53f7\u6307\u5b9a\u6807\u7b7e\u3002\u5982\u679c\u4e0d\u6307\u5b9a\uff0c\u9ed8\u8ba4\u7684\u6807\u7b7e\u5c31\u662flatest\u3002\u6700\u540e\u7684\u90a3\u4e2a\u70b9\u8868\u793a Dockerfile \u6587\u4ef6\u6240\u5728\u7684\u8def\u5f84\uff0c\u4e0a\u4f8b\u662f\u5f53\u524d\u8def\u5f84\uff0c\u6240\u4ee5\u662f\u4e00\u4e2a\u70b9\u3002 \u5982\u679c\u8fd0\u884c\u6210\u529f\uff0c\u5c31\u53ef\u4ee5\u770b\u5230\u65b0\u751f\u6210\u7684 image \u6587\u4ef6koa-demo\u4e86\u3002 $ docker image ls","title":"\u521b\u5efa image \u6587\u4ef6"},{"location":"docker/docker/#_5","text":"docker container run\u547d\u4ee4\u4f1a\u4ece image \u6587\u4ef6\u751f\u6210\u5bb9\u5668\u3002 $ docker container run -p 8000:3000 -it koa-demo /bin/bash # \u6216\u8005 $ docker container run -p 8000:3000 -it koa-demo:0.0.1 /bin/bash \u4e0a\u9762\u547d\u4ee4\u7684\u5404\u4e2a\u53c2\u6570\u542b\u4e49\u5982\u4e0b\uff1a -p\u53c2\u6570\uff1a\u5bb9\u5668\u7684 3000 \u7aef\u53e3\u6620\u5c04\u5230\u672c\u673a\u7684 8000 \u7aef\u53e3\u3002 -it\u53c2\u6570\uff1a\u5bb9\u5668\u7684 Shell \u6620\u5c04\u5230\u5f53\u524d\u7684 Shell\uff0c\u7136\u540e\u4f60\u5728\u672c\u673a\u7a97\u53e3\u8f93\u5165\u7684\u547d\u4ee4\uff0c\u5c31\u4f1a\u4f20\u5165\u5bb9\u5668\u3002 koa-demo:0.0.1\uff1aimage \u6587\u4ef6\u7684\u540d\u5b57\uff08\u5982\u679c\u6709\u6807\u7b7e\uff0c\u8fd8\u9700\u8981\u63d0\u4f9b\u6807\u7b7e\uff0c\u9ed8\u8ba4\u662f latest \u6807\u7b7e\uff09\u3002 /bin/bash\uff1a\u5bb9\u5668\u542f\u52a8\u4ee5\u540e\uff0c\u5185\u90e8\u7b2c\u4e00\u4e2a\u6267\u884c\u7684\u547d\u4ee4\u3002\u8fd9\u91cc\u662f\u542f\u52a8 Bash\uff0c\u4fdd\u8bc1\u7528\u6237\u53ef\u4ee5\u4f7f\u7528 Shell\u3002 \u5982\u679c\u4e00\u5207\u6b63\u5e38\uff0c\u8fd0\u884c\u4e0a\u9762\u7684\u547d\u4ee4\u4ee5\u540e\uff0c\u5c31\u4f1a\u8fd4\u56de\u4e00\u4e2a\u547d\u4ee4\u884c\u63d0\u793a\u7b26\u3002 root@66d80f4aaf1e:/app# \u8fd9\u8868\u793a\u4f60\u5df2\u7ecf\u5728\u5bb9\u5668\u91cc\u9762\u4e86\uff0c\u8fd4\u56de\u7684\u63d0\u793a\u7b26\u5c31\u662f\u5bb9\u5668\u5185\u90e8\u7684 Shell \u63d0\u793a\u7b26\u3002\u6267\u884c\u4e0b\u9762\u7684\u547d\u4ee4\u3002 root@66d80f4aaf1e:/app# node demos/01.js \u8fd9\u65f6\uff0cKoa \u6846\u67b6\u5df2\u7ecf\u8fd0\u884c\u8d77\u6765\u4e86\u3002\u6253\u5f00\u672c\u673a\u7684\u6d4f\u89c8\u5668\uff0c\u8bbf\u95ee http://127.0.0.1:8000 \uff0c\u7f51\u9875\u663e\u793a\"Not Found\"\uff0c\u8fd9\u662f\u56e0\u4e3a\u8fd9\u4e2a demo \u6ca1\u6709\u5199\u8def\u7531\u3002 \u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0cNode \u8fdb\u7a0b\u8fd0\u884c\u5728 Docker \u5bb9\u5668\u7684\u865a\u62df\u73af\u5883\u91cc\u9762\uff0c\u8fdb\u7a0b\u63a5\u89e6\u5230\u7684\u6587\u4ef6\u7cfb\u7edf\u548c\u7f51\u7edc\u63a5\u53e3\u90fd\u662f\u865a\u62df\u7684\uff0c\u4e0e\u672c\u673a\u7684\u6587\u4ef6\u7cfb\u7edf\u548c\u7f51\u7edc\u63a5\u53e3\u662f\u9694\u79bb\u7684\uff0c\u56e0\u6b64\u9700\u8981\u5b9a\u4e49\u5bb9\u5668\u4e0e\u7269\u7406\u673a\u7684\u7aef\u53e3\u6620\u5c04\uff08map\uff09\u3002 \u73b0\u5728\uff0c\u5728\u5bb9\u5668\u7684\u547d\u4ee4\u884c\uff0c\u6309\u4e0b Ctrl + c \u505c\u6b62 Node \u8fdb\u7a0b\uff0c\u7136\u540e\u6309\u4e0b Ctrl + d \uff08\u6216\u8005\u8f93\u5165 exit\uff09\u9000\u51fa\u5bb9\u5668\u3002\u6b64\u5916\uff0c\u4e5f\u53ef\u4ee5\u7528docker container kill\u7ec8\u6b62\u5bb9\u5668\u8fd0\u884c\u3002 # \u5728\u672c\u673a\u7684\u53e6\u4e00\u4e2a\u7ec8\u7aef\u7a97\u53e3\uff0c\u67e5\u51fa\u5bb9\u5668\u7684 ID $ docker container ls # \u505c\u6b62\u6307\u5b9a\u7684\u5bb9\u5668\u8fd0\u884c $ docker container kill [containerID] \u5bb9\u5668\u505c\u6b62\u8fd0\u884c\u4e4b\u540e\uff0c\u5e76\u4e0d\u4f1a\u6d88\u5931\uff0c\u7528\u4e0b\u9762\u7684\u547d\u4ee4\u5220\u9664\u5bb9\u5668\u6587\u4ef6\u3002 # \u67e5\u51fa\u5bb9\u5668\u7684 ID $ docker container ls --all # \u5220\u9664\u6307\u5b9a\u7684\u5bb9\u5668\u6587\u4ef6 $ docker container rm [containerID] \u4e5f\u53ef\u4ee5\u4f7f\u7528docker container run\u547d\u4ee4\u7684--rm\u53c2\u6570\uff0c\u5728\u5bb9\u5668\u7ec8\u6b62\u8fd0\u884c\u540e\u81ea\u52a8\u5220\u9664\u5bb9\u5668\u6587\u4ef6\u3002 $ docker container run --rm -p 8000:3000 -it koa-demo /bin/bash","title":"\u751f\u6210\u5bb9\u5668"},{"location":"docker/docker/#cmd","text":"\u4e0a\u4e00\u8282\u7684\u4f8b\u5b50\u91cc\u9762\uff0c\u5bb9\u5668\u542f\u52a8\u4ee5\u540e\uff0c\u9700\u8981\u624b\u52a8\u8f93\u5165\u547d\u4ee4node demos/01.js\u3002\u6211\u4eec\u53ef\u4ee5\u628a\u8fd9\u4e2a\u547d\u4ee4\u5199\u5728 Dockerfile \u91cc\u9762\uff0c\u8fd9\u6837\u5bb9\u5668\u542f\u52a8\u4ee5\u540e\uff0c\u8fd9\u4e2a\u547d\u4ee4\u5c31\u5df2\u7ecf\u6267\u884c\u4e86\uff0c\u4e0d\u7528\u518d\u624b\u52a8\u8f93\u5165\u4e86\u3002 FROM node:8.4 COPY . /app WORKDIR /app RUN npm install --registry=https://registry.npm.taobao.org EXPOSE 3000 CMD node demos/01.js \u4e0a\u9762\u7684 Dockerfile \u91cc\u9762\uff0c\u591a\u4e86\u6700\u540e\u4e00\u884cCMD node demos/01.js\uff0c\u5b83\u8868\u793a\u5bb9\u5668\u542f\u52a8\u540e\u81ea\u52a8\u6267\u884cnode demos/01.js\u3002 \u4f60\u53ef\u80fd\u4f1a\u95ee\uff0cRUN\u547d\u4ee4\u4e0eCMD\u547d\u4ee4\u7684\u533a\u522b\u5728\u54ea\u91cc\uff1f\u7b80\u5355\u8bf4\uff0cRUN\u547d\u4ee4\u5728 image \u6587\u4ef6\u7684\u6784\u5efa\u9636\u6bb5\u6267\u884c\uff0c\u6267\u884c\u7ed3\u679c\u90fd\u4f1a\u6253\u5305\u8fdb\u5165 image \u6587\u4ef6\uff1bCMD\u547d\u4ee4\u5219\u662f\u5728\u5bb9\u5668\u542f\u52a8\u540e\u6267\u884c\u3002\u53e6\u5916\uff0c\u4e00\u4e2a Dockerfile \u53ef\u4ee5\u5305\u542b\u591a\u4e2aRUN\u547d\u4ee4\uff0c\u4f46\u662f\u53ea\u80fd\u6709\u4e00\u4e2aCMD\u547d\u4ee4\u3002 \u6ce8\u610f\uff0c\u6307\u5b9a\u4e86CMD\u547d\u4ee4\u4ee5\u540e\uff0cdocker container run\u547d\u4ee4\u5c31\u4e0d\u80fd\u9644\u52a0\u547d\u4ee4\u4e86\uff08\u6bd4\u5982\u524d\u9762\u7684/bin/bash\uff09\uff0c\u5426\u5219\u5b83\u4f1a\u8986\u76d6CMD\u547d\u4ee4\u3002\u73b0\u5728\uff0c\u542f\u52a8\u5bb9\u5668\u53ef\u4ee5\u4f7f\u7528\u4e0b\u9762\u7684\u547d\u4ee4\u3002 $ docker container run --rm -p 8000:3000 -it koa-demo:0.0.1","title":"CMD \u547d\u4ee4"},{"location":"docker/docker/#image_1","text":"\u5bb9\u5668\u8fd0\u884c\u6210\u529f\u540e\uff0c\u5c31\u786e\u8ba4\u4e86 image \u6587\u4ef6\u7684\u6709\u6548\u6027\u3002\u8fd9\u65f6\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u8003\u8651\u628a image \u6587\u4ef6\u5206\u4eab\u5230\u7f51\u4e0a\uff0c\u8ba9\u5176\u4ed6\u4eba\u4f7f\u7528\u3002 \u9996\u5148\uff0c\u53bb hub.docker.com \u6216 cloud.docker.com \u6ce8\u518c\u4e00\u4e2a\u8d26\u6237\u3002\u7136\u540e\uff0c\u7528\u4e0b\u9762\u7684\u547d\u4ee4\u767b\u5f55\u3002 $ docker login \u63a5\u7740\uff0c\u4e3a\u672c\u5730\u7684 image \u6807\u6ce8\u7528\u6237\u540d\u548c\u7248\u672c\u3002 $ docker image tag [imageName] [username]/[repository]:[tag] # \u5b9e\u4f8b $ docker image tag koa-demos:0.0.1 ruanyf/koa-demos:0.0.1 \u4e5f\u53ef\u4ee5\u4e0d\u6807\u6ce8\u7528\u6237\u540d\uff0c\u91cd\u65b0\u6784\u5efa\u4e00\u4e0b image \u6587\u4ef6\u3002 $ docker image build -t [username]/[repository]:[tag] . \u6700\u540e\uff0c\u53d1\u5e03 image \u6587\u4ef6\u3002 $ docker image push [username]/[repository]:[tag] \u53d1\u5e03\u6210\u529f\u4ee5\u540e\uff0c\u767b\u5f55 hub.docker.com\uff0c\u5c31\u53ef\u4ee5\u770b\u5230\u5df2\u7ecf\u53d1\u5e03\u7684 image \u6587\u4ef6\u3002","title":"\u53d1\u5e03 image \u6587\u4ef6"},{"location":"docker/docker/#_6","text":"docker \u7684\u4e3b\u8981\u7528\u6cd5\u5c31\u662f\u4e0a\u9762\u8fd9\u4e9b\uff0c\u6b64\u5916\u8fd8\u6709\u51e0\u4e2a\u547d\u4ee4\uff0c\u4e5f\u975e\u5e38\u6709\u7528\u3002 1. docker container start \u524d\u9762\u7684docker container run\u547d\u4ee4\u662f\u65b0\u5efa\u5bb9\u5668\uff0c\u6bcf\u8fd0\u884c\u4e00\u6b21\uff0c\u5c31\u4f1a\u65b0\u5efa\u4e00\u4e2a\u5bb9\u5668\u3002\u540c\u6837\u7684\u547d\u4ee4\u8fd0\u884c\u4e24\u6b21\uff0c\u5c31\u4f1a\u751f\u6210\u4e24\u4e2a\u4e00\u6a21\u4e00\u6837\u7684\u5bb9\u5668\u6587\u4ef6\u3002\u5982\u679c\u5e0c\u671b\u91cd\u590d\u4f7f\u7528\u5bb9\u5668\uff0c\u5c31\u8981\u4f7f\u7528docker container start\u547d\u4ee4\uff0c\u5b83\u7528\u6765\u542f\u52a8\u5df2\u7ecf\u751f\u6210\u3001\u5df2\u7ecf\u505c\u6b62\u8fd0\u884c\u7684\u5bb9\u5668\u6587\u4ef6\u3002 $ docker container start [containerID] 2. docker container stop \u524d\u9762\u7684docker container kill\u547d\u4ee4\u7ec8\u6b62\u5bb9\u5668\u8fd0\u884c\uff0c\u76f8\u5f53\u4e8e\u5411\u5bb9\u5668\u91cc\u9762\u7684\u4e3b\u8fdb\u7a0b\u53d1\u51fa SIGKILL \u4fe1\u53f7\u3002\u800cdocker container stop\u547d\u4ee4\u4e5f\u662f\u7528\u6765\u7ec8\u6b62\u5bb9\u5668\u8fd0\u884c\uff0c\u76f8\u5f53\u4e8e\u5411\u5bb9\u5668\u91cc\u9762\u7684\u4e3b\u8fdb\u7a0b\u53d1\u51fa SIGTERM \u4fe1\u53f7\uff0c\u7136\u540e\u8fc7\u4e00\u6bb5\u65f6\u95f4\u518d\u53d1\u51fa SIGKILL \u4fe1\u53f7\u3002 $ bash container stop [containerID] \u8fd9\u4e24\u4e2a\u4fe1\u53f7\u7684\u5dee\u522b\u662f\uff0c\u5e94\u7528\u7a0b\u5e8f\u6536\u5230 SIGTERM \u4fe1\u53f7\u4ee5\u540e\uff0c\u53ef\u4ee5\u81ea\u884c\u8fdb\u884c\u6536\u5c3e\u6e05\u7406\u5de5\u4f5c\uff0c\u4f46\u4e5f\u53ef\u4ee5\u4e0d\u7406\u4f1a\u8fd9\u4e2a\u4fe1\u53f7\u3002\u5982\u679c\u6536\u5230 SIGKILL \u4fe1\u53f7\uff0c\u5c31\u4f1a\u5f3a\u884c\u7acb\u5373\u7ec8\u6b62\uff0c\u90a3\u4e9b\u6b63\u5728\u8fdb\u884c\u4e2d\u7684\u64cd\u4f5c\u4f1a\u5168\u90e8\u4e22\u5931\u3002 3. docker container logs docker container logs\u547d\u4ee4\u7528\u6765\u67e5\u770b docker \u5bb9\u5668\u7684\u8f93\u51fa\uff0c\u5373\u5bb9\u5668\u91cc\u9762 Shell \u7684\u6807\u51c6\u8f93\u51fa\u3002\u5982\u679cdocker run\u547d\u4ee4\u8fd0\u884c\u5bb9\u5668\u7684\u65f6\u5019\uff0c\u6ca1\u6709\u4f7f\u7528-it\u53c2\u6570\uff0c\u5c31\u8981\u7528\u8fd9\u4e2a\u547d\u4ee4\u67e5\u770b\u8f93\u51fa\u3002 $ docker container logs [containerID] 4. docker container exec docker container exec\u547d\u4ee4\u7528\u4e8e\u8fdb\u5165\u4e00\u4e2a\u6b63\u5728\u8fd0\u884c\u7684 docker \u5bb9\u5668\u3002\u5982\u679cdocker run\u547d\u4ee4\u8fd0\u884c\u5bb9\u5668\u7684\u65f6\u5019\uff0c\u6ca1\u6709\u4f7f\u7528-it\u53c2\u6570\uff0c\u5c31\u8981\u7528\u8fd9\u4e2a\u547d\u4ee4\u8fdb\u5165\u5bb9\u5668\u3002\u4e00\u65e6\u8fdb\u5165\u4e86\u5bb9\u5668\uff0c\u5c31\u53ef\u4ee5\u5728\u5bb9\u5668\u7684 Shell \u6267\u884c\u547d\u4ee4\u4e86\u3002 $ docker container exec -it [containerID] /bin/bash 5. docker container cp docker container cp\u547d\u4ee4\u7528\u4e8e\u4ece\u6b63\u5728\u8fd0\u884c\u7684 Docker \u5bb9\u5668\u91cc\u9762\uff0c\u5c06\u6587\u4ef6\u62f7\u8d1d\u5230\u672c\u673a\u3002\u4e0b\u9762\u662f\u62f7\u8d1d\u5230\u5f53\u524d\u76ee\u5f55\u7684\u5199\u6cd5\u3002 $ docker container cp [containID]:[/path/to/file] .","title":"\u5176\u4ed6\u6709\u7528\u7684\u547d\u4ee4"},{"location":"exp/devops/","text":"\u4e00\u5206\u949f\u544a\u8bc9\u4f60\u7a76\u7adfDevOps\u662f\u4ec0\u4e48\u9b3c\uff1f \u00b6 \u5386\u53f2\u56de\u987e \u00b6 \u4e3a\u4e86\u80fd\u591f\u66f4\u597d\u7684\u7406\u89e3\u4ec0\u4e48\u662fDevOps\uff0c\u6211\u4eec\u5f88\u6709\u5fc5\u8981\u5bf9\u5f53\u65f6\u8fd8\u53ea\u6709\u7a0b\u5e8f\u5458(\u6b64\u524d\u8fd8\u6ca1\u6709\u6d3e\u751f\u51fa\u5f00\u53d1\u8005\uff0c\u524d\u53f0\u5de5\u7a0b\u5e08\uff0c\u540e\u53f0\u5de5\u7a0b\u5e08\u4e4b\u7c7b)\u8fd9\u4e2a\u79f0\u53f7\u5b58\u5728\u7684\u5386\u53f2\u8fdb\u884c\u4e00\u4e0b\u56de\u987e\u3002 \u5982\u7f16\u7a0b\u4e4b\u9053\u4e2d\u6240\u8a00\uff1a \u00b6 \u8001\u4e00\u8f88\u7684\u7a0b\u5e8f\u5458\u662f\u795e\u79d8\u4e14\u6df1\u5965\u7684\u3002\u6211\u4eec\u6ca1\u6cd5\u63e3\u6469\u4ed6\u4eec\u7684\u60f3\u6cd5\uff0c\u6211\u4eec\u6240\u80fd\u505a\u7684\u53ea\u662f\u63cf\u8ff0\u4e00\u4e0b\u4ed6\u4eec\u7684\u8868\u8c61\u3002 \u6e05\u9192\u7684\u50cf\u4e00\u53ea\u6e38\u8fc7\u6c34\u9762\u7684\u72d0\u72f8 \u8b66\u60d5\u7684\u50cf\u4e00\u4f4d\u6218\u573a\u4e0a\u7684\u5c06\u519b \u53cb\u5584\u7684\u50cf\u4e00\u4f4d\u62db\u5f85\u5ba2\u4eba\u7684\u5973\u4e3b\u4eba \u5355\u7eaf\u7684\u50cf\u4e00\u5757\u672a\u7ecf\u96d5\u7422\u7684\u6728\u5934 \u6df1\u9083\u7684\u50cf\u4e00\u6f6d\u5e7d\u6df1\u6d1e\u7a74\u4e2d\u6f06\u9ed1\u7684\u6c60\u6c34 \u7a0b\u5e8f\u5458\u5f00\u53d1\u4e86\u673a\u5668\u8bed\u8a00\uff0c\u673a\u5668\u8bed\u8a00\u53c8\u4ea7\u751f\u4e86\u6c47\u7f16\u8bed\u8a00\uff0c\u6c47\u7f16\u8bed\u8a00\u4ea7\u751f\u4e86\u7f16\u8bd1\u5668\uff0c\u5982\u4eca\u7684\u8bed\u8a00\u5df2\u7ecf\u591a\u4e0d\u80dc\u6570\u3002\u6bcf\u4e00\u79cd\u8bed\u8a00\u90fd\u6709\u5176\u5404\u81ea\u7684\u8c26\u5351\u7528\u9014\u3002\u6bcf\u4e00\u79cd\u8bed\u8a00\u90fd\u8868\u8fbe\u51fa\u8f6f\u4ef6\u7684\u9634\u548c\u9633\u3002\u6bcf\u4e00\u79cd\u8bed\u8a00\u90fd\u5728\u6b64\u9053\u4e4b\u4e2d\u6709\u5176\u4e00\u5e2d\u4e4b\u5730\u3002 \u9065\u60f3\u5f53\u5e74\uff0c\u8f6f\u4ef6\u7a0b\u5e8f\u5458\u7684\u5927\u90e8\u5206\u529e\u516c\u53f8\u90a3\u65f6\u8fd8\u88ab\u79f0\u4f5c\u5b9e\u9a8c\u5ba4\uff0c\u7a0b\u5e8f\u5458\u90a3\u65f6\u8fd8\u53eb\u505a\u79d1\u5b66\u5bb6\u3002\u4e3a\u4e86\u5f00\u53d1\u51fa\u4e00\u5957\u4f18\u79c0\u7684\u8f6f\u4ef6\uff0c\u7a0b\u5e8f\u5458\u4eec\u5fc5\u987b\u6df1\u5165\u4e86\u89e3\u4ed6\u4eec\u9700\u8981\u7684\u5e94\u7528\u76f8\u5173\u7684\u6240\u6709\u95ee\u9898\u3002\u4ed6\u4eec\u5fc5\u987b\u6e05\u695a\u77e5\u9053\u8fd9\u4e2a\u8f6f\u4ef6\u5e94\u7528\u5728\u4ec0\u4e48\u573a\u5408\uff0c\u8fd9\u4e2a\u8f6f\u4ef6\u662f\u5fc5\u987b\u5728\u4ec0\u4e48\u7cfb\u7edf\u4e0a\u8fd0\u884c\u3002\u672c\u8d28\u4e0a\u8bf4\uff0c\u7a0b\u5e8f\u5458\u5bf9\u6240\u8981\u5f00\u53d1\u7684\u8f6f\u4ef6\u7684\u6240\u6709\u73af\u8282\u90fd\u6709\u900f\u5f7b\u7684\u4e86\u89e3\uff0c\u4ece\u89c4\u683c\u8bf4\u660e\u4e66\u7f16\u5199\u3001\u5230\u8f6f\u4ef6\u5f00\u53d1\u3001\u5230\u6d4b\u8bd5\u3001\u5230\u90e8\u7f72\u3001\u518d\u5230\u6280\u672f\u652f\u6301\u3002 \u8fc7\u4e86\u4e0d\u4e45\uff0c\u4eba\u7c7b(\u5ba2\u6237)\u8d2a\u5a6a\u7684\u7279\u6027\u5c31\u5f00\u59cb\u8868\u73b0\u51fa\u6765\uff0c\u4ed6\u4eec\u5f00\u59cb\u4e0d\u65ad\u7684\u8fdb\u884c\u66f4\u591a\u7684\u7d22\u6c42\u3002\u66f4\u5feb\u7684\u901f\u5ea6\uff0c\u66f4\u591a\u7684\u529f\u80fd\uff0c\u66f4\u591a\u7684\u7528\u6237\uff0c\u66f4\u591a\u7684\u6240\u6709\u6240\u6709\u3002 \u4f5c\u4e3a\u4e00\u7c7b\u8c26\u865a\u3001\u8c26\u5351\u3001\u4e14\u5e73\u9759\u7684\u751f\u7269\uff0c\u6211\u4eec\u7684\u8001\u4e00\u8f88\u7a0b\u5e8f\u5458\u4eec\u5c06\u5f88\u96be\u5728\u8fd9\u79cd\u7206\u53d1\u6027\u7684\u8fc7\u5ea6\u7684\u9700\u6c42\u7d22\u53d6\u4e2d\u5e78\u5b58\u3002\u6700\u597d\u7684\u53d6\u80dc\u529e\u6cd5\u5c31\u662f\u5f80\u4e0d\u540c\u7684\u65b9\u5411\u8fdb\u5316\u6210\u4e0d\u540c\u7684\u65b0\u7269\u79cd\u3002\u5f88\u5feb\uff0c\u7a0b\u5e8f\u5458\u8fd9\u4e2a\u79f0\u53f7\u5c31\u5f00\u59cb\u7edd\u8ff9\u4e8e\u6c5f\u6e56\uff0c\u800c\u90a3\u4e9b\u53eb\u505a\u5f00\u53d1\u8005\u3001\u8f6f\u4ef6\u5de5\u7a0b\u5e08\u3001\u7f51\u7edc\u7ba1\u7406\u5458\u3001\u6570\u636e\u5e93\u5f00\u53d1\u8005\u3001\u7f51\u9875\u5f00\u53d1\u8005\u3001\u7cfb\u7edf\u67b6\u6784\u5e08\u3001\u6d4b\u8bd5\u5de5\u7a0b\u5e08\u7b49\u7b49\u66f4\u591a\u7684\u65b0\u7269\u79cd\u5c31\u5f00\u59cb\u8bde\u751f\u3002\u5feb\u901f\u8fdb\u5316\u548c\u5feb\u901f\u9002\u5e94\u5916\u754c\u7684\u6311\u6218\u6210\u4e3a\u4e86\u4ed6\u4eec\u7684DNA\u7684\u4e00\u90e8\u5206\u3002\u8fd9\u4e9b\u65b0\u7684\u79cd\u65cf\u53ef\u4ee5\u5728\u51e0\u4e2a\u661f\u671f\u5185\u5c31\u5b8c\u6210\u8fdb\u5316\u3002\u7f51\u9875\u5f00\u53d1\u8005\u5f88\u5feb\u5c31\u80fd\u8fdb\u5316\u6210\u540e\u53f0\u5f00\u53d1\u8005\uff0c\u524d\u53f0\u5f00\u53d1\u8005\uff0cPHP\u5f00\u53d1\u8005\uff0cRuby\u5f00\u53d1\u8005\uff0cAngular\u5f00\u53d1\u8005\u2026\u591a\u5f97\u8ba9\u4eba\u4fa7\u76ee\u3002 \u5f88\u5feb\u4ed6\u4eec\u5c31\u90fd\u5fd8\u5374\u4e86\u4ed6\u4eec\u90fd\u662f\u8d77\u6e90\u4e8e\u7a0b\u5e8f\u5458\u8fd9\u4e2a\u5171\u540c\u7684\u7956\u5148\u7684\u4e8b\u5b9e\uff0c\u5fd8\u5374\u4e86\u66fe\u7ecf\u6709\u8fc7\u8fd9\u4e48\u4e00\u4e2a\u5355\u7eaf\u4e14\u5e73\u9759\u7684\uff0c\u60f3\u8981\u8ba9\u8fd9\u4e2a\u4e16\u754c\u53d8\u5f97\u66f4\u597d\u7684\u79d1\u5b66\u5bb6\u3002\u7136\u540e\u4ed6\u4eec\u5f00\u59cb\u4e0d\u65ad\u7684\u5251\u62d4\u5f29\u5f20\uff0c\u90fd\u58f0\u79f0\u81ea\u5df1\u624d\u662f\u201c\u7a0b\u5e8f\u5458\u201d\u7684\u7eaf\u8840\u7edf\u7ee7\u627f\u4eba\u3002 \u968f\u7740\u65f6\u95f4\u7684\u8f6c\u79fb\uff0c\u5404\u95e8\u5404\u6d3e\u5f00\u59cb\u72ec\u5360\u5c71\u5934\uff0c\u5f88\u5c11\u8fdb\u884c\u4ea4\u6d41\u4e92\u52a8\uff0c\u53ea\u6709\u5728\u8feb\u4e0d\u5f97\u5df2\u7684\u65f6\u523b\u624d\u4f1a\u8fdb\u884c\u6c9f\u901a\u3002\u4ed6\u4eec\u5f00\u59cb\u4e0d\u518d\u4e3a\u540c\u6e90\u7684\u9065\u8fdc\u7684\u540c\u5b97\u5144\u5f1f\u4eec\u7684\u6210\u529f\u800c\u6b22\u547c\u96c0\u8dc3\uff0c\u751a\u81f3\u518d\u4e5f\u4e0d\u4f1a\u65f6\u628a\u7684\u9065\u5bc4\u5f20\u660e\u4fe1\u7247\u8fdb\u884c\u5618\u5bd2\u95ee\u6696\u3002 \u4f46\u662f\u5728\u6df1\u591c\u4ef0\u671b\u661f\u7a7a\u7684\u65f6\u5019\uff0c\u4ed6\u4eec\u8fd8\u662f\u4f1a\u53d1\u73b0\u4ed6\u4eec\u7684\u5fc3\u5e95\u6df1\u5904\u7684\u7a0b\u5e8f\u5458\u57fa\u56e0\u8fd8\u662f\u4f1a\u4e0d\u505c\u7684\u95ea\u70c1\u7740\uff0c\u671f\u76fc\u7740\u8fd9\u95ea\u70c1\u7684\u706b\u82b1\u80fd\u7167\u4eae\u6574\u4e2a\u94f6\u6cb3\u7cfb\u5e76\u5e26\u6765\u548c\u5e73\u3002 \u5728\u8fd9\u573a\u81ea\u79c1\u4e14\u4ee5\u81ea\u6211\u4e3a\u4e2d\u5fc3\u7684\u6b32\u5f81\u670d\u4e16\u754c\u7684\u8d5b\u8dd1\u65c5\u7a0b\u91cc\uff0c\u7a0b\u5e8f\u5458\u7684\u5b50\u5b59\u4eec\u65e9\u628a\u4ed6\u4eec\u771f\u6b63\u7684\u5de5\u4f5c\u76ee\u6807\u7f6e\u4e4b\u8111\u540e-\u4e3a\u5ba2\u6237\u89e3\u51b3\u95ee\u9898\u3002\u9762\u5bf9\u4e00\u62d6\u518d\u62d6\u7684\u9879\u76ee\u4ea4\u4ed8\u65e5\u671f\uff0c\u6602\u8d35\u7684\u5f00\u53d1\u4ee3\u4ef7\uff0c\u751a\u81f3\u6700\u7ec8\u5931\u8d25\u7684\u9879\u76ee\uff0c\u5ba2\u6237\u4eec\u5f00\u59cb\u5bf9\u8fd9\u79cd\u60c5\u51b5\u6df1\u6076\u75db\u7edd\u3002 \u5076\u5c14\uff0c\u4e5f\u4f1a\u6709\u4e00\u4e2a\u95ea\u4eae\u7684\u660e\u661f\u7ad9\u51fa\u6765\uff0c\u7075\u673a\u4e00\u52a8\u7684\u63d0\u4f9b\u4e00\u79cd\u529e\u6cd5\u6765\u5c1d\u8bd5\u7ed3\u675f\u8fd9\u79cd\u6df7\u4e71\u5e76\u5e26\u6765\u548c\u5e73\u3002\u6240\u4ee5\u7011\u5e03\u5f00\u53d1\u6d41\u7a0b\u5c31\u5e94\u8fd0\u800c\u751f\u4e86\u3002\u8fd9\u662f\u4e00\u4e2a\u975e\u5e38\u4e86\u4e0d\u8d77\u7684\u521b\u610f\uff0c\u56e0\u4e3a\u5b83\u5229\u7528\u4e86\u4e0d\u540c\u56e2\u961f\u7684\u5f00\u53d1\u8005\u4eec\u53ea\u5728\u5fc5\u987b\u7684\u65f6\u5019\u624d\u8fdb\u884c\u6c9f\u901a\u7684\u8fd9\u4e2a\u4e8b\u5b9e\u3002\u5f53\u4e00\u4e2a\u56e2\u961f\u5b8c\u6210\u4e86\u4ed6\u4eec\u7684\u5de5\u4f5c\u7684\u65f6\u5019\uff0c\u5b83\u5c31\u4f1a\u548c\u4e0b\u6e38\u7684\u56e2\u961f\u8fdb\u884c\u4ea4\u6d41\u5e76\u628a\u4efb\u52a1\u8fdb\u884c\u5f80\u4e0b\u4f20\uff0c\u5982\u6b64\u4e00\u7ea7\u63a5\u4e00\u7ea7\u7684\u4f20\u9012\u4e0b\u53bb\uff0c\u6c38\u4e0d\u56de\u9996\u3002 \u8fd9\u79cd\u65b9\u5f0f\u5728\u4e00\u6bb5\u65f6\u95f4\u5185\u53d1\u6325\u4e86\u6548\u7528\uff0c\u4f46\u5f88\u5feb\uff0c\u4e00\u5982\u65e2\u5f80\uff0c\u8d2a\u5a6a\u7684\u4eba\u4eec(\u5ba2\u6237)\u53c8\u5f00\u59cb\u63d0\u51fa\u66f4\u591a\u7684\u8bc9\u6c42\u3002\u4ed6\u4eec\u5e0c\u671b\u80fd\u591f\u66f4\u591a\u5730\u53c2\u52a0\u5230\u6574\u4e2a\u8f6f\u4ef6\u7684\u5f00\u53d1\u6d41\u7a0b\u4e2d\u6765\uff0c\u4e0d\u65f6\u7684\u63d0\u51fa\u4ed6\u4eec\u7684\u5efa\u8bae\uff0c\u751a\u81f3\u5728\u5f88\u665a\u7684\u65f6\u5019\u8fd8\u63d0\u51fa\u6539\u9700\u6c42\u8fd9\u79cd\u4e27\u5fc3\u75c5\u72c2\u7684\u4e8b\u60c5\u6765\u3002 \u7ed3\u679c\u5c31\u662f\u5982\u5927\u5bb6\u6709\u76ee\u5171\u7779\u7684\u4e8b\u5b9e\u4e00\u6837\uff0c\u8f6f\u4ef6\u9879\u76ee\u975e\u5e38\u5bb9\u6613\u5931\u8d25\u8fd9\u4e2a\u8bf4\u6cd5\u5df2\u7ecf\u4f5c\u4e3a\u4e00\u4e2a\u884c\u4e1a\u6807\u51c6\u88ab\u4eba\u4eec\u6240\u63a5\u53d7\u3002\u6570\u636e\u8868\u660e\u8d85\u8fc750%\u7684\u9879\u76ee\u6700\u7ec8\u90fd\u662f\u4ee5\u5931\u8d25\u544a\u7ec8\u7684\u3002\u66f4\u53ef\u60b2\u7684\u662f\uff0c\u5728\u5f53\u65f6\u770b\u6765\uff0c\u4eba\u4eec\u5bf9\u8fd9\u79cd\u60c5\u51b5\u662f\u675f\u624b\u65e0\u7b56\u3002 \u503c\u5f97\u5e86\u5e78\u7684\u662f\uff0c\u6bcf\u4e00\u4e2a\u65f6\u4ee3\u603b\u4f1a\u6709\u90a3\u4e48\u51e0\u4e2a\u601d\u60f3\u5f00\u653e\u7684\u82f1\u96c4\u5982\u6f06\u9ed1\u4e2d\u7684\u8424\u706b\u866b\u822c\u5192\u51fa\u6765\u3002\u4ed6\u4eec\u77e5\u9053\u8fd9\u4e9b\u4e0d\u540c\u56e2\u961f\u7684\u5f00\u53d1\u8005\u4eec\u5fc5\u987b\u8981\u627e\u5230\u4e00\u4e2a\u53ef\u4ee5\u534f\u540c\u5de5\u4f5c\u3001\u8fdb\u884c\u4ea4\u6d41\u3001\u5e76\u4e14\u80fd\u591f\u5f39\u6027\u7684\u5411\u5ba2\u6237\u4fdd\u8bc1\u5bf9\u65b9\u5c06\u4f1a\u62ff\u5230\u6700\u4f18\u7684\u89e3\u51b3\u65b9\u6848\u7684\u65b9\u5f0f\u3002\u8fd9\u79cd\u5c1d\u8bd5\u6700\u65e9\u53ef\u4ee5\u8ffd\u6eaf\u52301957\u5e74\uff0c\u4f1f\u5927\u7684\u7ea6\u7ff0\u00b7\u51af\u00b7\u8bfa\u4f9d\u66fc\u548c\u540c\u884c\u4eec\u7684\u52aa\u529b\u3002\u4f46\u662f\u6211\u4eec\u6700\u7ec8\u5374\u662f\u7b49\u52302001\u5e74\u624d\u6536\u83b7\u5230\u9769\u547d\u7684\u679c\u5b9e\uff0c\u5f53\u65f6\u884c\u4e1a\u7684\u5341\u591a\u4e2a\u7cbe\u82f1\u521b\u9020\u51fa\u4e86\u5982\u4eca\u95fb\u540d\u4e16\u754c\u7684\u201c\u654f\u6377\u5ba3\u8a00\u201d\u3002 \u654f\u6377\u5ba3\u8a00\u57fa\u4e8e\u4ee5\u4e0b\u5341\u4e8c\u6761\u539f\u5219\uff1a \u00b6 \u6211\u4eec\u7684\u9996\u8981\u4efb\u52a1\u662f\u901a\u8fc7\u5c3d\u65e9\u5730\u3001\u6301\u7eed\u5730\u4ea4\u4ed8\u53ef\u8bc4\u4ef7\u7684\u8f6f\u4ef6\u6765\u4f7f\u5ba2\u6237\u6ee1\u610f\u3002 \u4e50\u4e8e\u63a5\u53d7\u9700\u6c42\u53d8\u66f4\uff0c\u5373\u4f7f\u662f\u5728\u5f00\u53d1\u540e\u671f\u4e5f\u5e94\u5982\u6b64\u3002\u654f\u6377\u8fc7\u7a0b\u80fd\u591f\u9a7e\u9a6d\u53d8\u5316\uff0c\u4ece\u800c\u4e3a\u5ba2\u6237\u8d62\u5f97\u7ade\u4e89\u4f18\u52bf\u3002 \u9891\u7e41\u4ea4\u4ed8\u53ef\u4f7f\u7528\u7684\u8f6f\u4ef6\uff0c\u4ea4\u4ed8\u95f4\u9694\u8d8a\u77ed\u8d8a\u597d\uff0c\u53ef\u4ee5\u4ece\u51e0\u4e2a\u661f\u671f\u5230\u51e0\u4e2a\u6708\u3002 \u5728\u6574\u4e2a\u9879\u76ee\u5f00\u53d1\u671f\u95f4\uff0c\u4e1a\u52a1\u4eba\u5458\u548c\u5f00\u53d1\u4eba\u5458\u5fc5\u987b\u671d\u5915\u5de5\u4f5c\u5728\u4e00\u8d77\u3002 \u56f4\u7ed5\u90a3\u4e9b\u6709\u63a8\u52a8\u529b\u7684\u4eba\u4eec\u6765\u6784\u5efa\u9879\u76ee\u3002\u7ed9\u4e88\u4ed6\u4eec\u6240\u9700\u7684\u73af\u5883\u548c\u652f\u6301\uff0c\u5e76\u4e14\u4fe1\u4efb\u4ed6\u4eec\u80fd\u591f\u628a\u5de5\u4f5c\u5b8c\u6210\u597d\u3002 \u4e0e\u5f00\u53d1\u56e2\u961f\u4ee5\u53ca\u5728\u5f00\u53d1\u56e2\u961f\u5185\u90e8\u6700\u5feb\u901f\u3001\u6709\u6548\u7684\u4f20\u9012\u4fe1\u606f\u7684\u65b9\u6cd5\u5c31\u662f\uff0c\u9762\u5bf9\u9762\u7684\u4ea4\u8c08\u3002 \u53ef\u4f7f\u7528\u7684\u8f6f\u4ef6\u662f\u8fdb\u5ea6\u7684\u4e3b\u8981\u8861\u91cf\u6307\u6807\u3002 \u654f\u6377\u8fc7\u7a0b\u63d0\u5021\u53ef\u6301\u7eed\u53d1\u5c55\u3002\u51fa\u8d44\u4eba\u3001\u5f00\u53d1\u4eba\u5458\u4ee5\u53ca\u4f7f\u7528\u8005\u5e94\u8be5\u603b\u662f\u5171\u540c\u7ef4\u6301\u7a33\u5b9a\u7684\u5f00\u53d1\u901f\u5ea6\u3002 \u4e3a\u4e86\u589e\u5f3a\u654f\u6377\u80fd\u529b\uff0c\u5e94\u6301\u7eed\u5173\u6ce8\u6280\u672f\u4e0a\u7684\u6770\u51fa\u6210\u679c\u548c\u826f\u597d\u7684\u8bbe\u8ba1\u3002 \u7b80\u6d01\u2014\u2014\u6700\u5927\u5316\u4e0d\u5fc5\u8981\u5de5\u4f5c\u91cf\u7684\u827a\u672f\u2014\u2014\u662f\u81f3\u5173\u91cd\u8981\u7684\u3002 \u6700\u597d\u7684\u67b6\u6784\u3001\u9700\u6c42\u548c\u8bbe\u8ba1\u90fd\u6e90\u81ea\u81ea\u6211\u7ec4\u7ec7\u7684\u56e2\u961f\u3002 \u56e2\u961f\u5e94\u8be5\u5b9a\u671f\u53cd\u601d\u5982\u4f55\u80fd\u53d8\u5f97\u66f4\u6709\u6218\u6597\u529b\uff0c\u7136\u540e\u76f8\u5e94\u5730\u8f6c\u53d8\u5e76\u8c03\u6574\u5176\u884c\u4e3a\u3002 \u654f\u6377\u5ba3\u8a00\u662f\u4e3a\u94f6\u6cb3\u7cfb\u5e26\u6765\u548c\u5e73\u4ee5\u53ca\u7ef4\u62a4\u5404\u81ea\u7684\u5e73\u8861\u6240\u8fc8\u51fa\u7684\u5f88\u91cd\u8981\u7684\u7b2c\u4e00\u6b65\u3002\u5728\u5f88\u957f\u7684\u65f6\u95f4\u91cc\uff0c\u76f8\u6bd4\u6b64\u524d\u57fa\u4e8e\u6d41\u7a0b\u548c\u673a\u68b0\u5316\u7684\u65b9\u5f0f\uff0c\u8fd9\u662f\u7b2c\u4e00\u6b21\u57fa\u4e8e\u6587\u5316\u548c\u201c\u4eba\u6027\u201d\u6765\u5c06\u4e0d\u540c\u7684\u5173\u952e\u9879\u76ee\u5173\u7cfb\u4eba\u8fde\u63a5\u5728\u4e00\u8d77\u7684\u65b9\u5f0f\u3002\u4eba\u4eec\u5f00\u59cb\u4e92\u76f8\u4ea4\u6d41\uff0c\u8fdb\u884c\u57fa\u672c\u7684\u78b0\u5934\u4f1a\u8bae\uff0c\u5e76\u5f00\u59cb\u4e0d\u65ad\u7684\u4ea4\u6d41\u610f\u89c1\u548c\u770b\u6cd5\u3002\u4ed6\u4eec\u5f00\u59cb\u610f\u8bc6\u5230\u4ed6\u4eec\u662f\u6709\u7740\u5f88\u591a\u6bd4\u60f3\u8c61\u4e2d\u8fd8\u591a\u7684\u5171\u540c\u70b9\u7684\uff0c\u5ba2\u6237\u4e5f\u5f00\u59cb\u6210\u4e3a\u4ed6\u4eec\u4e4b\u4e2d\u7684\u4e00\u5458\uff0c\u800c\u4e0d\u518d\u662f\u50cf\u4ee5\u5f80\u4e00\u6837\u53ea\u662f\u5f80\u9879\u76ee\u7838\u94b1\u7136\u540e\u5f00\u59cb\u6c42\u795e\u62dc\u4f5b\u7948\u6c42\u4e00\u5207\u987a\u5229\u5982\u613f\u3002 \u5c3d\u7ba1\u524d\u9762\u8fd8\u662f\u6709\u4e0d\u5c11\u7684\u969c\u788d\u9700\u8981\u514b\u670d\uff0c\u4f46\u662f\u672a\u6765\u5df2\u7ecf\u5149\u660e\u4e86\u8bb8\u591a\u3002\u654f\u6377\u610f\u5473\u7740\u5f00\u653e\u548c\u62e5\u62b1(\u9700\u6c42)\u6539\u53d8\u3002\u4f46\u662f\uff0c\u5982\u679c\u6539\u53d8\u8fc7\u591a\u7684\u8bdd\uff0c\u4eba\u4eec\u5c31\u5f88\u96be\u4e13\u6ce8\u5230\u6700\u7ec8\u7684\u76ee\u6807\u548c\u4ea4\u4ed8\u4e0a\u6765\u3002\u6b64\u65f6\u7cbe\u76ca\u8f6f\u4ef6\u5f00\u53d1\u5c31\u5f00\u59cb\u7834\u571f\u800c\u51fa\u4e86\u3002 \u56e0\u4e3a\u5bf9\u7cbe\u76ca\u8f6f\u4ef6\u5f00\u53d1\u7684\u7740\u8ff7\u4ee5\u53ca\u4e3a\u4e86\u8fbe\u6210\u653e\u9010\u548c\u9a71\u8d76\u98ce\u9669\u7684\u76ee\u7684\uff0c\u4e00\u4e9b\u7a0b\u5e8f\u5458\u7684\u5b50\u5b59\u4eec\u5c31\u5f00\u59cb\u63a2\u9996\u7a97\u5916\uff0c\u5f00\u59cb\u5411\u8f6f\u4ef6\u4e4b\u5916\u7684\u884c\u4e1a\u8fdb\u884c\u53d6\u7ecf\u3002\u4ed6\u4eec\u4ece\u4e00\u5bb6\u4e3b\u8981\u7684\u6c7d\u8f66\u751f\u4ea7\u5546\u8eab\u4e0a\u627e\u5230\u4e86\u6551\u8d4e\u3002\u4e30\u7530\u751f\u4ea7\u7cfb\u7edf\u5728\u7cbe\u76ca\u4e0a\u9762\u7684\u6210\u5c31\u662f\u4e0d\u53ef\u601d\u8bae\u7684\uff0c\u540c\u65f6\u5b83\u4eec\u7684\u7cbe\u76ca\u751f\u4ea7\u7684\u7ecf\u9a8c\u4e5f\u662f\u5f88\u5bb9\u6613\u5e94\u7528\u5230\u8f6f\u4ef6\u5f00\u53d1\u4e0a\u6765\u7684\u3002 \u7cbe\u76ca\u6709\u4ee5\u4e0b7\u4e2a\u539f\u5219\uff1a \u00b6 \u675c\u7edd\u6d6a\u8d39 \u5185\u5efa\u8d28\u91cf \u521b\u5efa\u77e5\u8bc6(\u653e\u5927\u5b66\u4e60) \u5ef6\u8fdf\u51b3\u7b56(\u5c3d\u91cf\u5ef6\u8fdf\u51b3\u5b9a) \u5feb\u901f\u4ea4\u4ed8 \u5c0a\u91cd\u4eba\u5458(\u56e2\u961f\u6388\u6743) \u5168\u5c40\u4f18\u5316 \u5c06\u8fd9\u4e9b\u653e\u5230\u654f\u6377\u4e0a\u53bb\u7684\u8bdd\uff0c\u7cbe\u76ca\u539f\u5219\u5c31\u80fd\u8ba9\u4eba\u4eec\u5728\u4ece\u7cbe\u795e\u4e0a\u5173\u6ce8\u505a\u6b63\u786e\u7684\u4e8b\u60c5\uff0c\u540c\u65f6\u8fd8\u80fd\u591f\u8ba9\u6574\u4e2a\u5f00\u53d1\u6d41\u7a0b\u62e5\u6709\u8db3\u591f\u7684\u5f39\u6027\u3002 \u4e00\u65e6\u654f\u6377\u548c\u7cbe\u76ca\u8f6f\u4ef6\u5f00\u53d1\u88ab\u8f6f\u4ef6\u5f00\u53d1\u56e2\u961f\u91c7\u7eb3\uff0c\u90a3\u4e48\u4e0b\u4e00\u6b65\u5c31\u662f\u628a\u8fd9\u4e00\u5957\u539f\u5219\u5e94\u7528\u5230IT\u56e2\u961f\u4e0a\u6765\u3002\u628aIT\u4e5f\u7eb3\u5165\u5230\u6574\u4f53\u6218\u7565\u4e0a\uff0c\u7136\u540e\u6211\u4eec\u5c31\u6765\u5230\u4e86DevOps\u8ddf\u524d\u4e86\uff01 \u8fdb\u5165DevOps \u2013 \u9ad8\u901f\u516c\u8def\u7684\u4e09\u6761\u8f66\u9053 \u00b6 \u8001\u4e00\u6d3e\u7684\u8f6f\u4ef6\u5f00\u53d1\u56e2\u961f\u6210\u5458\u4f1a\u5305\u542b\u4e1a\u52a1\u5206\u6790\u5458\uff0c\u7cfb\u7edf\u67b6\u6784\u5e08\uff0c\u524d\u7aef\u5f00\u53d1\u8005\uff0c\u540e\u7aef\u5f00\u53d1\u8005\uff0c\u6d4b\u8bd5\u5458\uff0c\u7b49\u7b49\u3002\u4f18\u5316\u5982\u654f\u6377\u548c\u7cbe\u76ca\u539f\u5219\u7b49\u7684\u8f6f\u4ef6\u5f00\u53d1\u6d41\u7a0b\u7684\u5173\u6ce8\u70b9\u5c31\u5728\u8fd9\u4e9b\u5730\u65b9\u3002\u6bd4\u5982\uff0c\u8f6f\u4ef6\u4e00\u65e6\u8fbe\u5230\u201d\u53ef\u4ee5\u751f\u4ea7\u201c\u7684\u7a0b\u5ea6\uff0c\u5c31\u4f1a\u53d1\u5230\u7cfb\u7edf\u5de5\u7a0b\u5e08\u3001\u53d1\u5e03\u5de5\u7a0b\u5e08\u3001DBA\u3001\u7f51\u7edc\u5de5\u7a0b\u5e08\uff0c\u5b89\u5168\u4e13\u5bb6\u8fd9\u4e9b\u201c\u8fd0\u7ef4\u4eba\u5458\u201d\u7684\u624b\u4e0a\u3002\u8fd9\u91cc\u8be5\u5982\u4f55\u5c06\u6a2a\u5728Dev(\u5f00\u53d1)\u548cOps(\u8fd0\u7ef4)\u4e4b\u95f4\u7684\u9e3f\u6c9f\u7ed9\u586b\u5e73\uff0c\u8fd9\u5c31\u662fDevOps\u7684\u4e3b\u8981\u5173\u6ce8\u70b9\u4e86\u3002 DevOps\u662f\u5728\u6574\u4e2aIT\u4ef7\u503c\u6d41\u4e2d\u5b9e\u65bd\u7cbe\u76ca\u539f\u5219\u7684\u7ed3\u679c\u3002IT\u4ef7\u503c\u6d41\u5c06\u5f00\u53d1\u5ef6\u4f38\u81f3\u751f\u4ea7\uff0c\u5c06\u7531\u7a0b\u5e8f\u5458\u8fd9\u4e2a\u9065\u8fdc\u7684\u7956\u5b97\u6240\u7e41\u884d\u7684\u6240\u6709\u5b50\u5b59\u7ed9\u8054\u5408\u5728\u4e00\u8d77\u3002 \u8fd9\u662f\u6765\u81eaGene Kim\u7684\u5bf9DevOps\u7684\u6700\u597d\u7684\u89e3\u6790\uff0c\u5982\u679c\u4f60\u8fd8\u6ca1\u6709\u770b\u8fc7\u4ed6\u7684\u300a\u51e4\u51f0\u9879\u76ee\u300b\u8fd9\u672c\u4e66\u7684\u8bdd\uff0c\u6211\u5efa\u8bae\u4f60\u771f\u7684\u8be5\u597d\u597d\u82b1\u65f6\u95f4\u770b\u770b\u3002 \u4f60\u4e0d\u5e94\u8be5\u91cd\u65b0\u62db\u8058DevOps\u5de5\u7a0b\u5e08\uff0c\u4e14DevOps\u4e5f\u4e0d\u5e94\u8be5\u662f\u4e00\u4e2aIT\u7684\u65b0\u90e8\u95e8\u3002DevOps\u662f\u4e00\u79cd\u6587\u5316\uff0c\u4e00\u79cd\u7406\u5ff5\uff0c\u4e14\u662f\u548cIT\u7cc5\u5408\u6210\u4e00\u6574\u4f53\u7684\u3002\u4e16\u95f4\u6ca1\u6709\u4efb\u4f55\u5de5\u5177\u53ef\u4ee5\u628a\u4f60\u7684IT\u53d8\u6210\u4e00\u4e2aDevOps\u7ec4\u7ec7\uff0c\u4e5f\u6ca1\u6709\u4efb\u4f55\u81ea\u52a8\u5316\u65b9\u5f0f\u53ef\u4ee5\u6307\u5f15\u4f60\u8be5\u5982\u4f55\u4e3a\u4f60\u7684\u5ba2\u6237\u63d0\u4f9b\u6700\u5927\u5316\u7684\u6548\u76ca\u3002 DevOps\u901a\u5e38\u4f5c\u4e3a\u4e0b\u9762\u8fd9\u4e09\u4e2a\u65b9\u5f0f\u800c\u4e3a\u4eba\u6240\u719f\u77e5\uff0c\u800c\u5728\u6211\u773c\u91cc\u6211\u662f\u628a\u5b83\u4eec\u770b\u6210\u662f\u4e00\u6761\u9ad8\u901f\u516c\u8def\u4e0a\u7684\u4e09\u6761\u8f66\u9053\u3002\u4f60\u4ece\u7b2c\u4e00\u6761\u8f66\u9053\u5f00\u59cb\uff0c\u7136\u540e\u52a0\u901f\u8fdb\u5165\u5230\u7b2c\u4e8c\u6761\u8f66\u9053\uff0c\u6700\u7ec8\u5728\u7b2c\u4e09\u8f66\u9053\u4e0a\u9ad8\u901f\u884c\u9a76\u3002 \u8f66\u90531 \u2013 \u7cfb\u7edf\u7ea7\u522b\u7684\u6574\u4f53\u6548\u7387\u8003\u91cf\u662f\u6700\u4e3b\u8981\u7684\u5173\u6ce8\u70b9\uff0c\u8fd9\u8d85\u8fc7\u5bf9\u7cfb\u7edf\u4e2d\u4efb\u4f55\u4e00\u4e2a\u5355\u72ec\u4e2a\u4f53\u5143\u7d20\u7684\u8003\u8651 \u8f66\u90532 \u2013 \u786e\u4fdd\u80fd\u63d0\u4f9b\u6301\u7eed\u4e0d\u65ad\u7684\u53cd\u9988\u5faa\u73af\uff0c\u4e14\u8fd9\u4e9b\u53cd\u9988\u4e0d\u88ab\u5ffd\u89c6\u3002 \u8f66\u90533 \u2013 \u6301\u7eed\u7684\u5b66\u4e60\u548c\u5438\u53d6\u7ecf\u9a8c\uff0c\u4e0d\u505c\u7684\u8fdb\u6b65\uff0c\u5feb\u901f\u7684\u5931\u8d25\u3002 \u8f66\u90531 \u2013 \u83b7\u53d6\u901f\u5ea6 \u00b6 \u8981\u91c7\u7eb3DevOps\u7684\u539f\u5219\uff0c\u7406\u89e3\u6574\u4e2a\u8fd0\u4f5c\u7cfb\u7edf\u7684\u91cd\u8981\u6027\u5e76\u5bf9\u5de5\u4f5c\u4e8b\u9879\u8fdb\u884c\u5408\u9002\u7684\u4f18\u5148\u7ea7\u6392\u5e8f\u662f\u7ec4\u7ec7\u9996\u5148\u8981\u5b66\u7684\u4e8b\u60c5\u3002\u5728\u6574\u4e2a\u4ef7\u503c\u6d41\u4e2d\u4e0d\u80fd\u5141\u8bb8\u4efb\u4f55\u4eba\u4ea7\u751f\u74f6\u9888\u5e76\u964d\u4f4e\u6574\u4e2a\u5de5\u4f5c\u6d41\u7a0b\u3002 \u786e\u4fdd\u5de5\u4f5c\u6d41\u7a0b\u7684\u4e0d\u53ef\u4e2d\u65ad\u662f\u8eab\u5904\u6d41\u7a0b\u4e2d\u7684\u6240\u6709\u6210\u5458\u7684\u7ec8\u6781\u76ee\u6807\u3002\u65e0\u8bba\u4e00\u4e2a\u6210\u5458\u6216\u8005\u56e2\u961f\u7684\u89d2\u8272\u662f\u4ec0\u4e48\uff0c\u4ed6\u4eec\u90fd\u5fc5\u987b\u529b\u56fe\u5bf9\u6574\u4e2a\u7cfb\u7edf\u8fdb\u884c\u6df1\u5165\u7684\u7406\u89e3\u3002\u8fd9\u79cd\u601d\u7ef4\u65b9\u5f0f\u5bf9\u8d28\u91cf\u4f1a\u6709\u7740\u76f4\u63a5\u7684\u5f71\u54cd\uff0c\u56e0\u4e3a\u7f3a\u9677\u6c38\u8fdc\u4e0d\u4f1a\u88ab\u4e0b\u653e\u5230\u201c\u4e0b\u6e38\u201c\u4e2d\uff0c\u8fd9\u6837\u505a\u7684\u8bdd\u5c06\u4f1a\u5bfc\u81f4\u74f6\u9888\u7684\u4ea7\u751f\u3002 \u786e\u4fdd\u6574\u4e2a\u5de5\u4f5c\u6d41\u7a0b\u4e0d\u4f1a\u88ab\u74f6\u9888\u5835\u585e\u4f4f\u8fd8\u4e0d\u591f\u3002\u4e00\u4e2a\u9ad8\u4ea7\u7684\u7ec4\u7ec7\u5e94\u8be5\u65f6\u5e38\u8003\u8651\u8be5\u5982\u4f55\u63d0\u5347\u6574\u4e2a\u5de5\u4f5c\u6d41\u7a0b\u3002\u6709\u5f88\u591a\u65b9\u6cd5\u8bba\u53ef\u4ee5\u505a\u5230\u8fd9\u4e00\u70b9\uff0c\u4f60\u4e0d\u59a8\u53bb\u770b\u4e0b\u201c\u7ea6\u675f\u7406\u8bba\u201d\uff0c\u201c\u516d\u897f\u683c\u739b\u201d\uff0c\u7cbe\u76ca\uff0c\u6216\u8005\u4e30\u7530\u751f\u4ea7\u7cfb\u7edf\u3002 DevOps\u539f\u5219\u4e0d\u5173\u5fc3\u4f60\u8eab\u5904\u54ea\u4e2a\u56e2\u961f\uff0c\u4f60\u662f\u5426\u662f\u7cfb\u7edf\u67b6\u6784\u5e08\uff0cDBA\uff0cQA\uff0c\u6216\u8005\u662f\u7f51\u7edc\u7ba1\u7406\u5458\u3002\u76f8\u540c\u7684\u89c4\u5219\u8986\u76d6\u6240\u6709\u7684\u6210\u5458\uff0c\u6bcf\u4e2a\u6210\u5458\u90fd\u5e94\u8be5\u9075\u5faa\u4e24\u4e2a\u7b80\u5355\u7684\u539f\u5219\uff1a \u4fdd\u6301\u7cfb\u7edf\u8fd0\u4f5c\u6d41\u7a0b\u4e0d\u53ef\u4e2d\u65ad \u968f\u65f6\u63d0\u5347\u548c\u4f18\u5316\u5de5\u4f5c\u6d41\u7a0b \u8f66\u90532 \u2013 \u6362\u6321\u52a0\u901f \u00b6 \u4e0d\u53ef\u4e2d\u65ad\u7684\u7cfb\u7edf\u6d41\u7a0b\u662f\u5b9a\u5411\u7684\uff0c\u4e14\u9884\u671f\u662f\u4ece\u5f00\u53d1\u6d41\u5411\u8fd0\u7ef4\u3002\u5728\u4e00\u4e2a\u7406\u60f3\u7684\u4e16\u754c\u4e2d\uff0c\u8fd9\u5c31\u610f\u5473\u7740\u5feb\u901f\u7684\u5f00\u53d1\u51fa\u9ad8\u8d28\u91cf\u7684\u8f6f\u4ef6\uff0c\u90e8\u7f72\uff0c\u5e76\u4e3a\u5ba2\u6237\u63d0\u4f9b\u4ef7\u503c\u3002 \u4f46\u662f\uff0cDevOps\u5e76\u975e\u4e4c\u6258\u90a6\u5f0f\u7684\u7406\u60f3\u56fd\u3002\u5982\u679c\u5355\u5411\u7684\u4ea4\u4ed8\u65b9\u5f0f\u662f\u53ef\u884c\u7684\u8bdd\uff0c\u6211\u4eec\u7684\u7011\u5e03\u6a21\u5f0f\u65e9\u5c31\u80fd\u80dc\u4efb\u4e86\u3002\u8bc4\u4f30\u53ef\u4ea4\u4ed8\u4ea7\u54c1\u548c\u6574\u4e2a\u6d41\u7a0b\u4e2d\u7684\u4ea4\u6d41\u5bf9\u786e\u4fdd\u8d28\u91cf\u662f\u81f3\u5173\u91cd\u8981\u7684\u3002\u8fd9\u91cc\u9996\u4e2a\u5fc5\u987b\u5b9e\u73b0\u7684\u201d\u9762\u5411\u4e0a\u6e38\u201d\u7684\u4ea4\u6d41\u901a\u9053\u662f\u4eceOps\u5230Dev\u3002 \u6211\u4eec\u72ec\u81ea\u610f\u6deb\u662f\u4ef6\u975e\u5e38\u5bb9\u6613\u7684\u4e8b\u60c5\uff0c\u4f46\u662f\u83b7\u53d6\u522b\u4eba\u7684\u53cd\u9988\u548c\u63d0\u4f9b\u53cd\u9988\u7ed9\u522b\u4eba\u624d\u662f\u63a2\u7a76\u4e8b\u5b9e\u771f\u76f8\u7684\u6b63\u786e\u65b9\u6cd5\u3002\u4e0b\u6e38\u7684\u6bcf\u4e00\u6b65(\u53cd\u9988)\u90fd\u5fc5\u987b\u7d27\u8ddf\u7740\u6709\u4e00\u4e2a\u4e0a\u6e38\u7684\u786e\u5b9a\u3002 \u4f60\u5982\u4f55\u5efa\u7acb\u53cd\u9988\u5faa\u73af\u673a\u5236\u5e76\u4e0d\u91cd\u8981\u3002\u4f60\u53ef\u4ee5\u9080\u8bf7\u5f00\u53d1\u4eba\u5458\u52a0\u5165\u6280\u672f\u652f\u6301\u56e2\u961f\u7684\u4f1a\u8bae\uff0c\u6216\u8005\u5c06\u7f51\u7edc\u7ba1\u7406\u5458\u653e\u5230Sprint\u8ba1\u5212\u4f1a\u8bae\u4e2d\u53bb\u3002\u4e00\u65e6\u4f60\u7684\u53cd\u9988\u673a\u5236\u5c31\u7eea\uff0c\u53cd\u9988\u80fd\u591f\u88ab\u63a5\u6536\u5e76\u88ab\u5904\u7406\uff0c\u4f60\u5c31\u5df2\u7ecf\u53ef\u4ee5\u8bf4\u662f\u8d70\u5230\u4e86DevOps\u9ad8\u901f\u8f66\u9053\u4e0a\u6765\u4e86\u3002 \u8f66\u90533 \u2013 \u98de\u901f\u524d\u8fdb \u00b6 DevOps\u8fd9\u6761\u5feb\u901f\u8f66\u9053\u5e76\u4e0d\u9002\u5408\u610f\u5fd7\u8106\u5f31\u7684\u4eba\u3002\u4e3a\u4e86\u8fdb\u5165\u8fd9\u6761\u8f66\u9053\uff0c\u4f60\u7684\u7ec4\u7ec7\u5fc5\u987b\u8981\u8db3\u591f\u7684\u6210\u719f\u3002\u8fd9\u91cc\u5145\u6ee1\u4e86\u5192\u9669\u548c\u5bf9\u5931\u8d25\u6559\u8bad\u7684\u5b66\u4e60\uff0c\u4e0d\u65ad\u7684\u5c1d\u8bd5\uff0c\u5e76\u8ba4\u540c\u5c61\u8d25\u5c61\u6218\u548c\u4e0d\u65ad\u7684\u5b9e\u8df5\u662f\u8d70\u5411\u6210\u529f\u8fd9\u6761\u5eb7\u5e84\u5927\u9053\u7684\u524d\u63d0\u6761\u4ef6\u3002\u5728\u8fd9\u91cc\u4f60\u5e94\u8be5\u4f1a\u7ecf\u5e38\u542c\u5230\u201d\u5957\u8def\u201c\u8fd9\u4e2a\u8bcd\uff0c\u8fd9\u662f\u6709\u539f\u56e0\u7684\u3002\u4e0d\u65ad\u7684\u8bad\u7ec3\u548c\u91cd\u590d\u6240\u4ee5\u80fd\u57f9\u517b\u51fa\u5927\u5e08\uff0c\u662f\u56e0\u4e3a\u5176\u8ba9\u590d\u6742\u7684\u52a8\u4f5c\u5e38\u89c4\u5316\u3002 \u4f46\u662f\u5728\u4f60\u8981\u5c06\u8fd9\u4e9b\u590d\u6742\u7684\u52a8\u4f5c\u8fde\u63a5\u8d77\u6765\u4e4b\u524d\uff0c\u4f60\u5f88\u6709\u5fc5\u8981\u5148\u53bb\u638c\u63e1\u597d\u6bcf\u4e00\u4e2a\u5355\u72ec\u6b65\u9aa4\u3002 \u201c\u9002\u5408\u5927\u5e08\u7684\u52a8\u4f5c\u5e76\u4e0d\u9002\u5408\u65b0\u624b\uff0c\u8131\u80ce\u6362\u9aa8\u4e4b\u524d\u4f60\u5fc5\u987b\u5148\u8981\u660e\u767d\u9053\u7684\u771f\u8c1b\u3002\u201c DevOps\u7684\u7b2c\u4e09\u4e2a\u65b9\u5f0f/\u5feb\u901f\u8f66\u9053\u5305\u62ec\u6bcf\u5929\u5206\u914d\u65f6\u95f4\u6765\u6301\u7eed\u7684\u8fdb\u884c\u8bd5\u9a8c\uff0c\u65f6\u5e38\u7684\u5956\u52b1\u6562\u4e8e\u5192\u9669\u7684\u56e2\u961f\uff0c\u5e76\u5c06\u7f3a\u9677\u7279\u610f\u5f15\u5165\u5230\u8fd0\u4f5c\u7cfb\u7edf\u4e0a\u6765\u4ee5\u589e\u52a0\u7cfb\u7edf\u7684\u6297\u51fb\u6253\u80fd\u529b\u3002 \u4e3a\u4e86\u786e\u4fdd\u4f60\u7684\u7ec4\u7ec7\u80fd\u591f\u6d88\u5316\u597d\u8fd9\u4e9b\u65b9\u6cd5\uff0c\u4f60\u5fc5\u987b\u5728\u6bcf\u4e2a\u56e2\u961f\u4e4b\u95f4\u5efa\u7acb\u597d\u9891\u7e41\u7684\u53cd\u9988\u5faa\u73af\uff0c\u540c\u65f6\u9700\u8981\u786e\u4fdd\u6240\u6709\u7684\u74f6\u9888\u90fd\u80fd\u591f\u53ca\u65f6\u7684\u88ab\u6e05\u7406\u6389\uff0c\u5e76\u786e\u4fdd\u6574\u4e2a\u7cfb\u7edf\u7684\u8fd0\u4f5c\u6d41\u7a0b\u662f\u4e0d\u53ef\u4e2d\u65ad\u7684\u3002 \u5b9e\u65bd\u597d\u8fd9\u4e9b\u63aa\u65bd\u53ef\u4ee5\u8ba9\u4f60\u7684\u7ec4\u7ec7\u65f6\u523b\u4fdd\u6301\u8b66\u60d5\uff0c\u5e76\u80fd\u591f\u5feb\u901f\u4e14\u9ad8\u6548\u7684\u5e94\u5bf9\u6311\u6218\u3002 \u6982\u8981 \u2013 DevOps\u6e05\u5355 \u00b6 \u4e0b\u9762\u662f\u4e00\u5f20\u4f60\u53ef\u4ee5\u7528\u6765\u68c0\u9a8c\u4f60\u7684\u7ec4\u7ec7\u5bf9DevOps\u7684\u5e94\u7528\u60c5\u51b5\u7684\u6e05\u5355\u3002\u5f53\u7136\u4f60\u4e5f\u53ef\u4ee5\u5728\u6587\u7ae0\u8bc4\u8bba\u540e\u9762\u7ed9\u51fa\u4f60\u7684\u89c2\u70b9\u3002 \u5f00\u53d1\u56e2\u961f\u548c\u8fd0\u7ef4\u56e2\u961f\u4e4b\u95f4\u6ca1\u6709\u969c\u788d\u3002\u4e24\u8005\u7686\u662fDevOps\u7edf\u4e00\u6d41\u7a0b\u7684\u4e00\u90e8\u5206\u3002 \u4ece\u4e00\u4e2a\u56e2\u961f\u6d41\u5230\u53e6\u4e00\u4e2a\u56e2\u961f\u7684\u5de5\u4f5c\u90fd\u80fd\u591f\u5f97\u5230\u9ad8\u8d28\u91cf\u7684\u9a8c\u8bc1 \u5de5\u4f5c\u6ca1\u6709\u5806\u79ef\uff0c\u6240\u6709\u7684\u74f6\u9888\u90fd\u5df2\u7ecf\u88ab\u5904\u7406\u597d\u3002 \u5f00\u53d1\u56e2\u961f\u6ca1\u6709\u5360\u7528\u8fd0\u7ef4\u56e2\u961f\u7684\u65f6\u95f4\uff0c\u56e0\u4e3a\u90e8\u7f72\u548c\u7ef4\u62a4\u90fd\u662f\u5904\u4e8e\u540c\u4e00\u4e2a\u65f6\u95f4\u76d2\u91cc\u9762\u7684\u3002 \u5f00\u53d1\u56e2\u961f\u4e0d\u4f1a\u5728\u5468\u4e94\u4e0b\u53485\u70b9\u540e\u628a\u4ee3\u7801\u4ea4\u4ed8\u8fdb\u884c\u90e8\u7f72\uff0c\u5269\u4e0b\u8fd0\u7ef4\u56e2\u961f\u5468\u672b\u52a0\u73ed\u52a0\u70b9\u6765\u7ed9\u4ed6\u4eec\u64e6\u5c41\u80a1 \u5f00\u53d1\u73af\u5883\u6807\u51c6\u5316\uff0c\u8fd0\u7ef4\u4eba\u5458\u53ef\u4ee5\u5f88\u5bb9\u6613\u5c07\u4e4b\u6269\u5c55\u5e76\u8fdb\u884c\u90e8\u7f72 \u5f00\u53d1\u56e2\u961f\u53ef\u4ee5\u627e\u5230\u5408\u9002\u7684\u65b9\u5f0f\u4ea4\u4ed8\u65b0\u7248\u672c\uff0c\u4e14\u8fd0\u7ef4\u56e2\u961f\u53ef\u4ee5\u8f7b\u6613\u7684\u8fdb\u884c\u90e8\u7f72\u3002 \u6bcf\u4e2a\u56e2\u961f\u4e4b\u95f4\u7684\u901a\u4fe1\u7ebf\u8def\u90fd\u5f88\u660e\u786e \u6240\u6709\u7684\u56e2\u961f\u6210\u5458\u90fd\u6709\u65f6\u95f4\u53bb\u4e3a\u6539\u5584\u7cfb\u7edf\u8fdb\u884c\u8bd5\u9a8c\u548c\u5b9e\u8df5 \u5e38\u89c4\u6027\u7684\u5f15\u5165(\u6216\u8005\u6a21\u62df)\u7f3a\u9677\u5230\u7cfb\u7edf\u4e2d\u6765\u5e76\u5f97\u5230\u5904\u7406\u3002\u6bcf\u6b21\u5b66\u4e60\u5230\u7684\u7ecf\u9a8c\u90fd\u5e94\u8be5\u6587\u6863\u5316\u4e0b\u6765\u5e76\u5206\u4eab\u7ed9\u76f8\u5173\u4eba\u5458\u3002\u4e8b\u6545\u5904\u7406\u6210\u4e3a\u65e5\u5e38\u5de5\u4f5c\u7684\u4e00\u90e8\u5206\uff0c\u4e14\u5904\u7406\u65b9\u5f0f\u662f\u5df2\u77e5\u7684 \u603b\u7ed3 \u00b6 \u4f7f\u7528\u73b0\u4ee3\u5316\u7684DevOps\u5de5\u5177\uff0c\u5982Chef\u3001Docker\u3001Ansible\u3001Packer\u3001Troposphere\u3001Consul\u3001Jenkins\u3001SonarQube\u3001AWS\u7b49\uff0c\u5e76\u4e0d\u4ee3\u8868\u4f60\u5c31\u5728\u6b63\u786e\u7684\u5e94\u7528DevOps\u7684\u539f\u5219\u3002DevOps\u662f\u4e00\u79cd\u601d\u7ef4\u65b9\u5f0f\u3002\u6211\u4eec\u6240\u6709\u4eba\u90fd\u662f\u8be5\u7cfb\u7edf\u6d41\u7a0b\u7684\u4e00\u90e8\u5206\uff0c\u6211\u4eec\u4e00\u8d77\u5206\u4eab\u5171\u540c\u7684\u65f6\u5149\u548c\u4ea4\u4ed8\u4ef7\u503c\u3002\u6bcf\u4e2a\u53c2\u52a0\u5230\u8fd9\u4e2a\u8f6f\u4ef6\u4ea4\u4ed8\u6d41\u7a0b\u4e0a\u6765\u7684\u6210\u5458\u90fd\u80fd\u591f\u52a0\u901f\u6216\u51cf\u7f13\u6574\u4e2a\u7cfb\u7edf\u7684\u8fd0\u4f5c\u901f\u5ea6\u3002\u7cfb\u7edf\u51fa\u73b0\u7684\u4e00\u4e2a\u7f3a\u9677\uff0c\u4ee5\u53ca\u9519\u8bef\u914d\u7f6e\u7684\u56e2\u961f\u4e4b\u95f4\u7684\u201c\u9632\u706b\u5899\u201d\uff0c\u90fd\u53ef\u80fd\u4f1a\u4f7f\u5f97\u6574\u4e2a\u7cfb\u7edf\u762b\u75ea\uff0c \u6240\u6709\u7684\u4eba\u90fd\u662fDevOps\u7684\u4e00\u90e8\u5206\uff0c\u4e00\u65e6\u4f60\u7684\u7ec4\u7ec7\u660e\u767d\u4e86\u8fd9\u4e00\u70b9\uff0c\u80fd\u591f\u5e2e\u4f60\u7ba1\u7406\u597d\u8fd9\u4e9b\u7684\u5de5\u5177\u548c\u6280\u672f\u6808\u5c31\u81ea\u7136\u800c\u7136\u7684\u4f1a\u51fa\u73b0\u5728\u4f60\u773c\u524d\u4e86\u3002","title":"DevOps"},{"location":"exp/devops/#devops","text":"","title":"\u4e00\u5206\u949f\u544a\u8bc9\u4f60\u7a76\u7adfDevOps\u662f\u4ec0\u4e48\u9b3c\uff1f"},{"location":"exp/devops/#_1","text":"\u4e3a\u4e86\u80fd\u591f\u66f4\u597d\u7684\u7406\u89e3\u4ec0\u4e48\u662fDevOps\uff0c\u6211\u4eec\u5f88\u6709\u5fc5\u8981\u5bf9\u5f53\u65f6\u8fd8\u53ea\u6709\u7a0b\u5e8f\u5458(\u6b64\u524d\u8fd8\u6ca1\u6709\u6d3e\u751f\u51fa\u5f00\u53d1\u8005\uff0c\u524d\u53f0\u5de5\u7a0b\u5e08\uff0c\u540e\u53f0\u5de5\u7a0b\u5e08\u4e4b\u7c7b)\u8fd9\u4e2a\u79f0\u53f7\u5b58\u5728\u7684\u5386\u53f2\u8fdb\u884c\u4e00\u4e0b\u56de\u987e\u3002","title":"\u5386\u53f2\u56de\u987e"},{"location":"exp/devops/#_2","text":"\u8001\u4e00\u8f88\u7684\u7a0b\u5e8f\u5458\u662f\u795e\u79d8\u4e14\u6df1\u5965\u7684\u3002\u6211\u4eec\u6ca1\u6cd5\u63e3\u6469\u4ed6\u4eec\u7684\u60f3\u6cd5\uff0c\u6211\u4eec\u6240\u80fd\u505a\u7684\u53ea\u662f\u63cf\u8ff0\u4e00\u4e0b\u4ed6\u4eec\u7684\u8868\u8c61\u3002 \u6e05\u9192\u7684\u50cf\u4e00\u53ea\u6e38\u8fc7\u6c34\u9762\u7684\u72d0\u72f8 \u8b66\u60d5\u7684\u50cf\u4e00\u4f4d\u6218\u573a\u4e0a\u7684\u5c06\u519b \u53cb\u5584\u7684\u50cf\u4e00\u4f4d\u62db\u5f85\u5ba2\u4eba\u7684\u5973\u4e3b\u4eba \u5355\u7eaf\u7684\u50cf\u4e00\u5757\u672a\u7ecf\u96d5\u7422\u7684\u6728\u5934 \u6df1\u9083\u7684\u50cf\u4e00\u6f6d\u5e7d\u6df1\u6d1e\u7a74\u4e2d\u6f06\u9ed1\u7684\u6c60\u6c34 \u7a0b\u5e8f\u5458\u5f00\u53d1\u4e86\u673a\u5668\u8bed\u8a00\uff0c\u673a\u5668\u8bed\u8a00\u53c8\u4ea7\u751f\u4e86\u6c47\u7f16\u8bed\u8a00\uff0c\u6c47\u7f16\u8bed\u8a00\u4ea7\u751f\u4e86\u7f16\u8bd1\u5668\uff0c\u5982\u4eca\u7684\u8bed\u8a00\u5df2\u7ecf\u591a\u4e0d\u80dc\u6570\u3002\u6bcf\u4e00\u79cd\u8bed\u8a00\u90fd\u6709\u5176\u5404\u81ea\u7684\u8c26\u5351\u7528\u9014\u3002\u6bcf\u4e00\u79cd\u8bed\u8a00\u90fd\u8868\u8fbe\u51fa\u8f6f\u4ef6\u7684\u9634\u548c\u9633\u3002\u6bcf\u4e00\u79cd\u8bed\u8a00\u90fd\u5728\u6b64\u9053\u4e4b\u4e2d\u6709\u5176\u4e00\u5e2d\u4e4b\u5730\u3002 \u9065\u60f3\u5f53\u5e74\uff0c\u8f6f\u4ef6\u7a0b\u5e8f\u5458\u7684\u5927\u90e8\u5206\u529e\u516c\u53f8\u90a3\u65f6\u8fd8\u88ab\u79f0\u4f5c\u5b9e\u9a8c\u5ba4\uff0c\u7a0b\u5e8f\u5458\u90a3\u65f6\u8fd8\u53eb\u505a\u79d1\u5b66\u5bb6\u3002\u4e3a\u4e86\u5f00\u53d1\u51fa\u4e00\u5957\u4f18\u79c0\u7684\u8f6f\u4ef6\uff0c\u7a0b\u5e8f\u5458\u4eec\u5fc5\u987b\u6df1\u5165\u4e86\u89e3\u4ed6\u4eec\u9700\u8981\u7684\u5e94\u7528\u76f8\u5173\u7684\u6240\u6709\u95ee\u9898\u3002\u4ed6\u4eec\u5fc5\u987b\u6e05\u695a\u77e5\u9053\u8fd9\u4e2a\u8f6f\u4ef6\u5e94\u7528\u5728\u4ec0\u4e48\u573a\u5408\uff0c\u8fd9\u4e2a\u8f6f\u4ef6\u662f\u5fc5\u987b\u5728\u4ec0\u4e48\u7cfb\u7edf\u4e0a\u8fd0\u884c\u3002\u672c\u8d28\u4e0a\u8bf4\uff0c\u7a0b\u5e8f\u5458\u5bf9\u6240\u8981\u5f00\u53d1\u7684\u8f6f\u4ef6\u7684\u6240\u6709\u73af\u8282\u90fd\u6709\u900f\u5f7b\u7684\u4e86\u89e3\uff0c\u4ece\u89c4\u683c\u8bf4\u660e\u4e66\u7f16\u5199\u3001\u5230\u8f6f\u4ef6\u5f00\u53d1\u3001\u5230\u6d4b\u8bd5\u3001\u5230\u90e8\u7f72\u3001\u518d\u5230\u6280\u672f\u652f\u6301\u3002 \u8fc7\u4e86\u4e0d\u4e45\uff0c\u4eba\u7c7b(\u5ba2\u6237)\u8d2a\u5a6a\u7684\u7279\u6027\u5c31\u5f00\u59cb\u8868\u73b0\u51fa\u6765\uff0c\u4ed6\u4eec\u5f00\u59cb\u4e0d\u65ad\u7684\u8fdb\u884c\u66f4\u591a\u7684\u7d22\u6c42\u3002\u66f4\u5feb\u7684\u901f\u5ea6\uff0c\u66f4\u591a\u7684\u529f\u80fd\uff0c\u66f4\u591a\u7684\u7528\u6237\uff0c\u66f4\u591a\u7684\u6240\u6709\u6240\u6709\u3002 \u4f5c\u4e3a\u4e00\u7c7b\u8c26\u865a\u3001\u8c26\u5351\u3001\u4e14\u5e73\u9759\u7684\u751f\u7269\uff0c\u6211\u4eec\u7684\u8001\u4e00\u8f88\u7a0b\u5e8f\u5458\u4eec\u5c06\u5f88\u96be\u5728\u8fd9\u79cd\u7206\u53d1\u6027\u7684\u8fc7\u5ea6\u7684\u9700\u6c42\u7d22\u53d6\u4e2d\u5e78\u5b58\u3002\u6700\u597d\u7684\u53d6\u80dc\u529e\u6cd5\u5c31\u662f\u5f80\u4e0d\u540c\u7684\u65b9\u5411\u8fdb\u5316\u6210\u4e0d\u540c\u7684\u65b0\u7269\u79cd\u3002\u5f88\u5feb\uff0c\u7a0b\u5e8f\u5458\u8fd9\u4e2a\u79f0\u53f7\u5c31\u5f00\u59cb\u7edd\u8ff9\u4e8e\u6c5f\u6e56\uff0c\u800c\u90a3\u4e9b\u53eb\u505a\u5f00\u53d1\u8005\u3001\u8f6f\u4ef6\u5de5\u7a0b\u5e08\u3001\u7f51\u7edc\u7ba1\u7406\u5458\u3001\u6570\u636e\u5e93\u5f00\u53d1\u8005\u3001\u7f51\u9875\u5f00\u53d1\u8005\u3001\u7cfb\u7edf\u67b6\u6784\u5e08\u3001\u6d4b\u8bd5\u5de5\u7a0b\u5e08\u7b49\u7b49\u66f4\u591a\u7684\u65b0\u7269\u79cd\u5c31\u5f00\u59cb\u8bde\u751f\u3002\u5feb\u901f\u8fdb\u5316\u548c\u5feb\u901f\u9002\u5e94\u5916\u754c\u7684\u6311\u6218\u6210\u4e3a\u4e86\u4ed6\u4eec\u7684DNA\u7684\u4e00\u90e8\u5206\u3002\u8fd9\u4e9b\u65b0\u7684\u79cd\u65cf\u53ef\u4ee5\u5728\u51e0\u4e2a\u661f\u671f\u5185\u5c31\u5b8c\u6210\u8fdb\u5316\u3002\u7f51\u9875\u5f00\u53d1\u8005\u5f88\u5feb\u5c31\u80fd\u8fdb\u5316\u6210\u540e\u53f0\u5f00\u53d1\u8005\uff0c\u524d\u53f0\u5f00\u53d1\u8005\uff0cPHP\u5f00\u53d1\u8005\uff0cRuby\u5f00\u53d1\u8005\uff0cAngular\u5f00\u53d1\u8005\u2026\u591a\u5f97\u8ba9\u4eba\u4fa7\u76ee\u3002 \u5f88\u5feb\u4ed6\u4eec\u5c31\u90fd\u5fd8\u5374\u4e86\u4ed6\u4eec\u90fd\u662f\u8d77\u6e90\u4e8e\u7a0b\u5e8f\u5458\u8fd9\u4e2a\u5171\u540c\u7684\u7956\u5148\u7684\u4e8b\u5b9e\uff0c\u5fd8\u5374\u4e86\u66fe\u7ecf\u6709\u8fc7\u8fd9\u4e48\u4e00\u4e2a\u5355\u7eaf\u4e14\u5e73\u9759\u7684\uff0c\u60f3\u8981\u8ba9\u8fd9\u4e2a\u4e16\u754c\u53d8\u5f97\u66f4\u597d\u7684\u79d1\u5b66\u5bb6\u3002\u7136\u540e\u4ed6\u4eec\u5f00\u59cb\u4e0d\u65ad\u7684\u5251\u62d4\u5f29\u5f20\uff0c\u90fd\u58f0\u79f0\u81ea\u5df1\u624d\u662f\u201c\u7a0b\u5e8f\u5458\u201d\u7684\u7eaf\u8840\u7edf\u7ee7\u627f\u4eba\u3002 \u968f\u7740\u65f6\u95f4\u7684\u8f6c\u79fb\uff0c\u5404\u95e8\u5404\u6d3e\u5f00\u59cb\u72ec\u5360\u5c71\u5934\uff0c\u5f88\u5c11\u8fdb\u884c\u4ea4\u6d41\u4e92\u52a8\uff0c\u53ea\u6709\u5728\u8feb\u4e0d\u5f97\u5df2\u7684\u65f6\u523b\u624d\u4f1a\u8fdb\u884c\u6c9f\u901a\u3002\u4ed6\u4eec\u5f00\u59cb\u4e0d\u518d\u4e3a\u540c\u6e90\u7684\u9065\u8fdc\u7684\u540c\u5b97\u5144\u5f1f\u4eec\u7684\u6210\u529f\u800c\u6b22\u547c\u96c0\u8dc3\uff0c\u751a\u81f3\u518d\u4e5f\u4e0d\u4f1a\u65f6\u628a\u7684\u9065\u5bc4\u5f20\u660e\u4fe1\u7247\u8fdb\u884c\u5618\u5bd2\u95ee\u6696\u3002 \u4f46\u662f\u5728\u6df1\u591c\u4ef0\u671b\u661f\u7a7a\u7684\u65f6\u5019\uff0c\u4ed6\u4eec\u8fd8\u662f\u4f1a\u53d1\u73b0\u4ed6\u4eec\u7684\u5fc3\u5e95\u6df1\u5904\u7684\u7a0b\u5e8f\u5458\u57fa\u56e0\u8fd8\u662f\u4f1a\u4e0d\u505c\u7684\u95ea\u70c1\u7740\uff0c\u671f\u76fc\u7740\u8fd9\u95ea\u70c1\u7684\u706b\u82b1\u80fd\u7167\u4eae\u6574\u4e2a\u94f6\u6cb3\u7cfb\u5e76\u5e26\u6765\u548c\u5e73\u3002 \u5728\u8fd9\u573a\u81ea\u79c1\u4e14\u4ee5\u81ea\u6211\u4e3a\u4e2d\u5fc3\u7684\u6b32\u5f81\u670d\u4e16\u754c\u7684\u8d5b\u8dd1\u65c5\u7a0b\u91cc\uff0c\u7a0b\u5e8f\u5458\u7684\u5b50\u5b59\u4eec\u65e9\u628a\u4ed6\u4eec\u771f\u6b63\u7684\u5de5\u4f5c\u76ee\u6807\u7f6e\u4e4b\u8111\u540e-\u4e3a\u5ba2\u6237\u89e3\u51b3\u95ee\u9898\u3002\u9762\u5bf9\u4e00\u62d6\u518d\u62d6\u7684\u9879\u76ee\u4ea4\u4ed8\u65e5\u671f\uff0c\u6602\u8d35\u7684\u5f00\u53d1\u4ee3\u4ef7\uff0c\u751a\u81f3\u6700\u7ec8\u5931\u8d25\u7684\u9879\u76ee\uff0c\u5ba2\u6237\u4eec\u5f00\u59cb\u5bf9\u8fd9\u79cd\u60c5\u51b5\u6df1\u6076\u75db\u7edd\u3002 \u5076\u5c14\uff0c\u4e5f\u4f1a\u6709\u4e00\u4e2a\u95ea\u4eae\u7684\u660e\u661f\u7ad9\u51fa\u6765\uff0c\u7075\u673a\u4e00\u52a8\u7684\u63d0\u4f9b\u4e00\u79cd\u529e\u6cd5\u6765\u5c1d\u8bd5\u7ed3\u675f\u8fd9\u79cd\u6df7\u4e71\u5e76\u5e26\u6765\u548c\u5e73\u3002\u6240\u4ee5\u7011\u5e03\u5f00\u53d1\u6d41\u7a0b\u5c31\u5e94\u8fd0\u800c\u751f\u4e86\u3002\u8fd9\u662f\u4e00\u4e2a\u975e\u5e38\u4e86\u4e0d\u8d77\u7684\u521b\u610f\uff0c\u56e0\u4e3a\u5b83\u5229\u7528\u4e86\u4e0d\u540c\u56e2\u961f\u7684\u5f00\u53d1\u8005\u4eec\u53ea\u5728\u5fc5\u987b\u7684\u65f6\u5019\u624d\u8fdb\u884c\u6c9f\u901a\u7684\u8fd9\u4e2a\u4e8b\u5b9e\u3002\u5f53\u4e00\u4e2a\u56e2\u961f\u5b8c\u6210\u4e86\u4ed6\u4eec\u7684\u5de5\u4f5c\u7684\u65f6\u5019\uff0c\u5b83\u5c31\u4f1a\u548c\u4e0b\u6e38\u7684\u56e2\u961f\u8fdb\u884c\u4ea4\u6d41\u5e76\u628a\u4efb\u52a1\u8fdb\u884c\u5f80\u4e0b\u4f20\uff0c\u5982\u6b64\u4e00\u7ea7\u63a5\u4e00\u7ea7\u7684\u4f20\u9012\u4e0b\u53bb\uff0c\u6c38\u4e0d\u56de\u9996\u3002 \u8fd9\u79cd\u65b9\u5f0f\u5728\u4e00\u6bb5\u65f6\u95f4\u5185\u53d1\u6325\u4e86\u6548\u7528\uff0c\u4f46\u5f88\u5feb\uff0c\u4e00\u5982\u65e2\u5f80\uff0c\u8d2a\u5a6a\u7684\u4eba\u4eec(\u5ba2\u6237)\u53c8\u5f00\u59cb\u63d0\u51fa\u66f4\u591a\u7684\u8bc9\u6c42\u3002\u4ed6\u4eec\u5e0c\u671b\u80fd\u591f\u66f4\u591a\u5730\u53c2\u52a0\u5230\u6574\u4e2a\u8f6f\u4ef6\u7684\u5f00\u53d1\u6d41\u7a0b\u4e2d\u6765\uff0c\u4e0d\u65f6\u7684\u63d0\u51fa\u4ed6\u4eec\u7684\u5efa\u8bae\uff0c\u751a\u81f3\u5728\u5f88\u665a\u7684\u65f6\u5019\u8fd8\u63d0\u51fa\u6539\u9700\u6c42\u8fd9\u79cd\u4e27\u5fc3\u75c5\u72c2\u7684\u4e8b\u60c5\u6765\u3002 \u7ed3\u679c\u5c31\u662f\u5982\u5927\u5bb6\u6709\u76ee\u5171\u7779\u7684\u4e8b\u5b9e\u4e00\u6837\uff0c\u8f6f\u4ef6\u9879\u76ee\u975e\u5e38\u5bb9\u6613\u5931\u8d25\u8fd9\u4e2a\u8bf4\u6cd5\u5df2\u7ecf\u4f5c\u4e3a\u4e00\u4e2a\u884c\u4e1a\u6807\u51c6\u88ab\u4eba\u4eec\u6240\u63a5\u53d7\u3002\u6570\u636e\u8868\u660e\u8d85\u8fc750%\u7684\u9879\u76ee\u6700\u7ec8\u90fd\u662f\u4ee5\u5931\u8d25\u544a\u7ec8\u7684\u3002\u66f4\u53ef\u60b2\u7684\u662f\uff0c\u5728\u5f53\u65f6\u770b\u6765\uff0c\u4eba\u4eec\u5bf9\u8fd9\u79cd\u60c5\u51b5\u662f\u675f\u624b\u65e0\u7b56\u3002 \u503c\u5f97\u5e86\u5e78\u7684\u662f\uff0c\u6bcf\u4e00\u4e2a\u65f6\u4ee3\u603b\u4f1a\u6709\u90a3\u4e48\u51e0\u4e2a\u601d\u60f3\u5f00\u653e\u7684\u82f1\u96c4\u5982\u6f06\u9ed1\u4e2d\u7684\u8424\u706b\u866b\u822c\u5192\u51fa\u6765\u3002\u4ed6\u4eec\u77e5\u9053\u8fd9\u4e9b\u4e0d\u540c\u56e2\u961f\u7684\u5f00\u53d1\u8005\u4eec\u5fc5\u987b\u8981\u627e\u5230\u4e00\u4e2a\u53ef\u4ee5\u534f\u540c\u5de5\u4f5c\u3001\u8fdb\u884c\u4ea4\u6d41\u3001\u5e76\u4e14\u80fd\u591f\u5f39\u6027\u7684\u5411\u5ba2\u6237\u4fdd\u8bc1\u5bf9\u65b9\u5c06\u4f1a\u62ff\u5230\u6700\u4f18\u7684\u89e3\u51b3\u65b9\u6848\u7684\u65b9\u5f0f\u3002\u8fd9\u79cd\u5c1d\u8bd5\u6700\u65e9\u53ef\u4ee5\u8ffd\u6eaf\u52301957\u5e74\uff0c\u4f1f\u5927\u7684\u7ea6\u7ff0\u00b7\u51af\u00b7\u8bfa\u4f9d\u66fc\u548c\u540c\u884c\u4eec\u7684\u52aa\u529b\u3002\u4f46\u662f\u6211\u4eec\u6700\u7ec8\u5374\u662f\u7b49\u52302001\u5e74\u624d\u6536\u83b7\u5230\u9769\u547d\u7684\u679c\u5b9e\uff0c\u5f53\u65f6\u884c\u4e1a\u7684\u5341\u591a\u4e2a\u7cbe\u82f1\u521b\u9020\u51fa\u4e86\u5982\u4eca\u95fb\u540d\u4e16\u754c\u7684\u201c\u654f\u6377\u5ba3\u8a00\u201d\u3002","title":"\u5982\u7f16\u7a0b\u4e4b\u9053\u4e2d\u6240\u8a00\uff1a"},{"location":"exp/devops/#_3","text":"\u6211\u4eec\u7684\u9996\u8981\u4efb\u52a1\u662f\u901a\u8fc7\u5c3d\u65e9\u5730\u3001\u6301\u7eed\u5730\u4ea4\u4ed8\u53ef\u8bc4\u4ef7\u7684\u8f6f\u4ef6\u6765\u4f7f\u5ba2\u6237\u6ee1\u610f\u3002 \u4e50\u4e8e\u63a5\u53d7\u9700\u6c42\u53d8\u66f4\uff0c\u5373\u4f7f\u662f\u5728\u5f00\u53d1\u540e\u671f\u4e5f\u5e94\u5982\u6b64\u3002\u654f\u6377\u8fc7\u7a0b\u80fd\u591f\u9a7e\u9a6d\u53d8\u5316\uff0c\u4ece\u800c\u4e3a\u5ba2\u6237\u8d62\u5f97\u7ade\u4e89\u4f18\u52bf\u3002 \u9891\u7e41\u4ea4\u4ed8\u53ef\u4f7f\u7528\u7684\u8f6f\u4ef6\uff0c\u4ea4\u4ed8\u95f4\u9694\u8d8a\u77ed\u8d8a\u597d\uff0c\u53ef\u4ee5\u4ece\u51e0\u4e2a\u661f\u671f\u5230\u51e0\u4e2a\u6708\u3002 \u5728\u6574\u4e2a\u9879\u76ee\u5f00\u53d1\u671f\u95f4\uff0c\u4e1a\u52a1\u4eba\u5458\u548c\u5f00\u53d1\u4eba\u5458\u5fc5\u987b\u671d\u5915\u5de5\u4f5c\u5728\u4e00\u8d77\u3002 \u56f4\u7ed5\u90a3\u4e9b\u6709\u63a8\u52a8\u529b\u7684\u4eba\u4eec\u6765\u6784\u5efa\u9879\u76ee\u3002\u7ed9\u4e88\u4ed6\u4eec\u6240\u9700\u7684\u73af\u5883\u548c\u652f\u6301\uff0c\u5e76\u4e14\u4fe1\u4efb\u4ed6\u4eec\u80fd\u591f\u628a\u5de5\u4f5c\u5b8c\u6210\u597d\u3002 \u4e0e\u5f00\u53d1\u56e2\u961f\u4ee5\u53ca\u5728\u5f00\u53d1\u56e2\u961f\u5185\u90e8\u6700\u5feb\u901f\u3001\u6709\u6548\u7684\u4f20\u9012\u4fe1\u606f\u7684\u65b9\u6cd5\u5c31\u662f\uff0c\u9762\u5bf9\u9762\u7684\u4ea4\u8c08\u3002 \u53ef\u4f7f\u7528\u7684\u8f6f\u4ef6\u662f\u8fdb\u5ea6\u7684\u4e3b\u8981\u8861\u91cf\u6307\u6807\u3002 \u654f\u6377\u8fc7\u7a0b\u63d0\u5021\u53ef\u6301\u7eed\u53d1\u5c55\u3002\u51fa\u8d44\u4eba\u3001\u5f00\u53d1\u4eba\u5458\u4ee5\u53ca\u4f7f\u7528\u8005\u5e94\u8be5\u603b\u662f\u5171\u540c\u7ef4\u6301\u7a33\u5b9a\u7684\u5f00\u53d1\u901f\u5ea6\u3002 \u4e3a\u4e86\u589e\u5f3a\u654f\u6377\u80fd\u529b\uff0c\u5e94\u6301\u7eed\u5173\u6ce8\u6280\u672f\u4e0a\u7684\u6770\u51fa\u6210\u679c\u548c\u826f\u597d\u7684\u8bbe\u8ba1\u3002 \u7b80\u6d01\u2014\u2014\u6700\u5927\u5316\u4e0d\u5fc5\u8981\u5de5\u4f5c\u91cf\u7684\u827a\u672f\u2014\u2014\u662f\u81f3\u5173\u91cd\u8981\u7684\u3002 \u6700\u597d\u7684\u67b6\u6784\u3001\u9700\u6c42\u548c\u8bbe\u8ba1\u90fd\u6e90\u81ea\u81ea\u6211\u7ec4\u7ec7\u7684\u56e2\u961f\u3002 \u56e2\u961f\u5e94\u8be5\u5b9a\u671f\u53cd\u601d\u5982\u4f55\u80fd\u53d8\u5f97\u66f4\u6709\u6218\u6597\u529b\uff0c\u7136\u540e\u76f8\u5e94\u5730\u8f6c\u53d8\u5e76\u8c03\u6574\u5176\u884c\u4e3a\u3002 \u654f\u6377\u5ba3\u8a00\u662f\u4e3a\u94f6\u6cb3\u7cfb\u5e26\u6765\u548c\u5e73\u4ee5\u53ca\u7ef4\u62a4\u5404\u81ea\u7684\u5e73\u8861\u6240\u8fc8\u51fa\u7684\u5f88\u91cd\u8981\u7684\u7b2c\u4e00\u6b65\u3002\u5728\u5f88\u957f\u7684\u65f6\u95f4\u91cc\uff0c\u76f8\u6bd4\u6b64\u524d\u57fa\u4e8e\u6d41\u7a0b\u548c\u673a\u68b0\u5316\u7684\u65b9\u5f0f\uff0c\u8fd9\u662f\u7b2c\u4e00\u6b21\u57fa\u4e8e\u6587\u5316\u548c\u201c\u4eba\u6027\u201d\u6765\u5c06\u4e0d\u540c\u7684\u5173\u952e\u9879\u76ee\u5173\u7cfb\u4eba\u8fde\u63a5\u5728\u4e00\u8d77\u7684\u65b9\u5f0f\u3002\u4eba\u4eec\u5f00\u59cb\u4e92\u76f8\u4ea4\u6d41\uff0c\u8fdb\u884c\u57fa\u672c\u7684\u78b0\u5934\u4f1a\u8bae\uff0c\u5e76\u5f00\u59cb\u4e0d\u65ad\u7684\u4ea4\u6d41\u610f\u89c1\u548c\u770b\u6cd5\u3002\u4ed6\u4eec\u5f00\u59cb\u610f\u8bc6\u5230\u4ed6\u4eec\u662f\u6709\u7740\u5f88\u591a\u6bd4\u60f3\u8c61\u4e2d\u8fd8\u591a\u7684\u5171\u540c\u70b9\u7684\uff0c\u5ba2\u6237\u4e5f\u5f00\u59cb\u6210\u4e3a\u4ed6\u4eec\u4e4b\u4e2d\u7684\u4e00\u5458\uff0c\u800c\u4e0d\u518d\u662f\u50cf\u4ee5\u5f80\u4e00\u6837\u53ea\u662f\u5f80\u9879\u76ee\u7838\u94b1\u7136\u540e\u5f00\u59cb\u6c42\u795e\u62dc\u4f5b\u7948\u6c42\u4e00\u5207\u987a\u5229\u5982\u613f\u3002 \u5c3d\u7ba1\u524d\u9762\u8fd8\u662f\u6709\u4e0d\u5c11\u7684\u969c\u788d\u9700\u8981\u514b\u670d\uff0c\u4f46\u662f\u672a\u6765\u5df2\u7ecf\u5149\u660e\u4e86\u8bb8\u591a\u3002\u654f\u6377\u610f\u5473\u7740\u5f00\u653e\u548c\u62e5\u62b1(\u9700\u6c42)\u6539\u53d8\u3002\u4f46\u662f\uff0c\u5982\u679c\u6539\u53d8\u8fc7\u591a\u7684\u8bdd\uff0c\u4eba\u4eec\u5c31\u5f88\u96be\u4e13\u6ce8\u5230\u6700\u7ec8\u7684\u76ee\u6807\u548c\u4ea4\u4ed8\u4e0a\u6765\u3002\u6b64\u65f6\u7cbe\u76ca\u8f6f\u4ef6\u5f00\u53d1\u5c31\u5f00\u59cb\u7834\u571f\u800c\u51fa\u4e86\u3002 \u56e0\u4e3a\u5bf9\u7cbe\u76ca\u8f6f\u4ef6\u5f00\u53d1\u7684\u7740\u8ff7\u4ee5\u53ca\u4e3a\u4e86\u8fbe\u6210\u653e\u9010\u548c\u9a71\u8d76\u98ce\u9669\u7684\u76ee\u7684\uff0c\u4e00\u4e9b\u7a0b\u5e8f\u5458\u7684\u5b50\u5b59\u4eec\u5c31\u5f00\u59cb\u63a2\u9996\u7a97\u5916\uff0c\u5f00\u59cb\u5411\u8f6f\u4ef6\u4e4b\u5916\u7684\u884c\u4e1a\u8fdb\u884c\u53d6\u7ecf\u3002\u4ed6\u4eec\u4ece\u4e00\u5bb6\u4e3b\u8981\u7684\u6c7d\u8f66\u751f\u4ea7\u5546\u8eab\u4e0a\u627e\u5230\u4e86\u6551\u8d4e\u3002\u4e30\u7530\u751f\u4ea7\u7cfb\u7edf\u5728\u7cbe\u76ca\u4e0a\u9762\u7684\u6210\u5c31\u662f\u4e0d\u53ef\u601d\u8bae\u7684\uff0c\u540c\u65f6\u5b83\u4eec\u7684\u7cbe\u76ca\u751f\u4ea7\u7684\u7ecf\u9a8c\u4e5f\u662f\u5f88\u5bb9\u6613\u5e94\u7528\u5230\u8f6f\u4ef6\u5f00\u53d1\u4e0a\u6765\u7684\u3002","title":"\u654f\u6377\u5ba3\u8a00\u57fa\u4e8e\u4ee5\u4e0b\u5341\u4e8c\u6761\u539f\u5219\uff1a"},{"location":"exp/devops/#7","text":"\u675c\u7edd\u6d6a\u8d39 \u5185\u5efa\u8d28\u91cf \u521b\u5efa\u77e5\u8bc6(\u653e\u5927\u5b66\u4e60) \u5ef6\u8fdf\u51b3\u7b56(\u5c3d\u91cf\u5ef6\u8fdf\u51b3\u5b9a) \u5feb\u901f\u4ea4\u4ed8 \u5c0a\u91cd\u4eba\u5458(\u56e2\u961f\u6388\u6743) \u5168\u5c40\u4f18\u5316 \u5c06\u8fd9\u4e9b\u653e\u5230\u654f\u6377\u4e0a\u53bb\u7684\u8bdd\uff0c\u7cbe\u76ca\u539f\u5219\u5c31\u80fd\u8ba9\u4eba\u4eec\u5728\u4ece\u7cbe\u795e\u4e0a\u5173\u6ce8\u505a\u6b63\u786e\u7684\u4e8b\u60c5\uff0c\u540c\u65f6\u8fd8\u80fd\u591f\u8ba9\u6574\u4e2a\u5f00\u53d1\u6d41\u7a0b\u62e5\u6709\u8db3\u591f\u7684\u5f39\u6027\u3002 \u4e00\u65e6\u654f\u6377\u548c\u7cbe\u76ca\u8f6f\u4ef6\u5f00\u53d1\u88ab\u8f6f\u4ef6\u5f00\u53d1\u56e2\u961f\u91c7\u7eb3\uff0c\u90a3\u4e48\u4e0b\u4e00\u6b65\u5c31\u662f\u628a\u8fd9\u4e00\u5957\u539f\u5219\u5e94\u7528\u5230IT\u56e2\u961f\u4e0a\u6765\u3002\u628aIT\u4e5f\u7eb3\u5165\u5230\u6574\u4f53\u6218\u7565\u4e0a\uff0c\u7136\u540e\u6211\u4eec\u5c31\u6765\u5230\u4e86DevOps\u8ddf\u524d\u4e86\uff01","title":"\u7cbe\u76ca\u6709\u4ee5\u4e0b7\u4e2a\u539f\u5219\uff1a"},{"location":"exp/devops/#devops_1","text":"\u8001\u4e00\u6d3e\u7684\u8f6f\u4ef6\u5f00\u53d1\u56e2\u961f\u6210\u5458\u4f1a\u5305\u542b\u4e1a\u52a1\u5206\u6790\u5458\uff0c\u7cfb\u7edf\u67b6\u6784\u5e08\uff0c\u524d\u7aef\u5f00\u53d1\u8005\uff0c\u540e\u7aef\u5f00\u53d1\u8005\uff0c\u6d4b\u8bd5\u5458\uff0c\u7b49\u7b49\u3002\u4f18\u5316\u5982\u654f\u6377\u548c\u7cbe\u76ca\u539f\u5219\u7b49\u7684\u8f6f\u4ef6\u5f00\u53d1\u6d41\u7a0b\u7684\u5173\u6ce8\u70b9\u5c31\u5728\u8fd9\u4e9b\u5730\u65b9\u3002\u6bd4\u5982\uff0c\u8f6f\u4ef6\u4e00\u65e6\u8fbe\u5230\u201d\u53ef\u4ee5\u751f\u4ea7\u201c\u7684\u7a0b\u5ea6\uff0c\u5c31\u4f1a\u53d1\u5230\u7cfb\u7edf\u5de5\u7a0b\u5e08\u3001\u53d1\u5e03\u5de5\u7a0b\u5e08\u3001DBA\u3001\u7f51\u7edc\u5de5\u7a0b\u5e08\uff0c\u5b89\u5168\u4e13\u5bb6\u8fd9\u4e9b\u201c\u8fd0\u7ef4\u4eba\u5458\u201d\u7684\u624b\u4e0a\u3002\u8fd9\u91cc\u8be5\u5982\u4f55\u5c06\u6a2a\u5728Dev(\u5f00\u53d1)\u548cOps(\u8fd0\u7ef4)\u4e4b\u95f4\u7684\u9e3f\u6c9f\u7ed9\u586b\u5e73\uff0c\u8fd9\u5c31\u662fDevOps\u7684\u4e3b\u8981\u5173\u6ce8\u70b9\u4e86\u3002 DevOps\u662f\u5728\u6574\u4e2aIT\u4ef7\u503c\u6d41\u4e2d\u5b9e\u65bd\u7cbe\u76ca\u539f\u5219\u7684\u7ed3\u679c\u3002IT\u4ef7\u503c\u6d41\u5c06\u5f00\u53d1\u5ef6\u4f38\u81f3\u751f\u4ea7\uff0c\u5c06\u7531\u7a0b\u5e8f\u5458\u8fd9\u4e2a\u9065\u8fdc\u7684\u7956\u5b97\u6240\u7e41\u884d\u7684\u6240\u6709\u5b50\u5b59\u7ed9\u8054\u5408\u5728\u4e00\u8d77\u3002 \u8fd9\u662f\u6765\u81eaGene Kim\u7684\u5bf9DevOps\u7684\u6700\u597d\u7684\u89e3\u6790\uff0c\u5982\u679c\u4f60\u8fd8\u6ca1\u6709\u770b\u8fc7\u4ed6\u7684\u300a\u51e4\u51f0\u9879\u76ee\u300b\u8fd9\u672c\u4e66\u7684\u8bdd\uff0c\u6211\u5efa\u8bae\u4f60\u771f\u7684\u8be5\u597d\u597d\u82b1\u65f6\u95f4\u770b\u770b\u3002 \u4f60\u4e0d\u5e94\u8be5\u91cd\u65b0\u62db\u8058DevOps\u5de5\u7a0b\u5e08\uff0c\u4e14DevOps\u4e5f\u4e0d\u5e94\u8be5\u662f\u4e00\u4e2aIT\u7684\u65b0\u90e8\u95e8\u3002DevOps\u662f\u4e00\u79cd\u6587\u5316\uff0c\u4e00\u79cd\u7406\u5ff5\uff0c\u4e14\u662f\u548cIT\u7cc5\u5408\u6210\u4e00\u6574\u4f53\u7684\u3002\u4e16\u95f4\u6ca1\u6709\u4efb\u4f55\u5de5\u5177\u53ef\u4ee5\u628a\u4f60\u7684IT\u53d8\u6210\u4e00\u4e2aDevOps\u7ec4\u7ec7\uff0c\u4e5f\u6ca1\u6709\u4efb\u4f55\u81ea\u52a8\u5316\u65b9\u5f0f\u53ef\u4ee5\u6307\u5f15\u4f60\u8be5\u5982\u4f55\u4e3a\u4f60\u7684\u5ba2\u6237\u63d0\u4f9b\u6700\u5927\u5316\u7684\u6548\u76ca\u3002 DevOps\u901a\u5e38\u4f5c\u4e3a\u4e0b\u9762\u8fd9\u4e09\u4e2a\u65b9\u5f0f\u800c\u4e3a\u4eba\u6240\u719f\u77e5\uff0c\u800c\u5728\u6211\u773c\u91cc\u6211\u662f\u628a\u5b83\u4eec\u770b\u6210\u662f\u4e00\u6761\u9ad8\u901f\u516c\u8def\u4e0a\u7684\u4e09\u6761\u8f66\u9053\u3002\u4f60\u4ece\u7b2c\u4e00\u6761\u8f66\u9053\u5f00\u59cb\uff0c\u7136\u540e\u52a0\u901f\u8fdb\u5165\u5230\u7b2c\u4e8c\u6761\u8f66\u9053\uff0c\u6700\u7ec8\u5728\u7b2c\u4e09\u8f66\u9053\u4e0a\u9ad8\u901f\u884c\u9a76\u3002 \u8f66\u90531 \u2013 \u7cfb\u7edf\u7ea7\u522b\u7684\u6574\u4f53\u6548\u7387\u8003\u91cf\u662f\u6700\u4e3b\u8981\u7684\u5173\u6ce8\u70b9\uff0c\u8fd9\u8d85\u8fc7\u5bf9\u7cfb\u7edf\u4e2d\u4efb\u4f55\u4e00\u4e2a\u5355\u72ec\u4e2a\u4f53\u5143\u7d20\u7684\u8003\u8651 \u8f66\u90532 \u2013 \u786e\u4fdd\u80fd\u63d0\u4f9b\u6301\u7eed\u4e0d\u65ad\u7684\u53cd\u9988\u5faa\u73af\uff0c\u4e14\u8fd9\u4e9b\u53cd\u9988\u4e0d\u88ab\u5ffd\u89c6\u3002 \u8f66\u90533 \u2013 \u6301\u7eed\u7684\u5b66\u4e60\u548c\u5438\u53d6\u7ecf\u9a8c\uff0c\u4e0d\u505c\u7684\u8fdb\u6b65\uff0c\u5feb\u901f\u7684\u5931\u8d25\u3002","title":"\u8fdb\u5165DevOps \u2013 \u9ad8\u901f\u516c\u8def\u7684\u4e09\u6761\u8f66\u9053"},{"location":"exp/devops/#1","text":"\u8981\u91c7\u7eb3DevOps\u7684\u539f\u5219\uff0c\u7406\u89e3\u6574\u4e2a\u8fd0\u4f5c\u7cfb\u7edf\u7684\u91cd\u8981\u6027\u5e76\u5bf9\u5de5\u4f5c\u4e8b\u9879\u8fdb\u884c\u5408\u9002\u7684\u4f18\u5148\u7ea7\u6392\u5e8f\u662f\u7ec4\u7ec7\u9996\u5148\u8981\u5b66\u7684\u4e8b\u60c5\u3002\u5728\u6574\u4e2a\u4ef7\u503c\u6d41\u4e2d\u4e0d\u80fd\u5141\u8bb8\u4efb\u4f55\u4eba\u4ea7\u751f\u74f6\u9888\u5e76\u964d\u4f4e\u6574\u4e2a\u5de5\u4f5c\u6d41\u7a0b\u3002 \u786e\u4fdd\u5de5\u4f5c\u6d41\u7a0b\u7684\u4e0d\u53ef\u4e2d\u65ad\u662f\u8eab\u5904\u6d41\u7a0b\u4e2d\u7684\u6240\u6709\u6210\u5458\u7684\u7ec8\u6781\u76ee\u6807\u3002\u65e0\u8bba\u4e00\u4e2a\u6210\u5458\u6216\u8005\u56e2\u961f\u7684\u89d2\u8272\u662f\u4ec0\u4e48\uff0c\u4ed6\u4eec\u90fd\u5fc5\u987b\u529b\u56fe\u5bf9\u6574\u4e2a\u7cfb\u7edf\u8fdb\u884c\u6df1\u5165\u7684\u7406\u89e3\u3002\u8fd9\u79cd\u601d\u7ef4\u65b9\u5f0f\u5bf9\u8d28\u91cf\u4f1a\u6709\u7740\u76f4\u63a5\u7684\u5f71\u54cd\uff0c\u56e0\u4e3a\u7f3a\u9677\u6c38\u8fdc\u4e0d\u4f1a\u88ab\u4e0b\u653e\u5230\u201c\u4e0b\u6e38\u201c\u4e2d\uff0c\u8fd9\u6837\u505a\u7684\u8bdd\u5c06\u4f1a\u5bfc\u81f4\u74f6\u9888\u7684\u4ea7\u751f\u3002 \u786e\u4fdd\u6574\u4e2a\u5de5\u4f5c\u6d41\u7a0b\u4e0d\u4f1a\u88ab\u74f6\u9888\u5835\u585e\u4f4f\u8fd8\u4e0d\u591f\u3002\u4e00\u4e2a\u9ad8\u4ea7\u7684\u7ec4\u7ec7\u5e94\u8be5\u65f6\u5e38\u8003\u8651\u8be5\u5982\u4f55\u63d0\u5347\u6574\u4e2a\u5de5\u4f5c\u6d41\u7a0b\u3002\u6709\u5f88\u591a\u65b9\u6cd5\u8bba\u53ef\u4ee5\u505a\u5230\u8fd9\u4e00\u70b9\uff0c\u4f60\u4e0d\u59a8\u53bb\u770b\u4e0b\u201c\u7ea6\u675f\u7406\u8bba\u201d\uff0c\u201c\u516d\u897f\u683c\u739b\u201d\uff0c\u7cbe\u76ca\uff0c\u6216\u8005\u4e30\u7530\u751f\u4ea7\u7cfb\u7edf\u3002 DevOps\u539f\u5219\u4e0d\u5173\u5fc3\u4f60\u8eab\u5904\u54ea\u4e2a\u56e2\u961f\uff0c\u4f60\u662f\u5426\u662f\u7cfb\u7edf\u67b6\u6784\u5e08\uff0cDBA\uff0cQA\uff0c\u6216\u8005\u662f\u7f51\u7edc\u7ba1\u7406\u5458\u3002\u76f8\u540c\u7684\u89c4\u5219\u8986\u76d6\u6240\u6709\u7684\u6210\u5458\uff0c\u6bcf\u4e2a\u6210\u5458\u90fd\u5e94\u8be5\u9075\u5faa\u4e24\u4e2a\u7b80\u5355\u7684\u539f\u5219\uff1a \u4fdd\u6301\u7cfb\u7edf\u8fd0\u4f5c\u6d41\u7a0b\u4e0d\u53ef\u4e2d\u65ad \u968f\u65f6\u63d0\u5347\u548c\u4f18\u5316\u5de5\u4f5c\u6d41\u7a0b","title":"\u8f66\u90531 \u2013 \u83b7\u53d6\u901f\u5ea6"},{"location":"exp/devops/#2","text":"\u4e0d\u53ef\u4e2d\u65ad\u7684\u7cfb\u7edf\u6d41\u7a0b\u662f\u5b9a\u5411\u7684\uff0c\u4e14\u9884\u671f\u662f\u4ece\u5f00\u53d1\u6d41\u5411\u8fd0\u7ef4\u3002\u5728\u4e00\u4e2a\u7406\u60f3\u7684\u4e16\u754c\u4e2d\uff0c\u8fd9\u5c31\u610f\u5473\u7740\u5feb\u901f\u7684\u5f00\u53d1\u51fa\u9ad8\u8d28\u91cf\u7684\u8f6f\u4ef6\uff0c\u90e8\u7f72\uff0c\u5e76\u4e3a\u5ba2\u6237\u63d0\u4f9b\u4ef7\u503c\u3002 \u4f46\u662f\uff0cDevOps\u5e76\u975e\u4e4c\u6258\u90a6\u5f0f\u7684\u7406\u60f3\u56fd\u3002\u5982\u679c\u5355\u5411\u7684\u4ea4\u4ed8\u65b9\u5f0f\u662f\u53ef\u884c\u7684\u8bdd\uff0c\u6211\u4eec\u7684\u7011\u5e03\u6a21\u5f0f\u65e9\u5c31\u80fd\u80dc\u4efb\u4e86\u3002\u8bc4\u4f30\u53ef\u4ea4\u4ed8\u4ea7\u54c1\u548c\u6574\u4e2a\u6d41\u7a0b\u4e2d\u7684\u4ea4\u6d41\u5bf9\u786e\u4fdd\u8d28\u91cf\u662f\u81f3\u5173\u91cd\u8981\u7684\u3002\u8fd9\u91cc\u9996\u4e2a\u5fc5\u987b\u5b9e\u73b0\u7684\u201d\u9762\u5411\u4e0a\u6e38\u201d\u7684\u4ea4\u6d41\u901a\u9053\u662f\u4eceOps\u5230Dev\u3002 \u6211\u4eec\u72ec\u81ea\u610f\u6deb\u662f\u4ef6\u975e\u5e38\u5bb9\u6613\u7684\u4e8b\u60c5\uff0c\u4f46\u662f\u83b7\u53d6\u522b\u4eba\u7684\u53cd\u9988\u548c\u63d0\u4f9b\u53cd\u9988\u7ed9\u522b\u4eba\u624d\u662f\u63a2\u7a76\u4e8b\u5b9e\u771f\u76f8\u7684\u6b63\u786e\u65b9\u6cd5\u3002\u4e0b\u6e38\u7684\u6bcf\u4e00\u6b65(\u53cd\u9988)\u90fd\u5fc5\u987b\u7d27\u8ddf\u7740\u6709\u4e00\u4e2a\u4e0a\u6e38\u7684\u786e\u5b9a\u3002 \u4f60\u5982\u4f55\u5efa\u7acb\u53cd\u9988\u5faa\u73af\u673a\u5236\u5e76\u4e0d\u91cd\u8981\u3002\u4f60\u53ef\u4ee5\u9080\u8bf7\u5f00\u53d1\u4eba\u5458\u52a0\u5165\u6280\u672f\u652f\u6301\u56e2\u961f\u7684\u4f1a\u8bae\uff0c\u6216\u8005\u5c06\u7f51\u7edc\u7ba1\u7406\u5458\u653e\u5230Sprint\u8ba1\u5212\u4f1a\u8bae\u4e2d\u53bb\u3002\u4e00\u65e6\u4f60\u7684\u53cd\u9988\u673a\u5236\u5c31\u7eea\uff0c\u53cd\u9988\u80fd\u591f\u88ab\u63a5\u6536\u5e76\u88ab\u5904\u7406\uff0c\u4f60\u5c31\u5df2\u7ecf\u53ef\u4ee5\u8bf4\u662f\u8d70\u5230\u4e86DevOps\u9ad8\u901f\u8f66\u9053\u4e0a\u6765\u4e86\u3002","title":"\u8f66\u90532 \u2013 \u6362\u6321\u52a0\u901f"},{"location":"exp/devops/#3","text":"DevOps\u8fd9\u6761\u5feb\u901f\u8f66\u9053\u5e76\u4e0d\u9002\u5408\u610f\u5fd7\u8106\u5f31\u7684\u4eba\u3002\u4e3a\u4e86\u8fdb\u5165\u8fd9\u6761\u8f66\u9053\uff0c\u4f60\u7684\u7ec4\u7ec7\u5fc5\u987b\u8981\u8db3\u591f\u7684\u6210\u719f\u3002\u8fd9\u91cc\u5145\u6ee1\u4e86\u5192\u9669\u548c\u5bf9\u5931\u8d25\u6559\u8bad\u7684\u5b66\u4e60\uff0c\u4e0d\u65ad\u7684\u5c1d\u8bd5\uff0c\u5e76\u8ba4\u540c\u5c61\u8d25\u5c61\u6218\u548c\u4e0d\u65ad\u7684\u5b9e\u8df5\u662f\u8d70\u5411\u6210\u529f\u8fd9\u6761\u5eb7\u5e84\u5927\u9053\u7684\u524d\u63d0\u6761\u4ef6\u3002\u5728\u8fd9\u91cc\u4f60\u5e94\u8be5\u4f1a\u7ecf\u5e38\u542c\u5230\u201d\u5957\u8def\u201c\u8fd9\u4e2a\u8bcd\uff0c\u8fd9\u662f\u6709\u539f\u56e0\u7684\u3002\u4e0d\u65ad\u7684\u8bad\u7ec3\u548c\u91cd\u590d\u6240\u4ee5\u80fd\u57f9\u517b\u51fa\u5927\u5e08\uff0c\u662f\u56e0\u4e3a\u5176\u8ba9\u590d\u6742\u7684\u52a8\u4f5c\u5e38\u89c4\u5316\u3002 \u4f46\u662f\u5728\u4f60\u8981\u5c06\u8fd9\u4e9b\u590d\u6742\u7684\u52a8\u4f5c\u8fde\u63a5\u8d77\u6765\u4e4b\u524d\uff0c\u4f60\u5f88\u6709\u5fc5\u8981\u5148\u53bb\u638c\u63e1\u597d\u6bcf\u4e00\u4e2a\u5355\u72ec\u6b65\u9aa4\u3002 \u201c\u9002\u5408\u5927\u5e08\u7684\u52a8\u4f5c\u5e76\u4e0d\u9002\u5408\u65b0\u624b\uff0c\u8131\u80ce\u6362\u9aa8\u4e4b\u524d\u4f60\u5fc5\u987b\u5148\u8981\u660e\u767d\u9053\u7684\u771f\u8c1b\u3002\u201c DevOps\u7684\u7b2c\u4e09\u4e2a\u65b9\u5f0f/\u5feb\u901f\u8f66\u9053\u5305\u62ec\u6bcf\u5929\u5206\u914d\u65f6\u95f4\u6765\u6301\u7eed\u7684\u8fdb\u884c\u8bd5\u9a8c\uff0c\u65f6\u5e38\u7684\u5956\u52b1\u6562\u4e8e\u5192\u9669\u7684\u56e2\u961f\uff0c\u5e76\u5c06\u7f3a\u9677\u7279\u610f\u5f15\u5165\u5230\u8fd0\u4f5c\u7cfb\u7edf\u4e0a\u6765\u4ee5\u589e\u52a0\u7cfb\u7edf\u7684\u6297\u51fb\u6253\u80fd\u529b\u3002 \u4e3a\u4e86\u786e\u4fdd\u4f60\u7684\u7ec4\u7ec7\u80fd\u591f\u6d88\u5316\u597d\u8fd9\u4e9b\u65b9\u6cd5\uff0c\u4f60\u5fc5\u987b\u5728\u6bcf\u4e2a\u56e2\u961f\u4e4b\u95f4\u5efa\u7acb\u597d\u9891\u7e41\u7684\u53cd\u9988\u5faa\u73af\uff0c\u540c\u65f6\u9700\u8981\u786e\u4fdd\u6240\u6709\u7684\u74f6\u9888\u90fd\u80fd\u591f\u53ca\u65f6\u7684\u88ab\u6e05\u7406\u6389\uff0c\u5e76\u786e\u4fdd\u6574\u4e2a\u7cfb\u7edf\u7684\u8fd0\u4f5c\u6d41\u7a0b\u662f\u4e0d\u53ef\u4e2d\u65ad\u7684\u3002 \u5b9e\u65bd\u597d\u8fd9\u4e9b\u63aa\u65bd\u53ef\u4ee5\u8ba9\u4f60\u7684\u7ec4\u7ec7\u65f6\u523b\u4fdd\u6301\u8b66\u60d5\uff0c\u5e76\u80fd\u591f\u5feb\u901f\u4e14\u9ad8\u6548\u7684\u5e94\u5bf9\u6311\u6218\u3002","title":"\u8f66\u90533 \u2013 \u98de\u901f\u524d\u8fdb"},{"location":"exp/devops/#devops_2","text":"\u4e0b\u9762\u662f\u4e00\u5f20\u4f60\u53ef\u4ee5\u7528\u6765\u68c0\u9a8c\u4f60\u7684\u7ec4\u7ec7\u5bf9DevOps\u7684\u5e94\u7528\u60c5\u51b5\u7684\u6e05\u5355\u3002\u5f53\u7136\u4f60\u4e5f\u53ef\u4ee5\u5728\u6587\u7ae0\u8bc4\u8bba\u540e\u9762\u7ed9\u51fa\u4f60\u7684\u89c2\u70b9\u3002 \u5f00\u53d1\u56e2\u961f\u548c\u8fd0\u7ef4\u56e2\u961f\u4e4b\u95f4\u6ca1\u6709\u969c\u788d\u3002\u4e24\u8005\u7686\u662fDevOps\u7edf\u4e00\u6d41\u7a0b\u7684\u4e00\u90e8\u5206\u3002 \u4ece\u4e00\u4e2a\u56e2\u961f\u6d41\u5230\u53e6\u4e00\u4e2a\u56e2\u961f\u7684\u5de5\u4f5c\u90fd\u80fd\u591f\u5f97\u5230\u9ad8\u8d28\u91cf\u7684\u9a8c\u8bc1 \u5de5\u4f5c\u6ca1\u6709\u5806\u79ef\uff0c\u6240\u6709\u7684\u74f6\u9888\u90fd\u5df2\u7ecf\u88ab\u5904\u7406\u597d\u3002 \u5f00\u53d1\u56e2\u961f\u6ca1\u6709\u5360\u7528\u8fd0\u7ef4\u56e2\u961f\u7684\u65f6\u95f4\uff0c\u56e0\u4e3a\u90e8\u7f72\u548c\u7ef4\u62a4\u90fd\u662f\u5904\u4e8e\u540c\u4e00\u4e2a\u65f6\u95f4\u76d2\u91cc\u9762\u7684\u3002 \u5f00\u53d1\u56e2\u961f\u4e0d\u4f1a\u5728\u5468\u4e94\u4e0b\u53485\u70b9\u540e\u628a\u4ee3\u7801\u4ea4\u4ed8\u8fdb\u884c\u90e8\u7f72\uff0c\u5269\u4e0b\u8fd0\u7ef4\u56e2\u961f\u5468\u672b\u52a0\u73ed\u52a0\u70b9\u6765\u7ed9\u4ed6\u4eec\u64e6\u5c41\u80a1 \u5f00\u53d1\u73af\u5883\u6807\u51c6\u5316\uff0c\u8fd0\u7ef4\u4eba\u5458\u53ef\u4ee5\u5f88\u5bb9\u6613\u5c07\u4e4b\u6269\u5c55\u5e76\u8fdb\u884c\u90e8\u7f72 \u5f00\u53d1\u56e2\u961f\u53ef\u4ee5\u627e\u5230\u5408\u9002\u7684\u65b9\u5f0f\u4ea4\u4ed8\u65b0\u7248\u672c\uff0c\u4e14\u8fd0\u7ef4\u56e2\u961f\u53ef\u4ee5\u8f7b\u6613\u7684\u8fdb\u884c\u90e8\u7f72\u3002 \u6bcf\u4e2a\u56e2\u961f\u4e4b\u95f4\u7684\u901a\u4fe1\u7ebf\u8def\u90fd\u5f88\u660e\u786e \u6240\u6709\u7684\u56e2\u961f\u6210\u5458\u90fd\u6709\u65f6\u95f4\u53bb\u4e3a\u6539\u5584\u7cfb\u7edf\u8fdb\u884c\u8bd5\u9a8c\u548c\u5b9e\u8df5 \u5e38\u89c4\u6027\u7684\u5f15\u5165(\u6216\u8005\u6a21\u62df)\u7f3a\u9677\u5230\u7cfb\u7edf\u4e2d\u6765\u5e76\u5f97\u5230\u5904\u7406\u3002\u6bcf\u6b21\u5b66\u4e60\u5230\u7684\u7ecf\u9a8c\u90fd\u5e94\u8be5\u6587\u6863\u5316\u4e0b\u6765\u5e76\u5206\u4eab\u7ed9\u76f8\u5173\u4eba\u5458\u3002\u4e8b\u6545\u5904\u7406\u6210\u4e3a\u65e5\u5e38\u5de5\u4f5c\u7684\u4e00\u90e8\u5206\uff0c\u4e14\u5904\u7406\u65b9\u5f0f\u662f\u5df2\u77e5\u7684","title":"\u6982\u8981 \u2013 DevOps\u6e05\u5355"},{"location":"exp/devops/#_4","text":"\u4f7f\u7528\u73b0\u4ee3\u5316\u7684DevOps\u5de5\u5177\uff0c\u5982Chef\u3001Docker\u3001Ansible\u3001Packer\u3001Troposphere\u3001Consul\u3001Jenkins\u3001SonarQube\u3001AWS\u7b49\uff0c\u5e76\u4e0d\u4ee3\u8868\u4f60\u5c31\u5728\u6b63\u786e\u7684\u5e94\u7528DevOps\u7684\u539f\u5219\u3002DevOps\u662f\u4e00\u79cd\u601d\u7ef4\u65b9\u5f0f\u3002\u6211\u4eec\u6240\u6709\u4eba\u90fd\u662f\u8be5\u7cfb\u7edf\u6d41\u7a0b\u7684\u4e00\u90e8\u5206\uff0c\u6211\u4eec\u4e00\u8d77\u5206\u4eab\u5171\u540c\u7684\u65f6\u5149\u548c\u4ea4\u4ed8\u4ef7\u503c\u3002\u6bcf\u4e2a\u53c2\u52a0\u5230\u8fd9\u4e2a\u8f6f\u4ef6\u4ea4\u4ed8\u6d41\u7a0b\u4e0a\u6765\u7684\u6210\u5458\u90fd\u80fd\u591f\u52a0\u901f\u6216\u51cf\u7f13\u6574\u4e2a\u7cfb\u7edf\u7684\u8fd0\u4f5c\u901f\u5ea6\u3002\u7cfb\u7edf\u51fa\u73b0\u7684\u4e00\u4e2a\u7f3a\u9677\uff0c\u4ee5\u53ca\u9519\u8bef\u914d\u7f6e\u7684\u56e2\u961f\u4e4b\u95f4\u7684\u201c\u9632\u706b\u5899\u201d\uff0c\u90fd\u53ef\u80fd\u4f1a\u4f7f\u5f97\u6574\u4e2a\u7cfb\u7edf\u762b\u75ea\uff0c \u6240\u6709\u7684\u4eba\u90fd\u662fDevOps\u7684\u4e00\u90e8\u5206\uff0c\u4e00\u65e6\u4f60\u7684\u7ec4\u7ec7\u660e\u767d\u4e86\u8fd9\u4e00\u70b9\uff0c\u80fd\u591f\u5e2e\u4f60\u7ba1\u7406\u597d\u8fd9\u4e9b\u7684\u5de5\u5177\u548c\u6280\u672f\u6808\u5c31\u81ea\u7136\u800c\u7136\u7684\u4f1a\u51fa\u73b0\u5728\u4f60\u773c\u524d\u4e86\u3002","title":"\u603b\u7ed3"},{"location":"exp/micro-service/","text":"\u5fae\u670d\u52a1\u67b6\u6784\u6280\u672f\u6808\u9009\u578b\u624b\u518c \u00b6 2014~2018\uff0c\u5fae\u670d\u52a1\u7ecf\u8fc7\u4e09\u5e74\u7684\u53d1\u5c55\uff0c\u73b0\u72b6\u5982\u4f55\uff1f\u8fd9\u662f\u4e00\u4efd\u4e3a\u8ba9\u4f60\u66f4\u597d\u4f7f\u7528\u5fae\u670d\u52a1\u7684\u6280\u672f\u7ad9\u9009\u578b\u624b\u518c\u3002\u9664\u6b64\u4e4b\u5916\uff0c\u4f60\u8fd8\u53ef\u4ee5\u6309\u9700\u9009\u7528\u914d\u5957\u7684\u5fae\u670d\u52a1\u67b6\u6784\u89c6\u9891\u5185\u5bb9\u3002 \u4e00\u3001\u524d\u8a00 \u00b6 2014 \u5e74\u53ef\u4ee5\u8ba4\u4e3a\u662f\u5fae\u670d\u52a1 1.0 \u7684\u5143\u5e74\uff0c\u5f53\u5e74\u6709\u51e0\u4e2a\u6807\u5fd7\u6027\u4e8b\u4ef6\uff0c\u4e00\u662f Martin Fowler \u5728\u5176\u535a\u5ba2\u4e0a\u53d1\u8868\u4e86\u201dMicroservices\u201d\u4e00\u6587\uff0c\u6b63\u5f0f\u63d0\u51fa\u5fae\u670d\u52a1\u67b6\u6784\u98ce\u683c\uff1b\u4e8c\u662f Netflix \u5fae\u670d\u52a1\u67b6\u6784\u7ecf\u8fc7\u591a\u5e74\u5927\u89c4\u6a21\u751f\u4ea7\u9a8c\u8bc1\uff0c\u6700\u7ec8\u62bd\u8c61\u843d\u5730\u5f62\u6210\u4e00\u6574\u5957\u5f00\u6e90\u7684\u5fae\u670d\u52a1\u57fa\u7840\u7ec4\u4ef6\uff0c\u7edf\u79f0 NetflixOSS\uff0cNetflix \u7684\u6210\u529f\u7ecf\u9a8c\u5f00\u59cb\u88ab\u4e1a\u754c\u8ba4\u53ef\u5e76\u63a8\u5d07\uff1b\u4e09\u662f Pivotal \u5c06 NetflixOSS \u5f00\u6e90\u5fae\u670d\u52a1\u7ec4\u4ef6\u96c6\u6210\u5230\u5176 Spring \u4f53\u7cfb\uff0c\u63a8\u51fa Spring Cloud \u5fae\u670d\u52a1\u5f00\u53d1\u6280\u672f\u6808\u3002 \u4e00\u6643\u4e09\u5e74\u8fc7\u53bb\uff0c\u5fae\u670d\u52a1\u6280\u672f\u751f\u6001\u53c8\u53d1\u751f\u4e86\u5de8\u5927\u53d8\u5316\uff0c\u5bb9\u5668\uff0cPaaS\uff0cCloud Native\uff0cgRPC\uff0cServiceMesh\uff0cServerless \u7b49\u65b0\u6280\u672f\u65b0\u7406\u5ff5\u4f60\u65b9\u5531\u7f62\u6211\u767b\u573a\uff0c\u4e0d\u77e5\u4e0d\u89c9\u6211\u4eec\u53c8\u6765\u5230\u4e86\u5fae\u670d\u52a1 2.0 \u65f6\u4ee3\u3002 \u57fa\u4e8e\u8fd1\u5e74\u5728\u5fae\u670d\u52a1\u57fa\u7840\u67b6\u6784\u65b9\u9762\u7684\u5b9e\u6218\u7ecf\u9a8c\u548c\u5e73\u65f6\u7684\u5b66\u4e60\u79ef\u7d2f\uff0c\u6211\u60f3\u603b\u7ed3\u5e76\u63d0\u51fa\u4e00\u4e9b\u6784\u5efa\u5fae\u670d\u52a1 2.0 \u6280\u672f\u6808\u7684\u9009\u578b\u601d\u8def\uff0c\u4f9b\u5404\u4f4d\u5728\u4e00\u7ebf\u5b9e\u6218\u7684\u67b6\u6784\u5e08\u3001\u5de5\u7a0b\u5e08\u53c2\u8003\u501f\u9274\u3002\u5bf9\u4e8e\u4e00\u4e9b\u6682\u65f6\u8fd8\u6ca1\u6709\u6210\u719f\u5f00\u6e90\u4ea7\u54c1\u7684\u5fae\u670d\u52a1\u652f\u6491\u6a21\u5757\uff0c\u6211\u4e5f\u4f1a\u7ed9\u51fa\u4e00\u4e9b\u5b9a\u5236\u81ea\u7814\u7684\u8bbe\u8ba1\u601d\u8def\u3002 \u4e8c\u3001\u9009\u578b\u51c6\u5219 \u00b6 \u5bf9\u4e8e\u6280\u672f\u9009\u578b\uff0c\u6211\u4e2a\u4eba\u6709\u5f88\u591a\u6807\u51c6\uff0c\u5176\u4e2d\u4e0b\u9762\u4e09\u9879\u662f\u6700\u91cd\u8981\u7684\uff1a 1. \u751f\u4ea7\u7ea7 \u00b6 \u6211\u4eec\u9009\u62e9\u7684\u6280\u672f\u6808\u662f\u8981\u89e3\u51b3\u5b9e\u9645\u4e1a\u52a1\u95ee\u9898\u548c\u4e0a\u751f\u4ea7\u6297\u6d41\u91cf\u7684\uff08\u9009\u62e9\u4e0d\u614e\u53ef\u80fd\u9020\u6210\u751f\u4ea7\u7ea7\u4e8b\u6545\uff09\uff0c\u800c\u4e0d\u662f\u7b80\u5355\u505a\u4e2a POC \u6216\u8005 Demo \u5c55\u793a\uff0c\u6240\u4ee5\u751f\u4ea7\u7ea7\uff08Production Ready\uff09\uff0c\u53ef\u8fd0\u7ef4\uff08Ops Ready\uff09\uff0c\u53ef\u6cbb\u7406\uff0c\u6210\u719f\u7a33\u5b9a\u7684\u6280\u672f\u624d\u662f\u6211\u4eec\u7684\u9996\u9009\uff1b 2. \u4e00\u7ebf\u4e92\u8054\u7f51\u516c\u53f8\u843d\u5730\u4ea7\u54c1 \u00b6 \u6211\u4eec\u4f1a\u5c3d\u91cf\u91c7\u7528\u5728\u4e00\u7ebf\u4e92\u8054\u7f51\u516c\u53f8\u843d\u5730\u5e76\u4e14\u5f00\u6e90\u7684\uff0c\u4e14\u5728\u793e\u533a\u5185\u5f62\u6210\u826f\u597d\u53e3\u7891\u7684\u4ea7\u54c1\uff0c\u5b83\u4eec\u5df2\u7ecf\u5728\u8fd9\u4e9b\u516c\u53f8\u7ecf\u8fc7\u6d41\u91cf\u51b2\u51fb\uff0c\u5751\u5df2\u7ecf\u57fa\u672c\u88ab\u586b\u5e73\uff0c\u4e14\u88ab\u793e\u533a\u63a5\u53d7\u5f62\u6210\u4e00\u4e2a\u826f\u597d\u7684\u793e\u533a\u751f\u6001\uff08\u672c\u6587\u9644\u5f55\u90e8\u5206\u4f1a\u7ed9\u51fa\u6240\u6709\u63a8\u8350\u4f7f\u7528\u6216\u53c2\u8003\u7684\u5f00\u6e90\u9879\u76ee\u7684 GitHub \u94fe\u63a5\uff09\u3002 3. \u5f00\u6e90\u793e\u533a\u6d3b\u8dc3\u5ea6 \u00b6 GitHub \u4e0a\u7684 stars \u7684\u6570\u91cf\u662f\u4e00\u4e2a\u91cd\u8981\u6307\u6807\uff0c\u540c\u65f6\u4f1a\u53c2\u8003\u5176\u4ee3\u7801\u548c\u6587\u6863\u66f4\u65b0\u9891\u7387\uff08\u5c24\u5176\u662f\u8fd1\u5e74\uff09\uff0c\u8fd9\u4e9b\u6307\u6807\u76f4\u63a5\u53cd\u5e94\u5f00\u6e90\u4ea7\u54c1\u7684\u793e\u533a\u6d3b\u8dc3\u5ea6\u6216\u8005\u8bf4\u751f\u547d\u529b\u3002 \u53e6\u5916\uff0c\u5bf9\u4e8e\u4e0d\u540c\u4e1a\u52a1\u4f53\u91cf\u548c\u56e2\u961f\u89c4\u6a21\u7684\u516c\u53f8\uff0c\u6280\u672f\u9009\u578b\u6807\u51c6\u5f80\u5f80\u662f\u4e0d\u540c\u7684\uff0c\u521b\u4e1a\u516c\u53f8\u7684\u6280\u672f\u9009\u578b\u548c BAT \u7ea7\u522b\u516c\u53f8\u7684\u6280\u672f\u9009\u578b\u6807\u51c6\u53ef\u80fd\u5b8c\u5168\u4e0d\u540c\u3002\u672c\u6587\u4e3b\u8981\u9488\u5bf9\u65e5\u6d41\u91cf\u5343\u4e07\u4ee5\u4e0a\uff0c\u7814\u53d1\u56e2\u961f\u89c4\u6a21\u4e0d\u5c11\u4e8e 50 \u4eba\u7684\u516c\u53f8\uff0c\u5982\u679c\u5c0f\u4e8e\u8fd9\u4e2a\u89c4\u6a21\u6211\u5efa\u8bae\u8ba4\u771f\u8bc4\u4f30\u662f\u5426\u771f\u7684\u9700\u8981\u91c7\u7528\u5fae\u670d\u52a1\u67b6\u6784\u3002\u8003\u8651\u5230 Java \u8bed\u8a00\u5728\u56fd\u5185\u7684\u6d41\u884c\u5ea6\u548c\u6211\u4e2a\u4eba\u7684\u80cc\u666f\u7ecf\u9a8c\uff0c\u672c\u6587\u4e3b\u8981\u9488\u5bf9\u91c7\u7528 Java \u6280\u672f\u6808\u7684\u4f01\u4e1a\u3002\u672c\u6587\u4e5f\u5047\u5b9a\u81ea\u5efa\u5fae\u670d\u52a1\u57fa\u7840\u67b6\u6784\uff0c\u6709\u4e9b\u4ea7\u54c1\u5176\u5b9e\u6709\u5bf9\u5e94\u7684\u4e91\u670d\u52a1\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\uff0c\u81ea\u5efa\u548c\u91c7\u7528\u4e91\u670d\u52a1\u5404\u6709\u5229\u5f0a\uff0c\u67b6\u6784\u5e08\u9700\u8981\u6839\u636e\u573a\u666f\u4e0a\u4e0b\u6587\u7efc\u5408\u6743\u8861\u3002 \u4e09\u3001\u5fae\u670d\u52a1\u57fa\u7840\u67b6\u6784\u5173\u952e\u70b9 \u00b6 \u4e0b\u9762\u8111\u56fe\u4e2d\u8292\u679c\u8272\u6807\u6ce8\u7684\u4e03\u4e2a\u6a21\u5757\uff0c\u6211\u8ba4\u4e3a\u662f\u6784\u5efa\u5fae\u670d\u52a1 2.0 \u6280\u672f\u6808\u7684\u6838\u5fc3\u6a21\u5757\uff0c\u672c\u6587\u540e\u9762\u7684\u9009\u578b\u4f1a\u5206\u522b\u57fa\u4e8e\u8fd9\u4e9b\u6a21\u5757\u5c55\u5f00\u3002\u5bf9\u4e8e\u6bcf\u4e2a\u6a21\u5757\u6211\u4e5f\u5217\u51fa\u4e00\u4e9b\u6838\u5fc3\u67b6\u6784\u5173\u6ce8\u70b9\uff0c\u5728\u9009\u62e9\u5177\u4f53\u4ea7\u54c1\u65f6\uff0c\u9700\u8981\u5c3d\u53ef\u80fd\u8986\u76d6\u5230\u8fd9\u4e9b\u5173\u6ce8\u70b9\u3002 \u4e0b\u56fe\u662f\u6211\u8fd1\u671f\u5de5\u4f5c\u603b\u7ed3\u548c\u53c2\u8003\u7684\u4e00\u4e2a\u5fae\u670d\u52a1\u6280\u672f\u4f53\u7cfb\uff0c\u6211\u60f3\u540c\u65f6\u5206\u4eab\u7ed9\u4e00\u7ebf\u67b6\u6784\u5e08\u6216\u8005\u5de5\u7a0b\u5e08\u53c2\u8003\uff0c\u5176\u4e2d\u7c89\u7ea2\u8272\u6807\u6ce8\u7684\u6a21\u5757\u662f\u548c\u5fae\u670d\u52a1\u5173\u7cfb\u6700\u5bc6\u5207\u7684\u6a21\u5757\uff0c\u5927\u5bb6\u5728\u505a\u6280\u672f\u9009\u578b\u65f6\uff0c\u53ef\u4ee5\u540c\u65f6\u5bf9\u7167\u8fd9\u4e2a\u4f53\u7cfb\u3002 \u56db\u3001\u670d\u52a1\u6846\u67b6\u9009\u578b \u00b6 \u670d\u52a1\u6846\u67b6\u662f\u4e00\u4e2a\u6bd4\u8f83\u6210\u719f\u7684\u9886\u57df\uff0c\u6709\u592a\u591a\u53ef\u9009\u9879\u3002Spring Boot/Cloud[\u9644\u5f55 12.1] \u7531\u4e8e Spring \u793e\u533a\u7684\u5f71\u54cd\u529b\u548c Netflix \u7684\u80cc\u4e66\uff0c\u76ee\u524d\u53ef\u4ee5\u8ba4\u4e3a\u662f\u6784\u5efa Java \u5fae\u670d\u52a1\u7684\u4e00\u4e2a\u793e\u533a\u6807\u51c6\uff0cSpring Boot \u76ee\u524d\u5728 GitHub \u4e0a\u6709\u8d85\u8fc7 20k \u661f\u3002 \u57fa\u4e8e Spring \u7684\u6846\u67b6\u672c\u8d28\u4e0a\u53ef\u4ee5\u8ba4\u4e3a\u662f\u4e00\u79cd RESTful \u6846\u67b6\uff08\u4e0d\u662f RPC \u6846\u67b6\uff09\uff0c\u5e8f\u5217\u5316\u534f\u8bae\u4e3b\u8981\u91c7\u7528\u57fa\u4e8e\u6587\u672c\u7684 JSON\uff0c\u901a\u8baf\u534f\u8bae\u4e00\u822c\u57fa\u4e8e HTTP\u3002RESTful \u6846\u67b6\u5929\u7136\u652f\u6301\u8de8\u8bed\u8a00\uff0c\u4efb\u4f55\u8bed\u8a00\u53ea\u8981\u6709 HTTP \u5ba2\u6237\u7aef\u90fd\u53ef\u4ee5\u63a5\u5165\u8c03\u7528\uff0c\u4f46\u662f\u5ba2\u6237\u7aef\u4e00\u822c\u9700\u8981\u81ea\u5df1\u89e3\u6790 payload\u3002\u76ee\u524d Spring \u6846\u67b6\u4e5f\u652f\u6301 Swagger \u5951\u7ea6\u7f16\u7a0b\u6a21\u578b\uff0c\u80fd\u591f\u57fa\u4e8e\u5951\u7ea6\u751f\u6210\u5404\u79cd\u8bed\u8a00\u7684\u5f3a\u7c7b\u578b\u5ba2\u6237\u7aef\uff0c\u6781\u5927\u65b9\u4fbf\u4e0d\u540c\u8bed\u8a00\u6808\u7684\u5e94\u7528\u63a5\u5165\uff0c\u4f46\u662f\u56e0\u4e3a RESTful \u6846\u67b6\u548c Swagger \u89c4\u8303\u7684\u5f31\u5951\u7ea6\u7279\u6027\uff0c\u751f\u6210\u7684\u5404\u79cd\u8bed\u8a00\u5ba2\u6237\u7aef\u7684\u4e92\u64cd\u4f5c\u6027\u8fd8\u662f\u6709\u4e0d\u5c11\u5751\u7684\u3002 Dubbo[\u9644\u5f55 12.2] \u662f\u963f\u91cc\u591a\u5e74\u6784\u5efa\u751f\u4ea7\u7ea7\u5206\u5e03\u5f0f\u5fae\u670d\u52a1\u7684\u6280\u672f\u7ed3\u6676\uff0c\u670d\u52a1\u6cbb\u7406\u80fd\u529b\u975e\u5e38\u4e30\u5bcc\uff0c\u5728\u56fd\u5185\u6280\u672f\u793e\u533a\u5177\u6709\u5f88\u5927\u5f71\u54cd\u529b\uff0c\u76ee\u524d github \u4e0a\u6709\u8d85\u8fc7 16k \u661f\u3002Dubbo \u672c\u8d28\u4e0a\u662f\u4e00\u5957\u57fa\u4e8e Java \u7684 RPC \u6846\u67b6\uff0c\u5f53\u5f53 Dubbox \u6269\u5c55\u4e86 Dubbo \u652f\u6301 RESTful \u63a5\u53e3\u66b4\u9732\u80fd\u529b\u3002 Dubbo \u4e3b\u8981\u9762\u5411 Java \u6280\u672f\u6808\uff0c\u8de8\u8bed\u8a00\u652f\u6301\u4e0d\u8db3\u662f\u5b83\u7684\u4e00\u4e2a\u5f31\u9879\uff0c\u53e6\u5916\u56e0\u4e3a\u6cbb\u7406\u80fd\u529b\u592a\u4e30\u5bcc\uff0c\u4ee5\u81f3\u4e8e\u8fd9\u4e2a\u6846\u67b6\u6bd4\u8f83\u91cd\uff0c\u5b8c\u5168\u7528\u597d\u8fd9\u4e2a\u6846\u67b6\u7684\u95e8\u69db\u6bd4\u8f83\u9ad8\uff0c\u4f46\u662f\u5982\u679c\u4f60\u7684\u4f01\u4e1a\u57fa\u672c\u4e0a\u6295\u8d44\u5728 Java \u6280\u672f\u6808\u4e0a\uff0c\u9009 Dubbo \u53ef\u4ee5\u8ba9\u4f60\u5728\u670d\u52a1\u6846\u67b6\u4e00\u5757\u7ad9\u5728\u8f83\u9ad8\u7684\u8d77\u70b9\u4e0a\uff0c\u4e0d\u7ba1\u662f\u6027\u80fd\u8fd8\u662f\u4f01\u4e1a\u7ea7\u7684\u670d\u52a1\u6cbb\u7406\u80fd\u529b\uff0cDubbo \u90fd\u505a\u7684\u5f88\u51fa\u8272\u3002\u65b0\u6d6a\u5fae\u535a\u5f00\u6e90\u7684 Motan\uff08GitHub 4k stars\uff09\u4e5f\u4e0d\u9519\uff0c\u529f\u80fd\u548c Dubbo \u7c7b\u4f3c\uff0c\u53ef\u4ee5\u8ba4\u4e3a\u662f\u4e00\u4e2a\u8f7b\u91cf\u88c1\u526a\u7248\u7684 Dubbo\u3002 gRPC[\u9644\u5f55 12.3] \u662f\u8c37\u6b4c\u8fd1\u5e74\u65b0\u63a8\u7684\u4e00\u5957 RPC \u6846\u67b6\uff0c\u57fa\u4e8e protobuf \u7684\u5f3a\u5951\u7ea6\u7f16\u7a0b\u6a21\u578b\uff0c\u80fd\u81ea\u52a8\u751f\u6210\u5404\u79cd\u8bed\u8a00\u5ba2\u6237\u7aef\uff0c\u4e14\u4fdd\u8bc1\u4e92\u64cd\u4f5c\u3002\u652f\u6301 HTTP2 \u662f gRPC \u7684\u4e00\u5927\u4eae\u70b9\uff0c\u901a\u8baf\u5c42\u6027\u80fd\u6bd4 HTTP \u6709\u5f88\u5927\u6539\u8fdb\u3002Protobuf \u662f\u5728\u793e\u533a\u5177\u6709\u60a0\u4e45\u5386\u53f2\u548c\u826f\u597d\u53e3\u7891\u7684\u9ad8\u6027\u80fd\u5e8f\u5217\u5316\u534f\u8bae\uff0c\u52a0\u4e0a Google \u516c\u53f8\u7684\u80cc\u4e66\u548c\u793e\u533a\u5f71\u54cd\u529b\uff0c\u76ee\u524d gRPC \u4e5f\u6bd4\u8f83\u706b\uff0cGitHub \u4e0a\u6709\u8d85\u8fc7 13.4k \u661f\u3002 \u76ee\u524d\u770b gRPC \u66f4\u9002\u5408\u5185\u90e8\u670d\u52a1\u76f8\u4e92\u8c03\u7528\u573a\u666f\uff0c\u5bf9\u5916\u66b4\u9732 RESTful \u63a5\u53e3\u53ef\u4ee5\u5b9e\u73b0\uff0c\u4f46\u662f\u6bd4\u8f83\u9ebb\u70e6\uff08\u9700\u8981 gRPC Gateway \u914d\u5408\uff09\uff0c\u6240\u4ee5\u5bf9\u4e8e\u5bf9\u5916\u66b4\u9732 API \u573a\u666f\u53ef\u80fd\u8fd8\u9700\u8981\u5f15\u5165\u7b2c\u4e8c\u5957 RESTful \u6846\u67b6\u4f5c\u4e3a\u8865\u5145\u3002\u603b\u4f53\u4e0a gRPC \u8fd9\u4e2a\u4e1c\u897f\u8fd8\u6bd4\u8f83\u65b0\uff0c\u793e\u533a\u5bf9\u4e8e HTTP2 \u5e26\u6765\u7684\u597d\u5904\u8fd8\u672a\u5f62\u6210\u4e00\u81f4\u8ba4\u540c\uff0c\u5efa\u8bae\u8c28\u614e\u6295\u5165\uff0c\u53ef\u4ee5\u505a\u4e00\u4e9b\u8bd5\u70b9\u3002 \u4e94\u3001\u8fd0\u884c\u65f6\u652f\u6491\u670d\u52a1\u9009\u578b \u00b6 \u8fd0\u884c\u65f6\u652f\u6491\u670d\u52a1\u4e3b\u8981\u5305\u62ec\u670d\u52a1\u6ce8\u518c\u4e2d\u5fc3\uff0c\u670d\u52a1\u8def\u7531\u7f51\u5173\u548c\u96c6\u4e2d\u5f0f\u914d\u7f6e\u4e2d\u5fc3\u4e09\u4e2a\u4ea7\u54c1\u3002 \u670d\u52a1\u6ce8\u518c\u4e2d\u5fc3\uff0c\u5982\u679c\u91c7\u7528 Spring Cloud \u4f53\u7cfb\uff0c\u5219\u9009\u62e9 Eureka[\u9644\u5f55 12.4] \u662f\u6700\u4f73\u642d\u914d\uff0cEureka \u5728 Netflix \u7ecf\u8fc7\u5927\u89c4\u6a21\u751f\u4ea7\u9a8c\u8bc1\uff0c\u652f\u6301\u8de8\u6570\u636e\u4e2d\u5fc3\uff0c\u5ba2\u6237\u7aef\u914d\u5408 Ribbon \u53ef\u4ee5\u5b9e\u73b0\u7075\u6d3b\u7684\u5ba2\u6237\u7aef\u8f6f\u8d1f\u8f7d\uff0cEureka \u76ee\u524d\u5728 GitHub \u4e0a\u6709\u8d85\u8fc7 4.7k \u661f\uff1bConsul[\u9644\u5f55 12.5] \u4e5f\u662f\u4e0d\u9519\u9009\u62e9\uff0c\u5929\u7136\u652f\u6301\u8de8\u6570\u636e\u4e2d\u5fc3\uff0c\u8fd8\u652f\u6301 KV \u6a21\u578b\u5b58\u50a8\u548c\u7075\u6d3b\u5065\u5eb7\u68c0\u67e5\u80fd\u529b\uff0c\u76ee\u524d\u5728 GitHub \u4e0a\u6709\u8d85\u8fc7 11k \u661f\u3002 \u670d\u52a1\u7f51\u5173\u4e5f\u662f\u4e00\u4e2a\u6bd4\u8f83\u6210\u719f\u7684\u9886\u57df\uff0c\u6709\u5f88\u591a\u53ef\u9009\u9879\u3002\u5982\u679c\u91c7\u7528 Spring Cloud \u4f53\u7cfb\uff0c\u5219\u9009\u62e9 Zuul[\u9644\u5f55 12.6] \u662f\u6700\u4f73\u642d\u914d\uff0cZuul \u5728 Netflix \u7ecf\u8fc7\u5927\u89c4\u6a21\u751f\u4ea7\u9a8c\u8bc1\uff0c\u652f\u6301\u7075\u6d3b\u7684\u52a8\u6001\u8fc7\u6ee4\u5668\u811a\u672c\u673a\u5236\uff0c\u5f02\u6b65\u6027\u80fd\u4e0d\u8db3\uff08\u57fa\u4e8e Netty \u7684\u5f02\u6b65 Zuul \u8fdf\u8fdf\u672a\u80fd\u63a8\u51fa\u6b63\u5f0f\u7248\uff09\u3002Zuul \u7f51\u5173\u76ee\u524d\u5728 github \u4e0a\u6709\u8d85\u8fc7 3.7k \u661f\u3002\u57fa\u4e8e Nginx/OpenResty \u7684 API \u7f51\u5173 Kong[\u9644\u5f55 12.7] \u76ee\u524d\u5728 github \u4e0a\u6bd4\u8f83\u706b\uff0c\u6709\u8d85\u8fc7 14.1k \u661f\u3002\u56e0\u4e3a\u91c7\u7528 Nginx \u5185\u6838\uff0cKong \u7684\u5f02\u6b65\u6027\u80fd\u8f83\u5f3a\uff0c\u53e6\u5916\u57fa\u4e8e lua \u7684\u63d2\u4ef6\u673a\u5236\u6bd4\u8f83\u7075\u6d3b\uff0c\u793e\u533a\u63d2\u4ef6\u4e5f\u6bd4\u8f83\u4e30\u5bcc\uff0c\u4ece\u5b89\u5168\u5230\u9650\u6d41\u7194\u65ad\u90fd\u6709\uff0c\u8fd8\u6709\u4e0d\u5c11\u5f00\u6e90\u7684\u7ba1\u7406\u754c\u9762\uff0c\u80fd\u591f\u96c6\u4e2d\u7ba1\u7406 Kong \u96c6\u7fa4\u3002 \u914d\u7f6e\u4e2d\u5fc3\uff0cSpring Cloud \u81ea\u5e26 Spring Cloud Config[\u9644\u5f55 12.8]\uff08GitHub 0.75k stars\uff09\uff0c\u4e2a\u4eba\u8ba4\u4e3a\u7b97\u4e0d\u4e0a\u751f\u4ea7\u7ea7\uff0c\u5f88\u591a\u6cbb\u7406\u80fd\u529b\u7f3a\u5931\uff0c\u5c0f\u89c4\u6a21\u573a\u666f\u53ef\u4ee5\u8bd5\u7528\u3002\u4e2a\u4eba\u6bd4\u8f83\u63a8\u8350\u643a\u7a0b\u7684 Apollo[\u9644\u5f55 12.9] \u914d\u7f6e\u4e2d\u5fc3\uff0c\u5728\u643a\u7a0b\u7ecf\u8fc7\u751f\u4ea7\u7ea7\u9a8c\u8bc1\uff0c\u5177\u5907\u9ad8\u53ef\u7528\uff0c\u914d\u7f6e\u5b9e\u65f6\u751f\u6548\uff08\u63a8\u62c9\u7ed3\u5408\uff09\uff0c\u914d\u7f6e\u5ba1\u8ba1\u548c\u7248\u672c\u5316\uff0c\u591a\u73af\u5883\u591a\u96c6\u7fa4\u652f\u6301\u7b49\u751f\u4ea7\u7ea7\u7279\u6027\uff0c\u5efa\u8bae\u4e2d\u5927\u89c4\u6a21\u9700\u8981\u5bf9\u914d\u7f6e\u96c6\u4e2d\u8fdb\u884c\u6cbb\u7406\u7684\u4f01\u4e1a\u91c7\u7528\u3002Apollo \u76ee\u524d\u5728 github \u4e0a\u6709\u8d85\u8fc7 3.4k \u661f\u3002 \u516d\u3001\u670d\u52a1\u76d1\u63a7\u9009\u578b \u00b6 \u4e3b\u8981\u5305\u62ec\u65e5\u5fd7\u76d1\u63a7\uff0c\u8c03\u7528\u94fe\u76d1\u63a7\uff0cMetrics \u76d1\u63a7\uff0c\u5065\u5eb7\u68c0\u67e5\u548c\u544a\u8b66\u901a\u77e5\u7b49\u4ea7\u54c1\u3002 ELK \u76ee\u524d\u53ef\u4ee5\u8ba4\u4e3a\u662f\u65e5\u5fd7\u76d1\u63a7\u7684\u6807\u914d\uff0c\u529f\u80fd\u5b8c\u5584\u5f00\u7bb1\u5373\u7528\uff0cElasticSearch[\u9644\u5f55 12.10] \u76ee\u524d\u5728 GitHub \u4e0a\u6709\u8d85\u8fc7 28.4k \u661f\u3002Elastalert[\u9644\u5f55 12.11] (GitHub 4k stars) \u662f Yelp \u5f00\u6e90\u7684\u9488\u5bf9 ELK \u7684\u544a\u8b66\u901a\u77e5\u6a21\u5757\u3002 \u8c03\u7528\u94fe\u76d1\u63a7\u76ee\u524d\u793e\u533a\u4e3b\u6d41\u662f\u70b9\u8bc4 CAT[\u9644\u5f55 12.12]\uff08GitHub 4.3k stars\uff09\uff0cTwitter \u4e4b\u524d\u5f00\u6e90\u73b0\u5728\u7531 OpenZipkin \u793e\u533a\u7ef4\u62a4\u7684 Zipkin[\u9644\u5f55 12.13]\uff08GitHub 7.5k stars\uff09\u548c Naver \u5f00\u6e90\u7684 Pinpoint[\u9644\u5f55 12.14]\uff08GitHub 5.3k stars\uff09\u3002\u4e2a\u4eba\u6bd4\u8f83\u63a8\u8350\u70b9\u8bc4\u5f00\u6e90\u7684 CAT\uff0c\u5728\u70b9\u8bc4\u548c\u56fd\u5185\u591a\u5bb6\u4e92\u8054\u7f51\u516c\u53f8\u6709\u843d\u5730\u6848\u4f8b\uff0c\u751f\u4ea7\u7ea7\u7279\u6027\u548c\u6cbb\u7406\u80fd\u529b\u8f83\u5b8c\u5584\uff0c\u53e6\u5916 CAT \u81ea\u5e26\u544a\u8b66\u6a21\u5757\u3002\u4e0b\u9762\u662f\u6211\u4e4b\u524d\u5bf9\u4e09\u6b3e\u4ea7\u54c1\u7684\u8bc4\u4f30\u8868\uff0c\u4f9b\u53c2\u8003\u3002 Metrics \u76d1\u63a7\u4e3b\u8981\u4f9d\u8d56\u4e8e\u65f6\u95f4\u5e8f\u5217\u6570\u636e\u5e93 (TSDB)\uff0c\u76ee\u524d\u8f83\u6210\u719f\u7684\u4ea7\u54c1\u662f StumbleUpon \u516c\u53f8\u5f00\u6e90\u7684\u57fa\u4e8e HBase \u7684 OpenTSDB[\u9644\u5f55 12.15]\uff08\u57fa\u4e8e Cassandra \u7684 KariosDB[\u9644\u5f55 12.16] \u4e5f\u662f\u4e00\u4e2a\u9009\u62e9\uff0cGitHub 1.1k stars\uff0c\u5b83\u57fa\u672c\u4e0a\u662f OpenTSDB \u9488\u5bf9 Cassandra \u7684\u4e00\u4e2a\u6539\u9020\u7248\uff09\uff0cOpenTSDB \u5177\u6709\u5206\u5e03\u5f0f\u80fd\u529b\u53ef\u4ee5\u6a2a\u5411\u6269\u5c55\uff0c\u4f46\u662f\u76f8\u5bf9\u8f83\u91cd\uff0c\u9002\u7528\u4e8e\u4e2d\u5927\u89c4\u6a21\u4f01\u4e1a\uff0cOpenTSDB \u76ee\u524d\u5728 GitHub \u4e0a\u6709\u8fd1 2.9k \u661f\u3002 OpenTSDB \u672c\u8eab\u4e0d\u63d0\u4f9b\u544a\u8b66\u6a21\u5757\uff0cArgus[\u9644\u5f55 12.17]\uff08GitHub 0.29k \u661f\uff09\u662f Salesforce \u5f00\u6e90\u7684\u57fa\u4e8e OpenTSDB \u7684\u7edf\u4e00\u76d1\u63a7\u544a\u8b66\u5e73\u53f0\uff0c\u652f\u6301\u4e30\u5bcc\u7684\u544a\u8b66\u51fd\u6570\u548c\u7075\u6d3b\u7684\u544a\u8b66\u914d\u7f6e\uff0c\u53ef\u4ee5\u4f5c\u4e3a OpenTSDB \u7684\u544a\u8b66\u8865\u5145\u3002\u8fd1\u5e74\u4e5f\u51fa\u73b0\u4e00\u4e9b\u8f7b\u91cf\u7ea7\u7684 TSDB\uff0c\u5982 InfluxDB[\u9644\u5f55 12.18]\uff08GitHub 12.4k stars\uff09\u548c Prometheus[\u9644\u5f55 12.19]\uff08GitHub 14.3k stars\uff09\uff0c\u8fd9\u4e9b\u4ea7\u54c1\u51fd\u6570\u62a5\u8868\u80fd\u529b\u4e30\u5bcc\uff0c\u81ea\u5e26\u544a\u8b66\u6a21\u5757\uff0c\u4f46\u662f\u5206\u5e03\u5f0f\u80fd\u529b\u4e0d\u8db3\uff0c\u9002\u7528\u4e8e\u4e2d\u5c0f\u89c4\u6a21\u4f01\u4e1a\u3002Grafana[\u9644\u5f55 12.20]\uff08GitHub 19.9k stars\uff09\u662f Metrics \u62a5\u8868\u5c55\u793a\u7684\u793e\u533a\u6807\u914d\u3002 \u793e\u533a\u8fd8\u6709\u4e00\u4e9b\u901a\u7528\u7684\u5065\u5eb7\u68c0\u67e5\u548c\u544a\u8b66\u4ea7\u54c1\uff0c\u4f8b\u5982 Sensu[\u9644\u5f55 12.21]\uff08GitHub 2.7k stars\uff09\uff0c\u80fd\u591f\u5bf9\u5404\u79cd\u670d\u52a1\uff08\u4f8b\u5982 Spring Boot \u66b4\u9732\u7684\u5065\u5eb7\u68c0\u67e5\u7aef\u70b9\uff0c\u65f6\u95f4\u5e8f\u5217\u6570\u636e\u5e93\u4e2d\u7684 metrics\uff0cELK \u4e2d\u7684\u9519\u8bef\u65e5\u5fd7\u7b49\uff09\u5b9a\u5236\u7075\u6d3b\u7684\u5065\u5eb7\u68c0\u67e5 (check)\uff0c\u7136\u540e\u7528\u6237\u53ef\u4ee5\u9488\u5bf9 check \u7ed3\u679c\u8bbe\u7f6e\u7075\u6d3b\u7684\u544a\u8b66\u901a\u77e5\u7b56\u7565\u3002Sensu \u5728 Yelp \u7b49\u516c\u53f8\u6709\u843d\u5730\u6848\u4f8b\u3002\u5176\u5b83\u7c7b\u4f3c\u4ea7\u54c1\u8fd8\u6709 Esty \u5f00\u6e90\u7684 411[\u9644\u5f55 12.22]\uff08GitHub 0.74k \u661f\uff09\u548c Zalando \u7684 ZMon[\u9644\u5f55 12.23] (GitHub 0.15k \u661f)\uff0c\u5b83\u4eec\u662f\u5206\u522b\u5728 Esty \u548c Zalando \u843d\u5730\u7684\u4ea7\u54c1\uff0c\u4f46\u662f\u5b9a\u5236 check \u548c\u544a\u8b66\u914d\u7f6e\u7684\u4f7f\u7528\u95e8\u69db\u6bd4\u8f83\u9ad8\uff0c\u793e\u533a\u4e0d\u70ed\uff0c\u5efa\u8bae\u6709\u5b9a\u5236\u81ea\u7814\u80fd\u529b\u7684\u56e2\u961f\u8bd5\u7528\u3002ZMon \u540e\u53f0\u91c7\u7528 KairosDB \u5b58\u50a8\uff0c\u5982\u679c\u4f01\u4e1a\u5df2\u7ecf\u91c7\u7528 KariosDB \u4f5c\u4e3a\u65f6\u95f4\u5e8f\u5217\u6570\u636e\u5e93\uff0c\u5219\u53ef\u4ee5\u8003\u8651 ZMon \u4f5c\u4e3a\u544a\u8b66\u901a\u77e5\u6a21\u5757\u3002 \u4e03\u3001\u670d\u52a1\u5bb9\u9519\u9009\u578b \u00b6 \u9488\u5bf9 Java \u6280\u672f\u6808\uff0cNetflix \u7684 Hystrix[\u9644\u5f55 12.24]\uff08github 12.4k stars\uff09\u628a\u7194\u65ad\u3001\u9694\u79bb\u3001\u9650\u6d41\u548c\u964d\u7ea7\u7b49\u80fd\u529b\u5c01\u88c5\u6210\u7ec4\u4ef6\uff0c\u4efb\u4f55\u4f9d\u8d56\u8c03\u7528\uff08\u6570\u636e\u5e93\uff0c\u670d\u52a1\uff0c\u7f13\u5b58\uff09\u90fd\u53ef\u4ee5\u5c01\u88c5\u5728 Hystrix Command \u4e4b\u5185\uff0c\u5c01\u88c5\u540e\u81ea\u52a8\u5177\u5907\u5bb9\u9519\u80fd\u529b\u3002Hystrix \u8d77\u6e90\u4e8e Netflix \u7684\u5f39\u6027\u5de5\u7a0b\u9879\u76ee\uff0c\u7ecf\u8fc7 Netflix \u5927\u89c4\u6a21\u751f\u4ea7\u9a8c\u8bc1\uff0c\u76ee\u524d\u662f\u5bb9\u9519\u7ec4\u4ef6\u7684\u793e\u533a\u6807\u51c6\uff0cGitHub \u4e0a\u6709\u8d85 12k \u661f\u3002\u5176\u5b83\u8bed\u8a00\u6808\u4e5f\u6709\u7c7b\u4f3c Hystrix \u7684\u7b80\u5316\u7248\u672c\u7ec4\u4ef6\u3002 Hystrix \u4e00\u822c\u9700\u8981\u5728\u5e94\u7528\u7aef\u6216\u8005\u6846\u67b6\u5185\u57cb\u70b9\uff0c\u6709\u4e00\u5b9a\u7684\u4f7f\u7528\u95e8\u69db\u3002\u5bf9\u4e8e\u91c7\u7528\u96c6\u4e2d\u5f0f\u53cd\u5411\u4ee3\u7406\uff08\u8fb9\u754c\u548c\u5185\u90e8\uff09\u505a\u670d\u52a1\u8def\u7531\u7684\u516c\u53f8\uff0c\u5219\u53ef\u4ee5\u96c6\u4e2d\u5728\u53cd\u5411\u4ee3\u7406\u4e0a\u505a\u7194\u65ad\u9650\u6d41\uff0c\u4f8b\u5982\u91c7\u7528 Nginx[\u9644\u5f55 12.25]\uff08GitHub 5.1k stars\uff09\u6216\u8005 Kong[\u9644\u5f55 12.7]\uff08GitHub 11.4k stars\uff09\u8fd9\u7c7b\u53cd\u5411\u4ee3\u7406\uff0c\u5b83\u4eec\u90fd\u63d2\u4ef6\u652f\u6301\u7075\u6d3b\u7684\u9650\u6d41\u5bb9\u9519\u914d\u7f6e\u3002Zuul \u7f51\u5173\u4e5f\u53ef\u4ee5\u96c6\u6210 Hystrix \u5b9e\u73b0\u7f51\u5173\u5c42\u96c6\u4e2d\u5f0f\u9650\u6d41\u5bb9\u9519\u3002\u96c6\u4e2d\u5f0f\u53cd\u5411\u4ee3\u7406\u9700\u8981\u6709\u4e00\u5b9a\u7684\u7814\u53d1\u548c\u8fd0\u7ef4\u80fd\u529b\uff0c\u4f46\u662f\u53ef\u4ee5\u5bf9\u9650\u6d41\u5bb9\u9519\u8fdb\u884c\u96c6\u4e2d\u6cbb\u7406\uff0c\u53ef\u4ee5\u7b80\u5316\u5ba2\u6237\u7aef\u3002 \u516b\u3001\u540e\u53f0\u670d\u52a1\u9009\u578b \u00b6 \u540e\u53f0\u670d\u52a1\u4e3b\u8981\u5305\u62ec\u6d88\u606f\u7cfb\u7edf\uff0c\u5206\u5e03\u5f0f\u7f13\u5b58\uff0c\u5206\u5e03\u5f0f\u6570\u636e\u8bbf\u95ee\u5c42\u548c\u4efb\u52a1\u8c03\u5ea6\u7cfb\u7edf\u3002\u540e\u53f0\u670d\u52a1\u662f\u4e00\u4e2a\u76f8\u5bf9\u6bd4\u8f83\u6210\u719f\u7684\u9886\u57df\uff0c\u5f88\u591a\u5f00\u6e90\u4ea7\u54c1\u57fa\u672c\u53ef\u4ee5\u5f00\u7bb1\u5373\u7528\u3002 \u6d88\u606f\u7cfb\u7edf\uff0c\u5bf9\u4e8e\u65e5\u5fd7\u7b49\u53ef\u9760\u6027\u8981\u6c42\u4e0d\u9ad8\u7684\u573a\u666f\uff0c\u5219 Apache \u9876\u7ea7\u9879\u76ee Kafka[\u9644\u5f55 12.26]\uff08GitHub 7.2k stars\uff09\u662f\u793e\u533a\u6807\u914d\u3002\u5bf9\u4e8e\u53ef\u9760\u6027\u8981\u6c42\u8f83\u9ad8\u7684\u4e1a\u52a1\u573a\u666f\uff0cKafka \u5176\u5b9e\u4e5f\u662f\u53ef\u4ee5\u80dc\u4efb\uff0c\u4f46\u4f01\u4e1a\u9700\u8981\u6839\u636e\u5177\u4f53\u573a\u666f\uff0c\u5bf9 Kafka \u7684\u76d1\u63a7\u548c\u6cbb\u7406\u80fd\u529b\u8fdb\u884c\u9002\u5f53\u5b9a\u5236\u5b8c\u5584\uff0cAllegro \u516c\u53f8\u5f00\u6e90\u7684 hermes[\u9644\u5f55 12.27]\uff08GitHub 0.3k stars\uff09\u662f\u4e00\u4e2a\u53ef\u53c2\u8003\u9879\u76ee\uff0c\u5b83\u5728 Kafka \u57fa\u7840\u4e0a\u5c01\u88c5\u4e86\u9002\u5408\u4e1a\u52a1\u573a\u666f\u7684\u4f01\u4e1a\u7ea7\u6cbb\u7406\u80fd\u529b\u3002\u963f\u91cc\u5f00\u6e90\u7684 RocketMQ[\u9644\u5f55 12.28]\uff08GitHub 3.5k \u661f\uff09\u4e5f\u662f\u4e00\u4e2a\u4e0d\u9519\u9009\u62e9\uff0c\u5177\u5907\u66f4\u591a\u9002\u7528\u4e8e\u4e1a\u52a1\u573a\u666f\u7684\u7279\u6027\uff0c\u76ee\u524d\u4e5f\u662f Apache \u9876\u7ea7\u9879\u76ee\u3002RabbitMQ[\u9644\u5f55 12.29]\uff08GitHub 3.6k \u661f\uff09\u662f\u8001\u724c\u7ecf\u5178\u7684 MQ\uff0c\u961f\u5217\u7279\u6027\u548c\u6587\u6863\u90fd\u5f88\u4e30\u5bcc\uff0c\u6027\u80fd\u548c\u5206\u5e03\u5f0f\u80fd\u529b\u7a0d\u5f31\uff0c\u4e2d\u5c0f\u89c4\u6a21\u573a\u666f\u53ef\u9009\u3002 \u5bf9\u4e8e\u7f13\u5b58\u6cbb\u7406\uff0c\u5982\u679c\u503e\u5411\u4e8e\u91c7\u7528\u5ba2\u6237\u7aef\u76f4\u8fde\u6a21\u5f0f\uff08\u4e2a\u4eba\u8ba4\u4e3a\u7f13\u5b58\u76f4\u8fde\u66f4\u7b80\u5355\u8f7b\u91cf\uff09\uff0c\u5219 SohuTv \u5f00\u6e90\u7684 cachecloud[\u9644\u5f55 12.30]\uff08GitHub 2.5k stars\uff09\u662f\u4e00\u6b3e\u4e0d\u9519\u7684 Redis \u7f13\u5b58\u6cbb\u7406\u5e73\u53f0\uff0c\u63d0\u4f9b\u8bf8\u5982\u76d1\u63a7\u7edf\u8ba1\uff0c\u4e00\u952e\u5f00\u542f\uff0c\u81ea\u52a8\u6545\u969c\u8f6c\u79fb\uff0c\u5728\u7ebf\u4f38\u7f29\uff0c\u81ea\u52a8\u5316\u8fd0\u7ef4\u7b49\u751f\u4ea7\u7ea7\u6cbb\u7406\u80fd\u529b\uff0c\u53e6\u5916\u5176\u6587\u6863\u4e5f\u6bd4\u8f83\u4e30\u5bcc\u3002\u5982\u679c\u503e\u5411\u91c7\u7528\u4e2d\u95f4\u5c42 Proxy \u6a21\u5f0f\uff0c\u5219 Twitter \u5f00\u6e90\u7684 twemproxy[\u9644\u5f55 12.31]\uff08GitHub 7.5k stars\uff09\u548c CodisLab \u5f00\u6e90\u7684 codis[\u9644\u5f55 12.32]\uff08GitHub 6.9k stars\uff09\u662f\u793e\u533a\u6bd4\u8f83\u70ed\u7684\u9009\u9879\u3002 \u5bf9\u4e8e\u5206\u5e03\u5f0f\u6570\u636e\u8bbf\u95ee\u5c42\uff0c\u5982\u679c\u91c7\u7528 Java \u6280\u672f\u6808\uff0c\u5219\u5f53\u5f53\u5f00\u6e90\u7684 shardingjdbc[\u9644\u5f55 12.33]\uff08GitHub 3.5k stars\uff09\u662f\u4e00\u4e2a\u4e0d\u9519\u7684\u9009\u9879\uff0c\u5206\u5e93\u5206\u8868\u903b\u8f91\u505a\u5728\u5ba2\u6237\u7aef jdbc driver \u4e2d\uff0c\u5ba2\u6237\u7aef\u76f4\u8fde\u6570\u636e\u5e93\u6bd4\u8f83\u7b80\u5355\u8f7b\u91cf\uff0c\u5efa\u8bae\u4e2d\u5c0f\u89c4\u6a21\u573a\u666f\u91c7\u7528\u3002\u5982\u679c\u503e\u5411\u91c7\u7528\u6570\u636e\u5e93\u8bbf\u95ee\u4e2d\u95f4\u5c42 proxy \u6a21\u5f0f\uff0c\u5219\u4ece\u963f\u91cc Cobar \u6f14\u5316\u51fa\u6765\u7684\u793e\u533a\u5f00\u6e90\u5206\u5e93\u5206\u8868\u4e2d\u95f4\u4ef6 MyCAT[\u9644\u5f55 12.34]\uff08GitHub 3.6k stars\uff09\u662f\u4e00\u4e2a\u4e0d\u9519\u9009\u62e9 \u3002proxy \u6a21\u5f0f\u8fd0\u7ef4\u6210\u672c\u8f83\u9ad8\uff0c\u5efa\u8bae\u4e2d\u5927\u89c4\u6a21\u573a\u666f\uff0c\u6709\u4e00\u5b9a\u6846\u67b6\u81ea\u7814\u548c\u8fd0\u7ef4\u80fd\u529b\u7684\u56e2\u961f\u91c7\u7528\u3002 \u4efb\u52a1\u8c03\u5ea6\u7cfb\u7edf\uff0c\u4e2a\u4eba\u63a8\u8350\u5f90\u96ea\u91cc\u5f00\u6e90\u7684 xxl-job[\u9644\u5f55 12.35]\uff08GitHub 3.4k stars\uff09\uff0c\u90e8\u7f72\u7b80\u5355\u8f7b\u91cf\uff0c\u5927\u90e8\u5206\u573a\u666f\u591f\u7528\u3002\u5f53\u5f53\u5f00\u6e90\u7684 elastic-job[\u9644\u5f55 12.36]\uff08GitHub 3.2k stars\uff09\u4e5f\u662f\u4e00\u4e2a\u4e0d\u9519\u9009\u62e9\uff0c\u76f8\u6bd4 xxl-job \u529f\u80fd\u66f4\u5f3a\u4e00\u4e9b\u4e5f\u66f4\u590d\u6742\u3002 \u4e5d\u3001\u670d\u52a1\u5b89\u5168\u9009\u578b \u00b6 \u5bf9\u4e8e\u5fae\u670d\u52a1\u5b89\u5168\u8ba4\u8bc1\u6388\u6743\u673a\u5236\u4e00\u5757\uff0c\u76ee\u524d\u4e1a\u754c\u867d\u7136\u6709 OAuth \u548c OpenID connect \u7b49\u6807\u51c6\u534f\u8bae\uff0c\u4f46\u662f\u5404\u5bb6\u5177\u4f53\u5b9e\u73b0\u7684\u505a\u6cd5\u90fd\u4e0d\u592a\u4e00\u6837\uff0c\u4f01\u4e1a\u4e00\u822c\u6709\u5f88\u591a\u7279\u6b8a\u7684\u5b9a\u5236\u9700\u6c42\uff0c\u6574\u4e2a\u793e\u533a\u8fd8\u6ca1\u6709\u5f62\u6210\u901a\u7528\u751f\u4ea7\u7ea7\u5f00\u7bb1\u5373\u7528\u7684\u4ea7\u54c1\u3002\u6709\u4e00\u4e9b\u5f00\u6e90\u6388\u6743\u670d\u52a1\u5668\u4ea7\u54c1\uff0c\u6bd4\u8f83\u77e5\u540d\u7684\u5982 Apereo CAS[\u9644\u5f55 12.37]\uff08GitHub 3.6k stars\uff09\uff0cJBoss \u5f00\u6e90\u7684 keycloak[\u9644\u5f55 12.38]\uff08GitHub 1.9 stars\uff09\uff0cspring cloud security[\u9644\u5f55 12.39] \u7b49\uff0c\u5927\u90fd\u662f opinionated\uff08\u4e00\u5bb6\u89c2\u70b9\u548c\u505a\u6cd5\uff09\u7684\u4ea7\u54c1\uff0c\u540c\u65f6\u56e0\u652f\u6301\u592a\u591a\u534f\u8bae\u9020\u6210\u4ea7\u54c1\u590d\u6742\uff0c\u4e5f\u7f3a\u4e4f\u8db3\u591f\u7075\u6d3b\u6027\u3002\u4e2a\u4eba\u5efa\u8bae\u57fa\u4e8e OAuth \u548c OpenID connect \u6807\u51c6\uff0c\u5728\u53c2\u8003\u4e00\u4e9b\u5f00\u6e90\u4ea7\u54c1\u7684\u57fa\u7840\u4e0a\uff08\u4f8b\u5982 Mitre \u5f00\u6e90\u7684 OpenID-Connect-Java-Spring-Server[\u9644\u5f55 12.40]\uff0cGitHub 0.62k stars\uff09\uff0c\u5b9a\u5236\u81ea\u7814\u8f7b\u91cf\u7ea7\u6388\u6743\u670d\u52a1\u5668\u3002Wso2 \u63d0\u51fa\u4e86\u4e00\u79cd\u5fae\u670d\u52a1\u5b89\u5168\u7684\u53c2\u8003\u65b9\u6848 [\u9644\u5f55 12.45]\uff0c\u5efa\u8bae\u53c2\u8003\uff0c\u8be5\u65b9\u6848\u7684\u5173\u952e\u6b65\u9aa4\u5982\u4e0b\uff1a \u4f7f\u7528\u652f\u6301 OAuth 2.0 \u548c OpenID Connect \u6807\u51c6\u534f\u8bae\u7684\u6388\u6743\u670d\u52a1\u5668\uff08\u4e2a\u4eba\u5efa\u8bae\u5b9a\u5236\u81ea\u7814\uff09\uff1b \u4f7f\u7528 API \u7f51\u5173\u4f5c\u4e3a\u5355\u4e00\u8bbf\u95ee\u5165\u53e3\uff0c\u7edf\u4e00\u5b9e\u73b0\u5b89\u5168\u6cbb\u7406\uff1b \u5ba2\u6237\u5728\u8bbf\u95ee\u5fae\u670d\u52a1\u4e4b\u524d\uff0c\u5148\u901a\u8fc7\u6388\u6743\u670d\u52a1\u5668\u767b\u5f55\u83b7\u53d6 access token\uff0c\u7136\u540e\u5c06 access token \u548c\u8bf7\u6c42\u4e00\u8d77\u53d1\u9001\u5230\u7f51\u5173\uff1b \u7f51\u5173\u83b7\u53d6 access token\uff0c\u901a\u8fc7\u6388\u6743\u670d\u52a1\u5668\u6821\u9a8c token\uff0c\u540c\u65f6\u505a token \u8f6c\u6362\u83b7\u53d6 JWT token\u3002 \u7f51\u5173\u5c06 JWT Token \u548c\u8bf7\u6c42\u4e00\u8d77\u8f6c\u53d1\u5230\u540e\u53f0\u5fae\u670d\u52a1\uff1b JWT \u4e2d\u53ef\u4ee5\u5b58\u50a8\u7528\u6237\u4f1a\u8bdd\u4fe1\u606f\uff0c\u8be5\u4fe1\u606f\u53ef\u4ee5\u4f20\u9012\u7ed9\u540e\u53f0\u7684\u5fae\u670d\u52a1\uff0c\u4e5f\u53ef\u4ee5\u5728\u5fae\u670d\u52a1\u4e4b\u95f4\u4f20\u9012\uff0c\u7528\u4f5c\u8ba4\u8bc1\u6388\u6743\u7b49\u7528\u9014\uff1b \u6bcf\u4e2a\u5fae\u670d\u52a1\u5305\u542b JWT \u5ba2\u6237\u7aef\uff0c\u80fd\u591f\u89e3\u5bc6 JWT \u5e76\u83b7\u53d6\u5176\u4e2d\u7684\u7528\u6237\u4f1a\u8bdd\u4fe1\u606f\u3002 \u6574\u4e2a\u65b9\u6848\u4e2d\uff0caccess token \u662f\u4e00\u79cd by reference token\uff0c\u4e0d\u5305\u542b\u7528\u6237\u4fe1\u606f\u53ef\u4ee5\u76f4\u63a5\u66b4\u9732\u5728\u516c\u7f51\u4e0a\uff1bJWT token \u662f\u4e00\u79cd by value token\uff0c\u53ef\u4ee5\u5305\u542b\u7528\u6237\u4fe1\u606f\u4f46\u4e0d\u66b4\u9732\u5728\u516c\u7f51\u4e0a\u3002 \u5341\u3001\u670d\u52a1\u90e8\u7f72\u5e73\u53f0\u9009\u578b \u00b6 \u5bb9\u5668\u5df2\u7ecf\u88ab\u793e\u533a\u63a5\u53d7\u4e3a\u4ea4\u4ed8\u5fae\u670d\u52a1\u7684\u4e00\u79cd\u7406\u60f3\u624b\u6bb5\uff0c\u53ef\u4ee5\u5b9e\u73b0\u4e0d\u53ef\u53d8\uff08immutable\uff09\u53d1\u5e03\u6a21\u5f0f\u3002\u4e00\u4e2a\u8f7b\u91cf\u7ea7\u7684\u57fa\u4e8e\u5bb9\u5668\u7684\u670d\u52a1\u90e8\u7f72\u5e73\u53f0\u4e3b\u8981\u5305\u62ec\u5bb9\u5668\u8d44\u6e90\u8c03\u5ea6\uff0c\u53d1\u5e03\u7cfb\u7edf\uff0c\u955c\u50cf\u6cbb\u7406\uff0c\u8d44\u6e90\u6cbb\u7406\u548c IAM \u7b49\u6a21\u5757\u3002 \u96c6\u7fa4\u8d44\u6e90\u8c03\u5ea6\u7cfb\u7edf\uff1a\u5c4f\u853d\u5bb9\u5668\u7ec6\u8282\uff0c\u5c06\u6574\u4e2a\u96c6\u7fa4\u62bd\u8c61\u6210\u5bb9\u5668\u8d44\u6e90\u6c60\uff0c\u652f\u6301\u6309\u9700\u7533\u8bf7\u548c\u91ca\u653e\u5bb9\u5668\u8d44\u6e90\uff0c\u7269\u7406\u673a\u53d1\u751f\u6545\u969c\u65f6\u80fd\u591f\u5b9e\u73b0\u81ea\u52a8\u6545\u969c\u8fc1\u79fb (fail over)\u3002\u76ee\u524d Google \u5f00\u6e90\u7684 Kubernetes[\u9644\u5f55 12.41]\uff0c\u5728 Google \u80cc\u4e66\u548c\u793e\u533a\u7684\u5f3a\u529b\u63a8\u52a8\u4e0b\uff0c\u57fa\u672c\u5df2\u7ecf\u5f62\u6210\u5e02\u573a\u9886\u5bfc\u8005\u5730\u4f4d\uff0cGitHub \u4e0a\u6709 31.8k \u661f\uff0c\u793e\u533a\u7684\u6d3b\u8dc3\u5ea6\u5df2\u7ecf\u8fdc\u8fdc\u8d85\u8fc7\u4e86 mesos[\u9644\u5f55 12.42]\uff08GitHub 3.5k stars\uff09\u548c swarm \u7b49\u7ade\u4e89\u4ea7\u54c1\uff0c\u6240\u4ee5\u5bb9\u5668\u8d44\u6e90\u8c03\u5ea6\u5efa\u8bae\u9996\u9009 K8s\u3002\u5f53\u7136\u5982\u679c\u4f60\u7684\u56e2\u961f\u6709\u8db3\u591f\u5b9a\u5236\u81ea\u7814\u80fd\u529b\uff0c\u60f3\u6df1\u5ea6\u628a\u63a7\u5e95\u5c42\u8c03\u5ea6\u7b97\u6cd5\uff0c\u4e5f\u53ef\u4ee5\u57fa\u4e8e Mesos \u505a\u5b9a\u5236\u81ea\u7814\u3002 \u955c\u50cf\u6cbb\u7406\uff1a\u57fa\u4e8e Docker Registry\uff0c\u5c01\u88c5\u4e00\u4e9b\u8f7b\u91cf\u7ea7\u7684\u6cbb\u7406\u529f\u80fd\u3002VMware \u5f00\u6e90\u7684 harbor[\u9644\u5f55 12.43] (GitHub 3.5k stars) \u662f\u76ee\u524d\u793e\u533a\u6bd4\u8f83\u6210\u719f\u7684\u4f01\u4e1a\u7ea7\u4ea7\u54c1\uff0c\u5728 Docker Registry \u57fa\u7840\u4e0a\u6269\u5c55\u4e86\u6743\u9650\u63a7\u5236\uff0c\u5ba1\u8ba1\uff0c\u955c\u50cf\u540c\u6b65\uff0c\u7ba1\u7406\u754c\u9762\u7b49\u6cbb\u7406\u80fd\u529b\uff0c\u53ef\u4ee5\u8003\u8651\u91c7\u7528\u3002 \u8d44\u6e90\u6cbb\u7406\uff1a\u7c7b\u4f3c\u4e8e CMDB \u601d\u8def\uff0c\u5728\u5bb9\u5668\u4e91\u73af\u5883\u4e2d\uff0c\u4f01\u4e1a\u4ecd\u7136\u9700\u8981\u5bf9\u5e94\u7528 app\uff0c\u7ec4\u7ec7 org\uff0c\u5bb9\u5668\u914d\u989d\u548c\u6570\u91cf\u7b49\u76f8\u5173\u4fe1\u606f\u8fdb\u884c\u8f7b\u91cf\u7ea7\u7684\u6cbb\u7406\u3002\u76ee\u524d\u8fd9\u5757\u8fd8\u6ca1\u6709\u751f\u4ea7\u7ea7\u7684\u5f00\u6e90\u4ea7\u54c1\uff0c\u4e00\u822c\u4f01\u4e1a\u9700\u8981\u6839\u636e\u81ea\u5df1\u7684\u573a\u666f\u5b9a\u5236\u81ea\u7814\u3002 \u53d1\u5e03\u5e73\u53f0\uff1a\u9762\u5411\u7528\u6237\u7684\u53d1\u5e03\u7ba1\u7406\u63a7\u5236\u53f0\uff0c\u652f\u6301\u53d1\u5e03\u6d41\u7a0b\u7f16\u6392\u3002\u5b83\u548c\u5176\u5b83\u5b50\u7cfb\u7edf\u5bf9\u63a5\u4ea4\u4e92\uff0c\u5b9e\u73b0\u57fa\u672c\u7684\u5e94\u7528\u53d1\u5e03\u80fd\u529b\uff0c\u4e5f\u5b9e\u73b0\u5982\u84dd\u7eff\uff0c\u91d1\u4e1d\u96c0\u548c\u7070\u5ea6\u7b49\u9ad8\u7ea7\u53d1\u5e03\u673a\u5236\u3002\u76ee\u524d\u8fd9\u5757\u751f\u4ea7\u7ea7\u7684\u5f00\u6e90\u4ea7\u54c1\u5f88\u5c11\uff0cNetflix \u5f00\u6e90\u7684 spinnaker[\u9644\u5f55 12.44]\uff08github 4.2k stars\uff09\u662f\u4e00\u4e2a\uff0c\u4f46\u662f\u8fd9\u4e2a\u4ea7\u54c1\u6bd4\u8f83\u590d\u6742\u91cd\u91cf\uff08\u56e0\u4e3a\u5b83\u65e2\u8981\u652f\u6301\u9002\u914d\u5bf9\u63a5\u5404\u79cd CI \u7cfb\u7edf\uff0c\u540c\u65f6\u8fd8\u8981\u9002\u914d\u5bf9\u63a5\u5404\u79cd\u516c\u6709\u4e91\u548c\u5bb9\u5668\u4e91\uff0c\u4f7f\u5f97\u6574\u4e2a\u7cfb\u7edf\u5f02\u5e38\u590d\u6742\uff09\uff0c\u4e00\u822c\u4f01\u4e1a\u5efa\u8bae\u6839\u636e\u81ea\u5df1\u7684\u573a\u666f\u5b9a\u5236\u81ea\u7814\u8f7b\u91cf\u7ea7\u7684\u89e3\u51b3\u65b9\u6848\u3002 IAM\uff1a\u662f identity & access management \u7684\u7b80\u79f0\uff0c\u5bf9\u53d1\u5e03\u5e73\u53f0\u5404\u4e2a\u7ec4\u4ef6\u8fdb\u884c\u8eab\u4efd\u8ba4\u8bc1\u548c\u5b89\u5168\u8bbf\u95ee\u63a7\u5236\u3002\u793e\u533a\u6709\u4e0d\u5c11\u5f00\u6e90\u7684 IAM \u4ea7\u54c1\uff0c\u6bd4\u8f83\u77e5\u540d\u7684\u6709 Apereo CAS\uff08GitHub 3.6k stars\uff09\uff0cJBoss \u5f00\u6e90\u7684 keycloak\uff08GitHub 1.9 stars\uff09\u7b49\u3002\u4f46\u662f\u8fd9\u4e9b\u4ea7\u54c1\u4e00\u822c\u90fd\u6bd4\u8f83\u590d\u6742\u91cd\u91cf\uff0c\u5f88\u591a\u4f01\u4e1a\u8003\u8651\u5230\u5185\u90e8\u5404\u79cd\u7cfb\u7edf\u7075\u6d3b\u5bf9\u63a5\u7684\u9700\u6c42\uff0c\u90fd\u4f1a\u8003\u8651\u5b9a\u5236\u81ea\u7814\u8f7b\u91cf\u7ea7\u7684\u89e3\u51b3\u65b9\u6848\u3002 \u8003\u8651\u5230\u670d\u52a1\u90e8\u7f72\u5e73\u53f0\u76ee\u524d\u8fd8\u6ca1\u6709\u7aef\u5230\u7aef\u751f\u4ea7\u7ea7\u89e3\u51b3\u65b9\u6848\uff0c\u4f01\u4e1a\u4e00\u822c\u9700\u8981\u5b9a\u5236\u96c6\u6210\uff0c\u4e0b\u9762\u7ed9\u51fa\u4e00\u4e2a\u53ef\u4ee5\u53c2\u8003\u7684\u5177\u5907\u8f7b\u91cf\u7ea7\u6cbb\u7406\u80fd\u529b\u7684\u53d1\u5e03\u4f53\u7cfb\uff1a \u7b80\u5316\u53d1\u5e03\u6d41\u7a0b\u5982\u4e0b\uff1a \u5e94\u7528\u901a\u8fc7 CI \u96c6\u6210\u540e\u751f\u6210\u955c\u50cf\uff0c\u7528\u6237\u5c06\u955c\u50cf\u63a8\u5230\u955c\u50cf\u6cbb\u7406\u4e2d\u5fc3\uff1b \u7528\u6237\u5728\u8d44\u4ea7\u6cbb\u7406\u4e2d\u5fc3\u7533\u8bf7\u53d1\u5e03\uff0c\u586b\u62a5\u5e94\u7528\uff0c\u53d1\u5e03\u548c\u914d\u989d\u76f8\u5173\u4fe1\u606f\uff0c\u7136\u540e\u7b49\u5f85\u5ba1\u6279\u901a\u8fc7\uff1b \u53d1\u5e03\u5ba1\u6279\u901a\u8fc7\uff0c\u5f00\u53d1\u4eba\u5458\u901a\u8fc7\u53d1\u5e03\u63a7\u5236\u53f0\u53d1\u5e03\u5e94\u7528\uff1b \u53d1\u5e03\u7cfb\u7edf\u901a\u8fc7\u67e5\u8be2\u8d44\u4ea7\u6cbb\u7406\u4e2d\u5fc3\u83b7\u53d6\u53d1\u5e03\u89c4\u683c\u4fe1\u606f\uff1b \u53d1\u5e03\u7cfb\u7edf\u5411\u5bb9\u5668\u4e91\u53d1\u51fa\u542f\u52a8\u5bb9\u5668\u5b9e\u4f8b\u6307\u4ee4\uff1b \u5bb9\u5668\u4e91\u4ece\u955c\u50cf\u6cbb\u7406\u4e2d\u5fc3\u62c9\u53d6\u955c\u50cf\u5e76\u542f\u52a8\u5bb9\u5668\uff1b \u5bb9\u5668\u5185\u670d\u52a1\u542f\u52a8\u540e\u81ea\u6ce8\u518c\u5230\u670d\u52a1\u6ce8\u518c\u4e2d\u5fc3\uff0c\u5e76\u4fdd\u6301\u5b9a\u671f\u5fc3\u8df3\uff1b \u7528\u6237\u901a\u8fc7\u53d1\u5e03\u7cfb\u7edf\u8c03\u7528\u670d\u52a1\u6ce8\u518c\u4e2d\u5fc3\u8c03\u62e8\u6d41\u91cf\uff0c\u5b9e\u73b0\u84dd\u7eff\uff0c\u91d1\u4e1d\u96c0\u6216\u7070\u5ea6\u53d1\u5e03\u7b49\u673a\u5236\uff1b \u7f51\u5173\u548c\u5185\u90e8\u5fae\u670d\u52a1\u5ba2\u6237\u7aef\u5b9a\u671f\u540c\u6b65\u670d\u52a1\u6ce8\u518c\u4e2d\u5fc3\u4e0a\u7684\u670d\u52a1\u8def\u7531\u8868\uff0c\u5c06\u6d41\u91cf\u6309\u8d1f\u8f7d\u5747\u8861\u7b56\u7565\u5206\u53d1\u5230\u65b0\u7684\u670d\u52a1\u5b9e\u4f8b\u4e0a\u3002 \u53e6\u5916\uff0c\u6301\u7eed\u4ea4\u4ed8\u6d41\u6c34\u7ebf\uff08CD Pipeline\uff09\u4e5f\u662f\u5fae\u670d\u52a1\u53d1\u5e03\u91cd\u8981\u73af\u8282\uff0c\u8fd9\u5757\u4e3b\u8981\u548c\u7814\u53d1\u6d41\u7a0b\u76f8\u5173\uff0c\u4e00\u822c\u9700\u8981\u4f01\u4e1a\u5b9a\u5236\uff0c\u4e0b\u9762\u662f\u4e00\u4e2a\u53ef\u4f9b\u53c2\u8003\u7684\u6d41\u6c34\u7ebf\u6a21\u578b\uff0c\u5728\u955c\u50cf\u6cbb\u7406\u4e2d\u5fc3\u4e0a\u5c01\u88c5\u4e00\u4e9b\u8f7b\u91cf\u7ea7\u7684\u6cbb\u7406\u6d41\u7a0b\uff0c\u4f8b\u5982\u53ea\u6709\u901a\u8fc7\u6d4b\u8bd5\u73af\u5883\u6d4b\u8bd5\u7684\u955c\u50cf\u624d\u80fd\u5347\u7ea7\u53d1\u5e03\u5230 UAT \u73af\u5883\uff0c\u53ea\u6709\u901a\u8fc7 UAT \u73af\u5883\u6d4b\u8bd5\u7684\u955c\u50cf\u624d\u80fd\u5347\u7ea7\u53d1\u5e03\u5230\u751f\u4ea7\u73af\u5883\uff0c\u901a\u8fc7\u5728\u6d41\u6c34\u7ebf\u4e0a\u8bbe\u7f6e\u4e00\u4e9b\u8d28\u91cf\u95e8\uff0c\u4fdd\u969c\u5e94\u7528\u9ad8\u8d28\u91cf\u4ea4\u4ed8\u5230\u751f\u4ea7\u3002 \u5341\u4e00\u3001\u5199\u5728\u6700\u540e \u00b6 \u6ce8\u610f\uff0c\u672c\u6587\u9650\u4e8e\u7bc7\u5e45\uff0c\u5bf9\u6d4b\u8bd5\u548c CI \u7b49\u73af\u8282\u6ca1\u6709\u6d89\u53ca\uff0c\u4f46\u5b83\u4eec\u540c\u6837\u662f\u6784\u5efa\u5fae\u670d\u52a1\u67b6\u6784\u7684\u91cd\u8981\u73af\u8282\uff0c\u4e5f\u6709\u4f17\u591a\u6210\u719f\u7684\u5f00\u6e90\u4ea7\u54c1\u53ef\u9009\u3002 \u6280\u672f\u9009\u578b\u867d\u7136\u91cd\u8981\uff0c\u4f46\u8fd8\u53ea\u662f\u5fae\u670d\u52a1\u5efa\u8bbe\u7684\u4e00\u5c0f\u90e8\u5206\u5de5\u4f5c\uff0c\u9009\u578b\u540e\u7684\u4ea7\u54c1\u8981\u5728\u4f01\u4e1a\u5185\u90e8\u771f\u6b63\u843d\u5730\uff0c\u5f62\u6210\u5b8c\u6574\u7684\u5fae\u670d\u52a1\u6280\u672f\u6808\u4f53\u7cfb\uff0c\u5219\u540e\u7eed\u8fd8\u6709\u5927\u91cf\u96c6\u6210\u3001\u5b9a\u5236\u3001\u6cbb\u7406\u3001\u8fd0\u7ef4\u548c\u63a8\u5e7f\u7b49\u5de5\u4f5c\u3002 \u672c\u6587\u4ec5\u9650\u4e2a\u4eba\u7ecf\u9a8c\u89c6\u89d2\uff0c\u9009\u578b\u601d\u8def\u4ec5\u4f9b\u53c2\u8003\u501f\u9274\u3002\u6bcf\u4e2a\u4f01\u4e1a\u7684\u5177\u4f53\u4e0a\u4e0b\u6587\uff08\u4e1a\u52a1\u573a\u666f\uff0c\u56e2\u961f\u7ec4\u7ec7\uff0c\u6280\u672f\u67b6\u6784\u7b49\uff09\u5404\u4e0d\u76f8\u540c\uff0c\u6bcf\u4e2a\u67b6\u6784\u5e08\u7684\u80cc\u666f\u7ecf\u9a8c\u4e5f\u5404\u4e0d\u76f8\u540c\uff0c\u5927\u5bb6\u8981\u7ed3\u5408\u5b9e\u9645\u81ea\u5df1\u505a\u51fa\u9009\u578b\uff0c\u6ca1\u6709\u6700\u597d\u7684\u6280\u672f\u6808\uff0c\u53ea\u6709\u76f8\u5bf9\u8f83\u5408\u9002\u7684\u6280\u672f\u6808\u3002\u53e6\u5916\uff0c\u597d\u7684\u6280\u672f\u9009\u578b\u662f\u76f8\u4e92\u501f\u9274\u751a\u81f3 PK \u51fa\u6765\u7684\uff0c\u6b22\u8fce\u5927\u5bb6\u8ba8\u8bba\uff0c\u7ed9\u51fa\u81ea\u5df1\u7684\u5fae\u670d\u52a1 2.0 \u6280\u672f\u6808\u9009\u578b\u610f\u89c1\u3002 \u5341\u4e8c\u3001\u9644\u5f55\u94fe\u63a5 \u00b6 Spring Boot https://github.com/spring-projects/spring-boot Alibaba Dubbo https://github.com/alibaba/dubbo Google gRPC https://github.com/grpc/grpc NetflixOSS Eureka https://github.com/Netflix/eureka Hashicorp Consul https://github.com/hashicorp/consul NetflixOSS Zuul https://github.com/Netflix/zuul Kong https://github.com/Kong/kong Spring Cloud Config https://github.com/spring-cloud/spring-cloud-config CTrip Apollo https://github.com/ctripcorp/apollo ElasticSearch https://github.com/elastic/elasticsearch Yelp Elastalert https://github.com/Yelp/elastalert Dianping CAT https://github.com/dianping/cat Zipkin https://github.com/openzipkin/zipkin Naver Pinpoint https://github.com/naver/pinpoint OpenTSDB https://github.com/OpenTSDB/opentsdb KairosDB https://github.com/kairosdb/kairosdb Argus https://github.com/salesforce/Argus InfluxDB https://github.com/influxdata/influxdb Prometheus https://github.com/prometheus/prometheus Grafana https://github.com/grafana/grafana Sensu https://github.com/sensu/sensu Esty 411 https://github.com/etsy/411 Zalando ZMon https://github.com/zalando/zmon NetflixOSS Hystrix https://github.com/Netflix/Hystrix Nginx https://github.com/nginx/nginx Apache Kafka https://github.com/apache/kafka Allegro Hermes https://github.com/allegro/hermes Apache Rocketmq https://github.com/apache/rocketmq Rabbitmq https://github.com/rabbitmq/rabbitmq-server Sohutv CacheCloud https://github.com/sohutv/cachecloud Twitter twemproxy https://github.com/twitter/twemproxy CodisLab codis https://github.com/CodisLabs/codis Dangdang Sharding-jdbc https://github.com/shardingjdbc/sharding-jdbc MyCAT https://github.com/MyCATApache/Mycat-Server Xxl-job https://github.com/xuxueli/xxl-job Dangdang elastic-job https://github.com/elasticjob/elastic-job-lite Apereo CAS https://github.com/apereo/cas JBoss keycloak https://github.com/keycloak/keycloak Spring cloud security https://github.com/spring-cloud/spring-cloud-security OpenID-Connect-Java-Spring-Server https://github.com/mitreid-connect/OpenID-Connect-Java-Spring-Server Google Kubernetes https://github.com/kubernetes/kubernetes Apache Mesos https://github.com/apache/mesos Vmware Harbor https://github.com/vmware/harbor Netflix Spinnaker https://github.com/spinnaker/spinnaker Microservices in Practice \u2013 Key Architecture Concepts of an MSA https://wso2.com/whitepapers/microservices-in-practice-key-architectural-concepts-of-an-msa/","title":"Micro-Service"},{"location":"exp/micro-service/#_1","text":"2014~2018\uff0c\u5fae\u670d\u52a1\u7ecf\u8fc7\u4e09\u5e74\u7684\u53d1\u5c55\uff0c\u73b0\u72b6\u5982\u4f55\uff1f\u8fd9\u662f\u4e00\u4efd\u4e3a\u8ba9\u4f60\u66f4\u597d\u4f7f\u7528\u5fae\u670d\u52a1\u7684\u6280\u672f\u7ad9\u9009\u578b\u624b\u518c\u3002\u9664\u6b64\u4e4b\u5916\uff0c\u4f60\u8fd8\u53ef\u4ee5\u6309\u9700\u9009\u7528\u914d\u5957\u7684\u5fae\u670d\u52a1\u67b6\u6784\u89c6\u9891\u5185\u5bb9\u3002","title":"\u5fae\u670d\u52a1\u67b6\u6784\u6280\u672f\u6808\u9009\u578b\u624b\u518c"},{"location":"exp/micro-service/#_2","text":"2014 \u5e74\u53ef\u4ee5\u8ba4\u4e3a\u662f\u5fae\u670d\u52a1 1.0 \u7684\u5143\u5e74\uff0c\u5f53\u5e74\u6709\u51e0\u4e2a\u6807\u5fd7\u6027\u4e8b\u4ef6\uff0c\u4e00\u662f Martin Fowler \u5728\u5176\u535a\u5ba2\u4e0a\u53d1\u8868\u4e86\u201dMicroservices\u201d\u4e00\u6587\uff0c\u6b63\u5f0f\u63d0\u51fa\u5fae\u670d\u52a1\u67b6\u6784\u98ce\u683c\uff1b\u4e8c\u662f Netflix \u5fae\u670d\u52a1\u67b6\u6784\u7ecf\u8fc7\u591a\u5e74\u5927\u89c4\u6a21\u751f\u4ea7\u9a8c\u8bc1\uff0c\u6700\u7ec8\u62bd\u8c61\u843d\u5730\u5f62\u6210\u4e00\u6574\u5957\u5f00\u6e90\u7684\u5fae\u670d\u52a1\u57fa\u7840\u7ec4\u4ef6\uff0c\u7edf\u79f0 NetflixOSS\uff0cNetflix \u7684\u6210\u529f\u7ecf\u9a8c\u5f00\u59cb\u88ab\u4e1a\u754c\u8ba4\u53ef\u5e76\u63a8\u5d07\uff1b\u4e09\u662f Pivotal \u5c06 NetflixOSS \u5f00\u6e90\u5fae\u670d\u52a1\u7ec4\u4ef6\u96c6\u6210\u5230\u5176 Spring \u4f53\u7cfb\uff0c\u63a8\u51fa Spring Cloud \u5fae\u670d\u52a1\u5f00\u53d1\u6280\u672f\u6808\u3002 \u4e00\u6643\u4e09\u5e74\u8fc7\u53bb\uff0c\u5fae\u670d\u52a1\u6280\u672f\u751f\u6001\u53c8\u53d1\u751f\u4e86\u5de8\u5927\u53d8\u5316\uff0c\u5bb9\u5668\uff0cPaaS\uff0cCloud Native\uff0cgRPC\uff0cServiceMesh\uff0cServerless \u7b49\u65b0\u6280\u672f\u65b0\u7406\u5ff5\u4f60\u65b9\u5531\u7f62\u6211\u767b\u573a\uff0c\u4e0d\u77e5\u4e0d\u89c9\u6211\u4eec\u53c8\u6765\u5230\u4e86\u5fae\u670d\u52a1 2.0 \u65f6\u4ee3\u3002 \u57fa\u4e8e\u8fd1\u5e74\u5728\u5fae\u670d\u52a1\u57fa\u7840\u67b6\u6784\u65b9\u9762\u7684\u5b9e\u6218\u7ecf\u9a8c\u548c\u5e73\u65f6\u7684\u5b66\u4e60\u79ef\u7d2f\uff0c\u6211\u60f3\u603b\u7ed3\u5e76\u63d0\u51fa\u4e00\u4e9b\u6784\u5efa\u5fae\u670d\u52a1 2.0 \u6280\u672f\u6808\u7684\u9009\u578b\u601d\u8def\uff0c\u4f9b\u5404\u4f4d\u5728\u4e00\u7ebf\u5b9e\u6218\u7684\u67b6\u6784\u5e08\u3001\u5de5\u7a0b\u5e08\u53c2\u8003\u501f\u9274\u3002\u5bf9\u4e8e\u4e00\u4e9b\u6682\u65f6\u8fd8\u6ca1\u6709\u6210\u719f\u5f00\u6e90\u4ea7\u54c1\u7684\u5fae\u670d\u52a1\u652f\u6491\u6a21\u5757\uff0c\u6211\u4e5f\u4f1a\u7ed9\u51fa\u4e00\u4e9b\u5b9a\u5236\u81ea\u7814\u7684\u8bbe\u8ba1\u601d\u8def\u3002","title":"\u4e00\u3001\u524d\u8a00"},{"location":"exp/micro-service/#_3","text":"\u5bf9\u4e8e\u6280\u672f\u9009\u578b\uff0c\u6211\u4e2a\u4eba\u6709\u5f88\u591a\u6807\u51c6\uff0c\u5176\u4e2d\u4e0b\u9762\u4e09\u9879\u662f\u6700\u91cd\u8981\u7684\uff1a","title":"\u4e8c\u3001\u9009\u578b\u51c6\u5219"},{"location":"exp/micro-service/#1","text":"\u6211\u4eec\u9009\u62e9\u7684\u6280\u672f\u6808\u662f\u8981\u89e3\u51b3\u5b9e\u9645\u4e1a\u52a1\u95ee\u9898\u548c\u4e0a\u751f\u4ea7\u6297\u6d41\u91cf\u7684\uff08\u9009\u62e9\u4e0d\u614e\u53ef\u80fd\u9020\u6210\u751f\u4ea7\u7ea7\u4e8b\u6545\uff09\uff0c\u800c\u4e0d\u662f\u7b80\u5355\u505a\u4e2a POC \u6216\u8005 Demo \u5c55\u793a\uff0c\u6240\u4ee5\u751f\u4ea7\u7ea7\uff08Production Ready\uff09\uff0c\u53ef\u8fd0\u7ef4\uff08Ops Ready\uff09\uff0c\u53ef\u6cbb\u7406\uff0c\u6210\u719f\u7a33\u5b9a\u7684\u6280\u672f\u624d\u662f\u6211\u4eec\u7684\u9996\u9009\uff1b","title":"1. \u751f\u4ea7\u7ea7"},{"location":"exp/micro-service/#2","text":"\u6211\u4eec\u4f1a\u5c3d\u91cf\u91c7\u7528\u5728\u4e00\u7ebf\u4e92\u8054\u7f51\u516c\u53f8\u843d\u5730\u5e76\u4e14\u5f00\u6e90\u7684\uff0c\u4e14\u5728\u793e\u533a\u5185\u5f62\u6210\u826f\u597d\u53e3\u7891\u7684\u4ea7\u54c1\uff0c\u5b83\u4eec\u5df2\u7ecf\u5728\u8fd9\u4e9b\u516c\u53f8\u7ecf\u8fc7\u6d41\u91cf\u51b2\u51fb\uff0c\u5751\u5df2\u7ecf\u57fa\u672c\u88ab\u586b\u5e73\uff0c\u4e14\u88ab\u793e\u533a\u63a5\u53d7\u5f62\u6210\u4e00\u4e2a\u826f\u597d\u7684\u793e\u533a\u751f\u6001\uff08\u672c\u6587\u9644\u5f55\u90e8\u5206\u4f1a\u7ed9\u51fa\u6240\u6709\u63a8\u8350\u4f7f\u7528\u6216\u53c2\u8003\u7684\u5f00\u6e90\u9879\u76ee\u7684 GitHub \u94fe\u63a5\uff09\u3002","title":"2. \u4e00\u7ebf\u4e92\u8054\u7f51\u516c\u53f8\u843d\u5730\u4ea7\u54c1"},{"location":"exp/micro-service/#3","text":"GitHub \u4e0a\u7684 stars \u7684\u6570\u91cf\u662f\u4e00\u4e2a\u91cd\u8981\u6307\u6807\uff0c\u540c\u65f6\u4f1a\u53c2\u8003\u5176\u4ee3\u7801\u548c\u6587\u6863\u66f4\u65b0\u9891\u7387\uff08\u5c24\u5176\u662f\u8fd1\u5e74\uff09\uff0c\u8fd9\u4e9b\u6307\u6807\u76f4\u63a5\u53cd\u5e94\u5f00\u6e90\u4ea7\u54c1\u7684\u793e\u533a\u6d3b\u8dc3\u5ea6\u6216\u8005\u8bf4\u751f\u547d\u529b\u3002 \u53e6\u5916\uff0c\u5bf9\u4e8e\u4e0d\u540c\u4e1a\u52a1\u4f53\u91cf\u548c\u56e2\u961f\u89c4\u6a21\u7684\u516c\u53f8\uff0c\u6280\u672f\u9009\u578b\u6807\u51c6\u5f80\u5f80\u662f\u4e0d\u540c\u7684\uff0c\u521b\u4e1a\u516c\u53f8\u7684\u6280\u672f\u9009\u578b\u548c BAT \u7ea7\u522b\u516c\u53f8\u7684\u6280\u672f\u9009\u578b\u6807\u51c6\u53ef\u80fd\u5b8c\u5168\u4e0d\u540c\u3002\u672c\u6587\u4e3b\u8981\u9488\u5bf9\u65e5\u6d41\u91cf\u5343\u4e07\u4ee5\u4e0a\uff0c\u7814\u53d1\u56e2\u961f\u89c4\u6a21\u4e0d\u5c11\u4e8e 50 \u4eba\u7684\u516c\u53f8\uff0c\u5982\u679c\u5c0f\u4e8e\u8fd9\u4e2a\u89c4\u6a21\u6211\u5efa\u8bae\u8ba4\u771f\u8bc4\u4f30\u662f\u5426\u771f\u7684\u9700\u8981\u91c7\u7528\u5fae\u670d\u52a1\u67b6\u6784\u3002\u8003\u8651\u5230 Java \u8bed\u8a00\u5728\u56fd\u5185\u7684\u6d41\u884c\u5ea6\u548c\u6211\u4e2a\u4eba\u7684\u80cc\u666f\u7ecf\u9a8c\uff0c\u672c\u6587\u4e3b\u8981\u9488\u5bf9\u91c7\u7528 Java \u6280\u672f\u6808\u7684\u4f01\u4e1a\u3002\u672c\u6587\u4e5f\u5047\u5b9a\u81ea\u5efa\u5fae\u670d\u52a1\u57fa\u7840\u67b6\u6784\uff0c\u6709\u4e9b\u4ea7\u54c1\u5176\u5b9e\u6709\u5bf9\u5e94\u7684\u4e91\u670d\u52a1\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\uff0c\u81ea\u5efa\u548c\u91c7\u7528\u4e91\u670d\u52a1\u5404\u6709\u5229\u5f0a\uff0c\u67b6\u6784\u5e08\u9700\u8981\u6839\u636e\u573a\u666f\u4e0a\u4e0b\u6587\u7efc\u5408\u6743\u8861\u3002","title":"3. \u5f00\u6e90\u793e\u533a\u6d3b\u8dc3\u5ea6"},{"location":"exp/micro-service/#_4","text":"\u4e0b\u9762\u8111\u56fe\u4e2d\u8292\u679c\u8272\u6807\u6ce8\u7684\u4e03\u4e2a\u6a21\u5757\uff0c\u6211\u8ba4\u4e3a\u662f\u6784\u5efa\u5fae\u670d\u52a1 2.0 \u6280\u672f\u6808\u7684\u6838\u5fc3\u6a21\u5757\uff0c\u672c\u6587\u540e\u9762\u7684\u9009\u578b\u4f1a\u5206\u522b\u57fa\u4e8e\u8fd9\u4e9b\u6a21\u5757\u5c55\u5f00\u3002\u5bf9\u4e8e\u6bcf\u4e2a\u6a21\u5757\u6211\u4e5f\u5217\u51fa\u4e00\u4e9b\u6838\u5fc3\u67b6\u6784\u5173\u6ce8\u70b9\uff0c\u5728\u9009\u62e9\u5177\u4f53\u4ea7\u54c1\u65f6\uff0c\u9700\u8981\u5c3d\u53ef\u80fd\u8986\u76d6\u5230\u8fd9\u4e9b\u5173\u6ce8\u70b9\u3002 \u4e0b\u56fe\u662f\u6211\u8fd1\u671f\u5de5\u4f5c\u603b\u7ed3\u548c\u53c2\u8003\u7684\u4e00\u4e2a\u5fae\u670d\u52a1\u6280\u672f\u4f53\u7cfb\uff0c\u6211\u60f3\u540c\u65f6\u5206\u4eab\u7ed9\u4e00\u7ebf\u67b6\u6784\u5e08\u6216\u8005\u5de5\u7a0b\u5e08\u53c2\u8003\uff0c\u5176\u4e2d\u7c89\u7ea2\u8272\u6807\u6ce8\u7684\u6a21\u5757\u662f\u548c\u5fae\u670d\u52a1\u5173\u7cfb\u6700\u5bc6\u5207\u7684\u6a21\u5757\uff0c\u5927\u5bb6\u5728\u505a\u6280\u672f\u9009\u578b\u65f6\uff0c\u53ef\u4ee5\u540c\u65f6\u5bf9\u7167\u8fd9\u4e2a\u4f53\u7cfb\u3002","title":"\u4e09\u3001\u5fae\u670d\u52a1\u57fa\u7840\u67b6\u6784\u5173\u952e\u70b9"},{"location":"exp/micro-service/#_5","text":"\u670d\u52a1\u6846\u67b6\u662f\u4e00\u4e2a\u6bd4\u8f83\u6210\u719f\u7684\u9886\u57df\uff0c\u6709\u592a\u591a\u53ef\u9009\u9879\u3002Spring Boot/Cloud[\u9644\u5f55 12.1] \u7531\u4e8e Spring \u793e\u533a\u7684\u5f71\u54cd\u529b\u548c Netflix \u7684\u80cc\u4e66\uff0c\u76ee\u524d\u53ef\u4ee5\u8ba4\u4e3a\u662f\u6784\u5efa Java \u5fae\u670d\u52a1\u7684\u4e00\u4e2a\u793e\u533a\u6807\u51c6\uff0cSpring Boot \u76ee\u524d\u5728 GitHub \u4e0a\u6709\u8d85\u8fc7 20k \u661f\u3002 \u57fa\u4e8e Spring \u7684\u6846\u67b6\u672c\u8d28\u4e0a\u53ef\u4ee5\u8ba4\u4e3a\u662f\u4e00\u79cd RESTful \u6846\u67b6\uff08\u4e0d\u662f RPC \u6846\u67b6\uff09\uff0c\u5e8f\u5217\u5316\u534f\u8bae\u4e3b\u8981\u91c7\u7528\u57fa\u4e8e\u6587\u672c\u7684 JSON\uff0c\u901a\u8baf\u534f\u8bae\u4e00\u822c\u57fa\u4e8e HTTP\u3002RESTful \u6846\u67b6\u5929\u7136\u652f\u6301\u8de8\u8bed\u8a00\uff0c\u4efb\u4f55\u8bed\u8a00\u53ea\u8981\u6709 HTTP \u5ba2\u6237\u7aef\u90fd\u53ef\u4ee5\u63a5\u5165\u8c03\u7528\uff0c\u4f46\u662f\u5ba2\u6237\u7aef\u4e00\u822c\u9700\u8981\u81ea\u5df1\u89e3\u6790 payload\u3002\u76ee\u524d Spring \u6846\u67b6\u4e5f\u652f\u6301 Swagger \u5951\u7ea6\u7f16\u7a0b\u6a21\u578b\uff0c\u80fd\u591f\u57fa\u4e8e\u5951\u7ea6\u751f\u6210\u5404\u79cd\u8bed\u8a00\u7684\u5f3a\u7c7b\u578b\u5ba2\u6237\u7aef\uff0c\u6781\u5927\u65b9\u4fbf\u4e0d\u540c\u8bed\u8a00\u6808\u7684\u5e94\u7528\u63a5\u5165\uff0c\u4f46\u662f\u56e0\u4e3a RESTful \u6846\u67b6\u548c Swagger \u89c4\u8303\u7684\u5f31\u5951\u7ea6\u7279\u6027\uff0c\u751f\u6210\u7684\u5404\u79cd\u8bed\u8a00\u5ba2\u6237\u7aef\u7684\u4e92\u64cd\u4f5c\u6027\u8fd8\u662f\u6709\u4e0d\u5c11\u5751\u7684\u3002 Dubbo[\u9644\u5f55 12.2] \u662f\u963f\u91cc\u591a\u5e74\u6784\u5efa\u751f\u4ea7\u7ea7\u5206\u5e03\u5f0f\u5fae\u670d\u52a1\u7684\u6280\u672f\u7ed3\u6676\uff0c\u670d\u52a1\u6cbb\u7406\u80fd\u529b\u975e\u5e38\u4e30\u5bcc\uff0c\u5728\u56fd\u5185\u6280\u672f\u793e\u533a\u5177\u6709\u5f88\u5927\u5f71\u54cd\u529b\uff0c\u76ee\u524d github \u4e0a\u6709\u8d85\u8fc7 16k \u661f\u3002Dubbo \u672c\u8d28\u4e0a\u662f\u4e00\u5957\u57fa\u4e8e Java \u7684 RPC \u6846\u67b6\uff0c\u5f53\u5f53 Dubbox \u6269\u5c55\u4e86 Dubbo \u652f\u6301 RESTful \u63a5\u53e3\u66b4\u9732\u80fd\u529b\u3002 Dubbo \u4e3b\u8981\u9762\u5411 Java \u6280\u672f\u6808\uff0c\u8de8\u8bed\u8a00\u652f\u6301\u4e0d\u8db3\u662f\u5b83\u7684\u4e00\u4e2a\u5f31\u9879\uff0c\u53e6\u5916\u56e0\u4e3a\u6cbb\u7406\u80fd\u529b\u592a\u4e30\u5bcc\uff0c\u4ee5\u81f3\u4e8e\u8fd9\u4e2a\u6846\u67b6\u6bd4\u8f83\u91cd\uff0c\u5b8c\u5168\u7528\u597d\u8fd9\u4e2a\u6846\u67b6\u7684\u95e8\u69db\u6bd4\u8f83\u9ad8\uff0c\u4f46\u662f\u5982\u679c\u4f60\u7684\u4f01\u4e1a\u57fa\u672c\u4e0a\u6295\u8d44\u5728 Java \u6280\u672f\u6808\u4e0a\uff0c\u9009 Dubbo \u53ef\u4ee5\u8ba9\u4f60\u5728\u670d\u52a1\u6846\u67b6\u4e00\u5757\u7ad9\u5728\u8f83\u9ad8\u7684\u8d77\u70b9\u4e0a\uff0c\u4e0d\u7ba1\u662f\u6027\u80fd\u8fd8\u662f\u4f01\u4e1a\u7ea7\u7684\u670d\u52a1\u6cbb\u7406\u80fd\u529b\uff0cDubbo \u90fd\u505a\u7684\u5f88\u51fa\u8272\u3002\u65b0\u6d6a\u5fae\u535a\u5f00\u6e90\u7684 Motan\uff08GitHub 4k stars\uff09\u4e5f\u4e0d\u9519\uff0c\u529f\u80fd\u548c Dubbo \u7c7b\u4f3c\uff0c\u53ef\u4ee5\u8ba4\u4e3a\u662f\u4e00\u4e2a\u8f7b\u91cf\u88c1\u526a\u7248\u7684 Dubbo\u3002 gRPC[\u9644\u5f55 12.3] \u662f\u8c37\u6b4c\u8fd1\u5e74\u65b0\u63a8\u7684\u4e00\u5957 RPC \u6846\u67b6\uff0c\u57fa\u4e8e protobuf \u7684\u5f3a\u5951\u7ea6\u7f16\u7a0b\u6a21\u578b\uff0c\u80fd\u81ea\u52a8\u751f\u6210\u5404\u79cd\u8bed\u8a00\u5ba2\u6237\u7aef\uff0c\u4e14\u4fdd\u8bc1\u4e92\u64cd\u4f5c\u3002\u652f\u6301 HTTP2 \u662f gRPC \u7684\u4e00\u5927\u4eae\u70b9\uff0c\u901a\u8baf\u5c42\u6027\u80fd\u6bd4 HTTP \u6709\u5f88\u5927\u6539\u8fdb\u3002Protobuf \u662f\u5728\u793e\u533a\u5177\u6709\u60a0\u4e45\u5386\u53f2\u548c\u826f\u597d\u53e3\u7891\u7684\u9ad8\u6027\u80fd\u5e8f\u5217\u5316\u534f\u8bae\uff0c\u52a0\u4e0a Google \u516c\u53f8\u7684\u80cc\u4e66\u548c\u793e\u533a\u5f71\u54cd\u529b\uff0c\u76ee\u524d gRPC \u4e5f\u6bd4\u8f83\u706b\uff0cGitHub \u4e0a\u6709\u8d85\u8fc7 13.4k \u661f\u3002 \u76ee\u524d\u770b gRPC \u66f4\u9002\u5408\u5185\u90e8\u670d\u52a1\u76f8\u4e92\u8c03\u7528\u573a\u666f\uff0c\u5bf9\u5916\u66b4\u9732 RESTful \u63a5\u53e3\u53ef\u4ee5\u5b9e\u73b0\uff0c\u4f46\u662f\u6bd4\u8f83\u9ebb\u70e6\uff08\u9700\u8981 gRPC Gateway \u914d\u5408\uff09\uff0c\u6240\u4ee5\u5bf9\u4e8e\u5bf9\u5916\u66b4\u9732 API \u573a\u666f\u53ef\u80fd\u8fd8\u9700\u8981\u5f15\u5165\u7b2c\u4e8c\u5957 RESTful \u6846\u67b6\u4f5c\u4e3a\u8865\u5145\u3002\u603b\u4f53\u4e0a gRPC \u8fd9\u4e2a\u4e1c\u897f\u8fd8\u6bd4\u8f83\u65b0\uff0c\u793e\u533a\u5bf9\u4e8e HTTP2 \u5e26\u6765\u7684\u597d\u5904\u8fd8\u672a\u5f62\u6210\u4e00\u81f4\u8ba4\u540c\uff0c\u5efa\u8bae\u8c28\u614e\u6295\u5165\uff0c\u53ef\u4ee5\u505a\u4e00\u4e9b\u8bd5\u70b9\u3002","title":"\u56db\u3001\u670d\u52a1\u6846\u67b6\u9009\u578b"},{"location":"exp/micro-service/#_6","text":"\u8fd0\u884c\u65f6\u652f\u6491\u670d\u52a1\u4e3b\u8981\u5305\u62ec\u670d\u52a1\u6ce8\u518c\u4e2d\u5fc3\uff0c\u670d\u52a1\u8def\u7531\u7f51\u5173\u548c\u96c6\u4e2d\u5f0f\u914d\u7f6e\u4e2d\u5fc3\u4e09\u4e2a\u4ea7\u54c1\u3002 \u670d\u52a1\u6ce8\u518c\u4e2d\u5fc3\uff0c\u5982\u679c\u91c7\u7528 Spring Cloud \u4f53\u7cfb\uff0c\u5219\u9009\u62e9 Eureka[\u9644\u5f55 12.4] \u662f\u6700\u4f73\u642d\u914d\uff0cEureka \u5728 Netflix \u7ecf\u8fc7\u5927\u89c4\u6a21\u751f\u4ea7\u9a8c\u8bc1\uff0c\u652f\u6301\u8de8\u6570\u636e\u4e2d\u5fc3\uff0c\u5ba2\u6237\u7aef\u914d\u5408 Ribbon \u53ef\u4ee5\u5b9e\u73b0\u7075\u6d3b\u7684\u5ba2\u6237\u7aef\u8f6f\u8d1f\u8f7d\uff0cEureka \u76ee\u524d\u5728 GitHub \u4e0a\u6709\u8d85\u8fc7 4.7k \u661f\uff1bConsul[\u9644\u5f55 12.5] \u4e5f\u662f\u4e0d\u9519\u9009\u62e9\uff0c\u5929\u7136\u652f\u6301\u8de8\u6570\u636e\u4e2d\u5fc3\uff0c\u8fd8\u652f\u6301 KV \u6a21\u578b\u5b58\u50a8\u548c\u7075\u6d3b\u5065\u5eb7\u68c0\u67e5\u80fd\u529b\uff0c\u76ee\u524d\u5728 GitHub \u4e0a\u6709\u8d85\u8fc7 11k \u661f\u3002 \u670d\u52a1\u7f51\u5173\u4e5f\u662f\u4e00\u4e2a\u6bd4\u8f83\u6210\u719f\u7684\u9886\u57df\uff0c\u6709\u5f88\u591a\u53ef\u9009\u9879\u3002\u5982\u679c\u91c7\u7528 Spring Cloud \u4f53\u7cfb\uff0c\u5219\u9009\u62e9 Zuul[\u9644\u5f55 12.6] \u662f\u6700\u4f73\u642d\u914d\uff0cZuul \u5728 Netflix \u7ecf\u8fc7\u5927\u89c4\u6a21\u751f\u4ea7\u9a8c\u8bc1\uff0c\u652f\u6301\u7075\u6d3b\u7684\u52a8\u6001\u8fc7\u6ee4\u5668\u811a\u672c\u673a\u5236\uff0c\u5f02\u6b65\u6027\u80fd\u4e0d\u8db3\uff08\u57fa\u4e8e Netty \u7684\u5f02\u6b65 Zuul \u8fdf\u8fdf\u672a\u80fd\u63a8\u51fa\u6b63\u5f0f\u7248\uff09\u3002Zuul \u7f51\u5173\u76ee\u524d\u5728 github \u4e0a\u6709\u8d85\u8fc7 3.7k \u661f\u3002\u57fa\u4e8e Nginx/OpenResty \u7684 API \u7f51\u5173 Kong[\u9644\u5f55 12.7] \u76ee\u524d\u5728 github \u4e0a\u6bd4\u8f83\u706b\uff0c\u6709\u8d85\u8fc7 14.1k \u661f\u3002\u56e0\u4e3a\u91c7\u7528 Nginx \u5185\u6838\uff0cKong \u7684\u5f02\u6b65\u6027\u80fd\u8f83\u5f3a\uff0c\u53e6\u5916\u57fa\u4e8e lua \u7684\u63d2\u4ef6\u673a\u5236\u6bd4\u8f83\u7075\u6d3b\uff0c\u793e\u533a\u63d2\u4ef6\u4e5f\u6bd4\u8f83\u4e30\u5bcc\uff0c\u4ece\u5b89\u5168\u5230\u9650\u6d41\u7194\u65ad\u90fd\u6709\uff0c\u8fd8\u6709\u4e0d\u5c11\u5f00\u6e90\u7684\u7ba1\u7406\u754c\u9762\uff0c\u80fd\u591f\u96c6\u4e2d\u7ba1\u7406 Kong \u96c6\u7fa4\u3002 \u914d\u7f6e\u4e2d\u5fc3\uff0cSpring Cloud \u81ea\u5e26 Spring Cloud Config[\u9644\u5f55 12.8]\uff08GitHub 0.75k stars\uff09\uff0c\u4e2a\u4eba\u8ba4\u4e3a\u7b97\u4e0d\u4e0a\u751f\u4ea7\u7ea7\uff0c\u5f88\u591a\u6cbb\u7406\u80fd\u529b\u7f3a\u5931\uff0c\u5c0f\u89c4\u6a21\u573a\u666f\u53ef\u4ee5\u8bd5\u7528\u3002\u4e2a\u4eba\u6bd4\u8f83\u63a8\u8350\u643a\u7a0b\u7684 Apollo[\u9644\u5f55 12.9] \u914d\u7f6e\u4e2d\u5fc3\uff0c\u5728\u643a\u7a0b\u7ecf\u8fc7\u751f\u4ea7\u7ea7\u9a8c\u8bc1\uff0c\u5177\u5907\u9ad8\u53ef\u7528\uff0c\u914d\u7f6e\u5b9e\u65f6\u751f\u6548\uff08\u63a8\u62c9\u7ed3\u5408\uff09\uff0c\u914d\u7f6e\u5ba1\u8ba1\u548c\u7248\u672c\u5316\uff0c\u591a\u73af\u5883\u591a\u96c6\u7fa4\u652f\u6301\u7b49\u751f\u4ea7\u7ea7\u7279\u6027\uff0c\u5efa\u8bae\u4e2d\u5927\u89c4\u6a21\u9700\u8981\u5bf9\u914d\u7f6e\u96c6\u4e2d\u8fdb\u884c\u6cbb\u7406\u7684\u4f01\u4e1a\u91c7\u7528\u3002Apollo \u76ee\u524d\u5728 github \u4e0a\u6709\u8d85\u8fc7 3.4k \u661f\u3002","title":"\u4e94\u3001\u8fd0\u884c\u65f6\u652f\u6491\u670d\u52a1\u9009\u578b"},{"location":"exp/micro-service/#_7","text":"\u4e3b\u8981\u5305\u62ec\u65e5\u5fd7\u76d1\u63a7\uff0c\u8c03\u7528\u94fe\u76d1\u63a7\uff0cMetrics \u76d1\u63a7\uff0c\u5065\u5eb7\u68c0\u67e5\u548c\u544a\u8b66\u901a\u77e5\u7b49\u4ea7\u54c1\u3002 ELK \u76ee\u524d\u53ef\u4ee5\u8ba4\u4e3a\u662f\u65e5\u5fd7\u76d1\u63a7\u7684\u6807\u914d\uff0c\u529f\u80fd\u5b8c\u5584\u5f00\u7bb1\u5373\u7528\uff0cElasticSearch[\u9644\u5f55 12.10] \u76ee\u524d\u5728 GitHub \u4e0a\u6709\u8d85\u8fc7 28.4k \u661f\u3002Elastalert[\u9644\u5f55 12.11] (GitHub 4k stars) \u662f Yelp \u5f00\u6e90\u7684\u9488\u5bf9 ELK \u7684\u544a\u8b66\u901a\u77e5\u6a21\u5757\u3002 \u8c03\u7528\u94fe\u76d1\u63a7\u76ee\u524d\u793e\u533a\u4e3b\u6d41\u662f\u70b9\u8bc4 CAT[\u9644\u5f55 12.12]\uff08GitHub 4.3k stars\uff09\uff0cTwitter \u4e4b\u524d\u5f00\u6e90\u73b0\u5728\u7531 OpenZipkin \u793e\u533a\u7ef4\u62a4\u7684 Zipkin[\u9644\u5f55 12.13]\uff08GitHub 7.5k stars\uff09\u548c Naver \u5f00\u6e90\u7684 Pinpoint[\u9644\u5f55 12.14]\uff08GitHub 5.3k stars\uff09\u3002\u4e2a\u4eba\u6bd4\u8f83\u63a8\u8350\u70b9\u8bc4\u5f00\u6e90\u7684 CAT\uff0c\u5728\u70b9\u8bc4\u548c\u56fd\u5185\u591a\u5bb6\u4e92\u8054\u7f51\u516c\u53f8\u6709\u843d\u5730\u6848\u4f8b\uff0c\u751f\u4ea7\u7ea7\u7279\u6027\u548c\u6cbb\u7406\u80fd\u529b\u8f83\u5b8c\u5584\uff0c\u53e6\u5916 CAT \u81ea\u5e26\u544a\u8b66\u6a21\u5757\u3002\u4e0b\u9762\u662f\u6211\u4e4b\u524d\u5bf9\u4e09\u6b3e\u4ea7\u54c1\u7684\u8bc4\u4f30\u8868\uff0c\u4f9b\u53c2\u8003\u3002 Metrics \u76d1\u63a7\u4e3b\u8981\u4f9d\u8d56\u4e8e\u65f6\u95f4\u5e8f\u5217\u6570\u636e\u5e93 (TSDB)\uff0c\u76ee\u524d\u8f83\u6210\u719f\u7684\u4ea7\u54c1\u662f StumbleUpon \u516c\u53f8\u5f00\u6e90\u7684\u57fa\u4e8e HBase \u7684 OpenTSDB[\u9644\u5f55 12.15]\uff08\u57fa\u4e8e Cassandra \u7684 KariosDB[\u9644\u5f55 12.16] \u4e5f\u662f\u4e00\u4e2a\u9009\u62e9\uff0cGitHub 1.1k stars\uff0c\u5b83\u57fa\u672c\u4e0a\u662f OpenTSDB \u9488\u5bf9 Cassandra \u7684\u4e00\u4e2a\u6539\u9020\u7248\uff09\uff0cOpenTSDB \u5177\u6709\u5206\u5e03\u5f0f\u80fd\u529b\u53ef\u4ee5\u6a2a\u5411\u6269\u5c55\uff0c\u4f46\u662f\u76f8\u5bf9\u8f83\u91cd\uff0c\u9002\u7528\u4e8e\u4e2d\u5927\u89c4\u6a21\u4f01\u4e1a\uff0cOpenTSDB \u76ee\u524d\u5728 GitHub \u4e0a\u6709\u8fd1 2.9k \u661f\u3002 OpenTSDB \u672c\u8eab\u4e0d\u63d0\u4f9b\u544a\u8b66\u6a21\u5757\uff0cArgus[\u9644\u5f55 12.17]\uff08GitHub 0.29k \u661f\uff09\u662f Salesforce \u5f00\u6e90\u7684\u57fa\u4e8e OpenTSDB \u7684\u7edf\u4e00\u76d1\u63a7\u544a\u8b66\u5e73\u53f0\uff0c\u652f\u6301\u4e30\u5bcc\u7684\u544a\u8b66\u51fd\u6570\u548c\u7075\u6d3b\u7684\u544a\u8b66\u914d\u7f6e\uff0c\u53ef\u4ee5\u4f5c\u4e3a OpenTSDB \u7684\u544a\u8b66\u8865\u5145\u3002\u8fd1\u5e74\u4e5f\u51fa\u73b0\u4e00\u4e9b\u8f7b\u91cf\u7ea7\u7684 TSDB\uff0c\u5982 InfluxDB[\u9644\u5f55 12.18]\uff08GitHub 12.4k stars\uff09\u548c Prometheus[\u9644\u5f55 12.19]\uff08GitHub 14.3k stars\uff09\uff0c\u8fd9\u4e9b\u4ea7\u54c1\u51fd\u6570\u62a5\u8868\u80fd\u529b\u4e30\u5bcc\uff0c\u81ea\u5e26\u544a\u8b66\u6a21\u5757\uff0c\u4f46\u662f\u5206\u5e03\u5f0f\u80fd\u529b\u4e0d\u8db3\uff0c\u9002\u7528\u4e8e\u4e2d\u5c0f\u89c4\u6a21\u4f01\u4e1a\u3002Grafana[\u9644\u5f55 12.20]\uff08GitHub 19.9k stars\uff09\u662f Metrics \u62a5\u8868\u5c55\u793a\u7684\u793e\u533a\u6807\u914d\u3002 \u793e\u533a\u8fd8\u6709\u4e00\u4e9b\u901a\u7528\u7684\u5065\u5eb7\u68c0\u67e5\u548c\u544a\u8b66\u4ea7\u54c1\uff0c\u4f8b\u5982 Sensu[\u9644\u5f55 12.21]\uff08GitHub 2.7k stars\uff09\uff0c\u80fd\u591f\u5bf9\u5404\u79cd\u670d\u52a1\uff08\u4f8b\u5982 Spring Boot \u66b4\u9732\u7684\u5065\u5eb7\u68c0\u67e5\u7aef\u70b9\uff0c\u65f6\u95f4\u5e8f\u5217\u6570\u636e\u5e93\u4e2d\u7684 metrics\uff0cELK \u4e2d\u7684\u9519\u8bef\u65e5\u5fd7\u7b49\uff09\u5b9a\u5236\u7075\u6d3b\u7684\u5065\u5eb7\u68c0\u67e5 (check)\uff0c\u7136\u540e\u7528\u6237\u53ef\u4ee5\u9488\u5bf9 check \u7ed3\u679c\u8bbe\u7f6e\u7075\u6d3b\u7684\u544a\u8b66\u901a\u77e5\u7b56\u7565\u3002Sensu \u5728 Yelp \u7b49\u516c\u53f8\u6709\u843d\u5730\u6848\u4f8b\u3002\u5176\u5b83\u7c7b\u4f3c\u4ea7\u54c1\u8fd8\u6709 Esty \u5f00\u6e90\u7684 411[\u9644\u5f55 12.22]\uff08GitHub 0.74k \u661f\uff09\u548c Zalando \u7684 ZMon[\u9644\u5f55 12.23] (GitHub 0.15k \u661f)\uff0c\u5b83\u4eec\u662f\u5206\u522b\u5728 Esty \u548c Zalando \u843d\u5730\u7684\u4ea7\u54c1\uff0c\u4f46\u662f\u5b9a\u5236 check \u548c\u544a\u8b66\u914d\u7f6e\u7684\u4f7f\u7528\u95e8\u69db\u6bd4\u8f83\u9ad8\uff0c\u793e\u533a\u4e0d\u70ed\uff0c\u5efa\u8bae\u6709\u5b9a\u5236\u81ea\u7814\u80fd\u529b\u7684\u56e2\u961f\u8bd5\u7528\u3002ZMon \u540e\u53f0\u91c7\u7528 KairosDB \u5b58\u50a8\uff0c\u5982\u679c\u4f01\u4e1a\u5df2\u7ecf\u91c7\u7528 KariosDB \u4f5c\u4e3a\u65f6\u95f4\u5e8f\u5217\u6570\u636e\u5e93\uff0c\u5219\u53ef\u4ee5\u8003\u8651 ZMon \u4f5c\u4e3a\u544a\u8b66\u901a\u77e5\u6a21\u5757\u3002","title":"\u516d\u3001\u670d\u52a1\u76d1\u63a7\u9009\u578b"},{"location":"exp/micro-service/#_8","text":"\u9488\u5bf9 Java \u6280\u672f\u6808\uff0cNetflix \u7684 Hystrix[\u9644\u5f55 12.24]\uff08github 12.4k stars\uff09\u628a\u7194\u65ad\u3001\u9694\u79bb\u3001\u9650\u6d41\u548c\u964d\u7ea7\u7b49\u80fd\u529b\u5c01\u88c5\u6210\u7ec4\u4ef6\uff0c\u4efb\u4f55\u4f9d\u8d56\u8c03\u7528\uff08\u6570\u636e\u5e93\uff0c\u670d\u52a1\uff0c\u7f13\u5b58\uff09\u90fd\u53ef\u4ee5\u5c01\u88c5\u5728 Hystrix Command \u4e4b\u5185\uff0c\u5c01\u88c5\u540e\u81ea\u52a8\u5177\u5907\u5bb9\u9519\u80fd\u529b\u3002Hystrix \u8d77\u6e90\u4e8e Netflix \u7684\u5f39\u6027\u5de5\u7a0b\u9879\u76ee\uff0c\u7ecf\u8fc7 Netflix \u5927\u89c4\u6a21\u751f\u4ea7\u9a8c\u8bc1\uff0c\u76ee\u524d\u662f\u5bb9\u9519\u7ec4\u4ef6\u7684\u793e\u533a\u6807\u51c6\uff0cGitHub \u4e0a\u6709\u8d85 12k \u661f\u3002\u5176\u5b83\u8bed\u8a00\u6808\u4e5f\u6709\u7c7b\u4f3c Hystrix \u7684\u7b80\u5316\u7248\u672c\u7ec4\u4ef6\u3002 Hystrix \u4e00\u822c\u9700\u8981\u5728\u5e94\u7528\u7aef\u6216\u8005\u6846\u67b6\u5185\u57cb\u70b9\uff0c\u6709\u4e00\u5b9a\u7684\u4f7f\u7528\u95e8\u69db\u3002\u5bf9\u4e8e\u91c7\u7528\u96c6\u4e2d\u5f0f\u53cd\u5411\u4ee3\u7406\uff08\u8fb9\u754c\u548c\u5185\u90e8\uff09\u505a\u670d\u52a1\u8def\u7531\u7684\u516c\u53f8\uff0c\u5219\u53ef\u4ee5\u96c6\u4e2d\u5728\u53cd\u5411\u4ee3\u7406\u4e0a\u505a\u7194\u65ad\u9650\u6d41\uff0c\u4f8b\u5982\u91c7\u7528 Nginx[\u9644\u5f55 12.25]\uff08GitHub 5.1k stars\uff09\u6216\u8005 Kong[\u9644\u5f55 12.7]\uff08GitHub 11.4k stars\uff09\u8fd9\u7c7b\u53cd\u5411\u4ee3\u7406\uff0c\u5b83\u4eec\u90fd\u63d2\u4ef6\u652f\u6301\u7075\u6d3b\u7684\u9650\u6d41\u5bb9\u9519\u914d\u7f6e\u3002Zuul \u7f51\u5173\u4e5f\u53ef\u4ee5\u96c6\u6210 Hystrix \u5b9e\u73b0\u7f51\u5173\u5c42\u96c6\u4e2d\u5f0f\u9650\u6d41\u5bb9\u9519\u3002\u96c6\u4e2d\u5f0f\u53cd\u5411\u4ee3\u7406\u9700\u8981\u6709\u4e00\u5b9a\u7684\u7814\u53d1\u548c\u8fd0\u7ef4\u80fd\u529b\uff0c\u4f46\u662f\u53ef\u4ee5\u5bf9\u9650\u6d41\u5bb9\u9519\u8fdb\u884c\u96c6\u4e2d\u6cbb\u7406\uff0c\u53ef\u4ee5\u7b80\u5316\u5ba2\u6237\u7aef\u3002","title":"\u4e03\u3001\u670d\u52a1\u5bb9\u9519\u9009\u578b"},{"location":"exp/micro-service/#_9","text":"\u540e\u53f0\u670d\u52a1\u4e3b\u8981\u5305\u62ec\u6d88\u606f\u7cfb\u7edf\uff0c\u5206\u5e03\u5f0f\u7f13\u5b58\uff0c\u5206\u5e03\u5f0f\u6570\u636e\u8bbf\u95ee\u5c42\u548c\u4efb\u52a1\u8c03\u5ea6\u7cfb\u7edf\u3002\u540e\u53f0\u670d\u52a1\u662f\u4e00\u4e2a\u76f8\u5bf9\u6bd4\u8f83\u6210\u719f\u7684\u9886\u57df\uff0c\u5f88\u591a\u5f00\u6e90\u4ea7\u54c1\u57fa\u672c\u53ef\u4ee5\u5f00\u7bb1\u5373\u7528\u3002 \u6d88\u606f\u7cfb\u7edf\uff0c\u5bf9\u4e8e\u65e5\u5fd7\u7b49\u53ef\u9760\u6027\u8981\u6c42\u4e0d\u9ad8\u7684\u573a\u666f\uff0c\u5219 Apache \u9876\u7ea7\u9879\u76ee Kafka[\u9644\u5f55 12.26]\uff08GitHub 7.2k stars\uff09\u662f\u793e\u533a\u6807\u914d\u3002\u5bf9\u4e8e\u53ef\u9760\u6027\u8981\u6c42\u8f83\u9ad8\u7684\u4e1a\u52a1\u573a\u666f\uff0cKafka \u5176\u5b9e\u4e5f\u662f\u53ef\u4ee5\u80dc\u4efb\uff0c\u4f46\u4f01\u4e1a\u9700\u8981\u6839\u636e\u5177\u4f53\u573a\u666f\uff0c\u5bf9 Kafka \u7684\u76d1\u63a7\u548c\u6cbb\u7406\u80fd\u529b\u8fdb\u884c\u9002\u5f53\u5b9a\u5236\u5b8c\u5584\uff0cAllegro \u516c\u53f8\u5f00\u6e90\u7684 hermes[\u9644\u5f55 12.27]\uff08GitHub 0.3k stars\uff09\u662f\u4e00\u4e2a\u53ef\u53c2\u8003\u9879\u76ee\uff0c\u5b83\u5728 Kafka \u57fa\u7840\u4e0a\u5c01\u88c5\u4e86\u9002\u5408\u4e1a\u52a1\u573a\u666f\u7684\u4f01\u4e1a\u7ea7\u6cbb\u7406\u80fd\u529b\u3002\u963f\u91cc\u5f00\u6e90\u7684 RocketMQ[\u9644\u5f55 12.28]\uff08GitHub 3.5k \u661f\uff09\u4e5f\u662f\u4e00\u4e2a\u4e0d\u9519\u9009\u62e9\uff0c\u5177\u5907\u66f4\u591a\u9002\u7528\u4e8e\u4e1a\u52a1\u573a\u666f\u7684\u7279\u6027\uff0c\u76ee\u524d\u4e5f\u662f Apache \u9876\u7ea7\u9879\u76ee\u3002RabbitMQ[\u9644\u5f55 12.29]\uff08GitHub 3.6k \u661f\uff09\u662f\u8001\u724c\u7ecf\u5178\u7684 MQ\uff0c\u961f\u5217\u7279\u6027\u548c\u6587\u6863\u90fd\u5f88\u4e30\u5bcc\uff0c\u6027\u80fd\u548c\u5206\u5e03\u5f0f\u80fd\u529b\u7a0d\u5f31\uff0c\u4e2d\u5c0f\u89c4\u6a21\u573a\u666f\u53ef\u9009\u3002 \u5bf9\u4e8e\u7f13\u5b58\u6cbb\u7406\uff0c\u5982\u679c\u503e\u5411\u4e8e\u91c7\u7528\u5ba2\u6237\u7aef\u76f4\u8fde\u6a21\u5f0f\uff08\u4e2a\u4eba\u8ba4\u4e3a\u7f13\u5b58\u76f4\u8fde\u66f4\u7b80\u5355\u8f7b\u91cf\uff09\uff0c\u5219 SohuTv \u5f00\u6e90\u7684 cachecloud[\u9644\u5f55 12.30]\uff08GitHub 2.5k stars\uff09\u662f\u4e00\u6b3e\u4e0d\u9519\u7684 Redis \u7f13\u5b58\u6cbb\u7406\u5e73\u53f0\uff0c\u63d0\u4f9b\u8bf8\u5982\u76d1\u63a7\u7edf\u8ba1\uff0c\u4e00\u952e\u5f00\u542f\uff0c\u81ea\u52a8\u6545\u969c\u8f6c\u79fb\uff0c\u5728\u7ebf\u4f38\u7f29\uff0c\u81ea\u52a8\u5316\u8fd0\u7ef4\u7b49\u751f\u4ea7\u7ea7\u6cbb\u7406\u80fd\u529b\uff0c\u53e6\u5916\u5176\u6587\u6863\u4e5f\u6bd4\u8f83\u4e30\u5bcc\u3002\u5982\u679c\u503e\u5411\u91c7\u7528\u4e2d\u95f4\u5c42 Proxy \u6a21\u5f0f\uff0c\u5219 Twitter \u5f00\u6e90\u7684 twemproxy[\u9644\u5f55 12.31]\uff08GitHub 7.5k stars\uff09\u548c CodisLab \u5f00\u6e90\u7684 codis[\u9644\u5f55 12.32]\uff08GitHub 6.9k stars\uff09\u662f\u793e\u533a\u6bd4\u8f83\u70ed\u7684\u9009\u9879\u3002 \u5bf9\u4e8e\u5206\u5e03\u5f0f\u6570\u636e\u8bbf\u95ee\u5c42\uff0c\u5982\u679c\u91c7\u7528 Java \u6280\u672f\u6808\uff0c\u5219\u5f53\u5f53\u5f00\u6e90\u7684 shardingjdbc[\u9644\u5f55 12.33]\uff08GitHub 3.5k stars\uff09\u662f\u4e00\u4e2a\u4e0d\u9519\u7684\u9009\u9879\uff0c\u5206\u5e93\u5206\u8868\u903b\u8f91\u505a\u5728\u5ba2\u6237\u7aef jdbc driver \u4e2d\uff0c\u5ba2\u6237\u7aef\u76f4\u8fde\u6570\u636e\u5e93\u6bd4\u8f83\u7b80\u5355\u8f7b\u91cf\uff0c\u5efa\u8bae\u4e2d\u5c0f\u89c4\u6a21\u573a\u666f\u91c7\u7528\u3002\u5982\u679c\u503e\u5411\u91c7\u7528\u6570\u636e\u5e93\u8bbf\u95ee\u4e2d\u95f4\u5c42 proxy \u6a21\u5f0f\uff0c\u5219\u4ece\u963f\u91cc Cobar \u6f14\u5316\u51fa\u6765\u7684\u793e\u533a\u5f00\u6e90\u5206\u5e93\u5206\u8868\u4e2d\u95f4\u4ef6 MyCAT[\u9644\u5f55 12.34]\uff08GitHub 3.6k stars\uff09\u662f\u4e00\u4e2a\u4e0d\u9519\u9009\u62e9 \u3002proxy \u6a21\u5f0f\u8fd0\u7ef4\u6210\u672c\u8f83\u9ad8\uff0c\u5efa\u8bae\u4e2d\u5927\u89c4\u6a21\u573a\u666f\uff0c\u6709\u4e00\u5b9a\u6846\u67b6\u81ea\u7814\u548c\u8fd0\u7ef4\u80fd\u529b\u7684\u56e2\u961f\u91c7\u7528\u3002 \u4efb\u52a1\u8c03\u5ea6\u7cfb\u7edf\uff0c\u4e2a\u4eba\u63a8\u8350\u5f90\u96ea\u91cc\u5f00\u6e90\u7684 xxl-job[\u9644\u5f55 12.35]\uff08GitHub 3.4k stars\uff09\uff0c\u90e8\u7f72\u7b80\u5355\u8f7b\u91cf\uff0c\u5927\u90e8\u5206\u573a\u666f\u591f\u7528\u3002\u5f53\u5f53\u5f00\u6e90\u7684 elastic-job[\u9644\u5f55 12.36]\uff08GitHub 3.2k stars\uff09\u4e5f\u662f\u4e00\u4e2a\u4e0d\u9519\u9009\u62e9\uff0c\u76f8\u6bd4 xxl-job \u529f\u80fd\u66f4\u5f3a\u4e00\u4e9b\u4e5f\u66f4\u590d\u6742\u3002","title":"\u516b\u3001\u540e\u53f0\u670d\u52a1\u9009\u578b"},{"location":"exp/micro-service/#_10","text":"\u5bf9\u4e8e\u5fae\u670d\u52a1\u5b89\u5168\u8ba4\u8bc1\u6388\u6743\u673a\u5236\u4e00\u5757\uff0c\u76ee\u524d\u4e1a\u754c\u867d\u7136\u6709 OAuth \u548c OpenID connect \u7b49\u6807\u51c6\u534f\u8bae\uff0c\u4f46\u662f\u5404\u5bb6\u5177\u4f53\u5b9e\u73b0\u7684\u505a\u6cd5\u90fd\u4e0d\u592a\u4e00\u6837\uff0c\u4f01\u4e1a\u4e00\u822c\u6709\u5f88\u591a\u7279\u6b8a\u7684\u5b9a\u5236\u9700\u6c42\uff0c\u6574\u4e2a\u793e\u533a\u8fd8\u6ca1\u6709\u5f62\u6210\u901a\u7528\u751f\u4ea7\u7ea7\u5f00\u7bb1\u5373\u7528\u7684\u4ea7\u54c1\u3002\u6709\u4e00\u4e9b\u5f00\u6e90\u6388\u6743\u670d\u52a1\u5668\u4ea7\u54c1\uff0c\u6bd4\u8f83\u77e5\u540d\u7684\u5982 Apereo CAS[\u9644\u5f55 12.37]\uff08GitHub 3.6k stars\uff09\uff0cJBoss \u5f00\u6e90\u7684 keycloak[\u9644\u5f55 12.38]\uff08GitHub 1.9 stars\uff09\uff0cspring cloud security[\u9644\u5f55 12.39] \u7b49\uff0c\u5927\u90fd\u662f opinionated\uff08\u4e00\u5bb6\u89c2\u70b9\u548c\u505a\u6cd5\uff09\u7684\u4ea7\u54c1\uff0c\u540c\u65f6\u56e0\u652f\u6301\u592a\u591a\u534f\u8bae\u9020\u6210\u4ea7\u54c1\u590d\u6742\uff0c\u4e5f\u7f3a\u4e4f\u8db3\u591f\u7075\u6d3b\u6027\u3002\u4e2a\u4eba\u5efa\u8bae\u57fa\u4e8e OAuth \u548c OpenID connect \u6807\u51c6\uff0c\u5728\u53c2\u8003\u4e00\u4e9b\u5f00\u6e90\u4ea7\u54c1\u7684\u57fa\u7840\u4e0a\uff08\u4f8b\u5982 Mitre \u5f00\u6e90\u7684 OpenID-Connect-Java-Spring-Server[\u9644\u5f55 12.40]\uff0cGitHub 0.62k stars\uff09\uff0c\u5b9a\u5236\u81ea\u7814\u8f7b\u91cf\u7ea7\u6388\u6743\u670d\u52a1\u5668\u3002Wso2 \u63d0\u51fa\u4e86\u4e00\u79cd\u5fae\u670d\u52a1\u5b89\u5168\u7684\u53c2\u8003\u65b9\u6848 [\u9644\u5f55 12.45]\uff0c\u5efa\u8bae\u53c2\u8003\uff0c\u8be5\u65b9\u6848\u7684\u5173\u952e\u6b65\u9aa4\u5982\u4e0b\uff1a \u4f7f\u7528\u652f\u6301 OAuth 2.0 \u548c OpenID Connect \u6807\u51c6\u534f\u8bae\u7684\u6388\u6743\u670d\u52a1\u5668\uff08\u4e2a\u4eba\u5efa\u8bae\u5b9a\u5236\u81ea\u7814\uff09\uff1b \u4f7f\u7528 API \u7f51\u5173\u4f5c\u4e3a\u5355\u4e00\u8bbf\u95ee\u5165\u53e3\uff0c\u7edf\u4e00\u5b9e\u73b0\u5b89\u5168\u6cbb\u7406\uff1b \u5ba2\u6237\u5728\u8bbf\u95ee\u5fae\u670d\u52a1\u4e4b\u524d\uff0c\u5148\u901a\u8fc7\u6388\u6743\u670d\u52a1\u5668\u767b\u5f55\u83b7\u53d6 access token\uff0c\u7136\u540e\u5c06 access token \u548c\u8bf7\u6c42\u4e00\u8d77\u53d1\u9001\u5230\u7f51\u5173\uff1b \u7f51\u5173\u83b7\u53d6 access token\uff0c\u901a\u8fc7\u6388\u6743\u670d\u52a1\u5668\u6821\u9a8c token\uff0c\u540c\u65f6\u505a token \u8f6c\u6362\u83b7\u53d6 JWT token\u3002 \u7f51\u5173\u5c06 JWT Token \u548c\u8bf7\u6c42\u4e00\u8d77\u8f6c\u53d1\u5230\u540e\u53f0\u5fae\u670d\u52a1\uff1b JWT \u4e2d\u53ef\u4ee5\u5b58\u50a8\u7528\u6237\u4f1a\u8bdd\u4fe1\u606f\uff0c\u8be5\u4fe1\u606f\u53ef\u4ee5\u4f20\u9012\u7ed9\u540e\u53f0\u7684\u5fae\u670d\u52a1\uff0c\u4e5f\u53ef\u4ee5\u5728\u5fae\u670d\u52a1\u4e4b\u95f4\u4f20\u9012\uff0c\u7528\u4f5c\u8ba4\u8bc1\u6388\u6743\u7b49\u7528\u9014\uff1b \u6bcf\u4e2a\u5fae\u670d\u52a1\u5305\u542b JWT \u5ba2\u6237\u7aef\uff0c\u80fd\u591f\u89e3\u5bc6 JWT \u5e76\u83b7\u53d6\u5176\u4e2d\u7684\u7528\u6237\u4f1a\u8bdd\u4fe1\u606f\u3002 \u6574\u4e2a\u65b9\u6848\u4e2d\uff0caccess token \u662f\u4e00\u79cd by reference token\uff0c\u4e0d\u5305\u542b\u7528\u6237\u4fe1\u606f\u53ef\u4ee5\u76f4\u63a5\u66b4\u9732\u5728\u516c\u7f51\u4e0a\uff1bJWT token \u662f\u4e00\u79cd by value token\uff0c\u53ef\u4ee5\u5305\u542b\u7528\u6237\u4fe1\u606f\u4f46\u4e0d\u66b4\u9732\u5728\u516c\u7f51\u4e0a\u3002","title":"\u4e5d\u3001\u670d\u52a1\u5b89\u5168\u9009\u578b"},{"location":"exp/micro-service/#_11","text":"\u5bb9\u5668\u5df2\u7ecf\u88ab\u793e\u533a\u63a5\u53d7\u4e3a\u4ea4\u4ed8\u5fae\u670d\u52a1\u7684\u4e00\u79cd\u7406\u60f3\u624b\u6bb5\uff0c\u53ef\u4ee5\u5b9e\u73b0\u4e0d\u53ef\u53d8\uff08immutable\uff09\u53d1\u5e03\u6a21\u5f0f\u3002\u4e00\u4e2a\u8f7b\u91cf\u7ea7\u7684\u57fa\u4e8e\u5bb9\u5668\u7684\u670d\u52a1\u90e8\u7f72\u5e73\u53f0\u4e3b\u8981\u5305\u62ec\u5bb9\u5668\u8d44\u6e90\u8c03\u5ea6\uff0c\u53d1\u5e03\u7cfb\u7edf\uff0c\u955c\u50cf\u6cbb\u7406\uff0c\u8d44\u6e90\u6cbb\u7406\u548c IAM \u7b49\u6a21\u5757\u3002 \u96c6\u7fa4\u8d44\u6e90\u8c03\u5ea6\u7cfb\u7edf\uff1a\u5c4f\u853d\u5bb9\u5668\u7ec6\u8282\uff0c\u5c06\u6574\u4e2a\u96c6\u7fa4\u62bd\u8c61\u6210\u5bb9\u5668\u8d44\u6e90\u6c60\uff0c\u652f\u6301\u6309\u9700\u7533\u8bf7\u548c\u91ca\u653e\u5bb9\u5668\u8d44\u6e90\uff0c\u7269\u7406\u673a\u53d1\u751f\u6545\u969c\u65f6\u80fd\u591f\u5b9e\u73b0\u81ea\u52a8\u6545\u969c\u8fc1\u79fb (fail over)\u3002\u76ee\u524d Google \u5f00\u6e90\u7684 Kubernetes[\u9644\u5f55 12.41]\uff0c\u5728 Google \u80cc\u4e66\u548c\u793e\u533a\u7684\u5f3a\u529b\u63a8\u52a8\u4e0b\uff0c\u57fa\u672c\u5df2\u7ecf\u5f62\u6210\u5e02\u573a\u9886\u5bfc\u8005\u5730\u4f4d\uff0cGitHub \u4e0a\u6709 31.8k \u661f\uff0c\u793e\u533a\u7684\u6d3b\u8dc3\u5ea6\u5df2\u7ecf\u8fdc\u8fdc\u8d85\u8fc7\u4e86 mesos[\u9644\u5f55 12.42]\uff08GitHub 3.5k stars\uff09\u548c swarm \u7b49\u7ade\u4e89\u4ea7\u54c1\uff0c\u6240\u4ee5\u5bb9\u5668\u8d44\u6e90\u8c03\u5ea6\u5efa\u8bae\u9996\u9009 K8s\u3002\u5f53\u7136\u5982\u679c\u4f60\u7684\u56e2\u961f\u6709\u8db3\u591f\u5b9a\u5236\u81ea\u7814\u80fd\u529b\uff0c\u60f3\u6df1\u5ea6\u628a\u63a7\u5e95\u5c42\u8c03\u5ea6\u7b97\u6cd5\uff0c\u4e5f\u53ef\u4ee5\u57fa\u4e8e Mesos \u505a\u5b9a\u5236\u81ea\u7814\u3002 \u955c\u50cf\u6cbb\u7406\uff1a\u57fa\u4e8e Docker Registry\uff0c\u5c01\u88c5\u4e00\u4e9b\u8f7b\u91cf\u7ea7\u7684\u6cbb\u7406\u529f\u80fd\u3002VMware \u5f00\u6e90\u7684 harbor[\u9644\u5f55 12.43] (GitHub 3.5k stars) \u662f\u76ee\u524d\u793e\u533a\u6bd4\u8f83\u6210\u719f\u7684\u4f01\u4e1a\u7ea7\u4ea7\u54c1\uff0c\u5728 Docker Registry \u57fa\u7840\u4e0a\u6269\u5c55\u4e86\u6743\u9650\u63a7\u5236\uff0c\u5ba1\u8ba1\uff0c\u955c\u50cf\u540c\u6b65\uff0c\u7ba1\u7406\u754c\u9762\u7b49\u6cbb\u7406\u80fd\u529b\uff0c\u53ef\u4ee5\u8003\u8651\u91c7\u7528\u3002 \u8d44\u6e90\u6cbb\u7406\uff1a\u7c7b\u4f3c\u4e8e CMDB \u601d\u8def\uff0c\u5728\u5bb9\u5668\u4e91\u73af\u5883\u4e2d\uff0c\u4f01\u4e1a\u4ecd\u7136\u9700\u8981\u5bf9\u5e94\u7528 app\uff0c\u7ec4\u7ec7 org\uff0c\u5bb9\u5668\u914d\u989d\u548c\u6570\u91cf\u7b49\u76f8\u5173\u4fe1\u606f\u8fdb\u884c\u8f7b\u91cf\u7ea7\u7684\u6cbb\u7406\u3002\u76ee\u524d\u8fd9\u5757\u8fd8\u6ca1\u6709\u751f\u4ea7\u7ea7\u7684\u5f00\u6e90\u4ea7\u54c1\uff0c\u4e00\u822c\u4f01\u4e1a\u9700\u8981\u6839\u636e\u81ea\u5df1\u7684\u573a\u666f\u5b9a\u5236\u81ea\u7814\u3002 \u53d1\u5e03\u5e73\u53f0\uff1a\u9762\u5411\u7528\u6237\u7684\u53d1\u5e03\u7ba1\u7406\u63a7\u5236\u53f0\uff0c\u652f\u6301\u53d1\u5e03\u6d41\u7a0b\u7f16\u6392\u3002\u5b83\u548c\u5176\u5b83\u5b50\u7cfb\u7edf\u5bf9\u63a5\u4ea4\u4e92\uff0c\u5b9e\u73b0\u57fa\u672c\u7684\u5e94\u7528\u53d1\u5e03\u80fd\u529b\uff0c\u4e5f\u5b9e\u73b0\u5982\u84dd\u7eff\uff0c\u91d1\u4e1d\u96c0\u548c\u7070\u5ea6\u7b49\u9ad8\u7ea7\u53d1\u5e03\u673a\u5236\u3002\u76ee\u524d\u8fd9\u5757\u751f\u4ea7\u7ea7\u7684\u5f00\u6e90\u4ea7\u54c1\u5f88\u5c11\uff0cNetflix \u5f00\u6e90\u7684 spinnaker[\u9644\u5f55 12.44]\uff08github 4.2k stars\uff09\u662f\u4e00\u4e2a\uff0c\u4f46\u662f\u8fd9\u4e2a\u4ea7\u54c1\u6bd4\u8f83\u590d\u6742\u91cd\u91cf\uff08\u56e0\u4e3a\u5b83\u65e2\u8981\u652f\u6301\u9002\u914d\u5bf9\u63a5\u5404\u79cd CI \u7cfb\u7edf\uff0c\u540c\u65f6\u8fd8\u8981\u9002\u914d\u5bf9\u63a5\u5404\u79cd\u516c\u6709\u4e91\u548c\u5bb9\u5668\u4e91\uff0c\u4f7f\u5f97\u6574\u4e2a\u7cfb\u7edf\u5f02\u5e38\u590d\u6742\uff09\uff0c\u4e00\u822c\u4f01\u4e1a\u5efa\u8bae\u6839\u636e\u81ea\u5df1\u7684\u573a\u666f\u5b9a\u5236\u81ea\u7814\u8f7b\u91cf\u7ea7\u7684\u89e3\u51b3\u65b9\u6848\u3002 IAM\uff1a\u662f identity & access management \u7684\u7b80\u79f0\uff0c\u5bf9\u53d1\u5e03\u5e73\u53f0\u5404\u4e2a\u7ec4\u4ef6\u8fdb\u884c\u8eab\u4efd\u8ba4\u8bc1\u548c\u5b89\u5168\u8bbf\u95ee\u63a7\u5236\u3002\u793e\u533a\u6709\u4e0d\u5c11\u5f00\u6e90\u7684 IAM \u4ea7\u54c1\uff0c\u6bd4\u8f83\u77e5\u540d\u7684\u6709 Apereo CAS\uff08GitHub 3.6k stars\uff09\uff0cJBoss \u5f00\u6e90\u7684 keycloak\uff08GitHub 1.9 stars\uff09\u7b49\u3002\u4f46\u662f\u8fd9\u4e9b\u4ea7\u54c1\u4e00\u822c\u90fd\u6bd4\u8f83\u590d\u6742\u91cd\u91cf\uff0c\u5f88\u591a\u4f01\u4e1a\u8003\u8651\u5230\u5185\u90e8\u5404\u79cd\u7cfb\u7edf\u7075\u6d3b\u5bf9\u63a5\u7684\u9700\u6c42\uff0c\u90fd\u4f1a\u8003\u8651\u5b9a\u5236\u81ea\u7814\u8f7b\u91cf\u7ea7\u7684\u89e3\u51b3\u65b9\u6848\u3002 \u8003\u8651\u5230\u670d\u52a1\u90e8\u7f72\u5e73\u53f0\u76ee\u524d\u8fd8\u6ca1\u6709\u7aef\u5230\u7aef\u751f\u4ea7\u7ea7\u89e3\u51b3\u65b9\u6848\uff0c\u4f01\u4e1a\u4e00\u822c\u9700\u8981\u5b9a\u5236\u96c6\u6210\uff0c\u4e0b\u9762\u7ed9\u51fa\u4e00\u4e2a\u53ef\u4ee5\u53c2\u8003\u7684\u5177\u5907\u8f7b\u91cf\u7ea7\u6cbb\u7406\u80fd\u529b\u7684\u53d1\u5e03\u4f53\u7cfb\uff1a \u7b80\u5316\u53d1\u5e03\u6d41\u7a0b\u5982\u4e0b\uff1a \u5e94\u7528\u901a\u8fc7 CI \u96c6\u6210\u540e\u751f\u6210\u955c\u50cf\uff0c\u7528\u6237\u5c06\u955c\u50cf\u63a8\u5230\u955c\u50cf\u6cbb\u7406\u4e2d\u5fc3\uff1b \u7528\u6237\u5728\u8d44\u4ea7\u6cbb\u7406\u4e2d\u5fc3\u7533\u8bf7\u53d1\u5e03\uff0c\u586b\u62a5\u5e94\u7528\uff0c\u53d1\u5e03\u548c\u914d\u989d\u76f8\u5173\u4fe1\u606f\uff0c\u7136\u540e\u7b49\u5f85\u5ba1\u6279\u901a\u8fc7\uff1b \u53d1\u5e03\u5ba1\u6279\u901a\u8fc7\uff0c\u5f00\u53d1\u4eba\u5458\u901a\u8fc7\u53d1\u5e03\u63a7\u5236\u53f0\u53d1\u5e03\u5e94\u7528\uff1b \u53d1\u5e03\u7cfb\u7edf\u901a\u8fc7\u67e5\u8be2\u8d44\u4ea7\u6cbb\u7406\u4e2d\u5fc3\u83b7\u53d6\u53d1\u5e03\u89c4\u683c\u4fe1\u606f\uff1b \u53d1\u5e03\u7cfb\u7edf\u5411\u5bb9\u5668\u4e91\u53d1\u51fa\u542f\u52a8\u5bb9\u5668\u5b9e\u4f8b\u6307\u4ee4\uff1b \u5bb9\u5668\u4e91\u4ece\u955c\u50cf\u6cbb\u7406\u4e2d\u5fc3\u62c9\u53d6\u955c\u50cf\u5e76\u542f\u52a8\u5bb9\u5668\uff1b \u5bb9\u5668\u5185\u670d\u52a1\u542f\u52a8\u540e\u81ea\u6ce8\u518c\u5230\u670d\u52a1\u6ce8\u518c\u4e2d\u5fc3\uff0c\u5e76\u4fdd\u6301\u5b9a\u671f\u5fc3\u8df3\uff1b \u7528\u6237\u901a\u8fc7\u53d1\u5e03\u7cfb\u7edf\u8c03\u7528\u670d\u52a1\u6ce8\u518c\u4e2d\u5fc3\u8c03\u62e8\u6d41\u91cf\uff0c\u5b9e\u73b0\u84dd\u7eff\uff0c\u91d1\u4e1d\u96c0\u6216\u7070\u5ea6\u53d1\u5e03\u7b49\u673a\u5236\uff1b \u7f51\u5173\u548c\u5185\u90e8\u5fae\u670d\u52a1\u5ba2\u6237\u7aef\u5b9a\u671f\u540c\u6b65\u670d\u52a1\u6ce8\u518c\u4e2d\u5fc3\u4e0a\u7684\u670d\u52a1\u8def\u7531\u8868\uff0c\u5c06\u6d41\u91cf\u6309\u8d1f\u8f7d\u5747\u8861\u7b56\u7565\u5206\u53d1\u5230\u65b0\u7684\u670d\u52a1\u5b9e\u4f8b\u4e0a\u3002 \u53e6\u5916\uff0c\u6301\u7eed\u4ea4\u4ed8\u6d41\u6c34\u7ebf\uff08CD Pipeline\uff09\u4e5f\u662f\u5fae\u670d\u52a1\u53d1\u5e03\u91cd\u8981\u73af\u8282\uff0c\u8fd9\u5757\u4e3b\u8981\u548c\u7814\u53d1\u6d41\u7a0b\u76f8\u5173\uff0c\u4e00\u822c\u9700\u8981\u4f01\u4e1a\u5b9a\u5236\uff0c\u4e0b\u9762\u662f\u4e00\u4e2a\u53ef\u4f9b\u53c2\u8003\u7684\u6d41\u6c34\u7ebf\u6a21\u578b\uff0c\u5728\u955c\u50cf\u6cbb\u7406\u4e2d\u5fc3\u4e0a\u5c01\u88c5\u4e00\u4e9b\u8f7b\u91cf\u7ea7\u7684\u6cbb\u7406\u6d41\u7a0b\uff0c\u4f8b\u5982\u53ea\u6709\u901a\u8fc7\u6d4b\u8bd5\u73af\u5883\u6d4b\u8bd5\u7684\u955c\u50cf\u624d\u80fd\u5347\u7ea7\u53d1\u5e03\u5230 UAT \u73af\u5883\uff0c\u53ea\u6709\u901a\u8fc7 UAT \u73af\u5883\u6d4b\u8bd5\u7684\u955c\u50cf\u624d\u80fd\u5347\u7ea7\u53d1\u5e03\u5230\u751f\u4ea7\u73af\u5883\uff0c\u901a\u8fc7\u5728\u6d41\u6c34\u7ebf\u4e0a\u8bbe\u7f6e\u4e00\u4e9b\u8d28\u91cf\u95e8\uff0c\u4fdd\u969c\u5e94\u7528\u9ad8\u8d28\u91cf\u4ea4\u4ed8\u5230\u751f\u4ea7\u3002","title":"\u5341\u3001\u670d\u52a1\u90e8\u7f72\u5e73\u53f0\u9009\u578b"},{"location":"exp/micro-service/#_12","text":"\u6ce8\u610f\uff0c\u672c\u6587\u9650\u4e8e\u7bc7\u5e45\uff0c\u5bf9\u6d4b\u8bd5\u548c CI \u7b49\u73af\u8282\u6ca1\u6709\u6d89\u53ca\uff0c\u4f46\u5b83\u4eec\u540c\u6837\u662f\u6784\u5efa\u5fae\u670d\u52a1\u67b6\u6784\u7684\u91cd\u8981\u73af\u8282\uff0c\u4e5f\u6709\u4f17\u591a\u6210\u719f\u7684\u5f00\u6e90\u4ea7\u54c1\u53ef\u9009\u3002 \u6280\u672f\u9009\u578b\u867d\u7136\u91cd\u8981\uff0c\u4f46\u8fd8\u53ea\u662f\u5fae\u670d\u52a1\u5efa\u8bbe\u7684\u4e00\u5c0f\u90e8\u5206\u5de5\u4f5c\uff0c\u9009\u578b\u540e\u7684\u4ea7\u54c1\u8981\u5728\u4f01\u4e1a\u5185\u90e8\u771f\u6b63\u843d\u5730\uff0c\u5f62\u6210\u5b8c\u6574\u7684\u5fae\u670d\u52a1\u6280\u672f\u6808\u4f53\u7cfb\uff0c\u5219\u540e\u7eed\u8fd8\u6709\u5927\u91cf\u96c6\u6210\u3001\u5b9a\u5236\u3001\u6cbb\u7406\u3001\u8fd0\u7ef4\u548c\u63a8\u5e7f\u7b49\u5de5\u4f5c\u3002 \u672c\u6587\u4ec5\u9650\u4e2a\u4eba\u7ecf\u9a8c\u89c6\u89d2\uff0c\u9009\u578b\u601d\u8def\u4ec5\u4f9b\u53c2\u8003\u501f\u9274\u3002\u6bcf\u4e2a\u4f01\u4e1a\u7684\u5177\u4f53\u4e0a\u4e0b\u6587\uff08\u4e1a\u52a1\u573a\u666f\uff0c\u56e2\u961f\u7ec4\u7ec7\uff0c\u6280\u672f\u67b6\u6784\u7b49\uff09\u5404\u4e0d\u76f8\u540c\uff0c\u6bcf\u4e2a\u67b6\u6784\u5e08\u7684\u80cc\u666f\u7ecf\u9a8c\u4e5f\u5404\u4e0d\u76f8\u540c\uff0c\u5927\u5bb6\u8981\u7ed3\u5408\u5b9e\u9645\u81ea\u5df1\u505a\u51fa\u9009\u578b\uff0c\u6ca1\u6709\u6700\u597d\u7684\u6280\u672f\u6808\uff0c\u53ea\u6709\u76f8\u5bf9\u8f83\u5408\u9002\u7684\u6280\u672f\u6808\u3002\u53e6\u5916\uff0c\u597d\u7684\u6280\u672f\u9009\u578b\u662f\u76f8\u4e92\u501f\u9274\u751a\u81f3 PK \u51fa\u6765\u7684\uff0c\u6b22\u8fce\u5927\u5bb6\u8ba8\u8bba\uff0c\u7ed9\u51fa\u81ea\u5df1\u7684\u5fae\u670d\u52a1 2.0 \u6280\u672f\u6808\u9009\u578b\u610f\u89c1\u3002","title":"\u5341\u4e00\u3001\u5199\u5728\u6700\u540e"},{"location":"exp/micro-service/#_13","text":"Spring Boot https://github.com/spring-projects/spring-boot Alibaba Dubbo https://github.com/alibaba/dubbo Google gRPC https://github.com/grpc/grpc NetflixOSS Eureka https://github.com/Netflix/eureka Hashicorp Consul https://github.com/hashicorp/consul NetflixOSS Zuul https://github.com/Netflix/zuul Kong https://github.com/Kong/kong Spring Cloud Config https://github.com/spring-cloud/spring-cloud-config CTrip Apollo https://github.com/ctripcorp/apollo ElasticSearch https://github.com/elastic/elasticsearch Yelp Elastalert https://github.com/Yelp/elastalert Dianping CAT https://github.com/dianping/cat Zipkin https://github.com/openzipkin/zipkin Naver Pinpoint https://github.com/naver/pinpoint OpenTSDB https://github.com/OpenTSDB/opentsdb KairosDB https://github.com/kairosdb/kairosdb Argus https://github.com/salesforce/Argus InfluxDB https://github.com/influxdata/influxdb Prometheus https://github.com/prometheus/prometheus Grafana https://github.com/grafana/grafana Sensu https://github.com/sensu/sensu Esty 411 https://github.com/etsy/411 Zalando ZMon https://github.com/zalando/zmon NetflixOSS Hystrix https://github.com/Netflix/Hystrix Nginx https://github.com/nginx/nginx Apache Kafka https://github.com/apache/kafka Allegro Hermes https://github.com/allegro/hermes Apache Rocketmq https://github.com/apache/rocketmq Rabbitmq https://github.com/rabbitmq/rabbitmq-server Sohutv CacheCloud https://github.com/sohutv/cachecloud Twitter twemproxy https://github.com/twitter/twemproxy CodisLab codis https://github.com/CodisLabs/codis Dangdang Sharding-jdbc https://github.com/shardingjdbc/sharding-jdbc MyCAT https://github.com/MyCATApache/Mycat-Server Xxl-job https://github.com/xuxueli/xxl-job Dangdang elastic-job https://github.com/elasticjob/elastic-job-lite Apereo CAS https://github.com/apereo/cas JBoss keycloak https://github.com/keycloak/keycloak Spring cloud security https://github.com/spring-cloud/spring-cloud-security OpenID-Connect-Java-Spring-Server https://github.com/mitreid-connect/OpenID-Connect-Java-Spring-Server Google Kubernetes https://github.com/kubernetes/kubernetes Apache Mesos https://github.com/apache/mesos Vmware Harbor https://github.com/vmware/harbor Netflix Spinnaker https://github.com/spinnaker/spinnaker Microservices in Practice \u2013 Key Architecture Concepts of an MSA https://wso2.com/whitepapers/microservices-in-practice-key-architectural-concepts-of-an-msa/","title":"\u5341\u4e8c\u3001\u9644\u5f55\u94fe\u63a5"},{"location":"java/feature/","text":"Java \u65b0\u7279\u6027\u603b\u7ed3 \u00b6 \u603b\u7ed3\u7684\u8fd9\u4e9b\u65b0\u7279\u6027\uff0c\u90fd\u662f\u81ea\u5df1\u89c9\u5f97\u5728\u5f00\u53d1\u4e2d\u5b9e\u9645\u7528\u5f97\u4e0a\u7684\u3002 \u7b80\u5355\u6982\u62ec\u4e0b\u5c31\u662f\uff1a * JAVA1.3\uff1a\u666e\u901a\u7684\u539f\u59cb\u7684JAVA\uff0c\u57fa\u672c\u8bed\u6cd5\u76f8\u4fe1\u5927\u5bb6\u90fd\u89c1\u8fc7\u4e86 * JAVA1.4\uff1aassert\u5173\u952e\u5b57 * JAVA5\uff1a\u679a\u4e3e\u7c7b\u578b\u3001\u6cdb\u578b\u3001\u81ea\u52a8\u62c6\u88c5\u7bb1 * JAVA6\uff1a @Override\u6ce8\u89e3 * JAVA7\uff1a <>\u7b26\u53f7\u3001ARM\u652f\u6301\u3001\u652f\u6301\u591acatch * JAVA8\uff1aLamda\u8868\u8fbe\u5f0f\uff0c\u7c7b\u578b\u6ce8\u89e3\u7b49 * JAVA9\uff1a \u6a21\u5757\u5316\u3001\u63a5\u53e3\u4e2d\u7684\u79c1\u6709\u65b9\u6cd5\u7b49 Java5 \u65b0\u7279\u6027\u603b\u7ed3 \u00b6 \u6cdb\u578b Generics \u00b6 \u5f15\u7528\u6cdb\u578b\u4e4b\u540e\uff0c\u5141\u8bb8\u6307\u5b9a\u96c6\u5408\u91cc\u5143\u7d20\u7684\u7c7b\u578b\uff0c\u514d\u53bb\u4e86\u5f3a\u5236\u7c7b\u578b\u8f6c\u6362\uff0c\u5e76\u4e14\u80fd\u5728\u7f16\u8bd1\u65f6\u523b\u8fdb\u884c\u7c7b\u578b\u68c0\u67e5\u7684\u597d\u5904\u3002Parameterized Type\u4f5c\u4e3a\u53c2\u6570\u548c\u8fd4\u56de\u503c\uff0cGeneric\u662fvararg\u3001annotation\u3001enumeration\u3001collection\u7684\u57fa\u77f3\u3002 \u6cdb\u578b\u53ef\u4ee5\u5e26\u6765\u5982\u4e0b\u7684\u597d\u5904\u603b\u7ed3\u5982\u4e0b\uff1a \u7c7b\u578b\u5b89\u5168\uff1a\u629b\u5f03List\u3001Map\uff0c\u4f7f\u7528List\u3001Map\u7ed9\u5b83\u4eec\u6dfb\u52a0\u5143\u7d20\u6216\u8005\u4f7f\u7528Iterator\u904d\u5386\u65f6\uff0c\u7f16\u8bd1\u671f\u5c31\u53ef\u4ee5\u7ed9\u4f60\u68c0\u67e5\u51fa\u7c7b\u578b\u9519\u8bef \u65b9\u6cd5\u53c2\u6570\u548c\u8fd4\u56de\u503c\u52a0\u4e0a\u4e86Type: \u629b\u5f03List\u3001Map\uff0c\u4f7f\u7528List\u3001Map \u4e0d\u9700\u8981\u7c7b\u578b\u8f6c\u6362\uff1aList list=new ArrayList(); \u7c7b\u578b\u901a\u914d\u7b26\u201c?\u201d\uff1a \u5047\u8bbe\u4e00\u4e2a\u6253\u5370List\u4e2d\u5143\u7d20\u7684\u65b9\u6cd5printList,\u6211\u4eec\u5e0c\u671b\u4efb\u4f55\u7c7b\u578bT\u7684List\u90fd\u53ef\u4ee5\u88ab\u6253\u5370 \u679a\u4e3e\u7c7b\u578b \u00b6 \u5f15\u5165\u4e86\u679a\u4e3e\u7c7b\u578b \u81ea\u52a8\u88c5\u7bb1\u62c6\u7bb1\uff08\u81ea\u52a8\u7c7b\u578b\u5305\u88c5\u548c\u89e3\u5305\uff09autoboxing & unboxing \u00b6 \u7b80\u5355\u7684\u8bf4\u662f\u7c7b\u578b\u81ea\u52a8\u8f6c\u6362\u3002\u81ea\u52a8\u88c5\u5305\uff1a\u57fa\u672c\u7c7b\u578b\u81ea\u52a8\u8f6c\u4e3a\u5305\u88c5\u7c7b\uff08int \u2014\u2014Integer\uff09\u81ea\u52a8\u62c6\u5305\uff1a\u5305\u88c5\u7c7b\u81ea\u52a8\u8f6c\u4e3a\u57fa\u672c\u7c7b\u578b\uff08Integer\u2014\u2014int\uff09 \u53ef\u53d8\u53c2\u6570varargs(varargs number of arguments) \u00b6 \u53c2\u6570\u7c7b\u578b\u76f8\u540c\u65f6\uff0c\u628a\u91cd\u8f7d\u51fd\u6570\u5408\u5e76\u5230\u4e00\u8d77\u4e86\u3002\u5982\uff1a public void test ( object ... objs ){ for ( Object obj : objs ){ System . out . println ( obj ); } } Annotations\uff08\u91cd\u8981\uff09 \u5b83\u662fjava\u4e2d\u7684metadata\uff08\u6ce8\u91ca\uff09 \u00b6 \u6ce8\u89e3\u5728JAVA5\u4e2d\u5c31\u5f15\u5165\u4e86\u3002\u8fd9\u662f\u975e\u5e38\u91cd\u8981\u7684\u7279\u6027\u3002\u73b0\u5728\u6ce8\u89e3\u7684\u5e94\u7528\u5df2\u7ecf\u968f\u5904\u53ef\u89c1\u3002\u4e0d\u8fc7JAVA5\u7684\u6ce8\u89e3\u8fd8\u4e0d\u6210\u719f\uff0c\u6ca1\u6cd5\u81ea\u5b9a\u4e49\u6ce8\u89e3\u3002 \u65b0\u7684\u8fed\u4ee3\u8bed\u53e5 \u00b6 for ( int n : numbers ){ //process } \u9759\u6001\u5bfc\u5165\uff08import static \uff09 \u00b6 \u5bfc\u5165\u9759\u6001\u5bf9\u8c61\uff0c\u53ef\u4ee5\u7701\u7565\u4e9b\u4ee3\u7801\u3002\u4e0d\u8fc7\u8fd9\u4e2a\u4e5f\u4e0d\u5e38\u7528\u3002 import static java.lang.System.out ; //\u5bfc\u5165java.lang\u5305\u4e0b\u7684System\u7c7b\u7684\u9759\u6001\u65b9\u6cd5out; public class HelloWorld { public static void main ( String [] args ){ out . print ( \"Hello World!\" ); //\u65e2\u662f\u5728\u8fd9\u91cc\u4e0d\u7528\u518d\u5199\u6210System.out.println(\"Hello World!\")\u4e86\uff0c\u56e0\u4e3a\u5df2\u7ecf\u5bfc\u5165\u4e86\u8fd9\u4e2a\u9759\u6001\u65b9\u6cd5out\u3002 } } \u65b0\u7684\u683c\u5f0f\u5316\u65b9\u6cd5java.util.Formatter\uff09 \u00b6 formatter . format ( \"Remaining account balance: $%.2f\" , balance ); \u65b0\u7684\u7ebf\u7a0b\u6a21\u578b\u548c\u5e76\u53d1\u5e93Thread Framework(\u91cd\u8981) \u00b6 \u6700\u4e3b\u8981\u7684\u5c31\u662f\u5f15\u5165\u4e86java.util.concurrent\u5305\uff0c\u8fd9\u4e2a\u90fd\u662f\u9700\u8981\u91cd\u70b9\u638c\u63e1\u7684\u3002 HashMap\u7684\u66ff\u4ee3\u8005ConcurrentHashMap\u548cArrayList\u7684\u66ff\u4ee3\u8005CopyOnWriteArrayList\u5728\u5927\u5e76\u53d1\u91cf\u8bfb\u53d6\u65f6\u91c7\u7528java.util.concurrent\u5305\u91cc\u7684\u4e00\u4e9b\u7c7b\u4f1a\u8ba9\u5927\u5bb6\u6ee1\u610fBlockingQueue\u3001Callable\u3001Executor\u3001Semaphore Java6 \u65b0\u7279\u6027\u603b\u7ed3 \u00b6 Web Services \u00b6 \u4f18\u5148\u652f\u6301\u7f16\u5199 XML web service \u5ba2\u6237\u7aef\u7a0b\u5e8f\u3002\u4f60\u53ef\u4ee5\u7528\u8fc7\u7b80\u5355\u7684annotaion\u5c06\u4f60\u7684API\u53d1\u5e03\u6210.NET\u4ea4\u4e92\u7684web services. Mustang \u6dfb\u52a0\u4e86\u65b0\u7684\u89e3\u6790\u548c XML \u5728 Java object-mapping APIs\u4e2d, \u4e4b\u524d\u53ea\u5728Java EE\u5e73\u53f0\u5b9e\u73b0\u6216\u8005Java Web Services Pack\u4e2d\u63d0\u4f9b. Scripting \u00b6 \u73b0\u5728\u4f60\u53ef\u4ee5\u5728Java\u6e90\u4ee3\u7801\u4e2d\u6df7\u5165JavaScript\u4e86\uff0c\u8fd9\u5bf9\u5f00\u53d1\u539f\u578b\u5f88\u6709\u6709\u7528\uff0c\u4f60\u4e5f\u53ef\u4ee5\u63d2\u5165\u81ea\u5df1\u7684\u811a\u672c\u5f15\u64ce\u3002 JDBC4.0 \u00b6 JAVA6\u5c06\u8054\u5408\u7ed1\u5b9a Java DB (Apache Derby). JDBC 4.0 \u589e\u52a0\u4e86\u8bb8\u591a\u7279\u6027\u4f8b\u5982\u652f\u6301XML\u4f5c\u4e3aSQL\u6570\u636e\u7c7b\u578b\uff0c\u66f4\u597d\u7684\u96c6\u6210Binary Large OBjects (BLOBs) \u548c Character Large OBjects (CLOBs) . UI\u4f18\u5316 \u00b6 GUI \u5f00\u53d1\u8005\u53ef\u4ee5\u6709\u66f4\u591a\u7684\u6280\u5de7\u6765\u4f7f\u7528 SwingWorker utility \uff0c\u4ee5\u5e2e\u52a9GUI\u5e94\u7528\u4e2d\u7684\u591a\u7ebf\u7a0b\u3002, JTable \u5206\u7c7b\u548c\u8fc7\u6ee4\uff0c\u4ee5\u53ca\u6dfb\u52a0splash\u95ea\u5c4f\u3002 Swing\u62e5\u6709\u66f4\u597d\u7684 look-and-feel , LCD \u6587\u672c\u5448\u73b0, \u6574\u4f53GUI\u6027\u80fd\u7684\u63d0\u5347\u3002Java\u5e94\u7528\u7a0b\u5e8f\u53ef\u4ee5\u548c\u672c\u5730\u5e73\u53f0\u66f4\u597d\u7684\u96c6\u6210\uff0c\u4f8b\u5982\u8bbf\u95ee\u5e73\u53f0\u7684\u7cfb\u7edf\u6258\u76d8\u548c\u5f00\u59cb\u83dc\u5355\u3002Mustang\u5c06Java\u63d2\u4ef6\u6280\u672f\u548cJava Web Start\u5f15\u64ce\u7edf\u4e00\u4e86\u8d77\u6765\u3002 \u76d1\u63a7\u7ba1\u7406\u589e\u5f3a \u00b6 \u6dfb\u52a0\u66f4\u591a\u7684\u8bca\u65ad\u4fe1\u606f\uff0c\u7ed1\u5b9a\u4e86\u4e0d\u662f\u5f88\u77e5\u540d\u7684 memory-heap \u5206\u6790\u5de5\u5177Jhat \u6765\u67e5\u770b\u5185\u6838\u5bfc\u51fa\u3002 \u7f16\u8bd1API \u00b6 compiler API\u63d0\u4f9b\u7f16\u7a0b\u8bbf\u95eejavac\uff0c\u53ef\u4ee5\u5b9e\u73b0\u8fdb\u7a0b\u5185\u7f16\u8bd1\uff0c\u52a8\u6001\u4ea7\u751fJava\u4ee3\u7801 \u81ea\u5b9a\u4e49\u6ce8\u89e3 \u00b6 Java tool\u548cframework \u63d0\u4f9b\u5546\u53ef\u4ee5\u5b9a\u4e49\u81ea\u5df1\u7684 annotations \uff0c\u5e76\u4e14\u5185\u6838\u652f\u6301\u81ea\u5b9a\u4e49annotation\u7684\u63d2\u4ef6\u548c\u6267\u884c\u5904\u7406\u5668 \u5b89\u5168\u6027 \u00b6 XML-\u6570\u5b57\u7b7e\u540d(XML-DSIG) APIs \u7528\u4e8e\u521b\u5efa\u548c\u64cd\u7eb5\u6570\u5b57\u7b7e\u540d); \u65b0\u7684\u65b9\u6cd5\u6765\u8bbf\u95ee\u672c\u5730\u5e73\u53f0\u7684\u5b89\u5168\u670d\u52a1\uff0c\u4f8b\u5982\u672c\u5730Microsoft Windows for secure authentication and communicationnative \u7684Public Key Infrastructure (PKI) \u548c cryptographic services\uff0c Java Generic Security Services (Java GSS) \u548c Kerberos services for authentication, \u4ee5\u53ca\u8bbf\u95ee LDAP servers \u6765\u8ba4\u8bc1\u7528\u6237. Java7 \u65b0\u7279\u6027\u603b\u7ed3 \u00b6 switch\u4e2d\u4f7f\u7528String \u00b6 java7\u4ee5\u524d\u5728switch\u4e2d\u53ea\u80fd\u4f7f\u7528number\u6216enum,\u73b0\u5728\u53ef\u4ee5\u4f7f\u7528string\u4e86\u3002 \u793a\u4f8b\uff1a String s = \"a\" ; switch ( s ) { case \"a\" : System . out . println ( \"is a\" ); break ; case \"b\" : System . out . println ( \"is b\" ); break ; default : System . out . println ( \"is c\" ); break ; } \u5f02\u5e38\u5904\u7406 \u00b6 Throwable\u7c7b\u589e\u52a0addSuppressed\u65b9\u6cd5\u548cgetSuppressed\u65b9\u6cd5\uff0c\u652f\u6301\u539f\u59cb\u5f02\u5e38\u4e2d\u52a0\u5165\u88ab\u6291\u5236\u7684\u5f02\u5e38\u3002 \u5f02\u5e38\u6291\u5236\uff1a\u5728try\u548cfinally\u4e2d\u540c\u65f6\u629b\u51fa\u5f02\u5e38\u65f6\uff0cfinally\u4e2d\u629b\u51fa\u7684\u5f02\u5e38\u4f1a\u5728\u5f02\u5e38\u6808\u4e2d\u5411\u4e0a\u4f20\u9012\uff0c\u800ctry\u4e2d\u4ea7\u751f\u7684\u539f\u59cb\u5f02\u5e38\u4f1a\u6d88\u5931\u3002 \u5728Java7\u4e4b\u524d\u7684\u7248\u672c\uff0c\u53ef\u4ee5\u5c06\u539f\u59cb\u5f02\u5e38\u4fdd\u5b58\uff0c\u5728finally\u4e2d\u4ea7\u751f\u5f02\u5e38\u65f6\u629b\u51fa\u539f\u59cb\u5f02\u5e38\uff1a //java 7 \u4ee5\u524d public void read ( String filename ) throws BaseException { FileInputStream input = null ; IOException readException = null ; try { input = new FileInputStream ( filename ); } catch ( IOException ex ) { readException = ex ; //\u4fdd\u5b58\u539f\u59cb\u5f02\u5e38 } finally { if ( input != null ) { try { input . close (); } catch ( IOException ex ) { if ( readException == null ) { readException = ex ; } } } if ( readException != null ) { throw new BaseException ( readException ); } } } //\u5728Java7\u4e2d\u7684\u7248\u672c\uff0c\u53ef\u4ee5\u4f7f\u7528addSuppressed\u65b9\u6cd5\u8bb0\u5f55\u88ab\u6291\u5236\u7684\u5f02\u5e38\uff1a public void read ( String filename ) throws IOException { FileInputStream input = null ; IOException readException = null ; try { input = new FileInputStream ( filename ); } catch ( IOException ex ) { readException = ex ; } finally { if ( input != null ) { try { input . close (); } catch ( IOException ex ) { if ( readException != null ) { //\u6b64\u5904\u7684\u533a\u522b readException . addSuppressed ( ex ); } else { readException = ex ; } } } if ( readException != null ) { throw readException ; } } } try-with-resources \u00b6 java7\u4ee5\u524d\u5bf9\u67d0\u4e9b\u8d44\u6e90\u7684\u64cd\u4f5c\u662f\u9700\u8981\u624b\u52a8\u5173\u95ed\uff0c\u5982InputStream\uff0cWrites\uff0cSockets\uff0cSql\u7b49\uff0c\u9700\u8981\u5728finally\u4e2d\u8fdb\u884c\u5173\u95ed\u8d44\u6e90\u7684\u64cd\u4f5c\uff0c\u73b0\u5728\u4e0d\u9700\u8981\u4f7f\u7528finally\u6765\u4fdd\u8bc1\u6253\u5f00\u7684\u6d41\u88ab\u6b63\u786e\u5173\u95ed\uff0c\u73b0\u5728\u662f\u81ea\u52a8\u5b8c\u6210\u7684\uff0c\u4f1a\u81ea\u52a8\u91ca\u653e\u8d44\u6e90,\u786e\u4fdd\u6bcf\u4e00\u4e2a\u8d44\u6e90\u5728\u5904\u7406\u5b8c\u6210\u540e\u90fd\u4f1a\u5173\u95ed\uff0c\u5c31\u4e0d\u9700\u8981\u6211\u4eec\u4ee3\u7801\u53bbclose(); \u5728\u91c7\u7528try-with-resources\u65b9\u5f0f\u540e\uff0c\u4e0d\u9700\u8981\u518d\u6b21\u58f0\u660e\u6d41\u7684\u5173\u95ed\u3002 \u53ef\u4ee5\u4f7f\u7528try-with-resources\u7684\u8d44\u6e90\u6709\uff1a\u4efb\u4f55\u5b9e\u73b0\u4e86java.lang.AutoCloseable\u63a5\u53e3\u548cjava.io.Closeable\u63a5\u53e3\u7684\u5bf9\u8c61\u3002\u4e3a\u4e86\u652f\u6301\u8fd9\u4e2a\u884c\u4e3a\uff0c\u6240\u6709\u53ef\u5173\u95ed\u7684\u7c7b\u5c06\u88ab\u4fee\u6539\u4e3a\u53ef\u4ee5\u5b9e\u73b0\u4e00\u4e2aClosable\uff08\u53ef\u5173\u95ed\u7684\uff09\u63a5\u53e3\u3002 public interface Closeable extends AutoCloseable {} public abstract class Reader implements Readable , Closeable {} \u5982\u679c\u5728try\u8bed\u53e5\u4e2d\u5199\u5165\u4e86\u6ca1\u6709\u5b9e\u73b0\u8be5\u63a5\u53e3\u7684\u7c7b\uff0c\u4f1a\u63d0\u793a\uff1a The resource type File does not implement java.lang.AutoCloseable \u793a\u4f8b\uff1a //java 7 \u4ee5\u524d OutputStream fos = null ; try { fos = new FileOutputStream ( \"D:/file\" ); } finally { fos . close (); } //java 7 \u4ee5\u540e try ( OutputStream fos = new FileOutputStream ( \"D:/file\" );){ // \u4e0d\u9700\u8981\u518d\u6b21\u6307\u660efos.close(); } //try\u5b50\u53e5\u4e2d\u53ef\u4ee5\u7ba1\u7406\u591a\u4e2a\u8d44\u6e90 public void copyFile ( String fromPath , String toPath ) throws IOException { try ( InputStream input = new FileInputStream ( fromPath ); OutputStream output = new FileOutputStream ( toPath ) ) { byte [] buffer = new byte [ 8192 ]; int len = - 1 ; while ( ( len = input . read ( buffer ))!=- 1 ) { output . write ( buffer , 0 , len ); } } } \u6355\u83b7\u591a\u4e2a\u5f02\u5e38 \u00b6 java7\u4ee5\u524d\u5728\u4e00\u4e2a\u65b9\u6cd5\u629b\u51fa\u591a\u4e2a\u5f02\u5e38\u65f6\uff0c\u53ea\u80fd\u4e00\u4e2a\u4e2a\u7684catch\uff0c\u8fd9\u6837\u4ee3\u7801\u4f1a\u6709\u591a\u4e2acatch,\u663e\u5f97\u5f88\u4e0d\u53cb\u597d\uff0c\u73b0\u5728\u53ea\u9700\u4e00\u4e2acatch\u8bed\u53e5\uff0c\u591a\u4e2a\u5f02\u5e38\u7c7b\u578b\u7528\"|\"\u9694\u5f00\u3002 \u793a\u4f8b\uff1a //java 7 \u4ee5\u524d try { result = field . get ( obj ); } catch ( IllegalArgumentException e ) { e . printStackTrace (); } catch ( IllegalAccessException e ) { e . printStackTrace (); } //java 7 \u4ee5\u540e try { result = field . get ( obj ); } catch ( IllegalArgumentException | IllegalAccessException e ) { e . printStackTrace (); } \u6cdb\u578b\u5b9e\u4f8b\u5316\u7c7b\u578b\u81ea\u52a8\u63a8\u65ad \u00b6 \u8fd0\u7528\u6cdb\u578b\u5b9e\u4f8b\u5316\u7c7b\u578b\u81ea\u52a8\u63a8\u65ad\uff0c\u5bf9\u901a\u7528\u5b9e\u4f8b\u521b\u5efa(diamond)\u7684type\u5f15\u7528\u8fdb\u884c\u4e86\u6539\u8fdb \u793a\u4f8b\uff1a //java 7 \u4ee5\u524d List < String > list = new ArrayList < String >(); //java 7 \u4ee5\u540e List < String > list = new ArrayList <>(); \u589e\u52a0\u4e8c\u8fdb\u5236\u8868\u793a \u00b6 Java7\u524d\u652f\u6301\u5341\u8fdb\u5236\uff08123\uff09\u3001\u516b\u8fdb\u5236\uff080123\uff09\u3001\u5341\u516d\u8fdb\u5236\uff080X12AB\uff09 Java7\u589e\u52a0\u4e8c\u8fdb\u5236\u8868\u793a\uff080B11110001\u30010b11110001\uff09 \u793a\u4f8b\uff1a int binary = 0b0001_1001 ; System . out . println ( \"binary is :\" + binary ); binary is : 25 \u6570\u5b57\u4e2d\u53ef\u6dfb\u52a0\u5206\u9694\u7b26 \u00b6 Java7\u4e2d\u652f\u6301\u5728\u6570\u5b57\u4e2d\u95f4\u589e\u52a0'_'\u4f5c\u4e3a\u5206\u9694\u7b26\uff0c\u5206\u9694\u957fint\u4ee5\u53calong\uff08\u4e5f\u652f\u6301double,float\uff09\uff0c\u663e\u793a\u66f4\u76f4\u89c2\uff0c\u5982\uff0812_123_456\uff09\u3002 \u4e0b\u5212\u7ebf\u53ea\u80fd\u5728\u6570\u5b57\u4e2d\u95f4\uff0c\u7f16\u8bd1\u65f6\u7f16\u8bd1\u5668\u81ea\u52a8\u5220\u9664\u6570\u5b57\u4e2d\u7684\u4e0b\u5212\u7ebf\u3002 \u793a\u4f8b\uff1a int intOne = 1_000_000 ; long longOne = 1_000_000 ; double doubleOne = 1_000_000 ; float floatOne = 1_000_000 ; \u53d8\u957f\u53c2\u6570\u65b9\u6cd5\u7684\u4f18\u5316 \u00b6 \u53c2\u6570\u7c7b\u578b\u76f8\u540c\u65f6\uff0c\u628a\u91cd\u8f7d\u51fd\u6570\u5408\u5e76\u5230\u4e00\u8d77\u4e86 \u4f7f\u7528\u53ef\u53d8\u53c2\u6570\u65f6\uff0c\u63d0\u5347\u7f16\u8bd1\u5668\u7684\u8b66\u544a\u548c\u9519\u8bef\u4fe1\u606f public int sum ( int ... args ) { int result = 0 ; for ( int value : args ) { result += value ; } return result ; } \u96c6\u5408\u7c7b\u7684\u8bed\u6cd5\u652f\u6301 \u00b6 //java 7 \u4ee5\u524d List < String > list = new ArrayList < String >(); list . add ( \"item\" ); String item = list . get ( 0 ); Set < String > set = new HashSet < String >(); set . add ( \"item\" ); Map < String , Integer > map = new HashMap < String , Integer >(); map . put ( \"key\" , 1 ); int value = map . get ( \"key\" ); //java 7 \u4ee5\u540e List < String > list = [ \"item\" ]; String item = list [ 0 ]; Set < String > set = { \"item\" }; Map < String , Integer > map = { \"key\" : 1 }; int value = map [ \"key\" ]; \u81ea\u52a8\u8d44\u6e90\u7ba1\u7406 \u00b6 Java\u4e2d\u67d0\u4e9b\u8d44\u6e90\u662f\u9700\u8981\u624b\u52a8\u5173\u95ed\u7684\uff0c\u5982InputStream\uff0cWrites\uff0cSockets\uff0cSql classes\u7b49\u3002\u8fd9\u4e2a\u65b0\u7684\u8bed\u8a00\u7279\u6027\u5141\u8bb8try\u8bed\u53e5\u672c\u8eab\u7533\u8bf7\u66f4\u591a\u7684\u8d44\u6e90\uff0c\u8fd9\u4e9b\u8d44\u6e90\u4f5c\u7528\u4e8etry\u4ee3\u7801\u5757\uff0c\u5e76\u81ea\u52a8\u5173\u95ed\u3002 //java 7 \u4ee5\u524d BufferedReader br = new BufferedReader ( new FileReader ( path )); try { return br . readLine (); } finally { br . close (); } //java 7 \u4ee5\u540e try ( BufferedReader br = new BufferedReader ( new FileReader ( path )) { return br . readLine (); } \u65b0\u589e\u4e00\u4e9b\u53d6\u73af\u5883\u4fe1\u606f\u7684\u5de5\u5177\u65b9\u6cd5 \u00b6 File System . getJavaIoTempDir () // IO\u4e34\u65f6\u6587\u4ef6\u5939 File System . getJavaHomeDir () // JRE\u7684\u5b89\u88c5\u76ee\u5f55 File System . getUserHomeDir () // \u5f53\u524d\u7528\u6237\u76ee\u5f55 File System . getUserDir () // \u542f\u52a8java\u8fdb\u7a0b\u65f6\u6240\u5728\u7684\u76ee\u5f55 Java8 \u65b0\u7279\u6027\u603b\u7ed3 \u00b6 Java8 \u65b0\u589e\u4e86\u975e\u5e38\u591a\u7684\u7279\u6027\uff0c\u6211\u4eec\u4e3b\u8981\u8ba8\u8bba\u4ee5\u4e0b\u51e0\u4e2a\uff1a 1. Lambda \u8868\u8fbe\u5f0f \u2212 Lambda\u5141\u8bb8\u628a\u51fd\u6570\u4f5c\u4e3a\u4e00\u4e2a\u65b9\u6cd5\u7684\u53c2\u6570(\u51fd\u6570\u4f5c\u4e3a\u53c2\u6570\u4f20\u9012\u8fdb\u65b9\u6cd5\u4e2d)\u3002 2. \u65b9\u6cd5\u5f15\u7528 \u2212 \u65b9\u6cd5\u5f15\u7528\u63d0\u4f9b\u4e86\u975e\u5e38\u6709\u7528\u7684\u8bed\u6cd5\uff0c\u53ef\u4ee5\u76f4\u63a5\u5f15\u7528\u5df2\u6709Java\u7c7b\u6216\u5bf9\u8c61\uff08\u5b9e\u4f8b\uff09\u7684\u65b9\u6cd5\u6216\u6784\u9020\u5668\u3002\u4e0elambda\u8054\u5408\u4f7f\u7528\uff0c\u65b9\u6cd5\u5f15\u7528\u53ef\u4ee5\u4f7f\u8bed\u8a00\u7684\u6784\u9020\u66f4\u7d27\u51d1\u7b80\u6d01\uff0c\u51cf\u5c11\u5197\u4f59\u4ee3\u7801\u3002 3. \u9ed8\u8ba4\u65b9\u6cd5 \u2212 \u9ed8\u8ba4\u65b9\u6cd5\u5c31\u662f\u4e00\u4e2a\u5728\u63a5\u53e3\u91cc\u9762\u6709\u4e86\u4e00\u4e2a\u5b9e\u73b0\u7684\u65b9\u6cd5\u3002 4. \u65b0\u5de5\u5177 \u2212 \u65b0\u7684\u7f16\u8bd1\u5de5\u5177\uff0c\u5982\uff1aNashorn\u5f15\u64ce jjs\u3001 \u7c7b\u4f9d\u8d56\u5206\u6790\u5668jdeps\u3002 5. Stream API \u2212\u65b0\u6dfb\u52a0\u7684Stream API\uff08java.util.stream\uff09 \u628a\u771f\u6b63\u7684\u51fd\u6570\u5f0f\u7f16\u7a0b\u98ce\u683c\u5f15\u5165\u5230Java\u4e2d\u3002 6. Date Time API \u2212 \u52a0\u5f3a\u5bf9\u65e5\u671f\u4e0e\u65f6\u95f4\u7684\u5904\u7406\u3002 7. Optional \u7c7b \u2212 Optional \u7c7b\u5df2\u7ecf\u6210\u4e3a Java 8 \u7c7b\u5e93\u7684\u4e00\u90e8\u5206\uff0c\u7528\u6765\u89e3\u51b3\u7a7a\u6307\u9488\u5f02\u5e38\u3002 8. Nashorn, JavaScript \u5f15\u64ce \u2212 Java 8\u63d0\u4f9b\u4e86\u4e00\u4e2a\u65b0\u7684Nashorn javascript\u5f15\u64ce\uff0c\u5b83\u5141\u8bb8\u6211\u4eec\u5728JVM\u4e0a\u8fd0\u884c\u7279\u5b9a\u7684javascript\u5e94\u7528\u3002 Lambda\u8868\u8fbe\u5f0f\u548c\u51fd\u6570\u5f0f\u63a5\u53e3 \u00b6 Lambda\u8868\u8fbe\u5f0f\uff08\u4e5f\u79f0\u4e3a\u95ed\u5305\uff09\u662fJava 8\u4e2d\u6700\u5927\u548c\u6700\u4ee4\u4eba\u671f\u5f85\u7684\u8bed\u8a00\u6539\u53d8\u3002\u5b83\u5141\u8bb8\u6211\u4eec\u5c06\u51fd\u6570\u5f53\u6210\u53c2\u6570\u4f20\u9012\u7ed9\u67d0\u4e2a\u65b9\u6cd5\uff0c\u6216\u8005\u628a\u4ee3\u7801\u672c\u8eab\u5f53\u4f5c\u6570\u636e\u5904\u7406\uff1a\u51fd\u6570\u5f0f\u5f00\u53d1\u8005\u975e\u5e38\u719f\u6089\u8fd9\u4e9b\u6982\u5ff5\u3002\u5f88\u591aJVM\u5e73\u53f0\u4e0a\u7684\u8bed\u8a00\uff08Groovy\u3001Scala\u7b49\uff09\u4ece\u8bde\u751f\u4e4b\u65e5\u5c31\u652f\u6301Lambda\u8868\u8fbe\u5f0f\uff0c\u4f46\u662fJava\u5f00\u53d1\u8005\u6ca1\u6709\u9009\u62e9\uff0c\u53ea\u80fd\u4f7f\u7528\u533f\u540d\u5185\u90e8\u7c7b\u4ee3\u66ffLambda\u8868\u8fbe\u5f0f\u3002 Lambda\u7684\u8bbe\u8ba1\u8017\u8d39\u4e86\u5f88\u591a\u65f6\u95f4\u548c\u5f88\u5927\u7684\u793e\u533a\u529b\u91cf\uff0c\u6700\u7ec8\u627e\u5230\u4e00\u79cd\u6298\u4e2d\u7684\u5b9e\u73b0\u65b9\u6848\uff0c\u53ef\u4ee5\u5b9e\u73b0\u7b80\u6d01\u800c\u7d27\u51d1\u7684\u8bed\u8a00\u7ed3\u6784\u3002\u6700\u7b80\u5355\u7684Lambda\u8868\u8fbe\u5f0f\u53ef\u7531\u9017\u53f7\u5206\u9694\u7684\u53c2\u6570\u5217\u8868\u3001->\u7b26\u53f7\u548c\u8bed\u53e5\u5757\u7ec4\u6210\uff0c\u4f8b\u5982\uff1a Arrays . asList ( \"a\" , \"b\" , \"d\" ). forEach ( e -> System . out . println ( e ) ); \u5728\u4e0a\u9762\u8fd9\u4e2a\u4ee3\u7801\u4e2d\u7684\u53c2\u6570e\u7684\u7c7b\u578b\u662f\u7531\u7f16\u8bd1\u5668\u63a8\u7406\u5f97\u51fa\u7684\uff0c\u4f60\u4e5f\u53ef\u4ee5\u663e\u5f0f\u6307\u5b9a\u8be5\u53c2\u6570\u7684\u7c7b\u578b\uff0c\u4f8b\u5982\uff1a Arrays . asList ( \"a\" , \"b\" , \"d\" ). forEach ( ( String e ) -> System . out . println ( e ) ); \u5982\u679cLambda\u8868\u8fbe\u5f0f\u9700\u8981\u66f4\u590d\u6742\u7684\u8bed\u53e5\u5757\uff0c\u5219\u53ef\u4ee5\u4f7f\u7528\u82b1\u62ec\u53f7\u5c06\u8be5\u8bed\u53e5\u5757\u62ec\u8d77\u6765\uff0c\u7c7b\u4f3c\u4e8eJava\u4e2d\u7684\u51fd\u6570\u4f53\uff0c\u4f8b\u5982\uff1a Arrays . asList ( \"a\" , \"b\" , \"d\" ). forEach ( e -> { System . out . print ( e ); System . out . print ( e ); } ); Lambda\u8868\u8fbe\u5f0f\u53ef\u4ee5\u5f15\u7528\u7c7b\u6210\u5458\u548c\u5c40\u90e8\u53d8\u91cf\uff08\u4f1a\u5c06\u8fd9\u4e9b\u53d8\u91cf\u9690\u5f0f\u5f97\u8f6c\u6362\u6210final\u7684\uff09\uff0c\u4f8b\u5982\u4e0b\u5217\u4e24\u4e2a\u4ee3\u7801\u5757\u7684\u6548\u679c\u5b8c\u5168\u76f8\u540c\uff1a String separator = \",\" ; Arrays . asList ( \"a\" , \"b\" , \"d\" ). forEach ( ( String e ) -> System . out . print ( e + separator ) ); //\u548c final String separator = \",\" ; Arrays . asList ( \"a\" , \"b\" , \"d\" ). forEach ( ( String e ) -> System . out . print ( e + separator ) ); Lambda\u8868\u8fbe\u5f0f\u6709\u8fd4\u56de\u503c\uff0c\u8fd4\u56de\u503c\u7684\u7c7b\u578b\u4e5f\u7531\u7f16\u8bd1\u5668\u63a8\u7406\u5f97\u51fa\u3002\u5982\u679cLambda\u8868\u8fbe\u5f0f\u4e2d\u7684\u8bed\u53e5\u5757\u53ea\u6709\u4e00\u884c\uff0c\u5219\u53ef\u4ee5\u4e0d\u7528\u4f7f\u7528return\u8bed\u53e5\uff0c\u4e0b\u5217\u4e24\u4e2a\u4ee3\u7801\u7247\u6bb5\u6548\u679c\u76f8\u540c\uff1a Arrays . asList ( \"a\" , \"b\" , \"d\" ). sort ( ( e1 , e2 ) -> e1 . compareTo ( e2 ) ); //\u548c Arrays . asList ( \"a\" , \"b\" , \"d\" ). sort ( ( e1 , e2 ) -> { int result = e1 . compareTo ( e2 ); return result ; } ); Lambda\u7684\u8bbe\u8ba1\u8005\u4eec\u4e3a\u4e86\u8ba9\u73b0\u6709\u7684\u529f\u80fd\u4e0eLambda\u8868\u8fbe\u5f0f\u826f\u597d\u517c\u5bb9\uff0c\u8003\u8651\u4e86\u5f88\u591a\u65b9\u6cd5\uff0c\u4e8e\u662f\u4ea7\u751f\u4e86\u51fd\u6570\u63a5\u53e3\u8fd9\u4e2a\u6982\u5ff5\u3002\u51fd\u6570\u63a5\u53e3\u6307\u7684\u662f\u53ea\u6709\u4e00\u4e2a\u51fd\u6570\u7684\u63a5\u53e3\uff0c\u8fd9\u6837\u7684\u63a5\u53e3\u53ef\u4ee5\u9690\u5f0f\u8f6c\u6362\u4e3aLambda\u8868\u8fbe\u5f0f\u3002java.lang.Runnable\u548cjava.util.concurrent.Callable\u662f\u51fd\u6570\u5f0f\u63a5\u53e3\u7684\u6700\u4f73\u4f8b\u5b50\u3002\u5728\u5b9e\u8df5\u4e2d\uff0c\u51fd\u6570\u5f0f\u63a5\u53e3\u975e\u5e38\u8106\u5f31\uff1a\u53ea\u8981\u67d0\u4e2a\u5f00\u53d1\u8005\u5728\u8be5\u63a5\u53e3\u4e2d\u6dfb\u52a0\u4e00\u4e2a\u51fd\u6570\uff0c\u5219\u8be5\u63a5\u53e3\u5c31\u4e0d\u518d\u662f\u51fd\u6570\u5f0f\u63a5\u53e3\u8fdb\u800c\u5bfc\u81f4\u7f16\u8bd1\u5931\u8d25\u3002\u4e3a\u4e86\u514b\u670d\u8fd9\u79cd\u4ee3\u7801\u5c42\u9762\u7684\u8106\u5f31\u6027\uff0c\u5e76\u663e\u5f0f\u8bf4\u660e\u67d0\u4e2a\u63a5\u53e3\u662f\u51fd\u6570\u5f0f\u63a5\u53e3\uff0cJava 8 \u63d0\u4f9b\u4e86\u4e00\u4e2a\u7279\u6b8a\u7684\u6ce8\u89e3@FunctionalInterface\uff08Java \u5e93\u4e2d\u7684\u6240\u6709\u76f8\u5173\u63a5\u53e3\u90fd\u5df2\u7ecf\u5e26\u6709\u8fd9\u4e2a\u6ce8\u89e3\u4e86\uff09\uff0c\u4e3e\u4e2a\u7b80\u5355\u7684\u51fd\u6570\u5f0f\u63a5\u53e3\u7684\u5b9a\u4e49\uff1a @FunctionalInterface public interface Functional { void method (); } \u4e0d\u8fc7\u6709\u4e00\u70b9\u9700\u8981\u6ce8\u610f\uff0c\u9ed8\u8ba4\u65b9\u6cd5\u548c\u9759\u6001\u65b9\u6cd5\u4e0d\u4f1a\u7834\u574f\u51fd\u6570\u5f0f\u63a5\u53e3\u7684\u5b9a\u4e49\uff0c\u56e0\u6b64\u5982\u4e0b\u7684\u4ee3\u7801\u662f\u5408\u6cd5\u7684\u3002 @FunctionalInterface public interface FunctionalDefaultMethods { void method (); default void defaultMethod () { System . out . print ( \"defaultMethod\" ); } static void staticMethod (){ System . out . print ( \"staticMethod\" ); } } Lambda\u8868\u8fbe\u5f0f\u4f5c\u4e3aJava 8\u7684\u6700\u5927\u5356\u70b9\uff0c\u5b83\u6709\u6f5c\u529b\u5438\u5f15\u66f4\u591a\u7684\u5f00\u53d1\u8005\u52a0\u5165\u5230JVM\u5e73\u53f0\uff0c\u5e76\u5728\u7eafJava\u7f16\u7a0b\u4e2d\u4f7f\u7528\u51fd\u6570\u5f0f\u7f16\u7a0b\u7684\u6982\u5ff5\u3002\u5982\u679c\u4f60\u9700\u8981\u4e86\u89e3\u66f4\u591aLambda\u8868\u8fbe\u5f0f\u7684\u7ec6\u8282\uff0c\u53ef\u4ee5\u53c2\u8003 \u5b98\u65b9\u6587\u6863 \u3002 \u63a5\u53e3\u7684\u9ed8\u8ba4\u65b9\u6cd5\u548c\u9759\u6001\u65b9\u6cd5 \u00b6 Java 8\u4f7f\u7528\u4e24\u4e2a\u65b0\u6982\u5ff5\u6269\u5c55\u4e86\u63a5\u53e3\u7684\u542b\u4e49\uff1a\u9ed8\u8ba4\u65b9\u6cd5\u548c\u9759\u6001\u65b9\u6cd5\u3002\u9ed8\u8ba4\u65b9\u6cd5\u4f7f\u5f97\u63a5\u53e3\u6709\u70b9\u7c7b\u4f3ctraits\uff0c\u4e0d\u8fc7\u8981\u5b9e\u73b0\u7684\u76ee\u6807\u4e0d\u4e00\u6837\u3002\u9ed8\u8ba4\u65b9\u6cd5\u4f7f\u5f97\u5f00\u53d1\u8005\u53ef\u4ee5\u5728 \u4e0d\u7834\u574f\u4e8c\u8fdb\u5236\u517c\u5bb9\u6027\u7684\u524d\u63d0\u4e0b\uff0c\u5f80\u73b0\u5b58\u63a5\u53e3\u4e2d\u6dfb\u52a0\u65b0\u7684\u65b9\u6cd5\uff0c\u5373\u4e0d\u5f3a\u5236\u90a3\u4e9b\u5b9e\u73b0\u4e86\u8be5\u63a5\u53e3\u7684\u7c7b\u4e5f\u540c\u65f6\u5b9e\u73b0\u8fd9\u4e2a\u65b0\u52a0\u7684\u65b9\u6cd5\u3002 \u9ed8\u8ba4\u65b9\u6cd5\u548c\u62bd\u8c61\u65b9\u6cd5\u4e4b\u95f4\u7684\u533a\u522b\u5728\u4e8e\u62bd\u8c61\u65b9\u6cd5\u9700\u8981\u5b9e\u73b0\uff0c\u800c\u9ed8\u8ba4\u65b9\u6cd5\u4e0d\u9700\u8981\u3002\u63a5\u53e3\u63d0\u4f9b\u7684\u9ed8\u8ba4\u65b9\u6cd5\u4f1a\u88ab\u63a5\u53e3\u7684\u5b9e\u73b0\u7c7b\u7ee7\u627f\u6216\u8005\u8986\u5199\uff0c\u4f8b\u5b50\u4ee3\u7801\u5982\u4e0b\uff1a private interface Defaulable { // Interfaces now allow default methods, the implementer may or // may not implement (override) them. default String notRequired () { return \"Default implementation\" ; } } private static class DefaultableImpl implements Defaulable { } private static class OverridableImpl implements Defaulable { @Override public String notRequired () { return \"Overridden implementation\" ; } } Defaulable\u63a5\u53e3\u4f7f\u7528\u5173\u952e\u5b57default\u5b9a\u4e49\u4e86\u4e00\u4e2a\u9ed8\u8ba4\u65b9\u6cd5notRequired()\u3002DefaultableImpl\u7c7b\u5b9e\u73b0\u4e86\u8fd9\u4e2a\u63a5\u53e3\uff0c\u540c\u65f6\u9ed8\u8ba4\u7ee7\u627f\u4e86\u8fd9\u4e2a\u63a5\u53e3\u4e2d\u7684\u9ed8\u8ba4\u65b9\u6cd5\uff1bOverridableImpl\u7c7b\u4e5f\u5b9e\u73b0\u4e86\u8fd9\u4e2a\u63a5\u53e3\uff0c\u4f46\u8986\u5199\u4e86\u8be5\u63a5\u53e3\u7684\u9ed8\u8ba4\u65b9\u6cd5\uff0c\u5e76\u63d0\u4f9b\u4e86\u4e00\u4e2a\u4e0d\u540c\u7684\u5b9e\u73b0\u3002 Java 8\u5e26\u6765\u7684\u53e6\u4e00\u4e2a\u6709\u8da3\u7684\u7279\u6027\u662f\u5728\u63a5\u53e3\u4e2d\u53ef\u4ee5\u5b9a\u4e49\u9759\u6001\u65b9\u6cd5\uff0c\u4f8b\u5b50\u4ee3\u7801\u5982\u4e0b\uff1a private interface DefaulableFactory { // Interfaces now allow static methods static Defaulable create ( Supplier < Defaulable > supplier ) { return supplier . get (); } } \u4e0b\u9762\u7684\u4ee3\u7801\u7247\u6bb5\u6574\u5408\u4e86\u9ed8\u8ba4\u65b9\u6cd5\u548c\u9759\u6001\u65b9\u6cd5\u7684\u4f7f\u7528\u573a\u666f\uff1a public static void main ( String [] args ) { Defaulable defaulable = DefaulableFactory . create ( DefaultableImpl :: new ); System . out . println ( defaulable . notRequired () ); defaulable = DefaulableFactory . create ( OverridableImpl :: new ); System . out . println ( defaulable . notRequired () ); } \u8fd9\u6bb5\u4ee3\u7801\u7684\u8f93\u51fa\u7ed3\u679c\u5982\u4e0b\uff1a Default implementation Overridden implementation \u7531\u4e8eJVM\u4e0a\u7684\u9ed8\u8ba4\u65b9\u6cd5\u7684\u5b9e\u73b0\u5728\u5b57\u8282\u7801\u5c42\u9762\u63d0\u4f9b\u4e86\u652f\u6301\uff0c\u56e0\u6b64\u6548\u7387\u975e\u5e38\u9ad8\u3002\u9ed8\u8ba4\u65b9\u6cd5\u5141\u8bb8\u5728\u4e0d\u6253\u7834\u73b0\u6709\u7ee7\u627f\u4f53\u7cfb\u7684\u57fa\u7840\u4e0a\u6539\u8fdb\u63a5\u53e3\u3002\u8be5\u7279\u6027\u5728\u5b98\u65b9\u5e93\u4e2d\u7684\u5e94\u7528\u662f\uff1a\u7ed9java.util.Collection\u63a5\u53e3\u6dfb\u52a0\u65b0\u65b9\u6cd5\uff0c\u5982stream()\u3001parallelStream()\u3001forEach()\u548cremoveIf()\u7b49\u7b49\u3002 \u5c3d\u7ba1\u9ed8\u8ba4\u65b9\u6cd5\u6709\u8fd9\u4e48\u591a\u597d\u5904\uff0c\u4f46\u5728\u5b9e\u9645\u5f00\u53d1\u4e2d\u5e94\u8be5\u8c28\u614e\u4f7f\u7528\uff1a\u5728\u590d\u6742\u7684\u7ee7\u627f\u4f53\u7cfb\u4e2d\uff0c\u9ed8\u8ba4\u65b9\u6cd5\u53ef\u80fd\u5f15\u8d77\u6b67\u4e49\u548c\u7f16\u8bd1\u9519\u8bef\u3002\u5982\u679c\u4f60\u60f3\u4e86\u89e3\u66f4\u591a\u7ec6\u8282\uff0c\u53ef\u4ee5\u53c2\u8003 \u5b98\u65b9\u6587\u6863 \u3002 \u65b9\u6cd5\u5f15\u7528 \u00b6 \u65b9\u6cd5\u5f15\u7528\u4f7f\u5f97\u5f00\u53d1\u8005\u53ef\u4ee5\u76f4\u63a5\u5f15\u7528\u73b0\u5b58\u7684\u65b9\u6cd5\u3001Java\u7c7b\u7684\u6784\u9020\u65b9\u6cd5\u6216\u8005\u5b9e\u4f8b\u5bf9\u8c61\u3002\u65b9\u6cd5\u5f15\u7528\u548cLambda\u8868\u8fbe\u5f0f\u914d\u5408\u4f7f\u7528\uff0c\u4f7f\u5f97java\u7c7b\u7684\u6784\u9020\u65b9\u6cd5\u770b\u8d77\u6765\u7d27\u51d1\u800c\u7b80\u6d01\uff0c\u6ca1\u6709\u5f88\u591a\u590d\u6742\u7684\u6a21\u677f\u4ee3\u7801\u3002 \u897f\u95e8\u7684\u4f8b\u5b50\u4e2d\uff0cCar\u7c7b\u662f\u4e0d\u540c\u65b9\u6cd5\u5f15\u7528\u7684\u4f8b\u5b50\uff0c\u53ef\u4ee5\u5e2e\u52a9\u8bfb\u8005\u533a\u5206\u56db\u79cd\u7c7b\u578b\u7684\u65b9\u6cd5\u5f15\u7528\u3002 public static class Car { public static Car create ( final Supplier < Car > supplier ) { return supplier . get (); } public static void collide ( final Car car ) { System . out . println ( \"Collided \" + car . toString () ); } public void follow ( final Car another ) { System . out . println ( \"Following the \" + another . toString () ); } public void repair () { System . out . println ( \"Repaired \" + this . toString () ); } } \u7b2c\u4e00\u79cd\u65b9\u6cd5\u5f15\u7528\u7684\u7c7b\u578b\u662f\u6784\u9020\u5668\u5f15\u7528\uff0c\u8bed\u6cd5\u662fClass::new\uff0c\u6216\u8005\u66f4\u4e00\u822c\u7684\u5f62\u5f0f\uff1aClass ::new\u3002\u6ce8\u610f\uff1a\u8fd9\u4e2a\u6784\u9020\u5668\u6ca1\u6709\u53c2\u6570\u3002 final Car car = Car . create ( Car :: new ); final List < Car > cars = Arrays . asList ( car ); \u7b2c\u4e8c\u79cd\u65b9\u6cd5\u5f15\u7528\u7684\u7c7b\u578b\u662f\u9759\u6001\u65b9\u6cd5\u5f15\u7528\uff0c\u8bed\u6cd5\u662fClass::static_method\u3002\u6ce8\u610f\uff1a\u8fd9\u4e2a\u65b9\u6cd5\u63a5\u53d7\u4e00\u4e2aCar\u7c7b\u578b\u7684\u53c2\u6570\u3002 cars . forEach ( Car :: collide ); \u7b2c\u4e09\u79cd\u65b9\u6cd5\u5f15\u7528\u7684\u7c7b\u578b\u662f\u67d0\u4e2a\u7c7b\u7684\u6210\u5458\u65b9\u6cd5\u7684\u5f15\u7528\uff0c\u8bed\u6cd5\u662fClass::method\uff0c\u6ce8\u610f\uff0c\u8fd9\u4e2a\u65b9\u6cd5\u6ca1\u6709\u5b9a\u4e49\u5165\u53c2\uff1a cars . forEach ( Car :: repair ); \u7b2c\u4e09\u79cd\u65b9\u6cd5\u5f15\u7528\u7684\u7c7b\u578b\u662f\u67d0\u4e2a\u7c7b\u7684\u6210\u5458\u65b9\u6cd5\u7684\u5f15\u7528\uff0c\u8bed\u6cd5\u662fClass::method\uff0c\u6ce8\u610f\uff0c\u8fd9\u4e2a\u65b9\u6cd5\u6ca1\u6709\u5b9a\u4e49\u5165\u53c2\uff1a cars . forEach ( Car :: repair ); \u7b2c\u56db\u79cd\u65b9\u6cd5\u5f15\u7528\u7684\u7c7b\u578b\u662f\u67d0\u4e2a\u5b9e\u4f8b\u5bf9\u8c61\u7684\u6210\u5458\u65b9\u6cd5\u7684\u5f15\u7528\uff0c\u8bed\u6cd5\u662finstance::method\u3002\u6ce8\u610f\uff1a\u8fd9\u4e2a\u65b9\u6cd5\u63a5\u53d7\u4e00\u4e2aCar\u7c7b\u578b\u7684\u53c2\u6570\uff1a final Car police = Car . create ( Car :: new ); cars . forEach ( police :: follow ); \u8fd0\u884c\u4e0a\u8ff0\u4f8b\u5b50\uff0c\u53ef\u4ee5\u5728\u63a7\u5236\u53f0\u770b\u5230\u5982\u4e0b\u8f93\u51fa\uff08Car\u5b9e\u4f8b\u53ef\u80fd\u4e0d\u540c\uff09\uff1a Collided com.javacodegeeks.java8.method.references.MethodReferences$Car@7a81197d Repaired com.javacodegeeks.java8.method.references.MethodReferences$Car@7a81197d Following the com.javacodegeeks.java8.method.references.MethodReferences$Car@7a81197d \u5982\u679c\u60f3\u4e86\u89e3\u548c\u5b66\u4e60\u66f4\u8be6\u7ec6\u7684\u5185\u5bb9\uff0c\u53ef\u4ee5\u53c2\u8003 \u5b98\u65b9\u6587\u6863 \u3002 \u91cd\u590d\u6ce8\u89e3 \u00b6 \u81ea\u4eceJava 5\u4e2d\u5f15\u5165\u6ce8\u89e3\u4ee5\u6765\uff0c\u8fd9\u4e2a\u7279\u6027\u5f00\u59cb\u53d8\u5f97\u975e\u5e38\u6d41\u884c\uff0c\u5e76\u5728\u5404\u4e2a\u6846\u67b6\u548c\u9879\u76ee\u4e2d\u88ab\u5e7f\u6cdb\u4f7f\u7528\u3002\u4e0d\u8fc7\uff0c\u6ce8\u89e3\u6709\u4e00\u4e2a\u5f88\u5927\u7684\u9650\u5236\u662f\uff1a\u5728\u540c\u4e00\u4e2a\u5730\u65b9\u4e0d\u80fd\u591a\u6b21\u4f7f\u7528\u540c\u4e00\u4e2a\u6ce8\u89e3\u3002Java 8\u6253\u7834\u4e86\u8fd9\u4e2a\u9650\u5236\uff0c\u5f15\u5165\u4e86\u91cd\u590d\u6ce8\u89e3\u7684\u6982\u5ff5\uff0c\u5141\u8bb8\u5728\u540c\u4e00\u4e2a\u5730\u65b9\u591a\u6b21\u4f7f\u7528\u540c\u4e00\u4e2a\u6ce8\u89e3\u3002 \u5728Java 8\u4e2d\u4f7f\u7528@Repeatable\u6ce8\u89e3\u5b9a\u4e49\u91cd\u590d\u6ce8\u89e3\uff0c\u5b9e\u9645\u4e0a\uff0c\u8fd9\u5e76\u4e0d\u662f\u8bed\u8a00\u5c42\u9762\u7684\u6539\u8fdb\uff0c\u800c\u662f\u7f16\u8bd1\u5668\u505a\u7684\u4e00\u4e2atrick\uff0c\u5e95\u5c42\u7684\u6280\u672f\u4ecd\u7136\u76f8\u540c\u3002\u53ef\u4ee5\u5229\u7528\u4e0b\u9762\u7684\u4ee3\u7801\u8bf4\u660e\uff1a package com.javacodegeeks.java8.repeatable.annotations ; import java.lang.annotation.ElementType ; import java.lang.annotation.Repeatable ; import java.lang.annotation.Retention ; import java.lang.annotation.RetentionPolicy ; import java.lang.annotation.Target ; public class RepeatingAnnotations { @Target ( ElementType . TYPE ) @Retention ( RetentionPolicy . RUNTIME ) public @interface Filters { Filter [] value (); } @Target ( ElementType . TYPE ) @Retention ( RetentionPolicy . RUNTIME ) @Repeatable ( Filters . class ) public @interface Filter { String value (); }; @Filter ( \"filter1\" ) @Filter ( \"filter2\" ) public interface Filterable { } public static void main ( String [] args ) { for ( Filter filter : Filterable . class . getAnnotationsByType ( Filter . class ) ) { System . out . println ( filter . value () ); } } } \u6b63\u5982\u6211\u4eec\u6240\u89c1\uff0c\u8fd9\u91cc\u7684Filter\u7c7b\u4f7f\u7528@Repeatable(Filters.class)\u6ce8\u89e3\u4fee\u9970\uff0c\u800cFilters\u662f\u5b58\u653eFilter\u6ce8\u89e3\u7684\u5bb9\u5668\uff0c\u7f16\u8bd1\u5668\u5c3d\u91cf\u5bf9\u5f00\u53d1\u8005\u5c4f\u853d\u8fd9\u4e9b\u7ec6\u8282\u3002\u8fd9\u6837\uff0cFilterable\u63a5\u53e3\u53ef\u4ee5\u7528\u4e24\u4e2aFilter\u6ce8\u89e3\u6ce8\u91ca\uff08\u8fd9\u91cc\u5e76\u6ca1\u6709\u63d0\u5230\u4efb\u4f55\u5173\u4e8eFilters\u7684\u4fe1\u606f\uff09\u3002 \u53e6\u5916\uff0c\u53cd\u5c04API\u63d0\u4f9b\u4e86\u4e00\u4e2a\u65b0\u7684\u65b9\u6cd5\uff1agetAnnotationsByType()\uff0c\u53ef\u4ee5\u8fd4\u56de\u67d0\u4e2a\u7c7b\u578b\u7684\u91cd\u590d\u6ce8\u89e3\uff0c\u4f8b\u5982Filterable.class.getAnnoation(Filters.class)\u5c06\u8fd4\u56de\u4e24\u4e2aFilter\u5b9e\u4f8b\uff0c\u8f93\u51fa\u5230\u63a7\u5236\u53f0\u7684\u5185\u5bb9\u5982\u4e0b\u6240\u793a\uff1a filter1 filter2 \u5982\u679c\u60f3\u4e86\u89e3\u548c\u5b66\u4e60\u66f4\u8be6\u7ec6\u7684\u5185\u5bb9\uff0c\u53ef\u4ee5\u53c2\u8003 \u5b98\u65b9\u6587\u6863 \u3002 \u66f4\u597d\u7684\u7c7b\u578b\u63a8\u65ad \u00b6 Java 8\u7f16\u8bd1\u5668\u5728\u7c7b\u578b\u63a8\u65ad\u65b9\u9762\u6709\u5f88\u5927\u7684\u63d0\u5347\uff0c\u5728\u5f88\u591a\u573a\u666f\u4e0b\u7f16\u8bd1\u5668\u53ef\u4ee5\u63a8\u5bfc\u51fa\u67d0\u4e2a\u53c2\u6570\u7684\u6570\u636e\u7c7b\u578b\uff0c\u4ece\u800c\u4f7f\u5f97\u4ee3\u7801\u66f4\u4e3a\u7b80\u6d01\u3002\u4f8b\u5b50\u4ee3\u7801\u5982\u4e0b\uff1a package com.javacodegeeks.java8.type.inference ; public class Value < T > { public static < T > T defaultValue () { return null ; } public T getOrDefault ( T value , T defaultValue ) { return ( value != null ) ? value : defaultValue ; } } \u4e0b\u5217\u4ee3\u7801\u662fValue \u7c7b\u578b\u7684\u5e94\u7528\uff1a package com.javacodegeeks.java8.type.inference ; public class TypeInference { public static void main ( String [] args ) { final Value < String > value = new Value <>(); value . getOrDefault ( \"22\" , Value . defaultValue () ); } } \u53c2\u6570Value.defaultValue()\u7684\u7c7b\u578b\u7531\u7f16\u8bd1\u5668\u63a8\u5bfc\u5f97\u51fa\uff0c\u4e0d\u9700\u8981\u663e\u5f0f\u6307\u660e\u3002\u5728Java 7\u4e2d\u8fd9\u6bb5\u4ee3\u7801\u4f1a\u6709\u7f16\u8bd1\u9519\u8bef\uff0c\u9664\u975e\u4f7f\u7528Value. defaultValue()\u3002 \u62d3\u5bbd\u6ce8\u89e3\u7684\u5e94\u7528\u573a\u666f \u00b6 Java 8\u62d3\u5bbd\u4e86\u6ce8\u89e3\u7684\u5e94\u7528\u573a\u666f\u3002\u73b0\u5728\uff0c\u6ce8\u89e3\u51e0\u4e4e\u53ef\u4ee5\u4f7f\u7528\u5728\u4efb\u4f55\u5143\u7d20\u4e0a\uff1a\u5c40\u90e8\u53d8\u91cf\u3001\u63a5\u53e3\u7c7b\u578b\u3001\u8d85\u7c7b\u548c\u63a5\u53e3\u5b9e\u73b0\u7c7b\uff0c\u751a\u81f3\u53ef\u4ee5\u7528\u5728\u51fd\u6570\u7684\u5f02\u5e38\u5b9a\u4e49\u4e0a\u3002\u4e0b\u9762\u662f\u4e00\u4e9b\u4f8b\u5b50\uff1a package com.javacodegeeks.java8.annotations ; import java.lang.annotation.ElementType ; import java.lang.annotation.Retention ; import java.lang.annotation.RetentionPolicy ; import java.lang.annotation.Target ; import java.util.ArrayList ; import java.util.Collection ; public class Annotations { @Retention ( RetentionPolicy . RUNTIME ) @Target ( { ElementType . TYPE_USE , ElementType . TYPE_PARAMETER } ) public @interface NonEmpty { } public static class Holder < @NonEmpty T > extends @NonEmpty Object { public void method () throws @NonEmpty Exception { } } @SuppressWarnings ( \"unused\" ) public static void main ( String [] args ) { final Holder < String > holder = new @NonEmpty Holder < String >(); @NonEmpty Collection < @NonEmpty String > strings = new ArrayList <>(); } } ElementType.TYPE_USER\u548cElementType.TYPE_PARAMETER\u662fJava 8\u65b0\u589e\u7684\u4e24\u4e2a\u6ce8\u89e3\uff0c\u7528\u4e8e\u63cf\u8ff0\u6ce8\u89e3\u7684\u4f7f\u7528\u573a\u666f\u3002Java \u8bed\u8a00\u4e5f\u505a\u4e86\u5bf9\u5e94\u7684\u6539\u53d8\uff0c\u4ee5\u8bc6\u522b\u8fd9\u4e9b\u65b0\u589e\u7684\u6ce8\u89e3\u3002 Java\u7f16\u8bd1\u5668\u7684\u65b0\u7279\u6027 \u00b6 \u4e3a\u4e86\u5728\u8fd0\u884c\u65f6\u83b7\u5f97Java\u7a0b\u5e8f\u4e2d\u65b9\u6cd5\u7684\u53c2\u6570\u540d\u79f0\uff0c\u8001\u4e00\u8f88\u7684Java\u7a0b\u5e8f\u5458\u5fc5\u987b\u4f7f\u7528\u4e0d\u540c\u65b9\u6cd5\uff0c\u4f8b\u5982Paranamer library\u3002Java 8\u7ec8\u4e8e\u5c06\u8fd9\u4e2a\u7279\u6027\u89c4\u8303\u5316\uff0c\u5728\u8bed\u8a00\u5c42\u9762\uff08\u4f7f\u7528\u53cd\u5c04API\u548cParameter.getName()\u65b9\u6cd5\uff09\u548c\u5b57\u8282\u7801\u5c42\u9762\uff08\u4f7f\u7528\u65b0\u7684javac\u7f16\u8bd1\u5668\u4ee5\u53ca-parameters\u53c2\u6570\uff09\u63d0\u4f9b\u652f\u6301\u3002 package com.javacodegeeks.java8.parameter.names ; import java.lang.reflect.Method ; import java.lang.reflect.Parameter ; public class ParameterNames { public static void main ( String [] args ) throws Exception { Method method = ParameterNames . class . getMethod ( \"main\" , String []. class ); for ( final Parameter parameter : method . getParameters () ) { System . out . println ( \"Parameter: \" + parameter . getName () ); } } } \u5728Java 8\u4e2d\u8fd9\u4e2a\u7279\u6027\u662f\u9ed8\u8ba4\u5173\u95ed\u7684\uff0c\u56e0\u6b64\u5982\u679c\u4e0d\u5e26-parameters\u53c2\u6570\u7f16\u8bd1\u4e0a\u8ff0\u4ee3\u7801\u5e76\u8fd0\u884c\uff0c\u5219\u4f1a\u8f93\u51fa\u5982\u4e0b\u7ed3\u679c\uff1a Parameter: arg0 \u5982\u679c\u5e26-parameters\u53c2\u6570\uff0c\u5219\u4f1a\u8f93\u51fa\u5982\u4e0b\u7ed3\u679c\uff08\u6b63\u786e\u7684\u7ed3\u679c\uff09\uff1a Parameter: args \u5982\u679c\u4f60\u4f7f\u7528Maven\u8fdb\u884c\u9879\u76ee\u7ba1\u7406\uff0c\u5219\u53ef\u4ee5\u5728maven-compiler-plugin\u7f16\u8bd1\u5668\u7684\u914d\u7f6e\u9879\u4e2d\u914d\u7f6e-parameters\u53c2\u6570\uff1a <plugin> <groupId>org.apache.maven.plugins</groupId> <artifactId>maven-compiler-plugin</artifactId> <version>3.1</version> <configuration> <compilerArgument>-parameters</compilerArgument> <source>1.8</source> <target>1.8</target> </configuration> </plugin> Optional \u00b6 Java\u5e94\u7528\u4e2d\u6700\u5e38\u89c1\u7684bug\u5c31\u662f\u7a7a\u503c\u5f02\u5e38\u3002\u5728Java 8\u4e4b\u524d\uff0cGoogle Guava\u5f15\u5165\u4e86Optionals\u7c7b\u6765\u89e3\u51b3NullPointerException\uff0c\u4ece\u800c\u907f\u514d\u6e90\u7801\u88ab\u5404\u79cdnull\u68c0\u67e5\u6c61\u67d3\uff0c\u4ee5\u4fbf\u5f00\u53d1\u8005\u5199\u51fa\u66f4\u52a0\u6574\u6d01\u7684\u4ee3\u7801\u3002Java 8\u4e5f\u5c06Optional\u52a0\u5165\u4e86\u5b98\u65b9\u5e93\u3002 Optional\u4ec5\u4ec5\u662f\u4e00\u4e2a\u5bb9\u5668\uff1a\u5b58\u653eT\u7c7b\u578b\u7684\u503c\u6216\u8005null\u3002\u5b83\u63d0\u4f9b\u4e86\u4e00\u4e9b\u6709\u7528\u7684\u63a5\u53e3\u6765\u907f\u514d\u663e\u5f0f\u7684null\u68c0\u67e5\uff0c\u53ef\u4ee5\u53c2\u8003Java 8\u5b98\u65b9\u6587\u6863\u4e86\u89e3\u66f4\u591a\u7ec6\u8282\u3002 \u63a5\u4e0b\u6765\u770b\u4e00\u70b9\u4f7f\u7528Optional\u7684\u4f8b\u5b50\uff1a\u53ef\u80fd\u4e3a\u7a7a\u7684\u503c\u6216\u8005\u67d0\u4e2a\u7c7b\u578b\u7684\u503c\uff1a Optional < String > fullName = Optional . ofNullable ( null ); System . out . println ( \"Full Name is set? \" + fullName . isPresent () ); System . out . println ( \"Full Name: \" + fullName . orElseGet ( () -> \"[none]\" ) ); System . out . println ( fullName . map ( s -> \"Hey \" + s + \"!\" ). orElse ( \"Hey Stranger!\" ) ); \u5982\u679cOptional\u5b9e\u4f8b\u6301\u6709\u4e00\u4e2a\u975e\u7a7a\u503c\uff0c\u5219isPresent()\u65b9\u6cd5\u8fd4\u56detrue\uff0c\u5426\u5219\u8fd4\u56defalse\uff1borElseGet()\u65b9\u6cd5\uff0cOptional\u5b9e\u4f8b\u6301\u6709null\uff0c\u5219\u53ef\u4ee5\u63a5\u53d7\u4e00\u4e2alambda\u8868\u8fbe\u5f0f\u751f\u6210\u7684\u9ed8\u8ba4\u503c\uff1bmap()\u65b9\u6cd5\u53ef\u4ee5\u5c06\u73b0\u6709\u7684Opetional\u5b9e\u4f8b\u7684\u503c\u8f6c\u6362\u6210\u65b0\u7684\u503c\uff1borElse()\u65b9\u6cd5\u4e0eorElseGet()\u65b9\u6cd5\u7c7b\u4f3c\uff0c\u4f46\u662f\u5728\u6301\u6709null\u7684\u65f6\u5019\u8fd4\u56de\u4f20\u5165\u7684\u9ed8\u8ba4\u503c\u3002 \u4e0a\u8ff0\u4ee3\u7801\u7684\u8f93\u51fa\u7ed3\u679c\u5982\u4e0b\uff1a Full Name is set? false Full Name: [none] Hey Stranger! \u518d\u770b\u4e0b\u53e6\u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\uff1a Optional < String > firstName = Optional . of ( \"Tom\" ); System . out . println ( \"First Name is set? \" + firstName . isPresent () ); System . out . println ( \"First Name: \" + firstName . orElseGet ( () -> \"[none]\" ) ); System . out . println ( firstName . map ( s -> \"Hey \" + s + \"!\" ). orElse ( \"Hey Stranger!\" ) ); System . out . println (); \u5982\u679c\u60f3\u4e86\u89e3\u548c\u5b66\u4e60\u66f4\u8be6\u7ec6\u7684\u5185\u5bb9\uff0c\u53ef\u4ee5\u53c2\u8003 \u5b98\u65b9\u6587\u6863 \u3002 Streams \u00b6 \u65b0\u589e\u7684Stream API\uff08java.util.stream\uff09\u5c06\u751f\u6210\u73af\u5883\u7684\u51fd\u6570\u5f0f\u7f16\u7a0b\u5f15\u5165\u4e86Java\u5e93\u4e2d\u3002\u8fd9\u662f\u76ee\u524d\u4e3a\u6b62\u6700\u5927\u7684\u4e00\u6b21\u5bf9Java\u5e93\u7684\u5b8c\u5584\uff0c\u4ee5\u4fbf\u5f00\u53d1\u8005\u80fd\u591f\u5199\u51fa\u66f4\u52a0\u6709\u6548\u3001\u66f4\u52a0\u7b80\u6d01\u548c\u7d27\u51d1\u7684\u4ee3\u7801\u3002 Steam API\u6781\u5927\u5f97\u7b80\u5316\u4e86\u96c6\u5408\u64cd\u4f5c\uff08\u540e\u9762\u6211\u4eec\u4f1a\u770b\u5230\u4e0d\u6b62\u662f\u96c6\u5408\uff09\uff0c\u9996\u5148\u770b\u4e0b\u8fd9\u4e2a\u53ebTask\u7684\u7c7b\uff1a public class Streams { private enum Status { OPEN , CLOSED }; private static final class Task { private final Status status ; private final Integer points ; Task ( final Status status , final Integer points ) { this . status = status ; this . points = points ; } public Integer getPoints () { return points ; } public Status getStatus () { return status ; } @Override public String toString () { return String . format ( \"[%s, %d]\" , status , points ); } } } Task\u7c7b\u6709\u4e00\u4e2a\u5206\u6570\uff08\u6216\u4f2a\u590d\u6742\u5ea6\uff09\u7684\u6982\u5ff5\uff0c\u53e6\u5916\u8fd8\u6709\u4e24\u79cd\u72b6\u6001\uff1aOPEN\u6216\u8005CLOSED\u3002\u73b0\u5728\u5047\u8bbe\u6709\u4e00\u4e2atask\u96c6\u5408\uff1a final Collection < Task > tasks = Arrays . asList ( new Task ( Status . OPEN , 5 ), new Task ( Status . OPEN , 13 ), new Task ( Status . CLOSED , 8 ) ); \u9996\u5148\u770b\u4e00\u4e2a\u95ee\u9898\uff1a\u5728\u8fd9\u4e2atask\u96c6\u5408\u4e2d\u4e00\u5171\u6709\u591a\u5c11\u4e2aOPEN\u72b6\u6001\u7684\u70b9\uff1f\u5728Java 8\u4e4b\u524d\uff0c\u8981\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u5219\u9700\u8981\u4f7f\u7528foreach\u5faa\u73af\u904d\u5386task\u96c6\u5408\uff1b\u4f46\u662f\u5728Java 8\u4e2d\u53ef\u4ee5\u5229\u7528steams\u89e3\u51b3\uff1a\u5305\u62ec\u4e00\u7cfb\u5217\u5143\u7d20\u7684\u5217\u8868\uff0c\u5e76\u4e14\u652f\u6301\u987a\u5e8f\u548c\u5e76\u884c\u5904\u7406\u3002 // Calculate total points of all active tasks using sum() final long totalPointsOfOpenTasks = tasks . stream () . filter ( task -> task . getStatus () == Status . OPEN ) . mapToInt ( Task :: getPoints ) . sum (); System . out . println ( \"Total points: \" + totalPointsOfOpenTasks ); \u8fd0\u884c\u8fd9\u4e2a\u65b9\u6cd5\u7684\u63a7\u5236\u53f0\u8f93\u51fa\u662f\uff1a Total points: 18 \u8fd9\u91cc\u6709\u5f88\u591a\u77e5\u8bc6\u70b9\u503c\u5f97\u8bf4\u3002\u9996\u5148\uff0ctasks\u96c6\u5408\u88ab\u8f6c\u6362\u6210steam\u8868\u793a\uff1b\u5176\u6b21\uff0c\u5728steam\u4e0a\u7684filter\u64cd\u4f5c\u4f1a\u8fc7\u6ee4\u6389\u6240\u6709CLOSED\u7684task\uff1b\u7b2c\u4e09\uff0cmapToInt\u64cd\u4f5c\u57fa\u4e8e\u6bcf\u4e2atask\u5b9e\u4f8b\u7684Task::getPoints\u65b9\u6cd5\u5c06task\u6d41\u8f6c\u6362\u6210Integer\u96c6\u5408\uff1b\u6700\u540e\uff0c\u901a\u8fc7sum\u65b9\u6cd5\u8ba1\u7b97\u603b\u548c\uff0c\u5f97\u51fa\u6700\u540e\u7684\u7ed3\u679c\u3002 \u5728\u5b66\u4e60\u4e0b\u4e00\u4e2a\u4f8b\u5b50\u4e4b\u524d\uff0c\u8fd8\u9700\u8981\u8bb0\u4f4f\u4e00\u4e9bsteams\uff08 \u70b9\u6b64\u66f4\u591a\u7ec6\u8282 \uff09\u7684\u77e5\u8bc6\u70b9\u3002Steam\u4e4b\u4e0a\u7684\u64cd\u4f5c\u53ef\u5206\u4e3a\u4e2d\u95f4\u64cd\u4f5c\u548c\u665a\u671f\u64cd\u4f5c\u3002 \u4e2d\u95f4\u64cd\u4f5c\u4f1a\u8fd4\u56de\u4e00\u4e2a\u65b0\u7684steam\u2014\u2014\u6267\u884c\u4e00\u4e2a\u4e2d\u95f4\u64cd\u4f5c\uff08\u4f8b\u5982filter\uff09\u5e76\u4e0d\u4f1a\u6267\u884c\u5b9e\u9645\u7684\u8fc7\u6ee4\u64cd\u4f5c\uff0c\u800c\u662f\u521b\u5efa\u4e00\u4e2a\u65b0\u7684steam\uff0c\u5e76\u5c06\u539fsteam\u4e2d\u7b26\u5408\u6761\u4ef6\u7684\u5143\u7d20\u653e\u5165\u65b0\u521b\u5efa\u7684steam\u3002 \u665a\u671f\u64cd\u4f5c\uff08\u4f8b\u5982forEach\u6216\u8005sum\uff09\uff0c\u4f1a\u904d\u5386steam\u5e76\u5f97\u51fa\u7ed3\u679c\u6216\u8005\u9644\u5e26\u7ed3\u679c\uff1b\u5728\u6267\u884c\u665a\u671f\u64cd\u4f5c\u4e4b\u540e\uff0csteam\u5904\u7406\u7ebf\u5df2\u7ecf\u5904\u7406\u5b8c\u6bd5\uff0c\u5c31\u4e0d\u80fd\u4f7f\u7528\u4e86\u3002\u5728\u51e0\u4e4e\u6240\u6709\u60c5\u51b5\u4e0b\uff0c\u665a\u671f\u64cd\u4f5c\u90fd\u662f\u7acb\u523b\u5bf9steam\u8fdb\u884c\u904d\u5386\u3002 steam\u7684\u53e6\u4e00\u4e2a\u4ef7\u503c\u662f\u521b\u9020\u6027\u5730\u652f\u6301\u5e76\u884c\u5904\u7406\uff08parallel processing\uff09\u3002\u5bf9\u4e8e\u4e0a\u8ff0\u7684tasks\u96c6\u5408\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u4e0b\u9762\u7684\u4ee3\u7801\u8ba1\u7b97\u6240\u6709\u4efb\u52a1\u7684\u70b9\u6570\u4e4b\u548c\uff1a // Calculate total points of all tasks final double totalPoints = tasks . stream () . parallel () . map ( task -> task . getPoints () ) // or map( Task::getPoints ) . reduce ( 0 , Integer :: sum ); System . out . println ( \"Total points (all tasks): \" + totalPoints ); \u8fd9\u91cc\u6211\u4eec\u4f7f\u7528parallel\u65b9\u6cd5\u5e76\u884c\u5904\u7406\u6240\u6709\u7684task\uff0c\u5e76\u4f7f\u7528reduce\u65b9\u6cd5\u8ba1\u7b97\u6700\u7ec8\u7684\u7ed3\u679c\u3002\u63a7\u5236\u53f0\u8f93\u51fa\u5982\u4e0b\uff1a Total points\uff08all tasks\uff09: 26.0 \u5bf9\u4e8e\u4e00\u4e2a\u96c6\u5408\uff0c\u7ecf\u5e38\u9700\u8981\u6839\u636e\u67d0\u4e9b\u6761\u4ef6\u5bf9\u5176\u4e2d\u7684\u5143\u7d20\u5206\u7ec4\u3002\u5229\u7528steam\u63d0\u4f9b\u7684API\u53ef\u4ee5\u5f88\u5feb\u5b8c\u6210\u8fd9\u7c7b\u4efb\u52a1\uff0c\u4ee3\u7801\u5982\u4e0b\uff1a // Group tasks by their status final Map < Status , List < Task > > map = tasks . stream () . collect ( Collectors . groupingBy ( Task :: getStatus ) ); System . out . println ( map ); \u63a7\u5236\u53f0\u7684\u8f93\u51fa\u5982\u4e0b\uff1a {CLOSED=[[CLOSED, 8]], OPEN=[[OPEN, 5], [OPEN, 13]]} \u6700\u540e\u4e00\u4e2a\u5173\u4e8etasks\u96c6\u5408\u7684\u4f8b\u5b50\u95ee\u9898\u662f\uff1a\u5982\u4f55\u8ba1\u7b97\u96c6\u5408\u4e2d\u6bcf\u4e2a\u4efb\u52a1\u7684\u70b9\u6570\u5728\u96c6\u5408\u4e2d\u6240\u5360\u7684\u6bd4\u91cd\uff0c\u5177\u4f53\u5904\u7406\u7684\u4ee3\u7801\u5982\u4e0b\uff1a // Calculate the weight of each tasks (as percent of total points) final Collection < String > result = tasks . stream () // Stream< String > . mapToInt ( Task :: getPoints ) // IntStream . asLongStream () // LongStream . mapToDouble ( points -> points / totalPoints ) // DoubleStream . boxed () // Stream< Double > . mapToLong ( weigth -> ( long )( weigth * 100 ) ) // LongStream . mapToObj ( percentage -> percentage + \"%\" ) // Stream< String> . collect ( Collectors . toList () ); // List< String > System . out . println ( result ); \u63a7\u5236\u53f0\u8f93\u51fa\u7ed3\u679c\u5982\u4e0b\uff1a [19%, 50%, 30%] \u6700\u540e\uff0c\u6b63\u5982\u4e4b\u524d\u6240\u8bf4\uff0cSteam API\u4e0d\u4ec5\u53ef\u4ee5\u4f5c\u7528\u4e8eJava\u96c6\u5408\uff0c\u4f20\u7edf\u7684IO\u64cd\u4f5c\uff08\u4ece\u6587\u4ef6\u6216\u8005\u7f51\u7edc\u4e00\u884c\u4e00\u884c\u5f97\u8bfb\u53d6\u6570\u636e\uff09\u53ef\u4ee5\u53d7\u76ca\u4e8esteam\u5904\u7406\uff0c\u8fd9\u91cc\u6709\u4e00\u4e2a\u5c0f\u4f8b\u5b50\uff1a final Path path = new File ( filename ). toPath (); try ( Stream < String > lines = Files . lines ( path , StandardCharsets . UTF_8 ) ) { lines . onClose ( () -> System . out . println ( \"Done!\" ) ). forEach ( System . out :: println ); } Stream\u7684\u65b9\u6cd5onClose \u8fd4\u56de\u4e00\u4e2a\u7b49\u4ef7\u7684\u6709\u989d\u5916\u53e5\u67c4\u7684Stream\uff0c\u5f53Stream\u7684close\uff08\uff09\u65b9\u6cd5\u88ab\u8c03\u7528\u7684\u65f6\u5019\u8fd9\u4e2a\u53e5\u67c4\u4f1a\u88ab\u6267\u884c\u3002Stream API\u3001Lambda\u8868\u8fbe\u5f0f\u8fd8\u6709\u63a5\u53e3\u9ed8\u8ba4\u65b9\u6cd5\u548c\u9759\u6001\u65b9\u6cd5\u652f\u6301\u7684\u65b9\u6cd5\u5f15\u7528\uff0c\u662fJava 8\u5bf9\u8f6f\u4ef6\u5f00\u53d1\u7684\u73b0\u4ee3\u8303\u5f0f\u7684\u54cd\u5e94\u3002 \u70b9\u6b64\u66f4\u591a\u7ec6\u8282 Date/Time API(JSR 310) \u00b6 Java 8\u5f15\u5165\u4e86\u65b0\u7684Date-Time API(JSR 310)\u6765\u6539\u8fdb\u65f6\u95f4\u3001\u65e5\u671f\u7684\u5904\u7406\u3002\u65f6\u95f4\u548c\u65e5\u671f\u7684\u7ba1\u7406\u4e00\u76f4\u662f\u6700\u4ee4Java\u5f00\u53d1\u8005\u75db\u82e6\u7684\u95ee\u9898\u3002java.util.Date\u548c\u540e\u6765\u7684java.util.Calendar\u4e00\u76f4\u6ca1\u6709\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff08\u751a\u81f3\u4ee4\u5f00\u53d1\u8005\u66f4\u52a0\u8ff7\u832b\uff09\u3002 \u56e0\u4e3a\u4e0a\u9762\u8fd9\u4e9b\u539f\u56e0\uff0c\u8bde\u751f\u4e86\u7b2c\u4e09\u65b9\u5e93Joda-Time\uff0c\u53ef\u4ee5\u66ff\u4ee3Java\u7684\u65f6\u95f4\u7ba1\u7406API\u3002Java 8\u4e2d\u65b0\u7684\u65f6\u95f4\u548c\u65e5\u671f\u7ba1\u7406API\u6df1\u53d7Joda-Time\u5f71\u54cd\uff0c\u5e76\u5438\u6536\u4e86\u5f88\u591aJoda-Time\u7684\u7cbe\u534e\u3002\u65b0\u7684java.time\u5305\u5305\u542b\u4e86\u6240\u6709\u5173\u4e8e\u65e5\u671f\u3001\u65f6\u95f4\u3001\u65f6\u533a\u3001Instant\uff08\u8ddf\u65e5\u671f\u7c7b\u4f3c\u4f46\u662f\u7cbe\u786e\u5230\u7eb3\u79d2\uff09\u3001duration\uff08\u6301\u7eed\u65f6\u95f4\uff09\u548c\u65f6\u949f\u64cd\u4f5c\u7684\u7c7b\u3002\u65b0\u8bbe\u8ba1\u7684API\u8ba4\u771f\u8003\u8651\u4e86\u8fd9\u4e9b\u7c7b\u7684\u4e0d\u53d8\u6027\uff08\u4ecejava.util.Calendar\u5438\u53d6\u7684\u6559\u8bad\uff09\uff0c\u5982\u679c\u67d0\u4e2a\u5b9e\u4f8b\u9700\u8981\u4fee\u6539\uff0c\u5219\u8fd4\u56de\u4e00\u4e2a\u65b0\u7684\u5bf9\u8c61\u3002 \u6211\u4eec\u63a5\u4e0b\u6765\u770b\u770bjava.time\u5305\u4e2d\u7684\u5173\u952e\u7c7b\u548c\u5404\u81ea\u7684\u4f7f\u7528\u4f8b\u5b50\u3002\u9996\u5148\uff0cClock\u7c7b\u4f7f\u7528\u65f6\u533a\u6765\u8fd4\u56de\u5f53\u524d\u7684\u7eb3\u79d2\u65f6\u95f4\u548c\u65e5\u671f\u3002Clock\u53ef\u4ee5\u66ff\u4ee3System.currentTimeMillis()\u548cTimeZone.getDefault()\u3002 // Get the system clock as UTC offset final Clock clock = Clock . systemUTC (); System . out . println ( clock . instant () ); System . out . println ( clock . millis () ); \u8fd9\u4e2a\u4f8b\u5b50\u7684\u8f93\u51fa\u7ed3\u679c\u662f\uff1a 2014-04-12T15:19:29.282Z 1397315969360 \u7b2c\u4e8c\uff0c\u5173\u6ce8\u4e0bLocalDate\u548cLocalTime\u7c7b\u3002LocalDate\u4ec5\u4ec5\u5305\u542bISO-8601\u65e5\u5386\u7cfb\u7edf\u4e2d\u7684\u65e5\u671f\u90e8\u5206\uff1bLocalTime\u5219\u4ec5\u4ec5\u5305\u542b\u8be5\u65e5\u5386\u7cfb\u7edf\u4e2d\u7684\u65f6\u95f4\u90e8\u5206\u3002\u8fd9\u4e24\u4e2a\u7c7b\u7684\u5bf9\u8c61\u90fd\u53ef\u4ee5\u4f7f\u7528Clock\u5bf9\u8c61\u6784\u5efa\u5f97\u5230\u3002 // Get the local date and local time final LocalDate date = LocalDate . now (); final LocalDate dateFromClock = LocalDate . now ( clock ); System . out . println ( date ); System . out . println ( dateFromClock ); // Get the local date and local time final LocalTime time = LocalTime . now (); final LocalTime timeFromClock = LocalTime . now ( clock ); System . out . println ( time ); System . out . println ( timeFromClock ); \u4e0a\u8ff0\u4f8b\u5b50\u7684\u8f93\u51fa\u7ed3\u679c\u5982\u4e0b\uff1a 2014-04-12 2014-04-12 11:25:54.568 15:25:54.568 LocalDateTime\u7c7b\u5305\u542b\u4e86LocalDate\u548cLocalTime\u7684\u4fe1\u606f\uff0c\u4f46\u662f\u4e0d\u5305\u542bISO-8601\u65e5\u5386\u7cfb\u7edf\u4e2d\u7684\u65f6\u533a\u4fe1\u606f\u3002\u8fd9\u91cc\u6709\u4e00\u4e9b\u5173\u4e8eLocalDate\u548cLocalTime\u7684\u4f8b\u5b50\uff1a // Get the local date/time final LocalDateTime datetime = LocalDateTime . now (); final LocalDateTime datetimeFromClock = LocalDateTime . now ( clock ); System . out . println ( datetime ); System . out . println ( datetimeFromClock ); \u4e0a\u8ff0\u8fd9\u4e2a\u4f8b\u5b50\u7684\u8f93\u51fa\u7ed3\u679c\u5982\u4e0b\uff1a 2014-04-12T11:37:52.309 2014-04-12T15:37:52.309 \u5982\u679c\u4f60\u9700\u8981\u7279\u5b9a\u65f6\u533a\u7684data/time\u4fe1\u606f\uff0c\u5219\u53ef\u4ee5\u4f7f\u7528ZoneDateTime\uff0c\u5b83\u4fdd\u5b58\u6709ISO-8601\u65e5\u671f\u7cfb\u7edf\u7684\u65e5\u671f\u548c\u65f6\u95f4\uff0c\u800c\u4e14\u6709\u65f6\u533a\u4fe1\u606f\u3002\u4e0b\u9762\u662f\u4e00\u4e9b\u4f7f\u7528\u4e0d\u540c\u65f6\u533a\u7684\u4f8b\u5b50\uff1a // Get the zoned date/time final ZonedDateTime zonedDatetime = ZonedDateTime . now (); final ZonedDateTime zonedDatetimeFromClock = ZonedDateTime . now ( clock ); final ZonedDateTime zonedDatetimeFromZone = ZonedDateTime . now ( ZoneId . of ( \"America/Los_Angeles\" ) ); System . out . println ( zonedDatetime ); System . out . println ( zonedDatetimeFromClock ); System . out . println ( zonedDatetimeFromZone ); \u8fd9\u4e2a\u4f8b\u5b50\u7684\u8f93\u51fa\u7ed3\u679c\u662f\uff1a 2014-04-12T11:47:01.017-04:00[America/New_York] 2014-04-12T15:47:01.017Z 2014-04-12T08:47:01.017-07:00[America/Los_Angeles] \u6700\u540e\u770b\u4e0bDuration\u7c7b\uff0c\u5b83\u6301\u6709\u7684\u65f6\u95f4\u7cbe\u786e\u5230\u79d2\u548c\u7eb3\u79d2\u3002\u8fd9\u4f7f\u5f97\u6211\u4eec\u53ef\u4ee5\u5f88\u5bb9\u6613\u5f97\u8ba1\u7b97\u4e24\u4e2a\u65e5\u671f\u4e4b\u95f4\u7684\u4e0d\u540c\uff0c\u4f8b\u5b50\u4ee3\u7801\u5982\u4e0b\uff1a // Get duration between two dates final LocalDateTime from = LocalDateTime . of ( 2014 , Month . APRIL , 16 , 0 , 0 , 0 ); final LocalDateTime to = LocalDateTime . of ( 2015 , Month . APRIL , 16 , 23 , 59 , 59 ); final Duration duration = Duration . between ( from , to ); System . out . println ( \"Duration in days: \" + duration . toDays () ); System . out . println ( \"Duration in hours: \" + duration . toHours () ); \u8fd9\u4e2a\u4f8b\u5b50\u7528\u4e8e\u8ba1\u7b972014\u5e744\u670816\u65e5\u548c2015\u5e744\u670816\u65e5\u4e4b\u95f4\u7684\u5929\u6570\u548c\u5c0f\u65f6\u6570\uff0c\u8f93\u51fa\u7ed3\u679c\u5982\u4e0b\uff1a Duration in days: 365 Duration in hours: 8783 \u5bf9\u4e8eJava 8\u7684\u65b0\u65e5\u671f\u65f6\u95f4\u7684\u603b\u4f53\u5370\u8c61\u8fd8\u662f\u6bd4\u8f83\u79ef\u6781\u7684\uff0c\u4e00\u90e8\u5206\u662f\u56e0\u4e3aJoda-Time\u7684\u79ef\u6781\u5f71\u54cd\uff0c\u53e6\u4e00\u90e8\u5206\u662f\u56e0\u4e3a\u5b98\u65b9\u7ec8\u4e8e\u542c\u53d6\u4e86\u5f00\u53d1\u4eba\u5458\u7684\u9700\u6c42\u3002\u5982\u679c\u60f3\u4e86\u89e3\u548c\u5b66\u4e60\u66f4\u8be6\u7ec6\u7684\u5185\u5bb9\uff0c\u53ef\u4ee5\u53c2\u8003 \u5b98\u65b9\u6587\u6863 \u3002 Nashorn JavaScript\u5f15\u64ce \u00b6 Java 8\u63d0\u4f9b\u4e86\u65b0\u7684Nashorn JavaScript\u5f15\u64ce\uff0c\u4f7f\u5f97\u6211\u4eec\u53ef\u4ee5\u5728JVM\u4e0a\u5f00\u53d1\u548c\u8fd0\u884cJS\u5e94\u7528\u3002Nashorn JavaScript\u5f15\u64ce\u662fjavax.script.ScriptEngine\u7684\u53e6\u4e00\u4e2a\u5b9e\u73b0\u7248\u672c\uff0c\u8fd9\u7c7bScript\u5f15\u64ce\u9075\u5faa\u76f8\u540c\u7684\u89c4\u5219\uff0c\u5141\u8bb8Java\u548cJavaScript\u4ea4\u4e92\u4f7f\u7528\uff0c\u4f8b\u5b50\u4ee3\u7801\u5982\u4e0b\uff1a ScriptEngineManager manager = new ScriptEngineManager (); ScriptEngine engine = manager . getEngineByName ( \"JavaScript\" ); System . out . println ( engine . getClass (). getName () ); System . out . println ( \"Result:\" + engine . eval ( \"function f() { return 1; }; f() + 1;\" ) ); \u8fd9\u4e2a\u4ee3\u7801\u7684\u8f93\u51fa\u7ed3\u679c\u5982\u4e0b\uff1a jdk.nashorn.api.scripting.NashornScriptEngine Result: 2 Base64 \u00b6 \u5bf9Base64\u7f16\u7801\u7684\u652f\u6301\u5df2\u7ecf\u88ab\u52a0\u5165\u5230Java 8\u5b98\u65b9\u5e93\u4e2d\uff0c\u8fd9\u6837\u4e0d\u9700\u8981\u4f7f\u7528\u7b2c\u4e09\u65b9\u5e93\u5c31\u53ef\u4ee5\u8fdb\u884cBase64\u7f16\u7801\uff0c\u4f8b\u5b50\u4ee3\u7801\u5982\u4e0b\uff1a package com.javacodegeeks.java8.base64 ; import java.nio.charset.StandardCharsets ; import java.util.Base64 ; public class Base64s { public static void main ( String [] args ) { final String text = \"Base64 finally in Java 8!\" ; final String encoded = Base64 . getEncoder () . encodeToString ( text . getBytes ( StandardCharsets . UTF_8 ) ); System . out . println ( encoded ); final String decoded = new String ( Base64 . getDecoder (). decode ( encoded ), StandardCharsets . UTF_8 ); System . out . println ( decoded ); } } \u8fd9\u4e2a\u4f8b\u5b50\u7684\u8f93\u51fa\u7ed3\u679c\u5982\u4e0b\uff1a QmFzZTY0IGZpbmFsbHkgaW4gSmF2YSA4IQ== Base64 finally in Java 8! \u65b0\u7684Base64API\u4e5f\u652f\u6301URL\u548cMINE\u7684\u7f16\u7801\u89e3\u7801\u3002 (Base64.getUrlEncoder() / Base64.getUrlDecoder(), Base64.getMimeEncoder() / Base64.getMimeDecoder())\u3002 \u5e76\u884c\u6570\u7ec4 \u00b6 Java8\u7248\u672c\u65b0\u589e\u4e86\u5f88\u591a\u65b0\u7684\u65b9\u6cd5\uff0c\u7528\u4e8e\u652f\u6301\u5e76\u884c\u6570\u7ec4\u5904\u7406\u3002\u6700\u91cd\u8981\u7684\u65b9\u6cd5\u662fparallelSort()\uff0c\u53ef\u4ee5\u663e\u8457\u52a0\u5feb\u591a\u6838\u673a\u5668\u4e0a\u7684\u6570\u7ec4\u6392\u5e8f\u3002\u4e0b\u9762\u7684\u4f8b\u5b50\u8bba\u8bc1\u4e86parallexXxx\u7cfb\u5217\u7684\u65b9\u6cd5\uff1a package com.javacodegeeks.java8.parallel.arrays ; import java.util.Arrays ; import java.util.concurrent.ThreadLocalRandom ; public class ParallelArrays { public static void main ( String [] args ) { long [] arrayOfLong = new long [ 20000 ]; Arrays . parallelSetAll ( arrayOfLong , index -> ThreadLocalRandom . current (). nextInt ( 1000000 ) ); Arrays . stream ( arrayOfLong ). limit ( 10 ). forEach ( i -> System . out . print ( i + \" \" ) ); System . out . println (); Arrays . parallelSort ( arrayOfLong ); Arrays . stream ( arrayOfLong ). limit ( 10 ). forEach ( i -> System . out . print ( i + \" \" ) ); System . out . println (); } } \u4e0a\u8ff0\u8fd9\u4e9b\u4ee3\u7801\u4f7f\u7528parallelSetAll()\u65b9\u6cd5\u751f\u621020000\u4e2a\u968f\u673a\u6570\uff0c\u7136\u540e\u4f7f\u7528parallelSort()\u65b9\u6cd5\u8fdb\u884c\u6392\u5e8f\u3002\u8fd9\u4e2a\u7a0b\u5e8f\u4f1a\u8f93\u51fa\u4e71\u5e8f\u6570\u7ec4\u548c\u6392\u5e8f\u6570\u7ec4\u7684\u524d10\u4e2a\u5143\u7d20\u3002\u4e0a\u8ff0\u4f8b\u5b50\u7684\u4ee3\u7801\u8f93\u51fa\u7684\u7ed3\u679c\u662f\uff1a Unsorted: 591217 891976 443951 424479 766825 351964 242997 642839 119108 552378 Sorted: 39 220 263 268 325 607 655 678 723 793 \u5e76\u53d1\u6027 \u00b6 \u57fa\u4e8e\u65b0\u589e\u7684lambda\u8868\u8fbe\u5f0f\u548csteam\u7279\u6027\uff0c\u4e3aJava 8\u4e2d\u4e3ajava.util.concurrent.ConcurrentHashMap\u7c7b\u6dfb\u52a0\u4e86\u65b0\u7684\u65b9\u6cd5\u6765\u652f\u6301\u805a\u7126\u64cd\u4f5c\uff1b\u53e6\u5916\uff0c\u4e5f\u4e3ajava.util.concurrentForkJoinPool\u7c7b\u6dfb\u52a0\u4e86\u65b0\u7684\u65b9\u6cd5\u6765\u652f\u6301\u901a\u7528\u7ebf\u7a0b\u6c60\u64cd\u4f5c Java 8\u8fd8\u6dfb\u52a0\u4e86\u65b0\u7684java.util.concurrent.locks.StampedLock\u7c7b\uff0c\u7528\u4e8e\u652f\u6301\u57fa\u4e8e\u5bb9\u91cf\u7684\u9501\u2014\u2014\u8be5\u9501\u6709\u4e09\u4e2a\u6a21\u578b\u7528\u4e8e\u652f\u6301\u8bfb\u5199\u64cd\u4f5c\uff08\u53ef\u4ee5\u628a\u8fd9\u4e2a\u9501\u5f53\u505a\u662fjava.util.concurrent.locks.ReadWriteLock\u7684\u66ff\u4ee3\u8005\uff09\u3002 \u5728java.util.concurrent.atomic\u5305\u4e2d\u4e5f\u65b0\u589e\u4e86\u4e0d\u5c11\u5de5\u5177\u7c7b\uff0c\u5217\u4e3e\u5982\u4e0b\uff1a DoubleAccumulator DoubleAdder LongAccumulator LongAdder \u65b0\u7684Java\u5de5\u5177 \u00b6 Nashorn\u5f15\u64ce\uff1ajjs \u00b6 jjs\u662f\u4e00\u4e2a\u57fa\u4e8e\u6807\u51c6Nashorn\u5f15\u64ce\u7684\u547d\u4ee4\u884c\u5de5\u5177\uff0c\u53ef\u4ee5\u63a5\u53d7js\u6e90\u7801\u5e76\u6267\u884c\u3002\u4f8b\u5982\uff0c\u6211\u4eec\u5199\u4e00\u4e2afunc.js\u6587\u4ef6\uff0c\u5185\u5bb9\u5982\u4e0b\uff1a function f () { return 1 ; }; print ( f () + 1 ); \u53ef\u4ee5\u5728\u547d\u4ee4\u884c\u4e2d\u6267\u884c\u8fd9\u4e2a\u547d\u4ee4\uff1ajjs func.js\uff0c\u63a7\u5236\u53f0\u8f93\u51fa\u7ed3\u679c\u662f\uff1a 2 \u5982\u679c\u9700\u8981\u4e86\u89e3\u7ec6\u8282\uff0c\u53ef\u4ee5\u53c2\u8003 \u5b98\u65b9\u6587\u6863 \u3002 \u7c7b\u4f9d\u8d56\u5206\u6790\u5668\uff1ajdeps \u00b6 jdeps\u662f\u4e00\u4e2a\u76f8\u5f53\u68d2\u7684\u547d\u4ee4\u884c\u5de5\u5177\uff0c\u5b83\u53ef\u4ee5\u5c55\u793a\u5305\u5c42\u7ea7\u548c\u7c7b\u5c42\u7ea7\u7684Java\u7c7b\u4f9d\u8d56\u5173\u7cfb\uff0c\u5b83\u4ee5.class\u6587\u4ef6\u3001\u76ee\u5f55\u6216\u8005Jar\u6587\u4ef6\u4e3a\u8f93\u5165\uff0c\u7136\u540e\u4f1a\u628a\u4f9d\u8d56\u5173\u7cfb\u8f93\u51fa\u5230\u63a7\u5236\u53f0\u3002 \u6211\u4eec\u53ef\u4ee5\u5229\u7528jedps\u5206\u6790\u4e0bSpring Framework\u5e93\uff0c\u4e3a\u4e86\u8ba9\u7ed3\u679c\u5c11\u4e00\u70b9\uff0c\u4ec5\u4ec5\u5206\u6790\u4e00\u4e2aJAR\u6587\u4ef6\uff1aorg.springframework.core-3.0.5.RELEASE.jar\u3002 jdeps org . springframework . core - 3.0.5 . RELEASE . jar \u8fd9\u4e2a\u547d\u4ee4\u4f1a\u8f93\u51fa\u5f88\u591a\u7ed3\u679c\uff0c\u6211\u4eec\u4ec5\u770b\u4e0b\u5176\u4e2d\u7684\u4e00\u90e8\u5206\uff1a\u4f9d\u8d56\u5173\u7cfb\u6309\u7167\u5305\u5206\u7ec4\uff0c\u5982\u679c\u5728classpath\u4e0a\u627e\u4e0d\u5230\u4f9d\u8d56\uff0c\u5219\u663e\u793a\"not found\". org.springframework.core-3.0.5.RELEASE.jar -> C:\\Program Files\\Java\\jdk1.8.0\\jre\\lib\\rt.jar org.springframework.core (org.springframework.core-3.0.5.RELEASE.jar) -> java.io -> java.lang -> java.lang.annotation -> java.lang.ref -> java.lang.reflect -> java.util -> java.util.concurrent -> org.apache.commons.logging not found -> org.springframework.asm not found -> org.springframework.asm.commons not found org.springframework.core.annotation (org.springframework.core-3.0.5.RELEASE.jar) -> java.lang -> java.lang.annotation -> java.lang.reflect -> java.util \u5982\u679c\u9700\u8981\u4e86\u89e3\u7ec6\u8282\uff0c\u53ef\u4ee5\u53c2\u8003 \u5b98\u65b9\u6587\u6863 \u3002 JVM\u7684\u65b0\u7279\u6027 \u00b6 \u4f7f\u7528Metaspace\uff08JEP 122\uff09\u4ee3\u66ff\u6301\u4e45\u4ee3\uff08PermGen space\uff09\u3002\u5728JVM\u53c2\u6570\u65b9\u9762\uff0c\u4f7f\u7528-XX:MetaSpaceSize\u548c-XX:MaxMetaspaceSize\u4ee3\u66ff\u539f\u6765\u7684-XX:PermSize\u548c-XX:MaxPermSize\u3002 Java 9 \u65b0\u7279\u6027\u603b\u7ed3 \u00b6 \u6a21\u5757\u7cfb\u7edf\uff1a\u6a21\u5757\u662f\u4e00\u4e2a\u5305\u7684\u5bb9\u5668\uff0cJava 9 \u6700\u5927\u7684\u53d8\u5316\u4e4b\u4e00\u662f\u5f15\u5165\u4e86\u6a21\u5757\u7cfb\u7edf\uff08Jigsaw \u9879\u76ee\uff09\u3002 REPL (JShell)\uff1a\u4ea4\u4e92\u5f0f\u7f16\u7a0b\u73af\u5883\u3002 HTTP 2 \u5ba2\u6237\u7aef\uff1aHTTP/2\u6807\u51c6\u662fHTTP\u534f\u8bae\u7684\u6700\u65b0\u7248\u672c\uff0c\u65b0\u7684 HTTPClient API \u652f\u6301 WebSocket \u548c HTTP2 \u6d41\u4ee5\u53ca\u670d\u52a1\u5668\u63a8\u9001\u7279\u6027\u3002 \u6539\u8fdb\u7684 Javadoc\uff1aJavadoc \u73b0\u5728\u652f\u6301\u5728 API \u6587\u6863\u4e2d\u7684\u8fdb\u884c\u641c\u7d22\u3002\u53e6\u5916\uff0cJavadoc \u7684\u8f93\u51fa\u73b0\u5728\u7b26\u5408\u517c\u5bb9 HTML5 \u6807\u51c6\u3002 \u591a\u7248\u672c\u517c\u5bb9 JAR \u5305\uff1a\u591a\u7248\u672c\u517c\u5bb9 JAR \u529f\u80fd\u80fd\u8ba9\u4f60\u521b\u5efa\u4ec5\u5728\u7279\u5b9a\u7248\u672c\u7684 Java \u73af\u5883\u4e2d\u8fd0\u884c\u5e93\u7a0b\u5e8f\u65f6\u9009\u62e9\u4f7f\u7528\u7684 class \u7248\u672c\u3002 \u96c6\u5408\u5de5\u5382\u65b9\u6cd5\uff1aList\uff0cSet \u548c Map \u63a5\u53e3\u4e2d\uff0c\u65b0\u7684\u9759\u6001\u5de5\u5382\u65b9\u6cd5\u53ef\u4ee5\u521b\u5efa\u8fd9\u4e9b\u96c6\u5408\u7684\u4e0d\u53ef\u53d8\u5b9e\u4f8b\u3002 \u79c1\u6709\u63a5\u53e3\u65b9\u6cd5\uff1a\u5728\u63a5\u53e3\u4e2d\u4f7f\u7528private\u79c1\u6709\u65b9\u6cd5\u3002\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 private \u8bbf\u95ee\u4fee\u9970\u7b26\u5728\u63a5\u53e3\u4e2d\u7f16\u5199\u79c1\u6709\u65b9\u6cd5\u3002 \u8fdb\u7a0b API: \u6539\u8fdb\u7684 API \u6765\u63a7\u5236\u548c\u7ba1\u7406\u64cd\u4f5c\u7cfb\u7edf\u8fdb\u7a0b\u3002\u5f15\u8fdb java.lang.ProcessHandle \u53ca\u5176\u5d4c\u5957\u63a5\u53e3 Info \u6765\u8ba9\u5f00\u53d1\u8005\u9003\u79bb\u65f6\u5e38\u56e0\u4e3a\u8981\u83b7\u53d6\u4e00\u4e2a\u672c\u5730\u8fdb\u7a0b\u7684 PID \u800c\u4e0d\u5f97\u4e0d\u4f7f\u7528\u672c\u5730\u4ee3\u7801\u7684\u7a98\u5883\u3002 \u6539\u8fdb\u7684 Stream API\uff1a\u6539\u8fdb\u7684 Stream API \u6dfb\u52a0\u4e86\u4e00\u4e9b\u4fbf\u5229\u7684\u65b9\u6cd5\uff0c\u4f7f\u6d41\u5904\u7406\u66f4\u5bb9\u6613\uff0c\u5e76\u4f7f\u7528\u6536\u96c6\u5668\u7f16\u5199\u590d\u6742\u7684\u67e5\u8be2\u3002 \u6539\u8fdb try-with-resources\uff1a\u5982\u679c\u4f60\u5df2\u7ecf\u6709\u4e00\u4e2a\u8d44\u6e90\u662f final \u6216\u7b49\u6548\u4e8e final \u53d8\u91cf,\u60a8\u53ef\u4ee5\u5728 try-with-resources \u8bed\u53e5\u4e2d\u4f7f\u7528\u8be5\u53d8\u91cf\uff0c\u800c\u65e0\u9700\u5728 try-with-resources \u8bed\u53e5\u4e2d\u58f0\u660e\u4e00\u4e2a\u65b0\u53d8\u91cf\u3002 \u6539\u8fdb\u7684\u5f03\u7528\u6ce8\u89e3 @Deprecated\uff1a\u6ce8\u89e3 @Deprecated \u53ef\u4ee5\u6807\u8bb0 Java API \u72b6\u6001\uff0c\u53ef\u4ee5\u8868\u793a\u88ab\u6807\u8bb0\u7684 API \u5c06\u4f1a\u88ab\u79fb\u9664\uff0c\u6216\u8005\u5df2\u7ecf\u7834\u574f\u3002 \u6539\u8fdb\u94bb\u77f3\u64cd\u4f5c\u7b26(Diamond Operator) \uff1a\u533f\u540d\u7c7b\u53ef\u4ee5\u4f7f\u7528\u94bb\u77f3\u64cd\u4f5c\u7b26(Diamond Operator)\u3002 \u6539\u8fdb Optional \u7c7b\uff1ajava.util.Optional \u6dfb\u52a0\u4e86\u5f88\u591a\u65b0\u7684\u6709\u7528\u65b9\u6cd5\uff0cOptional \u53ef\u4ee5\u76f4\u63a5\u8f6c\u4e3a stream\u3002 \u591a\u5206\u8fa8\u7387\u56fe\u50cf API\uff1a\u5b9a\u4e49\u591a\u5206\u8fa8\u7387\u56fe\u50cfAPI\uff0c\u5f00\u53d1\u8005\u53ef\u4ee5\u5f88\u5bb9\u6613\u7684\u64cd\u4f5c\u548c\u5c55\u793a\u4e0d\u540c\u5206\u8fa8\u7387\u7684\u56fe\u50cf\u4e86\u3002 \u6539\u8fdb\u7684 CompletableFuture API \uff1a CompletableFuture \u7c7b\u7684\u5f02\u6b65\u673a\u5236\u53ef\u4ee5\u5728 ProcessHandle.onExit \u65b9\u6cd5\u9000\u51fa\u65f6\u6267\u884c\u64cd\u4f5c\u3002 \u8f7b\u91cf\u7ea7\u7684 JSON API\uff1a\u5185\u7f6e\u4e86\u4e00\u4e2a\u8f7b\u91cf\u7ea7\u7684JSON API \u54cd\u5e94\u5f0f\u6d41\uff08Reactive Streams) API: Java 9\u4e2d\u5f15\u5165\u4e86\u65b0\u7684\u54cd\u5e94\u5f0f\u6d41 API \u6765\u652f\u6301 Java 9 \u4e2d\u7684\u54cd\u5e94\u5f0f\u7f16\u7a0b\u3002 Java9 \u65b0\u7279\u6027\u4e4b---\u76ee\u5f55\u7ed3\u6784 \u00b6 \u5305\u542bjdk8\u53ca\u4ee5\u524d\u7684jdk\u7248\u672c\uff0c\u6240\u6709\u76ee\u5f55\u7ed3\u6784\u4ee5\u53ca\u76ee\u5f55\u542b\u4e49\u5982\u56fe\uff1a jdk9\u4e4b\u540e\uff0c\u76ee\u5f55\u7ed3\u6784\u53d1\u751f\u53d8\u5316\u5982\u56fe\uff1a \u8fd9\u4e2a\u65b0\u7279\u6027\u53ea\u8981\u4e86\u89e3\u4e0b\u5c31\u53ef\u4ee5\u4e86\uff0c\u8fd9\u4e2a\u76ee\u5f55\u7ed3\u6784\u662f\u65b9\u4fbf\u4e3a\u4e86\u63a5\u4e0b\u6765\u65b0\u7279\u6027\u505a\u4fdd\u8bc1 \u6a21\u5757\u5316 \u00b6 \u4e00\u4e2a\u5927\u578b\u7684\u9879\u76ee\uff0c\u6bd4\u5982\u6dd8\u5b9d\u5546\u57ce\u7b49\uff0c\u90fd\u4f1a\u5305\u542b\u591a\u4e2a\u6a21\u5757\uff0c\u6bd4\u5982\u8ba2\u5355\u6a21\u5757\uff0c\u524d\u53f0\u6a21\u5757\uff0c\u540e\u53f0\u7ba1\u7406\u6a21\u5757\uff0c\u5e7f\u544a\u4f4d\u6a21\u5757\uff0c\u4f1a\u5458\u6a21\u5757.....\u7b49\u7b49\uff0c\u5404\u4e2a\u6a21\u5757\u4e4b\u95f4\u4f1a\u76f8\u4e92\u8c03\u7528\uff0c\u4e0d\u8fc7\u8fd9\u79cd\u60c5\u51b5\u4e0b\u4f1a\u5f88\u5c11\uff0c\u53ea\u9488\u5bf9\u7279\u6b8a\u60c5\u51b5\uff0c\u5982\u679c\u4e00\u4e2a\u9879\u76ee\u670930\u4e2a\u6a21\u5757\u7cfb\u7edf\u8fdb\u884c\u5f00\u53d1\uff0c\u4f46\u662f\u53ea\u8981\u67d0\u4e2a\u5355\u72ec\u6a21\u5757\u8fd0\u884c\u65f6\uff0c\u90fd\u4f1a\u5e26\u52a8\u6240\u6709\u7684\u6a21\u5757\uff0c\u8fd9\u6837\u5bf9\u4e8ejvm\u6765\u8bf4\u5728\u5185\u5b58\u548c\u6027\u80fd\u4e0a\u4f1a\u5f88\u4f4e\uff0c\u6240\u4ee5\uff0cjava9\u63d0\u4f9b\u4e86\u8fd9\u4e00\u4e2a\u7279\u6027\uff0c\u67d0\u4e00\u4e2a\u6a21\u5757\u8fd0\u884c\u7684\u65f6\u5019\uff0cjvm\u53ea\u4f1a\u542f\u52a8\u548c\u5b83\u6709\u4f9d\u8d56\u7684\u6a21\u5757\uff0c\u5e76\u4e0d\u4f1a\u52a0\u8f7d\u6240\u6709\u7684\u6a21\u5757\u5230\u5185\u5b58\u4e2d\uff0c\u8fd9\u6837\u6027\u80fd\u5927\u5927\u7684\u63d0\u9ad8\u4e86\u3002\u5199\u6cd5\u4e0a\u5982\u4e0b\uff1a \u4e00\u4e2a\u9879\u76ee\u4e2d\u7684\u4e24\u4e2a\u6a21\u5757\uff0c\u6a21\u5757\u4e4b\u95f4\u901a\u8fc7module-info.java\u6765\u5173\u8054\uff0c\u5728IDEA\u7f16\u8f91\u5668\u53f3\u952e\u521b\u5efapackage-info.java \u5728\u8fd9\u4e2a\u4e24\u4e2a\u6a21\u5757java9Demo\u548cjava9Test\u4e2d\uff0cjava9demo\u7f16\u5199\u4e00\u4e2a\u5b9e\u4f53\u7c7bPerson,\u5728java9Test\u8c03\u7528\u8fd9\u6837\u4e00\u4e2a\u8fc7\u7a0b \u8fd9\u4e2a\u662fjava9Demo \u5c06 java9Test \u6a21\u5757\u9700\u8981\u7684\u6587\u4ef6\u5bfc\u51fa exports \u628a\u5b83\u6240\u5728\u7684\u5305\u5bfc\u51fa module java9Demo { requires com . mdxl . layer_cj . entity ; } \u7136\u540e\u5728java9Test\u6a21\u5757\u4e2d\u521b\u5efa\u4e00\u4e2apackage-info.java,\u5f15\u5165java9Demo\u6a21\u5757\u5bfc\u51fa\u5305\u540d module java9Test { requires java9Demo ; } \u8fd9\u6837\u5c31\u53ef\u4ee5\u76f4\u63a5\u5728java9Test\u4e2d\u5f15\u5165Person\u5b9e\u4f53\u7c7b\u4e86\uff0c\u8fd9\u53ea\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\u3002exports \u63a7\u5236\u7740\u90a3\u4e9b\u5305\u53ef\u4ee5\u88ab\u6a21\u5757\u8bbf\u95ee\uff0c\u6240\u4ee5\u4e0d\u88ab\u5bfc\u51fa\u7684\u5305\u4e0d\u80fd\u88ab\u5176\u4ed6\u6a21\u5757\u8bbf\u95ee JShell\u5de5\u5177 \u00b6 \u600e\u4e48\u7406\u89e3\uff0c\u600e\u4e48\u7528\u5462\uff1f\u8fd9\u4e2a\u53ea\u662f\u9488\u5bf9\u4e8ejava9\u6765\u8bf4\uff0c\u76f8\u5f53\u4e8ecmd\u5de5\u5177\uff0c\u4f60\u53ef\u4ee5\u548ccmd\u4e00\u6837\uff0c\u76f4\u63a5\u5199\u65b9\u6cd5\u7b49\u7b49\uff0c\u4e0d\u8fc7\u6211\u8ba4\u4e3a\u53ea\u662f\u9002\u7528\u4e8e\u521d\u5b66\u8005\u505a\u4e00\u4e9b\u6700\u7b80\u5355\u7684\u8fd0\u7b97\u548c\u5199\u4e00\u4e9b\u65b9\u6cd5\uff1a \u5728cmd\u4e2d\u6253\u5f00\u8fd9\u4e2a\u5de5\u5177\uff1a $ jshell | Welcome to JShell -- Version 9 - ea | For an introduction type : / help intro jshell > \u67e5\u770b JShell \u547d\u4ee4 \u8f93\u5165 /help \u53ef\u4ee5\u67e5\u770b JShell\u76f8\u5173\u7684\u547d\u4ee4\uff1a jshell> /help | Type a Java language expression, statement, or declaration. | Or type one of the following commands: | /list [<name or id>|-all|-start] | list the source you have typed | /edit <name or id> | edit a source entry referenced by name or id | /drop <name or id> | delete a source entry referenced by name or id | /save [-all|-history|-start] <file> | Save snippet source to a file. | /open <file> | open a file as source input | /vars [<name or id>|-all|-start] | list the declared variables and their values | /methods [<name or id>|-all|-start] | list the declared methods and their signatures | /types [<name or id>|-all|-start] | list the declared types | /imports | list the imported items \u6267\u884c JShell \u547d\u4ee4 /imports \u547d\u4ee4\u7528\u4e8e\u67e5\u770b\u5df2\u5bfc\u5165\u7684\u5305\uff1a jshell> /imports | import java.io.* | import java.math.* | import java.net.* | import java.nio.file.* | import java.util.* | import java.util.concurrent.* | import java.util.function.* | import java.util.prefs.* | import java.util.regex.* | import java.util.stream.* jshell> \u7b49\u7b49\uff0c\u6211\u8ba4\u4e3a\u53ea\u9002\u7528\u4e8e\u521d\u5b66\u8005\u5b66\u4e60java\u4e0d\u7528\u5176\u4ed6\u7f16\u8f91\u5de5\u5177\u5c31\u53ef\u4ee5\u5b66\u4e60java HTTP 2 \u5ba2\u6237\u7aef \u00b6 JDK9\u4e4b\u524d\u63d0\u4f9bHttpURLConnection API\u6765\u5b9e\u73b0Http\u8bbf\u95ee\u529f\u80fd\uff0c\u4f46\u662f\u8fd9\u4e2a\u7c7b\u57fa\u672c\u5f88\u5c11\u4f7f\u7528\uff0c\u4e00\u822c\u90fd\u4f1a\u9009\u62e9Apache\u7684Http Client\uff0c\u6b64\u6b21\u5728Java 9\u7684\u7248\u672c\u4e2d\u5f15\u5165\u4e86\u4e00\u4e2a\u65b0\u7684package:java.net.http\uff0c\u91cc\u9762\u63d0\u4f9b\u4e86\u5bf9Http\u8bbf\u95ee\u5f88\u597d\u7684\u652f\u6301\uff0c\u4e0d\u4ec5\u652f\u6301Http1.1\u800c\u4e14\u8fd8\u652f\u6301HTTP2\uff08\u4ec0\u4e48\u662fHTTP2\uff1f\u8bf7\u53c2\u89c1HTTP2\u7684\u65f6\u4ee3\u6765\u4e86...\uff09\uff0c\u4ee5\u53caWebSocket\uff0c\u636e\u8bf4\u6027\u80fd\u7279\u522b\u597d\u3002 \u6ce8\u610f\uff1a\u65b0\u7684 HttpClient API \u5728 Java 9 \u4e2d\u4ee5\u6240\u8c13\u7684\u5b75\u5316\u5668\u6a21\u5757\u4ea4\u4ed8\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u8fd9\u5957 API \u4e0d\u80fd\u4fdd\u8bc1 100% \u5b8c\u6210\u3002 \u6539\u8fdb Javadoc \u00b6 javadoc \u5de5\u5177\u53ef\u4ee5\u751f\u6210 Java \u6587\u6863\uff0c Java 9 \u7684 javadoc \u7684\u8f93\u51fa\u73b0\u5728\u7b26\u5408\u517c\u5bb9 HTML5 \u6807\u51c6\u3002 //java 9 \u4e4b\u524d C: \\ JAVA > javadoc - d C :/ JAVA Tester . java //java 9 \u4e4b\u540e C: \\ JAVA > javadoc - d C :/ JAVA - html5 Tester . java \u591a\u7248\u672c\u517c\u5bb9 jar \u5305 \u00b6 \u591a\u7248\u672c\u517c\u5bb9 JAR \u529f\u80fd\u80fd\u8ba9\u4f60\u521b\u5efa\u4ec5\u5728\u7279\u5b9a\u7248\u672c\u7684 Java \u73af\u5883\u4e2d\u8fd0\u884c\u5e93\u7a0b\u5e8f\u65f6\u9009\u62e9\u4f7f\u7528\u7684 class \u7248\u672c\u3002 \u901a\u8fc7 --release \u53c2\u6570\u6307\u5b9a\u7f16\u8bd1\u7248\u672c\u3002 \u5177\u4f53\u7684\u53d8\u5316\u5c31\u662f META-INF \u76ee\u5f55\u4e0b MANIFEST.MF \u6587\u4ef6\u65b0\u589e\u4e86\u4e00\u4e2a\u5c5e\u6027\uff1a Multi-Release: true \u7136\u540e META-INF \u76ee\u5f55\u4e0b\u8fd8\u65b0\u589e\u4e86\u4e00\u4e2a versions \u76ee\u5f55\uff0c\u5982\u679c\u662f\u8981\u652f\u6301 java9\uff0c\u5219\u5728 versions \u76ee\u5f55\u4e0b\u6709 9 \u7684\u76ee\u5f55\u3002 multirelease.jar \u251c\u2500\u2500 META-INF \u2502 \u2514\u2500\u2500 versions \u2502 \u2514\u2500\u2500 9 \u2502 \u2514\u2500\u2500 multirelease \u2502 \u2514\u2500\u2500 Helper.class \u251c\u2500\u2500 multirelease \u251c\u2500\u2500 Helper.class \u2514\u2500\u2500 Main.class \u96c6\u5408\u5de5\u5382\u65b9\u6cd5 \u00b6 Java 9 List\uff0cSet \u548c Map \u63a5\u53e3\u4e2d\uff0c\u65b0\u7684\u9759\u6001\u5de5\u5382\u65b9\u6cd5\u53ef\u4ee5\u521b\u5efa\u8fd9\u4e9b\u96c6\u5408\u7684\u4e0d\u53ef\u53d8\u5b9e\u4f8b\u3002 \u8fd9\u4e9b\u5de5\u5382\u65b9\u6cd5\u53ef\u4ee5\u4ee5\u66f4\u7b80\u6d01\u7684\u65b9\u5f0f\u6765\u521b\u5efa\u96c6\u5408\u3002 \u65e7\u65b9\u6cd5\u521b\u5efa\u96c6\u5408: import java.util.ArrayList ; import java.util.Collections ; import java.util.HashMap ; import java.util.HashSet ; import java.util.List ; import java.util.Map ; import java.util.Set ; public class Tester { public static void main ( String [] args ) { Set < String > set = new HashSet <>(); set . add ( \"A\" ); set . add ( \"B\" ); set . add ( \"C\" ); set = Collections . unmodifiableSet ( set ); System . out . println ( set ); List < String > list = new ArrayList <>(); list . add ( \"A\" ); list . add ( \"B\" ); list . add ( \"C\" ); list = Collections . unmodifiableList ( list ); System . out . println ( list ); Map < String , String > map = new HashMap <>(); map . put ( \"A\" , \"Apple\" ); map . put ( \"B\" , \"Boy\" ); map . put ( \"C\" , \"Cat\" ); map = Collections . unmodifiableMap ( map ); System . out . println ( map ); } } \u6267\u884c\u8f93\u51fa\u7ed3\u679c\u4e3a\uff1a [A, B, C] [A, B, C] {A=Apple, B=Boy, C=Cat} \u65b0\u65b9\u6cd5\u521b\u5efa\u96c6\u5408\uff1a Java 9 \u4e2d\uff0c\u4ee5\u4e0b\u65b9\u6cd5\u88ab\u6dfb\u52a0\u5230 List\uff0cSet \u548c Map \u63a5\u53e3\u4ee5\u53ca\u5b83\u4eec\u7684\u91cd\u8f7d\u5bf9\u8c61\u3002 static < E > List < E > of ( E e1 , E e2 , E e3 ); static < E > Set < E > of ( E e1 , E e2 , E e3 ); static < K , V > Map < K , V > of ( K k1 , V v1 , K k2 , V v2 , K k3 , V v3 ); static < K , V > Map < K , V > ofEntries ( Map . Entry <? extends K ,? extends V >... entries ) * List \u548c Set \u63a5\u53e3, of(...) \u65b9\u6cd5\u91cd\u8f7d\u4e86 0 ~ 10 \u4e2a\u53c2\u6570\u7684\u4e0d\u540c\u65b9\u6cd5 \u3002 * Map \u63a5\u53e3, of(...) \u65b9\u6cd5\u91cd\u8f7d\u4e86 0 ~ 10 \u4e2a\u53c2\u6570\u7684\u4e0d\u540c\u65b9\u6cd5 \u3002 * Map \u63a5\u53e3\u5982\u679c\u8d85\u8fc7 10 \u4e2a\u53c2\u6570, \u53ef\u4ee5\u4f7f\u7528 ofEntries(...) \u65b9\u6cd5\u3002 \u65b0\u65b9\u6cd5\u521b\u5efa\u96c6\u5408: import java.util.ArrayList ; import java.util.Collections ; import java.util.HashMap ; import java.util.HashSet ; import java.util.List ; import java.util.AbstractMap ; import java.util.Map ; import java.util.Set ; public class Tester { public static void main ( String [] args ) { Set < String > set = Set . of ( \"A\" , \"B\" , \"C\" ); System . out . println ( set ); List < String > list = List . of ( \"A\" , \"B\" , \"C\" ); System . out . println ( list ); Map < String , String > map = Map . of ( \"A\" , \"Apple\" , \"B\" , \"Boy\" , \"C\" , \"Cat\" ); System . out . println ( map ); Map < String , String > map1 = Map . ofEntries ( new AbstractMap . SimpleEntry <>( \"A\" , \"Apple\" ), new AbstractMap . SimpleEntry <>( \"B\" , \"Boy\" ), new AbstractMap . SimpleEntry <>( \"C\" , \"Cat\" )); System . out . println ( map1 ); } } \u8f93\u51fa\u7ed3\u679c\u4e3a\uff1a [A, B, C] [A, B, C] {A=Apple, B=Boy, C=Cat} {A=Apple, B=Boy, C=Cat} \u79c1\u6709\u63a5\u53e3\u65b9\u6cd5 \u00b6 \u5728 Java 8\u4e4b\u524d\uff0c\u63a5\u53e3\u53ef\u4ee5\u6709\u5e38\u91cf\u53d8\u91cf\u548c\u62bd\u8c61\u65b9\u6cd5\u3002 \u6211\u4eec\u4e0d\u80fd\u5728\u63a5\u53e3\u4e2d\u63d0\u4f9b\u65b9\u6cd5\u5b9e\u73b0\u3002\u5982\u679c\u6211\u4eec\u8981\u63d0\u4f9b\u62bd\u8c61\u65b9\u6cd5\u548c\u975e\u62bd\u8c61\u65b9\u6cd5\uff08\u65b9\u6cd5\u4e0e\u5b9e\u73b0\uff09\u7684\u7ec4\u5408\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u5f97\u4f7f\u7528\u62bd\u8c61\u7c7b\u3002 public interface Tests { //java 7 \u53ca\u4ee5\u524d\u7279\u6027 \u5e38\u91cf \u62bd\u8c61\u65b9\u6cd5 String str = ' hello wrold ' ; void show ( T str ); //java 8 \u7279\u6027 \u9ed8\u8ba4\u65b9\u6cd5 \u9759\u6001\u65b9\u6cd5 default void def (){ System . out . print ( \"default method\" ); } static void sta (){ System . out . print ( \"static method\" ); } //java 9 \u7279\u6027 \u79c1\u6709\u65b9\u6cd5 \u79c1\u6709\u9759\u6001\u65b9\u6cd5 private void pri (){ System . out . print ( \"private method\" ); } private static void pri_sta (){ System . out . print ( \"private static method\" ); } } \u6539\u8fdb\u7684\u8fdb\u7a0b API \u00b6 \u5728 Java 9 \u4e4b\u524d\uff0cProcess API \u4ecd\u7136\u7f3a\u4e4f\u5bf9\u4f7f\u7528\u672c\u5730\u8fdb\u7a0b\u7684\u57fa\u672c\u652f\u6301\uff0c\u4f8b\u5982\u83b7\u53d6\u8fdb\u7a0b\u7684 PID \u548c\u6240\u6709\u8005\uff0c\u8fdb\u7a0b\u7684\u5f00\u59cb\u65f6\u95f4\uff0c\u8fdb\u7a0b\u4f7f\u7528\u4e86\u591a\u5c11 CPU \u65f6\u95f4\uff0c\u591a\u5c11\u672c\u5730\u8fdb\u7a0b\u6b63\u5728\u8fd0\u884c\u7b49\u3002 Java 9 \u5411 Process API \u6dfb\u52a0\u4e86\u4e00\u4e2a\u540d\u4e3a ProcessHandle \u7684\u63a5\u53e3\u6765\u589e\u5f3a java.lang.Process \u7c7b\u3002 ProcessHandle \u63a5\u53e3\u7684\u5b9e\u4f8b\u6807\u8bc6\u4e00\u4e2a\u672c\u5730\u8fdb\u7a0b\uff0c\u5b83\u5141\u8bb8\u67e5\u8be2\u8fdb\u7a0b\u72b6\u6001\u5e76\u7ba1\u7406\u8fdb\u7a0b\u3002 ProcessHandle \u5d4c\u5957\u63a5\u53e3 Info \u6765\u8ba9\u5f00\u53d1\u8005\u9003\u79bb\u65f6\u5e38\u56e0\u4e3a\u8981\u83b7\u53d6\u4e00\u4e2a\u672c\u5730\u8fdb\u7a0b\u7684 PID \u800c\u4e0d\u5f97\u4e0d\u4f7f\u7528\u672c\u5730\u4ee3\u7801\u7684\u7a98\u5883\u3002 \u6211\u4eec\u4e0d\u80fd\u5728\u63a5\u53e3\u4e2d\u63d0\u4f9b\u65b9\u6cd5\u5b9e\u73b0\u3002\u5982\u679c\u6211\u4eec\u8981\u63d0\u4f9b\u62bd\u8c61\u65b9\u6cd5\u548c\u975e\u62bd\u8c61\u65b9\u6cd5\uff08\u65b9\u6cd5\u4e0e\u5b9e\u73b0\uff09\u7684\u7ec4\u5408\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u5f97\u4f7f\u7528\u62bd\u8c61\u7c7b\u3002 ProcessHandle \u63a5\u53e3\u4e2d\u58f0\u660e\u7684 onExit() \u65b9\u6cd5\u53ef\u7528\u4e8e\u5728\u67d0\u4e2a\u8fdb\u7a0b\u7ec8\u6b62\u65f6\u89e6\u53d1\u67d0\u4e9b\u64cd\u4f5c\u3002 import java.time.ZoneId ; import java.util.stream.Stream ; import java.util.stream.Collectors ; import java.io.IOException ; public class Tester { public static void main ( String [] args ) throws IOException { ProcessBuilder pb = new ProcessBuilder ( \"notepad.exe\" ); String np = \"Not Present\" ; Process p = pb . start (); ProcessHandle . Info info = p . info (); System . out . printf ( \"Process ID : %s%n\" , p . pid ()); System . out . printf ( \"Command name : %s%n\" , info . command (). orElse ( np )); System . out . printf ( \"Command line : %s%n\" , info . commandLine (). orElse ( np )); System . out . printf ( \"Start time: %s%n\" , info . startInstant (). map ( i -> i . atZone ( ZoneId . systemDefault ()) . toLocalDateTime (). toString ()). orElse ( np )); System . out . printf ( \"Arguments : %s%n\" , info . arguments (). map ( a -> Stream . of ( a ). collect ( Collectors . joining ( \" \" ))). orElse ( np )); System . out . printf ( \"User : %s%n\" , info . user (). orElse ( np )); } } \u4ee5\u4e0a\u5b9e\u4f8b\u6267\u884c\u8f93\u51fa\u7ed3\u679c\u4e3a\uff1a Process ID : 5800 Command name : C:\\Windows\\System32\\notepad.exe Command line : Not Present Start time: 2017-11-04T21:35:03.626 Arguments : Not Present User: administrator \u6539\u8fdb\u7684 Stream API \u00b6 Java 9 \u6539\u8fdb\u7684 Stream API \u6dfb\u52a0\u4e86\u4e00\u4e9b\u4fbf\u5229\u7684\u65b9\u6cd5\uff0c\u4f7f\u6d41\u5904\u7406\u66f4\u5bb9\u6613\uff0c\u5e76\u4f7f\u7528\u6536\u96c6\u5668\u7f16\u5199\u590d\u6742\u7684\u67e5\u8be2\u3002 Java 9 \u4e3a Stream \u65b0\u589e\u4e86\u51e0\u4e2a\u65b9\u6cd5\uff1adropWhile\u3001takeWhile\u3001ofNullable\uff0c\u4e3a iterate \u65b9\u6cd5\u65b0\u589e\u4e86\u4e00\u4e2a\u91cd\u8f7d\u65b9\u6cd5\u3002 takeWhile \u65b9\u6cd5 \u8bed\u6cd5: \u00b6 default Stream < T > takeWhile ( Predicate <? super T > predicate ) takeWhile() \u65b9\u6cd5\u4f7f\u7528\u4e00\u4e2a\u65ad\u8a00\u4f5c\u4e3a\u53c2\u6570\uff0c\u8fd4\u56de\u7ed9\u5b9a Stream \u7684\u5b50\u96c6\u76f4\u5230\u65ad\u8a00\u8bed\u53e5\u7b2c\u4e00\u6b21\u8fd4\u56de false\u3002\u5982\u679c\u7b2c\u4e00\u4e2a\u503c\u4e0d\u6ee1\u8db3\u65ad\u8a00\u6761\u4ef6\uff0c\u5c06\u8fd4\u56de\u4e00\u4e2a\u7a7a\u7684 Stream\u3002 takeWhile() \u65b9\u6cd5\u5728\u6709\u5e8f\u7684 Stream \u4e2d\uff0ctakeWhile \u8fd4\u56de\u4ece\u5f00\u5934\u5f00\u59cb\u7684\u5c3d\u91cf\u591a\u7684\u5143\u7d20\uff1b\u5728\u65e0\u5e8f\u7684 Stream \u4e2d\uff0ctakeWhile \u8fd4\u56de\u4ece\u5f00\u5934\u5f00\u59cb\u7684\u7b26\u5408 Predicate \u8981\u6c42\u7684\u5143\u7d20\u7684\u5b50\u96c6\u3002 import java.util.stream.Stream ; public class Tester { public static void main ( String [] args ) { Stream . of ( \"a\" , \"b\" , \"c\" , \"\" , \"e\" , \"f\" ). takeWhile ( s ->! s . isEmpty ()) . forEach ( System . out :: print ); } } \u4ee5\u4e0a\u5b9e\u4f8b takeWhile \u65b9\u6cd5\u5728\u78b0\u5230\u7a7a\u5b57\u7b26\u4e32\u65f6\u505c\u6b62\u5faa\u73af\u8f93\u51fa\uff0c\u6267\u884c\u8f93\u51fa\u7ed3\u679c\u4e3a\uff1a abc dropWhile \u65b9\u6cd5 \u8bed\u6cd5: \u00b6 default Stream < T > dropWhile ( Predicate <? super T > predicate ) dropWhile \u65b9\u6cd5\u548c takeWhile \u4f5c\u7528\u76f8\u53cd\u7684\uff0c\u4f7f\u7528\u4e00\u4e2a\u65ad\u8a00\u4f5c\u4e3a\u53c2\u6570\uff0c\u76f4\u5230\u65ad\u8a00\u8bed\u53e5\u7b2c\u4e00\u6b21\u8fd4\u56de true \u624d\u8fd4\u56de\u7ed9\u5b9a Stream \u7684\u5b50\u96c6\u3002 import java.util.stream.Stream ; public class Tester { public static void main ( String [] args ) { Stream . of ( \"a\" , \"b\" , \"c\" , \"\" , \"e\" , \"f\" ). dropWhile ( s -> ! s . isEmpty ()) . forEach ( System . out :: print ); } } \u4ee5\u4e0a\u5b9e\u4f8b dropWhile \u65b9\u6cd5\u5728\u78b0\u5230\u7a7a\u5b57\u7b26\u4e32\u65f6\u5f00\u59cb\u5faa\u73af\u8f93\u51fa\uff0c\u6267\u884c\u8f93\u51fa\u7ed3\u679c\u4e3a\uff1a ef iterate \u65b9\u6cd5 \u8bed\u6cd5: \u00b6 static < T > Stream < T > iterate ( T seed , Predicate <? super T > hasNext , UnaryOperator < T > next ) \u65b9\u6cd5\u5141\u8bb8\u4f7f\u7528\u521d\u59cb\u79cd\u5b50\u503c\u521b\u5efa\u987a\u5e8f\uff08\u53ef\u80fd\u662f\u65e0\u9650\uff09\u6d41\uff0c\u5e76\u8fed\u4ee3\u5e94\u7528\u6307\u5b9a\u7684\u4e0b\u4e00\u4e2a\u65b9\u6cd5\u3002 \u5f53\u6307\u5b9a\u7684 hasNext \u7684 predicate \u8fd4\u56de false \u65f6\uff0c\u8fed\u4ee3\u505c\u6b62\u3002 java . util . stream . IntStream ; public class Tester { public static void main ( String [] args ) { IntStream . iterate ( 3 , x -> x < 10 , x -> x + 3 ). forEach ( System . out :: println ); } } \u6267\u884c\u8f93\u51fa\u7ed3\u679c\u4e3a\uff1a 3 6 9 ofNullable \u65b9\u6cd5 \u8bed\u6cd5: \u00b6 static < T > Stream < T > ofNullable ( T t ) ofNullable \u65b9\u6cd5\u53ef\u4ee5\u9884\u9632 NullPointerExceptions \u5f02\u5e38\uff0c \u53ef\u4ee5\u901a\u8fc7\u68c0\u67e5\u6d41\u6765\u907f\u514d null \u503c\u3002 \u5982\u679c\u6307\u5b9a\u5143\u7d20\u4e3a\u975e null\uff0c\u5219\u83b7\u53d6\u4e00\u4e2a\u5143\u7d20\u5e76\u751f\u6210\u5355\u4e2a\u5143\u7d20\u6d41\uff0c\u5143\u7d20\u4e3a null \u5219\u8fd4\u56de\u4e00\u4e2a\u7a7a\u6d41\u3002 import java.util.stream.Stream ; public class Tester { public static void main ( String [] args ) { long count = Stream . ofNullable ( 100 ). count (); System . out . println ( count ); count = Stream . ofNullable ( null ). count (); System . out . println ( count ); } } \u6267\u884c\u8f93\u51fa\u7ed3\u679c\u4e3a\uff1a 1 0 \u6539\u8fdb\u7684 try-with-resources \u00b6 try-with-resources \u662f JDK 7 \u4e2d\u4e00\u4e2a\u65b0\u7684\u5f02\u5e38\u5904\u7406\u673a\u5236\uff0c\u5b83\u80fd\u591f\u5f88\u5bb9\u6613\u5730\u5173\u95ed\u5728 try-catch \u8bed\u53e5\u5757\u4e2d\u4f7f\u7528\u7684\u8d44\u6e90\u3002\u6240\u8c13\u7684\u8d44\u6e90\uff08resource\uff09\u662f\u6307\u5728\u7a0b\u5e8f\u5b8c\u6210\u540e\uff0c\u5fc5\u987b\u5173\u95ed\u7684\u5bf9\u8c61\u3002try-with-resources \u8bed\u53e5\u786e\u4fdd\u4e86\u6bcf\u4e2a\u8d44\u6e90\u5728\u8bed\u53e5\u7ed3\u675f\u65f6\u5173\u95ed\u3002\u6240\u6709\u5b9e\u73b0\u4e86 java.lang.AutoCloseable \u63a5\u53e3\uff08\u5176\u4e2d\uff0c\u5b83\u5305\u62ec\u5b9e\u73b0\u4e86 java.io.Closeable \u7684\u6240\u6709\u5bf9\u8c61\uff09\uff0c\u53ef\u4ee5\u4f7f\u7528\u4f5c\u4e3a\u8d44\u6e90\u3002 try-with-resources \u58f0\u660e\u5728 JDK 9 \u5df2\u5f97\u5230\u6539\u8fdb\u3002\u5982\u679c\u4f60\u5df2\u7ecf\u6709\u4e00\u4e2a\u8d44\u6e90\u662f final \u6216\u7b49\u6548\u4e8e final \u53d8\u91cf,\u60a8\u53ef\u4ee5\u5728 try-with-resources \u8bed\u53e5\u4e2d\u4f7f\u7528\u8be5\u53d8\u91cf\uff0c\u800c\u65e0\u9700\u5728 try-with-resources \u8bed\u53e5\u4e2d\u58f0\u660e\u4e00\u4e2a\u65b0\u53d8\u91cf\u3002 import java.io.BufferedReader ; import java.io.IOException ; import java.io.Reader ; import java.io.StringReader ; public class Tester { public static void main ( String [] args ) throws IOException { System . out . println ( readData ( \"test\" )); } static String readData ( String message ) throws IOException { Reader inputString = new StringReader ( message ); BufferedReader br = new BufferedReader ( inputString ); try ( BufferedReader br1 = br ) { return br1 . readLine (); } } } \u8f93\u51fa\u7ed3\u679c\u4e3a\uff1a test \u4ee5\u4e0a\u5b9e\u4f8b\u4e2d\u6211\u4eec\u9700\u8981\u5728 try \u8bed\u53e5\u5757\u4e2d\u58f0\u660e\u8d44\u6e90 br1\uff0c\u7136\u540e\u624d\u80fd\u4f7f\u7528\u5b83\u3002 \u5728 Java 9 \u4e2d\uff0c\u6211\u4eec\u4e0d\u9700\u8981\u58f0\u660e\u8d44\u6e90 br1 \u5c31\u53ef\u4ee5\u4f7f\u7528\u5b83\uff0c\u5e76\u5f97\u5230\u76f8\u540c\u7684\u7ed3\u679c\u3002 import java.io.BufferedReader ; import java.io.IOException ; import java.io.Reader ; import java.io.StringReader ; public class Tester { public static void main ( String [] args ) throws IOException { System . out . println ( readData ( \"test\" )); } static String readData ( String message ) throws IOException { Reader inputString = new StringReader ( message ); BufferedReader br = new BufferedReader ( inputString ); try ( br ) { return br . readLine (); } } } \u6267\u884c\u8f93\u51fa\u7ed3\u679c\u4e3a\uff1a test \u5728\u5904\u7406\u5fc5\u987b\u5173\u95ed\u7684\u8d44\u6e90\u65f6\uff0c\u4f7f\u7528try-with-resources\u8bed\u53e5\u66ff\u4ee3try-finally\u8bed\u53e5\u3002 \u751f\u6210\u7684\u4ee3\u7801\u66f4\u7b80\u6d01\uff0c\u66f4\u6e05\u6670\uff0c\u5e76\u4e14\u751f\u6210\u7684\u5f02\u5e38\u66f4\u6709\u7528\u3002 try-with-resources\u8bed\u53e5\u5728\u7f16\u5199\u5fc5\u987b\u5173\u95ed\u8d44\u6e90\u7684\u4ee3\u7801\u65f6\u4f1a\u66f4\u5bb9\u6613\uff0c\u4e5f\u4e0d\u4f1a\u51fa\u9519\uff0c\u800c\u4f7f\u7528try-finally\u8bed\u53e5\u5b9e\u9645\u4e0a\u662f\u4e0d\u53ef\u80fd\u7684\u3002 \u6539\u8fdb\u7684 @Deprecated \u6ce8\u89e3 \u00b6 \u6ce8\u89e3 @Deprecated \u53ef\u4ee5\u6807\u8bb0 Java API \u72b6\u6001\uff0c\u53ef\u4ee5\u662f\u4ee5\u4e0b\u51e0\u79cd\uff1a \u4f7f\u7528\u5b83\u5b58\u5728\u98ce\u9669\uff0c\u53ef\u80fd\u5bfc\u81f4\u9519\u8bef \u53ef\u80fd\u5728\u672a\u6765\u7248\u672c\u4e2d\u4e0d\u517c\u5bb9 \u53ef\u80fd\u5728\u672a\u6765\u7248\u672c\u4e2d\u5220\u9664 \u4e00\u4e2a\u66f4\u597d\u548c\u66f4\u9ad8\u6548\u7684\u65b9\u6848\u5df2\u7ecf\u53d6\u4ee3\u5b83\u3002 Java 9 \u4e2d\u6ce8\u89e3\u589e\u52a0\u4e86\u4e24\u4e2a\u65b0\u5143\u7d20\uff1asince \u548c forRemoval\u3002 * since: \u5143\u7d20\u6307\u5b9a\u5df2\u6ce8\u89e3\u7684API\u5143\u7d20\u5df2\u88ab\u5f03\u7528\u7684\u7248\u672c\u3002 * forRemoval: \u5143\u7d20\u8868\u793a\u6ce8\u89e3\u7684 API \u5143\u7d20\u5728\u5c06\u6765\u7684\u7248\u672c\u4e2d\u88ab\u5220\u9664\uff0c\u5e94\u8be5\u8fc1\u79fb API\u3002 \u94bb\u77f3\u64cd\u4f5c\u7b26\u7684\u5347\u7ea7 \u00b6 \u94bb\u77f3\u64cd\u4f5c\u7b26\u662f\u5728 java 7 \u4e2d\u5f15\u5165\u7684\uff0c\u53ef\u4ee5\u8ba9\u4ee3\u7801\u66f4\u6613\u8bfb\uff0c\u4f46\u5b83\u4e0d\u80fd\u7528\u4e8e\u533f\u540d\u7684\u5185\u90e8\u7c7b\u3002 \u5728 java 9 \u4e2d\uff0c \u5b83\u53ef\u4ee5\u4e0e\u533f\u540d\u7684\u5185\u90e8\u7c7b\u4e00\u8d77\u4f7f\u7528\uff0c\u4ece\u800c\u63d0\u9ad8\u4ee3\u7801\u7684\u53ef\u8bfb\u6027\u3002 //java6 \u53ca\u4e4b\u524d Map < String , String > map6 = new HashMap < String , String >(); //java7\u548c8 <>\u6ca1\u6709\u4e86\u6570\u636e\u7c7b\u578b Map < String , String > map6 = new HashMap <>(); //java9 \u6dfb\u52a0\u4e86\u533f\u540d\u5185\u90e8\u7c7b\u7684\u529f\u80fd \u540e\u9762\u6dfb\u52a0\u5927\u62ec\u53f7{} \u53ef\u4ee5\u505a\u4e00\u4e9b\u7ec6\u8282\u64cd\u4f5c Map < String , String > map6 = new HashMap <>(){}; \u6539\u8fdb\u7684 Optional \u7c7b \u00b6 Optional \u7c7b\u5728 Java 8 \u4e2d\u5f15\u5165\uff0cOptional \u7c7b\u7684\u5f15\u5165\u5f88\u597d\u7684\u89e3\u51b3\u7a7a\u6307\u9488\u5f02\u5e38\u3002\u3002\u5728 java 9 \u4e2d, \u6dfb\u52a0\u4e86\u4e09\u4e2a\u65b9\u6cd5\u6765\u6539\u8fdb\u5b83\u7684\u529f\u80fd\uff1a * stream() * ifPresentOrElse() * or() stream() \u65b9\u6cd5 \u8bed\u6cd5: \u00b6 public Stream < T > stream () stream \u65b9\u6cd5\u7684\u4f5c\u7528\u5c31\u662f\u5c06 Optional \u8f6c\u4e3a\u4e00\u4e2a Stream\uff0c\u5982\u679c\u8be5 Optional \u4e2d\u5305\u542b\u503c\uff0c\u90a3\u4e48\u5c31\u8fd4\u56de\u5305\u542b\u8fd9\u4e2a\u503c\u7684 Stream\uff0c\u5426\u5219\u8fd4\u56de\u4e00\u4e2a\u7a7a\u7684 Stream\uff08Stream.empty()\uff09\u3002 import java.util.Arrays ; import java.util.List ; import java.util.Optional ; import java.util.stream.Collectors ; import java.util.stream.Stream ; public class Tester { public static void main ( String [] args ) { List < Optional < String >> list = Arrays . asList ( Optional . empty (), Optional . of ( \"A\" ), Optional . empty (), Optional . of ( \"B\" )); //filter the list based to print non-empty values //if optional is non-empty, get the value in stream, otherwise return empty List < String > filteredList = list . stream () . flatMap ( o -> o . isPresent () ? Stream . of ( o . get ()) : Stream . empty ()) . collect ( Collectors . toList ()); //Optional::stream method will return a stream of either one //or zero element if data is present or not. List < String > filteredListJava9 = list . stream () . flatMap ( Optional :: stream ) . collect ( Collectors . toList ()); System . out . println ( filteredList ); System . out . println ( filteredListJava9 ); } } \u6267\u884c\u8f93\u51fa\u7ed3\u679c\u4e3a\uff1a [A, B] [A, B] ifPresentOrElse() \u65b9\u6cd5 \u8bed\u6cd5: \u00b6 public void ifPresentOrElse ( Consumer <? super T > action , Runnable emptyAction ) ifPresentOrElse \u65b9\u6cd5\u7684\u6539\u8fdb\u5c31\u662f\u6709\u4e86 else\uff0c\u63a5\u53d7\u4e24\u4e2a\u53c2\u6570 Consumer \u548c Runnable\u3002 ifPresentOrElse \u65b9\u6cd5\u7684\u7528\u9014\u662f\uff0c\u5982\u679c\u4e00\u4e2a Optional \u5305\u542b\u503c\uff0c\u5219\u5bf9\u5176\u5305\u542b\u7684\u503c\u8c03\u7528\u51fd\u6570 action\uff0c\u5373 action.accept(value)\uff0c\u8fd9\u4e0e ifPresent \u4e00\u81f4\uff1b\u4e0e ifPresent \u65b9\u6cd5\u7684\u533a\u522b\u5728\u4e8e\uff0cifPresentOrElse \u8fd8\u6709\u7b2c\u4e8c\u4e2a\u53c2\u6570 emptyAction \u2014\u2014 \u5982\u679c Optional \u4e0d\u5305\u542b\u503c\uff0c\u90a3\u4e48 ifPresentOrElse \u4fbf\u4f1a\u8c03\u7528 emptyAction\uff0c\u5373 emptyAction.run()\u3002 import java.util.Optional ; public class Tester { public static void main ( String [] args ) { Optional < Integer > optional = Optional . of ( 1 ); optional . ifPresentOrElse ( x -> System . out . println ( \"Value: \" + x ),() -> System . out . println ( \"Not Present.\" )); optional = Optional . empty (); optional . ifPresentOrElse ( x -> System . out . println ( \"Value: \" + x ),() -> System . out . println ( \"Not Present.\" )); } } \u6267\u884c\u8f93\u51fa\u7ed3\u679c\u4e3a\uff1a Value: 1 Not Present. or() \u65b9\u6cd5 \u8bed\u6cd5: \u00b6 public Optional < T > or ( Supplier <? extends Optional <? extends T >> supplier ) \u5982\u679c\u503c\u5b58\u5728\uff0c\u8fd4\u56de Optional \u6307\u5b9a\u7684\u503c\uff0c\u5426\u5219\u8fd4\u56de\u4e00\u4e2a\u9884\u8bbe\u7684\u503c\u3002 import java.util.Optional ; import java.util.function.Supplier ; public class Tester { public static void main ( String [] args ) { Optional < String > optional1 = Optional . of ( \"Mahesh\" ); Supplier < Optional < String >> supplierString = () -> Optional . of ( \"Not Present\" ); optional1 = optional1 . or ( supplierString ); optional1 . ifPresent ( x -> System . out . println ( \"Value: \" + x )); optional1 = Optional . empty (); optional1 = optional1 . or ( supplierString ); optional1 . ifPresent ( x -> System . out . println ( \"Value: \" + x )); } } \u6267\u884c\u8f93\u51fa\u7ed3\u679c\u4e3a\uff1a Value: Mahesh Value: Not Present \u591a\u5206\u8fa8\u7387\u56fe\u50cf API \u00b6 Java 9 \u5b9a\u4e49\u591a\u5206\u8fa8\u7387\u56fe\u50cf API\uff0c\u5f00\u53d1\u8005\u53ef\u4ee5\u5f88\u5bb9\u6613\u7684\u64cd\u4f5c\u548c\u5c55\u793a\u4e0d\u540c\u5206\u8fa8\u7387\u7684\u56fe\u50cf\u4e86\u3002 \u4ee5\u4e0b\u662f\u591a\u5206\u8fa8\u7387\u56fe\u50cf\u7684\u4e3b\u8981\u64cd\u4f5c\u65b9\u6cd5\uff1a Image getResolutionVariant(double destImageWidth, double destImageHeight) \u2212 \u83b7\u53d6\u7279\u5b9a\u5206\u8fa8\u7387\u7684\u56fe\u50cf\u53d8\u4f53-\u8868\u793a\u4e00\u5f20\u5df2\u77e5\u5206\u8fa8\u7387\u5355\u4f4d\u4e3aDPI\u7684\u7279\u5b9a\u5c3a\u5bf8\u5927\u5c0f\u7684\u903b\u8f91\u56fe\u50cf\uff0c\u5e76\u4e14\u8fd9\u5f20\u56fe\u50cf\u662f\u6700\u4f73\u7684\u53d8\u4f53\u3002\u3002 List getResolutionVariants() \u2212 \u8fd4\u56de\u53ef\u8bfb\u7684\u5206\u8fa8\u7387\u7684\u56fe\u50cf\u53d8\u4f53\u5217\u8868\u3002 \u6539\u8fdb\u7684 CompletableFuture API \u00b6 Java 8 \u5f15\u5165\u4e86 CompletableFuture \u7c7b\uff0c\u53ef\u80fd\u662f java.util.concurrent.Future \u660e\u786e\u7684\u5b8c\u6210\u7248\uff08\u8bbe\u7f6e\u4e86\u5b83\u7684\u503c\u548c\u72b6\u6001\uff09\uff0c\u4e5f\u53ef\u80fd\u88ab\u7528\u4f5cjava.util.concurrent.CompleteStage \u3002\u652f\u6301 future \u5b8c\u6210\u65f6\u89e6\u53d1\u4e00\u4e9b\u4f9d\u8d56\u7684\u51fd\u6570\u548c\u52a8\u4f5c\u3002Java 9 \u5f15\u5165\u4e86\u4e00\u4e9bCompletableFuture \u7684\u6539\u8fdb\uff1a Java 9 \u5bf9 CompletableFuture \u505a\u4e86\u6539\u8fdb\uff1a \u652f\u6301 delays \u548c timeouts \u63d0\u5347\u4e86\u5bf9\u5b50\u7c7b\u5316\u7684\u652f\u6301 \u65b0\u7684\u5de5\u5382\u65b9\u6cd5 \u652f\u6301 delays \u548c timeouts \u00b6 public CompletableFuture < T > completeOnTimeout ( T value , long timeout , TimeUnit unit ) \u5728 timeout\uff08\u5355\u4f4d\u5728 java.util.concurrent.Timeunits units \u4e2d\uff0c\u6bd4\u5982 MILLISECONDS \uff09\u524d\u4ee5\u7ed9\u5b9a\u7684 value \u5b8c\u6210\u8fd9\u4e2a CompletableFutrue\u3002\u8fd4\u56de\u8fd9\u4e2a CompletableFutrue\u3002 public CompletableFuture < T > orTimeout ( long timeout , TimeUnit unit ) \u5982\u679c\u6ca1\u6709\u5728\u7ed9\u5b9a\u7684 timeout \u5185\u5b8c\u6210\uff0c\u5c31\u4ee5 java.util.concurrent.TimeoutException \u5b8c\u6210\u8fd9\u4e2a CompletableFutrue\uff0c\u5e76\u8fd4\u56de\u8fd9\u4e2a CompletableFutrue \u589e\u5f3a\u4e86\u5bf9\u5b50\u7c7b\u5316\u7684\u652f\u6301 \u00b6 \u505a\u4e86\u8bb8\u591a\u6539\u8fdb\u4f7f\u5f97 CompletableFuture \u53ef\u4ee5\u88ab\u66f4\u7b80\u5355\u7684\u7ee7\u627f\u3002\u6bd4\u5982\uff0c\u4f60\u4e5f\u8bb8\u60f3\u91cd\u5199\u65b0\u7684 public Executor defaultExecutor() \u65b9\u6cd5\u6765\u4ee3\u66ff\u9ed8\u8ba4\u7684 executor\u3002 \u53e6\u4e00\u4e2a\u65b0\u7684\u4f7f\u5b50\u7c7b\u5316\u66f4\u5bb9\u6613\u7684\u65b9\u6cd5\u662f\uff1a public < U > CompletableFuture < U > newIncompleteFuture () \u65b0\u7684\u5de5\u5382\u65b9\u6cd5 \u00b6 Java 8\u5f15\u5165\u4e86 <U> CompletableFuture<U> completedFuture(U value) \u5de5\u5382\u65b9\u6cd5\u6765\u8fd4\u56de\u4e00\u4e2a\u5df2\u7ecf\u4ee5\u7ed9\u5b9a value \u5b8c\u6210\u4e86\u7684 CompletableFuture\u3002Java 9\u4ee5 \u4e00\u4e2a\u65b0\u7684 <U> CompletableFuture <U> failedFuture(Throwable ex) \u6765\u8865\u5145\u4e86\u8fd9\u4e2a\u65b9\u6cd5\uff0c\u53ef\u4ee5\u8fd4\u56de\u4e00\u4e2a\u4ee5\u7ed9\u5b9a\u5f02\u5e38\u5b8c\u6210\u7684 CompletableFuture\u3002 \u9664\u6b64\u4ee5\u5916\uff0cJava 9 \u5f15\u5165\u4e86\u4e0b\u9762\u8fd9\u5bf9 stage-oriented \u5de5\u5382\u65b9\u6cd5\uff0c\u8fd4\u56de\u5b8c\u6210\u7684\u6216\u5f02\u5e38\u5b8c\u6210\u7684 completion stages: * <U> CompletionStage<U> completedStage(U value): \u8fd4\u56de\u4e00\u4e2a\u65b0\u7684\u4ee5\u6307\u5b9a value \u5b8c\u6210\u7684CompletionStage \uff0c\u5e76\u4e14\u53ea\u652f\u6301 CompletionStage \u91cc\u7684\u63a5\u53e3\u3002 * <U> CompletionStage<U> failedStage(Throwable ex): \u8fd4\u56de\u4e00\u4e2a\u65b0\u7684\u4ee5\u6307\u5b9a\u5f02\u5e38\u5b8c\u6210\u7684CompletionStage \uff0c\u5e76\u4e14\u53ea\u652f\u6301 CompletionStage \u91cc\u7684\u63a5\u53e3\u3002","title":"Java\u7279\u6027"},{"location":"java/feature/#java","text":"\u603b\u7ed3\u7684\u8fd9\u4e9b\u65b0\u7279\u6027\uff0c\u90fd\u662f\u81ea\u5df1\u89c9\u5f97\u5728\u5f00\u53d1\u4e2d\u5b9e\u9645\u7528\u5f97\u4e0a\u7684\u3002 \u7b80\u5355\u6982\u62ec\u4e0b\u5c31\u662f\uff1a * JAVA1.3\uff1a\u666e\u901a\u7684\u539f\u59cb\u7684JAVA\uff0c\u57fa\u672c\u8bed\u6cd5\u76f8\u4fe1\u5927\u5bb6\u90fd\u89c1\u8fc7\u4e86 * JAVA1.4\uff1aassert\u5173\u952e\u5b57 * JAVA5\uff1a\u679a\u4e3e\u7c7b\u578b\u3001\u6cdb\u578b\u3001\u81ea\u52a8\u62c6\u88c5\u7bb1 * JAVA6\uff1a @Override\u6ce8\u89e3 * JAVA7\uff1a <>\u7b26\u53f7\u3001ARM\u652f\u6301\u3001\u652f\u6301\u591acatch * JAVA8\uff1aLamda\u8868\u8fbe\u5f0f\uff0c\u7c7b\u578b\u6ce8\u89e3\u7b49 * JAVA9\uff1a \u6a21\u5757\u5316\u3001\u63a5\u53e3\u4e2d\u7684\u79c1\u6709\u65b9\u6cd5\u7b49","title":"Java \u65b0\u7279\u6027\u603b\u7ed3"},{"location":"java/feature/#java5","text":"","title":"Java5  \u65b0\u7279\u6027\u603b\u7ed3"},{"location":"java/feature/#generics","text":"\u5f15\u7528\u6cdb\u578b\u4e4b\u540e\uff0c\u5141\u8bb8\u6307\u5b9a\u96c6\u5408\u91cc\u5143\u7d20\u7684\u7c7b\u578b\uff0c\u514d\u53bb\u4e86\u5f3a\u5236\u7c7b\u578b\u8f6c\u6362\uff0c\u5e76\u4e14\u80fd\u5728\u7f16\u8bd1\u65f6\u523b\u8fdb\u884c\u7c7b\u578b\u68c0\u67e5\u7684\u597d\u5904\u3002Parameterized Type\u4f5c\u4e3a\u53c2\u6570\u548c\u8fd4\u56de\u503c\uff0cGeneric\u662fvararg\u3001annotation\u3001enumeration\u3001collection\u7684\u57fa\u77f3\u3002 \u6cdb\u578b\u53ef\u4ee5\u5e26\u6765\u5982\u4e0b\u7684\u597d\u5904\u603b\u7ed3\u5982\u4e0b\uff1a \u7c7b\u578b\u5b89\u5168\uff1a\u629b\u5f03List\u3001Map\uff0c\u4f7f\u7528List\u3001Map\u7ed9\u5b83\u4eec\u6dfb\u52a0\u5143\u7d20\u6216\u8005\u4f7f\u7528Iterator\u904d\u5386\u65f6\uff0c\u7f16\u8bd1\u671f\u5c31\u53ef\u4ee5\u7ed9\u4f60\u68c0\u67e5\u51fa\u7c7b\u578b\u9519\u8bef \u65b9\u6cd5\u53c2\u6570\u548c\u8fd4\u56de\u503c\u52a0\u4e0a\u4e86Type: \u629b\u5f03List\u3001Map\uff0c\u4f7f\u7528List\u3001Map \u4e0d\u9700\u8981\u7c7b\u578b\u8f6c\u6362\uff1aList list=new ArrayList(); \u7c7b\u578b\u901a\u914d\u7b26\u201c?\u201d\uff1a \u5047\u8bbe\u4e00\u4e2a\u6253\u5370List\u4e2d\u5143\u7d20\u7684\u65b9\u6cd5printList,\u6211\u4eec\u5e0c\u671b\u4efb\u4f55\u7c7b\u578bT\u7684List\u90fd\u53ef\u4ee5\u88ab\u6253\u5370","title":"\u6cdb\u578b Generics"},{"location":"java/feature/#_1","text":"\u5f15\u5165\u4e86\u679a\u4e3e\u7c7b\u578b","title":"\u679a\u4e3e\u7c7b\u578b"},{"location":"java/feature/#autoboxing-unboxing","text":"\u7b80\u5355\u7684\u8bf4\u662f\u7c7b\u578b\u81ea\u52a8\u8f6c\u6362\u3002\u81ea\u52a8\u88c5\u5305\uff1a\u57fa\u672c\u7c7b\u578b\u81ea\u52a8\u8f6c\u4e3a\u5305\u88c5\u7c7b\uff08int \u2014\u2014Integer\uff09\u81ea\u52a8\u62c6\u5305\uff1a\u5305\u88c5\u7c7b\u81ea\u52a8\u8f6c\u4e3a\u57fa\u672c\u7c7b\u578b\uff08Integer\u2014\u2014int\uff09","title":"\u81ea\u52a8\u88c5\u7bb1\u62c6\u7bb1\uff08\u81ea\u52a8\u7c7b\u578b\u5305\u88c5\u548c\u89e3\u5305\uff09autoboxing &amp; unboxing"},{"location":"java/feature/#varargsvarargs-number-of-arguments","text":"\u53c2\u6570\u7c7b\u578b\u76f8\u540c\u65f6\uff0c\u628a\u91cd\u8f7d\u51fd\u6570\u5408\u5e76\u5230\u4e00\u8d77\u4e86\u3002\u5982\uff1a public void test ( object ... objs ){ for ( Object obj : objs ){ System . out . println ( obj ); } }","title":"\u53ef\u53d8\u53c2\u6570varargs(varargs number of arguments)"},{"location":"java/feature/#annotations-javametadata","text":"\u6ce8\u89e3\u5728JAVA5\u4e2d\u5c31\u5f15\u5165\u4e86\u3002\u8fd9\u662f\u975e\u5e38\u91cd\u8981\u7684\u7279\u6027\u3002\u73b0\u5728\u6ce8\u89e3\u7684\u5e94\u7528\u5df2\u7ecf\u968f\u5904\u53ef\u89c1\u3002\u4e0d\u8fc7JAVA5\u7684\u6ce8\u89e3\u8fd8\u4e0d\u6210\u719f\uff0c\u6ca1\u6cd5\u81ea\u5b9a\u4e49\u6ce8\u89e3\u3002","title":"Annotations\uff08\u91cd\u8981\uff09 \u5b83\u662fjava\u4e2d\u7684metadata\uff08\u6ce8\u91ca\uff09"},{"location":"java/feature/#_2","text":"for ( int n : numbers ){ //process }","title":"\u65b0\u7684\u8fed\u4ee3\u8bed\u53e5"},{"location":"java/feature/#import-static","text":"\u5bfc\u5165\u9759\u6001\u5bf9\u8c61\uff0c\u53ef\u4ee5\u7701\u7565\u4e9b\u4ee3\u7801\u3002\u4e0d\u8fc7\u8fd9\u4e2a\u4e5f\u4e0d\u5e38\u7528\u3002 import static java.lang.System.out ; //\u5bfc\u5165java.lang\u5305\u4e0b\u7684System\u7c7b\u7684\u9759\u6001\u65b9\u6cd5out; public class HelloWorld { public static void main ( String [] args ){ out . print ( \"Hello World!\" ); //\u65e2\u662f\u5728\u8fd9\u91cc\u4e0d\u7528\u518d\u5199\u6210System.out.println(\"Hello World!\")\u4e86\uff0c\u56e0\u4e3a\u5df2\u7ecf\u5bfc\u5165\u4e86\u8fd9\u4e2a\u9759\u6001\u65b9\u6cd5out\u3002 } }","title":"\u9759\u6001\u5bfc\u5165\uff08import static \uff09"},{"location":"java/feature/#javautilformatter","text":"formatter . format ( \"Remaining account balance: $%.2f\" , balance );","title":"\u65b0\u7684\u683c\u5f0f\u5316\u65b9\u6cd5java.util.Formatter\uff09"},{"location":"java/feature/#thread-framework","text":"\u6700\u4e3b\u8981\u7684\u5c31\u662f\u5f15\u5165\u4e86java.util.concurrent\u5305\uff0c\u8fd9\u4e2a\u90fd\u662f\u9700\u8981\u91cd\u70b9\u638c\u63e1\u7684\u3002 HashMap\u7684\u66ff\u4ee3\u8005ConcurrentHashMap\u548cArrayList\u7684\u66ff\u4ee3\u8005CopyOnWriteArrayList\u5728\u5927\u5e76\u53d1\u91cf\u8bfb\u53d6\u65f6\u91c7\u7528java.util.concurrent\u5305\u91cc\u7684\u4e00\u4e9b\u7c7b\u4f1a\u8ba9\u5927\u5bb6\u6ee1\u610fBlockingQueue\u3001Callable\u3001Executor\u3001Semaphore","title":"\u65b0\u7684\u7ebf\u7a0b\u6a21\u578b\u548c\u5e76\u53d1\u5e93Thread Framework(\u91cd\u8981)"},{"location":"java/feature/#java6","text":"","title":"Java6 \u65b0\u7279\u6027\u603b\u7ed3"},{"location":"java/feature/#web-services","text":"\u4f18\u5148\u652f\u6301\u7f16\u5199 XML web service \u5ba2\u6237\u7aef\u7a0b\u5e8f\u3002\u4f60\u53ef\u4ee5\u7528\u8fc7\u7b80\u5355\u7684annotaion\u5c06\u4f60\u7684API\u53d1\u5e03\u6210.NET\u4ea4\u4e92\u7684web services. Mustang \u6dfb\u52a0\u4e86\u65b0\u7684\u89e3\u6790\u548c XML \u5728 Java object-mapping APIs\u4e2d, \u4e4b\u524d\u53ea\u5728Java EE\u5e73\u53f0\u5b9e\u73b0\u6216\u8005Java Web Services Pack\u4e2d\u63d0\u4f9b.","title":"Web Services"},{"location":"java/feature/#scripting","text":"\u73b0\u5728\u4f60\u53ef\u4ee5\u5728Java\u6e90\u4ee3\u7801\u4e2d\u6df7\u5165JavaScript\u4e86\uff0c\u8fd9\u5bf9\u5f00\u53d1\u539f\u578b\u5f88\u6709\u6709\u7528\uff0c\u4f60\u4e5f\u53ef\u4ee5\u63d2\u5165\u81ea\u5df1\u7684\u811a\u672c\u5f15\u64ce\u3002","title":"Scripting"},{"location":"java/feature/#jdbc40","text":"JAVA6\u5c06\u8054\u5408\u7ed1\u5b9a Java DB (Apache Derby). JDBC 4.0 \u589e\u52a0\u4e86\u8bb8\u591a\u7279\u6027\u4f8b\u5982\u652f\u6301XML\u4f5c\u4e3aSQL\u6570\u636e\u7c7b\u578b\uff0c\u66f4\u597d\u7684\u96c6\u6210Binary Large OBjects (BLOBs) \u548c Character Large OBjects (CLOBs) .","title":"JDBC4.0"},{"location":"java/feature/#ui","text":"GUI \u5f00\u53d1\u8005\u53ef\u4ee5\u6709\u66f4\u591a\u7684\u6280\u5de7\u6765\u4f7f\u7528 SwingWorker utility \uff0c\u4ee5\u5e2e\u52a9GUI\u5e94\u7528\u4e2d\u7684\u591a\u7ebf\u7a0b\u3002, JTable \u5206\u7c7b\u548c\u8fc7\u6ee4\uff0c\u4ee5\u53ca\u6dfb\u52a0splash\u95ea\u5c4f\u3002 Swing\u62e5\u6709\u66f4\u597d\u7684 look-and-feel , LCD \u6587\u672c\u5448\u73b0, \u6574\u4f53GUI\u6027\u80fd\u7684\u63d0\u5347\u3002Java\u5e94\u7528\u7a0b\u5e8f\u53ef\u4ee5\u548c\u672c\u5730\u5e73\u53f0\u66f4\u597d\u7684\u96c6\u6210\uff0c\u4f8b\u5982\u8bbf\u95ee\u5e73\u53f0\u7684\u7cfb\u7edf\u6258\u76d8\u548c\u5f00\u59cb\u83dc\u5355\u3002Mustang\u5c06Java\u63d2\u4ef6\u6280\u672f\u548cJava Web Start\u5f15\u64ce\u7edf\u4e00\u4e86\u8d77\u6765\u3002","title":"UI\u4f18\u5316"},{"location":"java/feature/#_3","text":"\u6dfb\u52a0\u66f4\u591a\u7684\u8bca\u65ad\u4fe1\u606f\uff0c\u7ed1\u5b9a\u4e86\u4e0d\u662f\u5f88\u77e5\u540d\u7684 memory-heap \u5206\u6790\u5de5\u5177Jhat \u6765\u67e5\u770b\u5185\u6838\u5bfc\u51fa\u3002","title":"\u76d1\u63a7\u7ba1\u7406\u589e\u5f3a"},{"location":"java/feature/#api","text":"compiler API\u63d0\u4f9b\u7f16\u7a0b\u8bbf\u95eejavac\uff0c\u53ef\u4ee5\u5b9e\u73b0\u8fdb\u7a0b\u5185\u7f16\u8bd1\uff0c\u52a8\u6001\u4ea7\u751fJava\u4ee3\u7801","title":"\u7f16\u8bd1API"},{"location":"java/feature/#_4","text":"Java tool\u548cframework \u63d0\u4f9b\u5546\u53ef\u4ee5\u5b9a\u4e49\u81ea\u5df1\u7684 annotations \uff0c\u5e76\u4e14\u5185\u6838\u652f\u6301\u81ea\u5b9a\u4e49annotation\u7684\u63d2\u4ef6\u548c\u6267\u884c\u5904\u7406\u5668","title":"\u81ea\u5b9a\u4e49\u6ce8\u89e3"},{"location":"java/feature/#_5","text":"XML-\u6570\u5b57\u7b7e\u540d(XML-DSIG) APIs \u7528\u4e8e\u521b\u5efa\u548c\u64cd\u7eb5\u6570\u5b57\u7b7e\u540d); \u65b0\u7684\u65b9\u6cd5\u6765\u8bbf\u95ee\u672c\u5730\u5e73\u53f0\u7684\u5b89\u5168\u670d\u52a1\uff0c\u4f8b\u5982\u672c\u5730Microsoft Windows for secure authentication and communicationnative \u7684Public Key Infrastructure (PKI) \u548c cryptographic services\uff0c Java Generic Security Services (Java GSS) \u548c Kerberos services for authentication, \u4ee5\u53ca\u8bbf\u95ee LDAP servers \u6765\u8ba4\u8bc1\u7528\u6237.","title":"\u5b89\u5168\u6027"},{"location":"java/feature/#java7","text":"","title":"Java7 \u65b0\u7279\u6027\u603b\u7ed3"},{"location":"java/feature/#switchstring","text":"java7\u4ee5\u524d\u5728switch\u4e2d\u53ea\u80fd\u4f7f\u7528number\u6216enum,\u73b0\u5728\u53ef\u4ee5\u4f7f\u7528string\u4e86\u3002 \u793a\u4f8b\uff1a String s = \"a\" ; switch ( s ) { case \"a\" : System . out . println ( \"is a\" ); break ; case \"b\" : System . out . println ( \"is b\" ); break ; default : System . out . println ( \"is c\" ); break ; }","title":"switch\u4e2d\u4f7f\u7528String"},{"location":"java/feature/#_6","text":"Throwable\u7c7b\u589e\u52a0addSuppressed\u65b9\u6cd5\u548cgetSuppressed\u65b9\u6cd5\uff0c\u652f\u6301\u539f\u59cb\u5f02\u5e38\u4e2d\u52a0\u5165\u88ab\u6291\u5236\u7684\u5f02\u5e38\u3002 \u5f02\u5e38\u6291\u5236\uff1a\u5728try\u548cfinally\u4e2d\u540c\u65f6\u629b\u51fa\u5f02\u5e38\u65f6\uff0cfinally\u4e2d\u629b\u51fa\u7684\u5f02\u5e38\u4f1a\u5728\u5f02\u5e38\u6808\u4e2d\u5411\u4e0a\u4f20\u9012\uff0c\u800ctry\u4e2d\u4ea7\u751f\u7684\u539f\u59cb\u5f02\u5e38\u4f1a\u6d88\u5931\u3002 \u5728Java7\u4e4b\u524d\u7684\u7248\u672c\uff0c\u53ef\u4ee5\u5c06\u539f\u59cb\u5f02\u5e38\u4fdd\u5b58\uff0c\u5728finally\u4e2d\u4ea7\u751f\u5f02\u5e38\u65f6\u629b\u51fa\u539f\u59cb\u5f02\u5e38\uff1a //java 7 \u4ee5\u524d public void read ( String filename ) throws BaseException { FileInputStream input = null ; IOException readException = null ; try { input = new FileInputStream ( filename ); } catch ( IOException ex ) { readException = ex ; //\u4fdd\u5b58\u539f\u59cb\u5f02\u5e38 } finally { if ( input != null ) { try { input . close (); } catch ( IOException ex ) { if ( readException == null ) { readException = ex ; } } } if ( readException != null ) { throw new BaseException ( readException ); } } } //\u5728Java7\u4e2d\u7684\u7248\u672c\uff0c\u53ef\u4ee5\u4f7f\u7528addSuppressed\u65b9\u6cd5\u8bb0\u5f55\u88ab\u6291\u5236\u7684\u5f02\u5e38\uff1a public void read ( String filename ) throws IOException { FileInputStream input = null ; IOException readException = null ; try { input = new FileInputStream ( filename ); } catch ( IOException ex ) { readException = ex ; } finally { if ( input != null ) { try { input . close (); } catch ( IOException ex ) { if ( readException != null ) { //\u6b64\u5904\u7684\u533a\u522b readException . addSuppressed ( ex ); } else { readException = ex ; } } } if ( readException != null ) { throw readException ; } } }","title":"\u5f02\u5e38\u5904\u7406"},{"location":"java/feature/#try-with-resources","text":"java7\u4ee5\u524d\u5bf9\u67d0\u4e9b\u8d44\u6e90\u7684\u64cd\u4f5c\u662f\u9700\u8981\u624b\u52a8\u5173\u95ed\uff0c\u5982InputStream\uff0cWrites\uff0cSockets\uff0cSql\u7b49\uff0c\u9700\u8981\u5728finally\u4e2d\u8fdb\u884c\u5173\u95ed\u8d44\u6e90\u7684\u64cd\u4f5c\uff0c\u73b0\u5728\u4e0d\u9700\u8981\u4f7f\u7528finally\u6765\u4fdd\u8bc1\u6253\u5f00\u7684\u6d41\u88ab\u6b63\u786e\u5173\u95ed\uff0c\u73b0\u5728\u662f\u81ea\u52a8\u5b8c\u6210\u7684\uff0c\u4f1a\u81ea\u52a8\u91ca\u653e\u8d44\u6e90,\u786e\u4fdd\u6bcf\u4e00\u4e2a\u8d44\u6e90\u5728\u5904\u7406\u5b8c\u6210\u540e\u90fd\u4f1a\u5173\u95ed\uff0c\u5c31\u4e0d\u9700\u8981\u6211\u4eec\u4ee3\u7801\u53bbclose(); \u5728\u91c7\u7528try-with-resources\u65b9\u5f0f\u540e\uff0c\u4e0d\u9700\u8981\u518d\u6b21\u58f0\u660e\u6d41\u7684\u5173\u95ed\u3002 \u53ef\u4ee5\u4f7f\u7528try-with-resources\u7684\u8d44\u6e90\u6709\uff1a\u4efb\u4f55\u5b9e\u73b0\u4e86java.lang.AutoCloseable\u63a5\u53e3\u548cjava.io.Closeable\u63a5\u53e3\u7684\u5bf9\u8c61\u3002\u4e3a\u4e86\u652f\u6301\u8fd9\u4e2a\u884c\u4e3a\uff0c\u6240\u6709\u53ef\u5173\u95ed\u7684\u7c7b\u5c06\u88ab\u4fee\u6539\u4e3a\u53ef\u4ee5\u5b9e\u73b0\u4e00\u4e2aClosable\uff08\u53ef\u5173\u95ed\u7684\uff09\u63a5\u53e3\u3002 public interface Closeable extends AutoCloseable {} public abstract class Reader implements Readable , Closeable {} \u5982\u679c\u5728try\u8bed\u53e5\u4e2d\u5199\u5165\u4e86\u6ca1\u6709\u5b9e\u73b0\u8be5\u63a5\u53e3\u7684\u7c7b\uff0c\u4f1a\u63d0\u793a\uff1a The resource type File does not implement java.lang.AutoCloseable \u793a\u4f8b\uff1a //java 7 \u4ee5\u524d OutputStream fos = null ; try { fos = new FileOutputStream ( \"D:/file\" ); } finally { fos . close (); } //java 7 \u4ee5\u540e try ( OutputStream fos = new FileOutputStream ( \"D:/file\" );){ // \u4e0d\u9700\u8981\u518d\u6b21\u6307\u660efos.close(); } //try\u5b50\u53e5\u4e2d\u53ef\u4ee5\u7ba1\u7406\u591a\u4e2a\u8d44\u6e90 public void copyFile ( String fromPath , String toPath ) throws IOException { try ( InputStream input = new FileInputStream ( fromPath ); OutputStream output = new FileOutputStream ( toPath ) ) { byte [] buffer = new byte [ 8192 ]; int len = - 1 ; while ( ( len = input . read ( buffer ))!=- 1 ) { output . write ( buffer , 0 , len ); } } }","title":"try-with-resources"},{"location":"java/feature/#_7","text":"java7\u4ee5\u524d\u5728\u4e00\u4e2a\u65b9\u6cd5\u629b\u51fa\u591a\u4e2a\u5f02\u5e38\u65f6\uff0c\u53ea\u80fd\u4e00\u4e2a\u4e2a\u7684catch\uff0c\u8fd9\u6837\u4ee3\u7801\u4f1a\u6709\u591a\u4e2acatch,\u663e\u5f97\u5f88\u4e0d\u53cb\u597d\uff0c\u73b0\u5728\u53ea\u9700\u4e00\u4e2acatch\u8bed\u53e5\uff0c\u591a\u4e2a\u5f02\u5e38\u7c7b\u578b\u7528\"|\"\u9694\u5f00\u3002 \u793a\u4f8b\uff1a //java 7 \u4ee5\u524d try { result = field . get ( obj ); } catch ( IllegalArgumentException e ) { e . printStackTrace (); } catch ( IllegalAccessException e ) { e . printStackTrace (); } //java 7 \u4ee5\u540e try { result = field . get ( obj ); } catch ( IllegalArgumentException | IllegalAccessException e ) { e . printStackTrace (); }","title":"\u6355\u83b7\u591a\u4e2a\u5f02\u5e38"},{"location":"java/feature/#_8","text":"\u8fd0\u7528\u6cdb\u578b\u5b9e\u4f8b\u5316\u7c7b\u578b\u81ea\u52a8\u63a8\u65ad\uff0c\u5bf9\u901a\u7528\u5b9e\u4f8b\u521b\u5efa(diamond)\u7684type\u5f15\u7528\u8fdb\u884c\u4e86\u6539\u8fdb \u793a\u4f8b\uff1a //java 7 \u4ee5\u524d List < String > list = new ArrayList < String >(); //java 7 \u4ee5\u540e List < String > list = new ArrayList <>();","title":"\u6cdb\u578b\u5b9e\u4f8b\u5316\u7c7b\u578b\u81ea\u52a8\u63a8\u65ad"},{"location":"java/feature/#_9","text":"Java7\u524d\u652f\u6301\u5341\u8fdb\u5236\uff08123\uff09\u3001\u516b\u8fdb\u5236\uff080123\uff09\u3001\u5341\u516d\u8fdb\u5236\uff080X12AB\uff09 Java7\u589e\u52a0\u4e8c\u8fdb\u5236\u8868\u793a\uff080B11110001\u30010b11110001\uff09 \u793a\u4f8b\uff1a int binary = 0b0001_1001 ; System . out . println ( \"binary is :\" + binary ); binary is : 25","title":"\u589e\u52a0\u4e8c\u8fdb\u5236\u8868\u793a"},{"location":"java/feature/#_10","text":"Java7\u4e2d\u652f\u6301\u5728\u6570\u5b57\u4e2d\u95f4\u589e\u52a0'_'\u4f5c\u4e3a\u5206\u9694\u7b26\uff0c\u5206\u9694\u957fint\u4ee5\u53calong\uff08\u4e5f\u652f\u6301double,float\uff09\uff0c\u663e\u793a\u66f4\u76f4\u89c2\uff0c\u5982\uff0812_123_456\uff09\u3002 \u4e0b\u5212\u7ebf\u53ea\u80fd\u5728\u6570\u5b57\u4e2d\u95f4\uff0c\u7f16\u8bd1\u65f6\u7f16\u8bd1\u5668\u81ea\u52a8\u5220\u9664\u6570\u5b57\u4e2d\u7684\u4e0b\u5212\u7ebf\u3002 \u793a\u4f8b\uff1a int intOne = 1_000_000 ; long longOne = 1_000_000 ; double doubleOne = 1_000_000 ; float floatOne = 1_000_000 ;","title":"\u6570\u5b57\u4e2d\u53ef\u6dfb\u52a0\u5206\u9694\u7b26"},{"location":"java/feature/#_11","text":"\u53c2\u6570\u7c7b\u578b\u76f8\u540c\u65f6\uff0c\u628a\u91cd\u8f7d\u51fd\u6570\u5408\u5e76\u5230\u4e00\u8d77\u4e86 \u4f7f\u7528\u53ef\u53d8\u53c2\u6570\u65f6\uff0c\u63d0\u5347\u7f16\u8bd1\u5668\u7684\u8b66\u544a\u548c\u9519\u8bef\u4fe1\u606f public int sum ( int ... args ) { int result = 0 ; for ( int value : args ) { result += value ; } return result ; }","title":"\u53d8\u957f\u53c2\u6570\u65b9\u6cd5\u7684\u4f18\u5316"},{"location":"java/feature/#_12","text":"//java 7 \u4ee5\u524d List < String > list = new ArrayList < String >(); list . add ( \"item\" ); String item = list . get ( 0 ); Set < String > set = new HashSet < String >(); set . add ( \"item\" ); Map < String , Integer > map = new HashMap < String , Integer >(); map . put ( \"key\" , 1 ); int value = map . get ( \"key\" ); //java 7 \u4ee5\u540e List < String > list = [ \"item\" ]; String item = list [ 0 ]; Set < String > set = { \"item\" }; Map < String , Integer > map = { \"key\" : 1 }; int value = map [ \"key\" ];","title":"\u96c6\u5408\u7c7b\u7684\u8bed\u6cd5\u652f\u6301"},{"location":"java/feature/#_13","text":"Java\u4e2d\u67d0\u4e9b\u8d44\u6e90\u662f\u9700\u8981\u624b\u52a8\u5173\u95ed\u7684\uff0c\u5982InputStream\uff0cWrites\uff0cSockets\uff0cSql classes\u7b49\u3002\u8fd9\u4e2a\u65b0\u7684\u8bed\u8a00\u7279\u6027\u5141\u8bb8try\u8bed\u53e5\u672c\u8eab\u7533\u8bf7\u66f4\u591a\u7684\u8d44\u6e90\uff0c\u8fd9\u4e9b\u8d44\u6e90\u4f5c\u7528\u4e8etry\u4ee3\u7801\u5757\uff0c\u5e76\u81ea\u52a8\u5173\u95ed\u3002 //java 7 \u4ee5\u524d BufferedReader br = new BufferedReader ( new FileReader ( path )); try { return br . readLine (); } finally { br . close (); } //java 7 \u4ee5\u540e try ( BufferedReader br = new BufferedReader ( new FileReader ( path )) { return br . readLine (); }","title":"\u81ea\u52a8\u8d44\u6e90\u7ba1\u7406"},{"location":"java/feature/#_14","text":"File System . getJavaIoTempDir () // IO\u4e34\u65f6\u6587\u4ef6\u5939 File System . getJavaHomeDir () // JRE\u7684\u5b89\u88c5\u76ee\u5f55 File System . getUserHomeDir () // \u5f53\u524d\u7528\u6237\u76ee\u5f55 File System . getUserDir () // \u542f\u52a8java\u8fdb\u7a0b\u65f6\u6240\u5728\u7684\u76ee\u5f55","title":"\u65b0\u589e\u4e00\u4e9b\u53d6\u73af\u5883\u4fe1\u606f\u7684\u5de5\u5177\u65b9\u6cd5"},{"location":"java/feature/#java8","text":"Java8 \u65b0\u589e\u4e86\u975e\u5e38\u591a\u7684\u7279\u6027\uff0c\u6211\u4eec\u4e3b\u8981\u8ba8\u8bba\u4ee5\u4e0b\u51e0\u4e2a\uff1a 1. Lambda \u8868\u8fbe\u5f0f \u2212 Lambda\u5141\u8bb8\u628a\u51fd\u6570\u4f5c\u4e3a\u4e00\u4e2a\u65b9\u6cd5\u7684\u53c2\u6570(\u51fd\u6570\u4f5c\u4e3a\u53c2\u6570\u4f20\u9012\u8fdb\u65b9\u6cd5\u4e2d)\u3002 2. \u65b9\u6cd5\u5f15\u7528 \u2212 \u65b9\u6cd5\u5f15\u7528\u63d0\u4f9b\u4e86\u975e\u5e38\u6709\u7528\u7684\u8bed\u6cd5\uff0c\u53ef\u4ee5\u76f4\u63a5\u5f15\u7528\u5df2\u6709Java\u7c7b\u6216\u5bf9\u8c61\uff08\u5b9e\u4f8b\uff09\u7684\u65b9\u6cd5\u6216\u6784\u9020\u5668\u3002\u4e0elambda\u8054\u5408\u4f7f\u7528\uff0c\u65b9\u6cd5\u5f15\u7528\u53ef\u4ee5\u4f7f\u8bed\u8a00\u7684\u6784\u9020\u66f4\u7d27\u51d1\u7b80\u6d01\uff0c\u51cf\u5c11\u5197\u4f59\u4ee3\u7801\u3002 3. \u9ed8\u8ba4\u65b9\u6cd5 \u2212 \u9ed8\u8ba4\u65b9\u6cd5\u5c31\u662f\u4e00\u4e2a\u5728\u63a5\u53e3\u91cc\u9762\u6709\u4e86\u4e00\u4e2a\u5b9e\u73b0\u7684\u65b9\u6cd5\u3002 4. \u65b0\u5de5\u5177 \u2212 \u65b0\u7684\u7f16\u8bd1\u5de5\u5177\uff0c\u5982\uff1aNashorn\u5f15\u64ce jjs\u3001 \u7c7b\u4f9d\u8d56\u5206\u6790\u5668jdeps\u3002 5. Stream API \u2212\u65b0\u6dfb\u52a0\u7684Stream API\uff08java.util.stream\uff09 \u628a\u771f\u6b63\u7684\u51fd\u6570\u5f0f\u7f16\u7a0b\u98ce\u683c\u5f15\u5165\u5230Java\u4e2d\u3002 6. Date Time API \u2212 \u52a0\u5f3a\u5bf9\u65e5\u671f\u4e0e\u65f6\u95f4\u7684\u5904\u7406\u3002 7. Optional \u7c7b \u2212 Optional \u7c7b\u5df2\u7ecf\u6210\u4e3a Java 8 \u7c7b\u5e93\u7684\u4e00\u90e8\u5206\uff0c\u7528\u6765\u89e3\u51b3\u7a7a\u6307\u9488\u5f02\u5e38\u3002 8. Nashorn, JavaScript \u5f15\u64ce \u2212 Java 8\u63d0\u4f9b\u4e86\u4e00\u4e2a\u65b0\u7684Nashorn javascript\u5f15\u64ce\uff0c\u5b83\u5141\u8bb8\u6211\u4eec\u5728JVM\u4e0a\u8fd0\u884c\u7279\u5b9a\u7684javascript\u5e94\u7528\u3002","title":"Java8 \u65b0\u7279\u6027\u603b\u7ed3"},{"location":"java/feature/#lambda","text":"Lambda\u8868\u8fbe\u5f0f\uff08\u4e5f\u79f0\u4e3a\u95ed\u5305\uff09\u662fJava 8\u4e2d\u6700\u5927\u548c\u6700\u4ee4\u4eba\u671f\u5f85\u7684\u8bed\u8a00\u6539\u53d8\u3002\u5b83\u5141\u8bb8\u6211\u4eec\u5c06\u51fd\u6570\u5f53\u6210\u53c2\u6570\u4f20\u9012\u7ed9\u67d0\u4e2a\u65b9\u6cd5\uff0c\u6216\u8005\u628a\u4ee3\u7801\u672c\u8eab\u5f53\u4f5c\u6570\u636e\u5904\u7406\uff1a\u51fd\u6570\u5f0f\u5f00\u53d1\u8005\u975e\u5e38\u719f\u6089\u8fd9\u4e9b\u6982\u5ff5\u3002\u5f88\u591aJVM\u5e73\u53f0\u4e0a\u7684\u8bed\u8a00\uff08Groovy\u3001Scala\u7b49\uff09\u4ece\u8bde\u751f\u4e4b\u65e5\u5c31\u652f\u6301Lambda\u8868\u8fbe\u5f0f\uff0c\u4f46\u662fJava\u5f00\u53d1\u8005\u6ca1\u6709\u9009\u62e9\uff0c\u53ea\u80fd\u4f7f\u7528\u533f\u540d\u5185\u90e8\u7c7b\u4ee3\u66ffLambda\u8868\u8fbe\u5f0f\u3002 Lambda\u7684\u8bbe\u8ba1\u8017\u8d39\u4e86\u5f88\u591a\u65f6\u95f4\u548c\u5f88\u5927\u7684\u793e\u533a\u529b\u91cf\uff0c\u6700\u7ec8\u627e\u5230\u4e00\u79cd\u6298\u4e2d\u7684\u5b9e\u73b0\u65b9\u6848\uff0c\u53ef\u4ee5\u5b9e\u73b0\u7b80\u6d01\u800c\u7d27\u51d1\u7684\u8bed\u8a00\u7ed3\u6784\u3002\u6700\u7b80\u5355\u7684Lambda\u8868\u8fbe\u5f0f\u53ef\u7531\u9017\u53f7\u5206\u9694\u7684\u53c2\u6570\u5217\u8868\u3001->\u7b26\u53f7\u548c\u8bed\u53e5\u5757\u7ec4\u6210\uff0c\u4f8b\u5982\uff1a Arrays . asList ( \"a\" , \"b\" , \"d\" ). forEach ( e -> System . out . println ( e ) ); \u5728\u4e0a\u9762\u8fd9\u4e2a\u4ee3\u7801\u4e2d\u7684\u53c2\u6570e\u7684\u7c7b\u578b\u662f\u7531\u7f16\u8bd1\u5668\u63a8\u7406\u5f97\u51fa\u7684\uff0c\u4f60\u4e5f\u53ef\u4ee5\u663e\u5f0f\u6307\u5b9a\u8be5\u53c2\u6570\u7684\u7c7b\u578b\uff0c\u4f8b\u5982\uff1a Arrays . asList ( \"a\" , \"b\" , \"d\" ). forEach ( ( String e ) -> System . out . println ( e ) ); \u5982\u679cLambda\u8868\u8fbe\u5f0f\u9700\u8981\u66f4\u590d\u6742\u7684\u8bed\u53e5\u5757\uff0c\u5219\u53ef\u4ee5\u4f7f\u7528\u82b1\u62ec\u53f7\u5c06\u8be5\u8bed\u53e5\u5757\u62ec\u8d77\u6765\uff0c\u7c7b\u4f3c\u4e8eJava\u4e2d\u7684\u51fd\u6570\u4f53\uff0c\u4f8b\u5982\uff1a Arrays . asList ( \"a\" , \"b\" , \"d\" ). forEach ( e -> { System . out . print ( e ); System . out . print ( e ); } ); Lambda\u8868\u8fbe\u5f0f\u53ef\u4ee5\u5f15\u7528\u7c7b\u6210\u5458\u548c\u5c40\u90e8\u53d8\u91cf\uff08\u4f1a\u5c06\u8fd9\u4e9b\u53d8\u91cf\u9690\u5f0f\u5f97\u8f6c\u6362\u6210final\u7684\uff09\uff0c\u4f8b\u5982\u4e0b\u5217\u4e24\u4e2a\u4ee3\u7801\u5757\u7684\u6548\u679c\u5b8c\u5168\u76f8\u540c\uff1a String separator = \",\" ; Arrays . asList ( \"a\" , \"b\" , \"d\" ). forEach ( ( String e ) -> System . out . print ( e + separator ) ); //\u548c final String separator = \",\" ; Arrays . asList ( \"a\" , \"b\" , \"d\" ). forEach ( ( String e ) -> System . out . print ( e + separator ) ); Lambda\u8868\u8fbe\u5f0f\u6709\u8fd4\u56de\u503c\uff0c\u8fd4\u56de\u503c\u7684\u7c7b\u578b\u4e5f\u7531\u7f16\u8bd1\u5668\u63a8\u7406\u5f97\u51fa\u3002\u5982\u679cLambda\u8868\u8fbe\u5f0f\u4e2d\u7684\u8bed\u53e5\u5757\u53ea\u6709\u4e00\u884c\uff0c\u5219\u53ef\u4ee5\u4e0d\u7528\u4f7f\u7528return\u8bed\u53e5\uff0c\u4e0b\u5217\u4e24\u4e2a\u4ee3\u7801\u7247\u6bb5\u6548\u679c\u76f8\u540c\uff1a Arrays . asList ( \"a\" , \"b\" , \"d\" ). sort ( ( e1 , e2 ) -> e1 . compareTo ( e2 ) ); //\u548c Arrays . asList ( \"a\" , \"b\" , \"d\" ). sort ( ( e1 , e2 ) -> { int result = e1 . compareTo ( e2 ); return result ; } ); Lambda\u7684\u8bbe\u8ba1\u8005\u4eec\u4e3a\u4e86\u8ba9\u73b0\u6709\u7684\u529f\u80fd\u4e0eLambda\u8868\u8fbe\u5f0f\u826f\u597d\u517c\u5bb9\uff0c\u8003\u8651\u4e86\u5f88\u591a\u65b9\u6cd5\uff0c\u4e8e\u662f\u4ea7\u751f\u4e86\u51fd\u6570\u63a5\u53e3\u8fd9\u4e2a\u6982\u5ff5\u3002\u51fd\u6570\u63a5\u53e3\u6307\u7684\u662f\u53ea\u6709\u4e00\u4e2a\u51fd\u6570\u7684\u63a5\u53e3\uff0c\u8fd9\u6837\u7684\u63a5\u53e3\u53ef\u4ee5\u9690\u5f0f\u8f6c\u6362\u4e3aLambda\u8868\u8fbe\u5f0f\u3002java.lang.Runnable\u548cjava.util.concurrent.Callable\u662f\u51fd\u6570\u5f0f\u63a5\u53e3\u7684\u6700\u4f73\u4f8b\u5b50\u3002\u5728\u5b9e\u8df5\u4e2d\uff0c\u51fd\u6570\u5f0f\u63a5\u53e3\u975e\u5e38\u8106\u5f31\uff1a\u53ea\u8981\u67d0\u4e2a\u5f00\u53d1\u8005\u5728\u8be5\u63a5\u53e3\u4e2d\u6dfb\u52a0\u4e00\u4e2a\u51fd\u6570\uff0c\u5219\u8be5\u63a5\u53e3\u5c31\u4e0d\u518d\u662f\u51fd\u6570\u5f0f\u63a5\u53e3\u8fdb\u800c\u5bfc\u81f4\u7f16\u8bd1\u5931\u8d25\u3002\u4e3a\u4e86\u514b\u670d\u8fd9\u79cd\u4ee3\u7801\u5c42\u9762\u7684\u8106\u5f31\u6027\uff0c\u5e76\u663e\u5f0f\u8bf4\u660e\u67d0\u4e2a\u63a5\u53e3\u662f\u51fd\u6570\u5f0f\u63a5\u53e3\uff0cJava 8 \u63d0\u4f9b\u4e86\u4e00\u4e2a\u7279\u6b8a\u7684\u6ce8\u89e3@FunctionalInterface\uff08Java \u5e93\u4e2d\u7684\u6240\u6709\u76f8\u5173\u63a5\u53e3\u90fd\u5df2\u7ecf\u5e26\u6709\u8fd9\u4e2a\u6ce8\u89e3\u4e86\uff09\uff0c\u4e3e\u4e2a\u7b80\u5355\u7684\u51fd\u6570\u5f0f\u63a5\u53e3\u7684\u5b9a\u4e49\uff1a @FunctionalInterface public interface Functional { void method (); } \u4e0d\u8fc7\u6709\u4e00\u70b9\u9700\u8981\u6ce8\u610f\uff0c\u9ed8\u8ba4\u65b9\u6cd5\u548c\u9759\u6001\u65b9\u6cd5\u4e0d\u4f1a\u7834\u574f\u51fd\u6570\u5f0f\u63a5\u53e3\u7684\u5b9a\u4e49\uff0c\u56e0\u6b64\u5982\u4e0b\u7684\u4ee3\u7801\u662f\u5408\u6cd5\u7684\u3002 @FunctionalInterface public interface FunctionalDefaultMethods { void method (); default void defaultMethod () { System . out . print ( \"defaultMethod\" ); } static void staticMethod (){ System . out . print ( \"staticMethod\" ); } } Lambda\u8868\u8fbe\u5f0f\u4f5c\u4e3aJava 8\u7684\u6700\u5927\u5356\u70b9\uff0c\u5b83\u6709\u6f5c\u529b\u5438\u5f15\u66f4\u591a\u7684\u5f00\u53d1\u8005\u52a0\u5165\u5230JVM\u5e73\u53f0\uff0c\u5e76\u5728\u7eafJava\u7f16\u7a0b\u4e2d\u4f7f\u7528\u51fd\u6570\u5f0f\u7f16\u7a0b\u7684\u6982\u5ff5\u3002\u5982\u679c\u4f60\u9700\u8981\u4e86\u89e3\u66f4\u591aLambda\u8868\u8fbe\u5f0f\u7684\u7ec6\u8282\uff0c\u53ef\u4ee5\u53c2\u8003 \u5b98\u65b9\u6587\u6863 \u3002","title":"Lambda\u8868\u8fbe\u5f0f\u548c\u51fd\u6570\u5f0f\u63a5\u53e3"},{"location":"java/feature/#_15","text":"Java 8\u4f7f\u7528\u4e24\u4e2a\u65b0\u6982\u5ff5\u6269\u5c55\u4e86\u63a5\u53e3\u7684\u542b\u4e49\uff1a\u9ed8\u8ba4\u65b9\u6cd5\u548c\u9759\u6001\u65b9\u6cd5\u3002\u9ed8\u8ba4\u65b9\u6cd5\u4f7f\u5f97\u63a5\u53e3\u6709\u70b9\u7c7b\u4f3ctraits\uff0c\u4e0d\u8fc7\u8981\u5b9e\u73b0\u7684\u76ee\u6807\u4e0d\u4e00\u6837\u3002\u9ed8\u8ba4\u65b9\u6cd5\u4f7f\u5f97\u5f00\u53d1\u8005\u53ef\u4ee5\u5728 \u4e0d\u7834\u574f\u4e8c\u8fdb\u5236\u517c\u5bb9\u6027\u7684\u524d\u63d0\u4e0b\uff0c\u5f80\u73b0\u5b58\u63a5\u53e3\u4e2d\u6dfb\u52a0\u65b0\u7684\u65b9\u6cd5\uff0c\u5373\u4e0d\u5f3a\u5236\u90a3\u4e9b\u5b9e\u73b0\u4e86\u8be5\u63a5\u53e3\u7684\u7c7b\u4e5f\u540c\u65f6\u5b9e\u73b0\u8fd9\u4e2a\u65b0\u52a0\u7684\u65b9\u6cd5\u3002 \u9ed8\u8ba4\u65b9\u6cd5\u548c\u62bd\u8c61\u65b9\u6cd5\u4e4b\u95f4\u7684\u533a\u522b\u5728\u4e8e\u62bd\u8c61\u65b9\u6cd5\u9700\u8981\u5b9e\u73b0\uff0c\u800c\u9ed8\u8ba4\u65b9\u6cd5\u4e0d\u9700\u8981\u3002\u63a5\u53e3\u63d0\u4f9b\u7684\u9ed8\u8ba4\u65b9\u6cd5\u4f1a\u88ab\u63a5\u53e3\u7684\u5b9e\u73b0\u7c7b\u7ee7\u627f\u6216\u8005\u8986\u5199\uff0c\u4f8b\u5b50\u4ee3\u7801\u5982\u4e0b\uff1a private interface Defaulable { // Interfaces now allow default methods, the implementer may or // may not implement (override) them. default String notRequired () { return \"Default implementation\" ; } } private static class DefaultableImpl implements Defaulable { } private static class OverridableImpl implements Defaulable { @Override public String notRequired () { return \"Overridden implementation\" ; } } Defaulable\u63a5\u53e3\u4f7f\u7528\u5173\u952e\u5b57default\u5b9a\u4e49\u4e86\u4e00\u4e2a\u9ed8\u8ba4\u65b9\u6cd5notRequired()\u3002DefaultableImpl\u7c7b\u5b9e\u73b0\u4e86\u8fd9\u4e2a\u63a5\u53e3\uff0c\u540c\u65f6\u9ed8\u8ba4\u7ee7\u627f\u4e86\u8fd9\u4e2a\u63a5\u53e3\u4e2d\u7684\u9ed8\u8ba4\u65b9\u6cd5\uff1bOverridableImpl\u7c7b\u4e5f\u5b9e\u73b0\u4e86\u8fd9\u4e2a\u63a5\u53e3\uff0c\u4f46\u8986\u5199\u4e86\u8be5\u63a5\u53e3\u7684\u9ed8\u8ba4\u65b9\u6cd5\uff0c\u5e76\u63d0\u4f9b\u4e86\u4e00\u4e2a\u4e0d\u540c\u7684\u5b9e\u73b0\u3002 Java 8\u5e26\u6765\u7684\u53e6\u4e00\u4e2a\u6709\u8da3\u7684\u7279\u6027\u662f\u5728\u63a5\u53e3\u4e2d\u53ef\u4ee5\u5b9a\u4e49\u9759\u6001\u65b9\u6cd5\uff0c\u4f8b\u5b50\u4ee3\u7801\u5982\u4e0b\uff1a private interface DefaulableFactory { // Interfaces now allow static methods static Defaulable create ( Supplier < Defaulable > supplier ) { return supplier . get (); } } \u4e0b\u9762\u7684\u4ee3\u7801\u7247\u6bb5\u6574\u5408\u4e86\u9ed8\u8ba4\u65b9\u6cd5\u548c\u9759\u6001\u65b9\u6cd5\u7684\u4f7f\u7528\u573a\u666f\uff1a public static void main ( String [] args ) { Defaulable defaulable = DefaulableFactory . create ( DefaultableImpl :: new ); System . out . println ( defaulable . notRequired () ); defaulable = DefaulableFactory . create ( OverridableImpl :: new ); System . out . println ( defaulable . notRequired () ); } \u8fd9\u6bb5\u4ee3\u7801\u7684\u8f93\u51fa\u7ed3\u679c\u5982\u4e0b\uff1a Default implementation Overridden implementation \u7531\u4e8eJVM\u4e0a\u7684\u9ed8\u8ba4\u65b9\u6cd5\u7684\u5b9e\u73b0\u5728\u5b57\u8282\u7801\u5c42\u9762\u63d0\u4f9b\u4e86\u652f\u6301\uff0c\u56e0\u6b64\u6548\u7387\u975e\u5e38\u9ad8\u3002\u9ed8\u8ba4\u65b9\u6cd5\u5141\u8bb8\u5728\u4e0d\u6253\u7834\u73b0\u6709\u7ee7\u627f\u4f53\u7cfb\u7684\u57fa\u7840\u4e0a\u6539\u8fdb\u63a5\u53e3\u3002\u8be5\u7279\u6027\u5728\u5b98\u65b9\u5e93\u4e2d\u7684\u5e94\u7528\u662f\uff1a\u7ed9java.util.Collection\u63a5\u53e3\u6dfb\u52a0\u65b0\u65b9\u6cd5\uff0c\u5982stream()\u3001parallelStream()\u3001forEach()\u548cremoveIf()\u7b49\u7b49\u3002 \u5c3d\u7ba1\u9ed8\u8ba4\u65b9\u6cd5\u6709\u8fd9\u4e48\u591a\u597d\u5904\uff0c\u4f46\u5728\u5b9e\u9645\u5f00\u53d1\u4e2d\u5e94\u8be5\u8c28\u614e\u4f7f\u7528\uff1a\u5728\u590d\u6742\u7684\u7ee7\u627f\u4f53\u7cfb\u4e2d\uff0c\u9ed8\u8ba4\u65b9\u6cd5\u53ef\u80fd\u5f15\u8d77\u6b67\u4e49\u548c\u7f16\u8bd1\u9519\u8bef\u3002\u5982\u679c\u4f60\u60f3\u4e86\u89e3\u66f4\u591a\u7ec6\u8282\uff0c\u53ef\u4ee5\u53c2\u8003 \u5b98\u65b9\u6587\u6863 \u3002","title":"\u63a5\u53e3\u7684\u9ed8\u8ba4\u65b9\u6cd5\u548c\u9759\u6001\u65b9\u6cd5"},{"location":"java/feature/#_16","text":"\u65b9\u6cd5\u5f15\u7528\u4f7f\u5f97\u5f00\u53d1\u8005\u53ef\u4ee5\u76f4\u63a5\u5f15\u7528\u73b0\u5b58\u7684\u65b9\u6cd5\u3001Java\u7c7b\u7684\u6784\u9020\u65b9\u6cd5\u6216\u8005\u5b9e\u4f8b\u5bf9\u8c61\u3002\u65b9\u6cd5\u5f15\u7528\u548cLambda\u8868\u8fbe\u5f0f\u914d\u5408\u4f7f\u7528\uff0c\u4f7f\u5f97java\u7c7b\u7684\u6784\u9020\u65b9\u6cd5\u770b\u8d77\u6765\u7d27\u51d1\u800c\u7b80\u6d01\uff0c\u6ca1\u6709\u5f88\u591a\u590d\u6742\u7684\u6a21\u677f\u4ee3\u7801\u3002 \u897f\u95e8\u7684\u4f8b\u5b50\u4e2d\uff0cCar\u7c7b\u662f\u4e0d\u540c\u65b9\u6cd5\u5f15\u7528\u7684\u4f8b\u5b50\uff0c\u53ef\u4ee5\u5e2e\u52a9\u8bfb\u8005\u533a\u5206\u56db\u79cd\u7c7b\u578b\u7684\u65b9\u6cd5\u5f15\u7528\u3002 public static class Car { public static Car create ( final Supplier < Car > supplier ) { return supplier . get (); } public static void collide ( final Car car ) { System . out . println ( \"Collided \" + car . toString () ); } public void follow ( final Car another ) { System . out . println ( \"Following the \" + another . toString () ); } public void repair () { System . out . println ( \"Repaired \" + this . toString () ); } } \u7b2c\u4e00\u79cd\u65b9\u6cd5\u5f15\u7528\u7684\u7c7b\u578b\u662f\u6784\u9020\u5668\u5f15\u7528\uff0c\u8bed\u6cd5\u662fClass::new\uff0c\u6216\u8005\u66f4\u4e00\u822c\u7684\u5f62\u5f0f\uff1aClass ::new\u3002\u6ce8\u610f\uff1a\u8fd9\u4e2a\u6784\u9020\u5668\u6ca1\u6709\u53c2\u6570\u3002 final Car car = Car . create ( Car :: new ); final List < Car > cars = Arrays . asList ( car ); \u7b2c\u4e8c\u79cd\u65b9\u6cd5\u5f15\u7528\u7684\u7c7b\u578b\u662f\u9759\u6001\u65b9\u6cd5\u5f15\u7528\uff0c\u8bed\u6cd5\u662fClass::static_method\u3002\u6ce8\u610f\uff1a\u8fd9\u4e2a\u65b9\u6cd5\u63a5\u53d7\u4e00\u4e2aCar\u7c7b\u578b\u7684\u53c2\u6570\u3002 cars . forEach ( Car :: collide ); \u7b2c\u4e09\u79cd\u65b9\u6cd5\u5f15\u7528\u7684\u7c7b\u578b\u662f\u67d0\u4e2a\u7c7b\u7684\u6210\u5458\u65b9\u6cd5\u7684\u5f15\u7528\uff0c\u8bed\u6cd5\u662fClass::method\uff0c\u6ce8\u610f\uff0c\u8fd9\u4e2a\u65b9\u6cd5\u6ca1\u6709\u5b9a\u4e49\u5165\u53c2\uff1a cars . forEach ( Car :: repair ); \u7b2c\u4e09\u79cd\u65b9\u6cd5\u5f15\u7528\u7684\u7c7b\u578b\u662f\u67d0\u4e2a\u7c7b\u7684\u6210\u5458\u65b9\u6cd5\u7684\u5f15\u7528\uff0c\u8bed\u6cd5\u662fClass::method\uff0c\u6ce8\u610f\uff0c\u8fd9\u4e2a\u65b9\u6cd5\u6ca1\u6709\u5b9a\u4e49\u5165\u53c2\uff1a cars . forEach ( Car :: repair ); \u7b2c\u56db\u79cd\u65b9\u6cd5\u5f15\u7528\u7684\u7c7b\u578b\u662f\u67d0\u4e2a\u5b9e\u4f8b\u5bf9\u8c61\u7684\u6210\u5458\u65b9\u6cd5\u7684\u5f15\u7528\uff0c\u8bed\u6cd5\u662finstance::method\u3002\u6ce8\u610f\uff1a\u8fd9\u4e2a\u65b9\u6cd5\u63a5\u53d7\u4e00\u4e2aCar\u7c7b\u578b\u7684\u53c2\u6570\uff1a final Car police = Car . create ( Car :: new ); cars . forEach ( police :: follow ); \u8fd0\u884c\u4e0a\u8ff0\u4f8b\u5b50\uff0c\u53ef\u4ee5\u5728\u63a7\u5236\u53f0\u770b\u5230\u5982\u4e0b\u8f93\u51fa\uff08Car\u5b9e\u4f8b\u53ef\u80fd\u4e0d\u540c\uff09\uff1a Collided com.javacodegeeks.java8.method.references.MethodReferences$Car@7a81197d Repaired com.javacodegeeks.java8.method.references.MethodReferences$Car@7a81197d Following the com.javacodegeeks.java8.method.references.MethodReferences$Car@7a81197d \u5982\u679c\u60f3\u4e86\u89e3\u548c\u5b66\u4e60\u66f4\u8be6\u7ec6\u7684\u5185\u5bb9\uff0c\u53ef\u4ee5\u53c2\u8003 \u5b98\u65b9\u6587\u6863 \u3002","title":"\u65b9\u6cd5\u5f15\u7528"},{"location":"java/feature/#_17","text":"\u81ea\u4eceJava 5\u4e2d\u5f15\u5165\u6ce8\u89e3\u4ee5\u6765\uff0c\u8fd9\u4e2a\u7279\u6027\u5f00\u59cb\u53d8\u5f97\u975e\u5e38\u6d41\u884c\uff0c\u5e76\u5728\u5404\u4e2a\u6846\u67b6\u548c\u9879\u76ee\u4e2d\u88ab\u5e7f\u6cdb\u4f7f\u7528\u3002\u4e0d\u8fc7\uff0c\u6ce8\u89e3\u6709\u4e00\u4e2a\u5f88\u5927\u7684\u9650\u5236\u662f\uff1a\u5728\u540c\u4e00\u4e2a\u5730\u65b9\u4e0d\u80fd\u591a\u6b21\u4f7f\u7528\u540c\u4e00\u4e2a\u6ce8\u89e3\u3002Java 8\u6253\u7834\u4e86\u8fd9\u4e2a\u9650\u5236\uff0c\u5f15\u5165\u4e86\u91cd\u590d\u6ce8\u89e3\u7684\u6982\u5ff5\uff0c\u5141\u8bb8\u5728\u540c\u4e00\u4e2a\u5730\u65b9\u591a\u6b21\u4f7f\u7528\u540c\u4e00\u4e2a\u6ce8\u89e3\u3002 \u5728Java 8\u4e2d\u4f7f\u7528@Repeatable\u6ce8\u89e3\u5b9a\u4e49\u91cd\u590d\u6ce8\u89e3\uff0c\u5b9e\u9645\u4e0a\uff0c\u8fd9\u5e76\u4e0d\u662f\u8bed\u8a00\u5c42\u9762\u7684\u6539\u8fdb\uff0c\u800c\u662f\u7f16\u8bd1\u5668\u505a\u7684\u4e00\u4e2atrick\uff0c\u5e95\u5c42\u7684\u6280\u672f\u4ecd\u7136\u76f8\u540c\u3002\u53ef\u4ee5\u5229\u7528\u4e0b\u9762\u7684\u4ee3\u7801\u8bf4\u660e\uff1a package com.javacodegeeks.java8.repeatable.annotations ; import java.lang.annotation.ElementType ; import java.lang.annotation.Repeatable ; import java.lang.annotation.Retention ; import java.lang.annotation.RetentionPolicy ; import java.lang.annotation.Target ; public class RepeatingAnnotations { @Target ( ElementType . TYPE ) @Retention ( RetentionPolicy . RUNTIME ) public @interface Filters { Filter [] value (); } @Target ( ElementType . TYPE ) @Retention ( RetentionPolicy . RUNTIME ) @Repeatable ( Filters . class ) public @interface Filter { String value (); }; @Filter ( \"filter1\" ) @Filter ( \"filter2\" ) public interface Filterable { } public static void main ( String [] args ) { for ( Filter filter : Filterable . class . getAnnotationsByType ( Filter . class ) ) { System . out . println ( filter . value () ); } } } \u6b63\u5982\u6211\u4eec\u6240\u89c1\uff0c\u8fd9\u91cc\u7684Filter\u7c7b\u4f7f\u7528@Repeatable(Filters.class)\u6ce8\u89e3\u4fee\u9970\uff0c\u800cFilters\u662f\u5b58\u653eFilter\u6ce8\u89e3\u7684\u5bb9\u5668\uff0c\u7f16\u8bd1\u5668\u5c3d\u91cf\u5bf9\u5f00\u53d1\u8005\u5c4f\u853d\u8fd9\u4e9b\u7ec6\u8282\u3002\u8fd9\u6837\uff0cFilterable\u63a5\u53e3\u53ef\u4ee5\u7528\u4e24\u4e2aFilter\u6ce8\u89e3\u6ce8\u91ca\uff08\u8fd9\u91cc\u5e76\u6ca1\u6709\u63d0\u5230\u4efb\u4f55\u5173\u4e8eFilters\u7684\u4fe1\u606f\uff09\u3002 \u53e6\u5916\uff0c\u53cd\u5c04API\u63d0\u4f9b\u4e86\u4e00\u4e2a\u65b0\u7684\u65b9\u6cd5\uff1agetAnnotationsByType()\uff0c\u53ef\u4ee5\u8fd4\u56de\u67d0\u4e2a\u7c7b\u578b\u7684\u91cd\u590d\u6ce8\u89e3\uff0c\u4f8b\u5982Filterable.class.getAnnoation(Filters.class)\u5c06\u8fd4\u56de\u4e24\u4e2aFilter\u5b9e\u4f8b\uff0c\u8f93\u51fa\u5230\u63a7\u5236\u53f0\u7684\u5185\u5bb9\u5982\u4e0b\u6240\u793a\uff1a filter1 filter2 \u5982\u679c\u60f3\u4e86\u89e3\u548c\u5b66\u4e60\u66f4\u8be6\u7ec6\u7684\u5185\u5bb9\uff0c\u53ef\u4ee5\u53c2\u8003 \u5b98\u65b9\u6587\u6863 \u3002","title":"\u91cd\u590d\u6ce8\u89e3"},{"location":"java/feature/#_18","text":"Java 8\u7f16\u8bd1\u5668\u5728\u7c7b\u578b\u63a8\u65ad\u65b9\u9762\u6709\u5f88\u5927\u7684\u63d0\u5347\uff0c\u5728\u5f88\u591a\u573a\u666f\u4e0b\u7f16\u8bd1\u5668\u53ef\u4ee5\u63a8\u5bfc\u51fa\u67d0\u4e2a\u53c2\u6570\u7684\u6570\u636e\u7c7b\u578b\uff0c\u4ece\u800c\u4f7f\u5f97\u4ee3\u7801\u66f4\u4e3a\u7b80\u6d01\u3002\u4f8b\u5b50\u4ee3\u7801\u5982\u4e0b\uff1a package com.javacodegeeks.java8.type.inference ; public class Value < T > { public static < T > T defaultValue () { return null ; } public T getOrDefault ( T value , T defaultValue ) { return ( value != null ) ? value : defaultValue ; } } \u4e0b\u5217\u4ee3\u7801\u662fValue \u7c7b\u578b\u7684\u5e94\u7528\uff1a package com.javacodegeeks.java8.type.inference ; public class TypeInference { public static void main ( String [] args ) { final Value < String > value = new Value <>(); value . getOrDefault ( \"22\" , Value . defaultValue () ); } } \u53c2\u6570Value.defaultValue()\u7684\u7c7b\u578b\u7531\u7f16\u8bd1\u5668\u63a8\u5bfc\u5f97\u51fa\uff0c\u4e0d\u9700\u8981\u663e\u5f0f\u6307\u660e\u3002\u5728Java 7\u4e2d\u8fd9\u6bb5\u4ee3\u7801\u4f1a\u6709\u7f16\u8bd1\u9519\u8bef\uff0c\u9664\u975e\u4f7f\u7528Value. defaultValue()\u3002","title":"\u66f4\u597d\u7684\u7c7b\u578b\u63a8\u65ad"},{"location":"java/feature/#_19","text":"Java 8\u62d3\u5bbd\u4e86\u6ce8\u89e3\u7684\u5e94\u7528\u573a\u666f\u3002\u73b0\u5728\uff0c\u6ce8\u89e3\u51e0\u4e4e\u53ef\u4ee5\u4f7f\u7528\u5728\u4efb\u4f55\u5143\u7d20\u4e0a\uff1a\u5c40\u90e8\u53d8\u91cf\u3001\u63a5\u53e3\u7c7b\u578b\u3001\u8d85\u7c7b\u548c\u63a5\u53e3\u5b9e\u73b0\u7c7b\uff0c\u751a\u81f3\u53ef\u4ee5\u7528\u5728\u51fd\u6570\u7684\u5f02\u5e38\u5b9a\u4e49\u4e0a\u3002\u4e0b\u9762\u662f\u4e00\u4e9b\u4f8b\u5b50\uff1a package com.javacodegeeks.java8.annotations ; import java.lang.annotation.ElementType ; import java.lang.annotation.Retention ; import java.lang.annotation.RetentionPolicy ; import java.lang.annotation.Target ; import java.util.ArrayList ; import java.util.Collection ; public class Annotations { @Retention ( RetentionPolicy . RUNTIME ) @Target ( { ElementType . TYPE_USE , ElementType . TYPE_PARAMETER } ) public @interface NonEmpty { } public static class Holder < @NonEmpty T > extends @NonEmpty Object { public void method () throws @NonEmpty Exception { } } @SuppressWarnings ( \"unused\" ) public static void main ( String [] args ) { final Holder < String > holder = new @NonEmpty Holder < String >(); @NonEmpty Collection < @NonEmpty String > strings = new ArrayList <>(); } } ElementType.TYPE_USER\u548cElementType.TYPE_PARAMETER\u662fJava 8\u65b0\u589e\u7684\u4e24\u4e2a\u6ce8\u89e3\uff0c\u7528\u4e8e\u63cf\u8ff0\u6ce8\u89e3\u7684\u4f7f\u7528\u573a\u666f\u3002Java \u8bed\u8a00\u4e5f\u505a\u4e86\u5bf9\u5e94\u7684\u6539\u53d8\uff0c\u4ee5\u8bc6\u522b\u8fd9\u4e9b\u65b0\u589e\u7684\u6ce8\u89e3\u3002","title":"\u62d3\u5bbd\u6ce8\u89e3\u7684\u5e94\u7528\u573a\u666f"},{"location":"java/feature/#java_1","text":"\u4e3a\u4e86\u5728\u8fd0\u884c\u65f6\u83b7\u5f97Java\u7a0b\u5e8f\u4e2d\u65b9\u6cd5\u7684\u53c2\u6570\u540d\u79f0\uff0c\u8001\u4e00\u8f88\u7684Java\u7a0b\u5e8f\u5458\u5fc5\u987b\u4f7f\u7528\u4e0d\u540c\u65b9\u6cd5\uff0c\u4f8b\u5982Paranamer library\u3002Java 8\u7ec8\u4e8e\u5c06\u8fd9\u4e2a\u7279\u6027\u89c4\u8303\u5316\uff0c\u5728\u8bed\u8a00\u5c42\u9762\uff08\u4f7f\u7528\u53cd\u5c04API\u548cParameter.getName()\u65b9\u6cd5\uff09\u548c\u5b57\u8282\u7801\u5c42\u9762\uff08\u4f7f\u7528\u65b0\u7684javac\u7f16\u8bd1\u5668\u4ee5\u53ca-parameters\u53c2\u6570\uff09\u63d0\u4f9b\u652f\u6301\u3002 package com.javacodegeeks.java8.parameter.names ; import java.lang.reflect.Method ; import java.lang.reflect.Parameter ; public class ParameterNames { public static void main ( String [] args ) throws Exception { Method method = ParameterNames . class . getMethod ( \"main\" , String []. class ); for ( final Parameter parameter : method . getParameters () ) { System . out . println ( \"Parameter: \" + parameter . getName () ); } } } \u5728Java 8\u4e2d\u8fd9\u4e2a\u7279\u6027\u662f\u9ed8\u8ba4\u5173\u95ed\u7684\uff0c\u56e0\u6b64\u5982\u679c\u4e0d\u5e26-parameters\u53c2\u6570\u7f16\u8bd1\u4e0a\u8ff0\u4ee3\u7801\u5e76\u8fd0\u884c\uff0c\u5219\u4f1a\u8f93\u51fa\u5982\u4e0b\u7ed3\u679c\uff1a Parameter: arg0 \u5982\u679c\u5e26-parameters\u53c2\u6570\uff0c\u5219\u4f1a\u8f93\u51fa\u5982\u4e0b\u7ed3\u679c\uff08\u6b63\u786e\u7684\u7ed3\u679c\uff09\uff1a Parameter: args \u5982\u679c\u4f60\u4f7f\u7528Maven\u8fdb\u884c\u9879\u76ee\u7ba1\u7406\uff0c\u5219\u53ef\u4ee5\u5728maven-compiler-plugin\u7f16\u8bd1\u5668\u7684\u914d\u7f6e\u9879\u4e2d\u914d\u7f6e-parameters\u53c2\u6570\uff1a <plugin> <groupId>org.apache.maven.plugins</groupId> <artifactId>maven-compiler-plugin</artifactId> <version>3.1</version> <configuration> <compilerArgument>-parameters</compilerArgument> <source>1.8</source> <target>1.8</target> </configuration> </plugin>","title":"Java\u7f16\u8bd1\u5668\u7684\u65b0\u7279\u6027"},{"location":"java/feature/#optional","text":"Java\u5e94\u7528\u4e2d\u6700\u5e38\u89c1\u7684bug\u5c31\u662f\u7a7a\u503c\u5f02\u5e38\u3002\u5728Java 8\u4e4b\u524d\uff0cGoogle Guava\u5f15\u5165\u4e86Optionals\u7c7b\u6765\u89e3\u51b3NullPointerException\uff0c\u4ece\u800c\u907f\u514d\u6e90\u7801\u88ab\u5404\u79cdnull\u68c0\u67e5\u6c61\u67d3\uff0c\u4ee5\u4fbf\u5f00\u53d1\u8005\u5199\u51fa\u66f4\u52a0\u6574\u6d01\u7684\u4ee3\u7801\u3002Java 8\u4e5f\u5c06Optional\u52a0\u5165\u4e86\u5b98\u65b9\u5e93\u3002 Optional\u4ec5\u4ec5\u662f\u4e00\u4e2a\u5bb9\u5668\uff1a\u5b58\u653eT\u7c7b\u578b\u7684\u503c\u6216\u8005null\u3002\u5b83\u63d0\u4f9b\u4e86\u4e00\u4e9b\u6709\u7528\u7684\u63a5\u53e3\u6765\u907f\u514d\u663e\u5f0f\u7684null\u68c0\u67e5\uff0c\u53ef\u4ee5\u53c2\u8003Java 8\u5b98\u65b9\u6587\u6863\u4e86\u89e3\u66f4\u591a\u7ec6\u8282\u3002 \u63a5\u4e0b\u6765\u770b\u4e00\u70b9\u4f7f\u7528Optional\u7684\u4f8b\u5b50\uff1a\u53ef\u80fd\u4e3a\u7a7a\u7684\u503c\u6216\u8005\u67d0\u4e2a\u7c7b\u578b\u7684\u503c\uff1a Optional < String > fullName = Optional . ofNullable ( null ); System . out . println ( \"Full Name is set? \" + fullName . isPresent () ); System . out . println ( \"Full Name: \" + fullName . orElseGet ( () -> \"[none]\" ) ); System . out . println ( fullName . map ( s -> \"Hey \" + s + \"!\" ). orElse ( \"Hey Stranger!\" ) ); \u5982\u679cOptional\u5b9e\u4f8b\u6301\u6709\u4e00\u4e2a\u975e\u7a7a\u503c\uff0c\u5219isPresent()\u65b9\u6cd5\u8fd4\u56detrue\uff0c\u5426\u5219\u8fd4\u56defalse\uff1borElseGet()\u65b9\u6cd5\uff0cOptional\u5b9e\u4f8b\u6301\u6709null\uff0c\u5219\u53ef\u4ee5\u63a5\u53d7\u4e00\u4e2alambda\u8868\u8fbe\u5f0f\u751f\u6210\u7684\u9ed8\u8ba4\u503c\uff1bmap()\u65b9\u6cd5\u53ef\u4ee5\u5c06\u73b0\u6709\u7684Opetional\u5b9e\u4f8b\u7684\u503c\u8f6c\u6362\u6210\u65b0\u7684\u503c\uff1borElse()\u65b9\u6cd5\u4e0eorElseGet()\u65b9\u6cd5\u7c7b\u4f3c\uff0c\u4f46\u662f\u5728\u6301\u6709null\u7684\u65f6\u5019\u8fd4\u56de\u4f20\u5165\u7684\u9ed8\u8ba4\u503c\u3002 \u4e0a\u8ff0\u4ee3\u7801\u7684\u8f93\u51fa\u7ed3\u679c\u5982\u4e0b\uff1a Full Name is set? false Full Name: [none] Hey Stranger! \u518d\u770b\u4e0b\u53e6\u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\uff1a Optional < String > firstName = Optional . of ( \"Tom\" ); System . out . println ( \"First Name is set? \" + firstName . isPresent () ); System . out . println ( \"First Name: \" + firstName . orElseGet ( () -> \"[none]\" ) ); System . out . println ( firstName . map ( s -> \"Hey \" + s + \"!\" ). orElse ( \"Hey Stranger!\" ) ); System . out . println (); \u5982\u679c\u60f3\u4e86\u89e3\u548c\u5b66\u4e60\u66f4\u8be6\u7ec6\u7684\u5185\u5bb9\uff0c\u53ef\u4ee5\u53c2\u8003 \u5b98\u65b9\u6587\u6863 \u3002","title":"Optional"},{"location":"java/feature/#streams","text":"\u65b0\u589e\u7684Stream API\uff08java.util.stream\uff09\u5c06\u751f\u6210\u73af\u5883\u7684\u51fd\u6570\u5f0f\u7f16\u7a0b\u5f15\u5165\u4e86Java\u5e93\u4e2d\u3002\u8fd9\u662f\u76ee\u524d\u4e3a\u6b62\u6700\u5927\u7684\u4e00\u6b21\u5bf9Java\u5e93\u7684\u5b8c\u5584\uff0c\u4ee5\u4fbf\u5f00\u53d1\u8005\u80fd\u591f\u5199\u51fa\u66f4\u52a0\u6709\u6548\u3001\u66f4\u52a0\u7b80\u6d01\u548c\u7d27\u51d1\u7684\u4ee3\u7801\u3002 Steam API\u6781\u5927\u5f97\u7b80\u5316\u4e86\u96c6\u5408\u64cd\u4f5c\uff08\u540e\u9762\u6211\u4eec\u4f1a\u770b\u5230\u4e0d\u6b62\u662f\u96c6\u5408\uff09\uff0c\u9996\u5148\u770b\u4e0b\u8fd9\u4e2a\u53ebTask\u7684\u7c7b\uff1a public class Streams { private enum Status { OPEN , CLOSED }; private static final class Task { private final Status status ; private final Integer points ; Task ( final Status status , final Integer points ) { this . status = status ; this . points = points ; } public Integer getPoints () { return points ; } public Status getStatus () { return status ; } @Override public String toString () { return String . format ( \"[%s, %d]\" , status , points ); } } } Task\u7c7b\u6709\u4e00\u4e2a\u5206\u6570\uff08\u6216\u4f2a\u590d\u6742\u5ea6\uff09\u7684\u6982\u5ff5\uff0c\u53e6\u5916\u8fd8\u6709\u4e24\u79cd\u72b6\u6001\uff1aOPEN\u6216\u8005CLOSED\u3002\u73b0\u5728\u5047\u8bbe\u6709\u4e00\u4e2atask\u96c6\u5408\uff1a final Collection < Task > tasks = Arrays . asList ( new Task ( Status . OPEN , 5 ), new Task ( Status . OPEN , 13 ), new Task ( Status . CLOSED , 8 ) ); \u9996\u5148\u770b\u4e00\u4e2a\u95ee\u9898\uff1a\u5728\u8fd9\u4e2atask\u96c6\u5408\u4e2d\u4e00\u5171\u6709\u591a\u5c11\u4e2aOPEN\u72b6\u6001\u7684\u70b9\uff1f\u5728Java 8\u4e4b\u524d\uff0c\u8981\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u5219\u9700\u8981\u4f7f\u7528foreach\u5faa\u73af\u904d\u5386task\u96c6\u5408\uff1b\u4f46\u662f\u5728Java 8\u4e2d\u53ef\u4ee5\u5229\u7528steams\u89e3\u51b3\uff1a\u5305\u62ec\u4e00\u7cfb\u5217\u5143\u7d20\u7684\u5217\u8868\uff0c\u5e76\u4e14\u652f\u6301\u987a\u5e8f\u548c\u5e76\u884c\u5904\u7406\u3002 // Calculate total points of all active tasks using sum() final long totalPointsOfOpenTasks = tasks . stream () . filter ( task -> task . getStatus () == Status . OPEN ) . mapToInt ( Task :: getPoints ) . sum (); System . out . println ( \"Total points: \" + totalPointsOfOpenTasks ); \u8fd0\u884c\u8fd9\u4e2a\u65b9\u6cd5\u7684\u63a7\u5236\u53f0\u8f93\u51fa\u662f\uff1a Total points: 18 \u8fd9\u91cc\u6709\u5f88\u591a\u77e5\u8bc6\u70b9\u503c\u5f97\u8bf4\u3002\u9996\u5148\uff0ctasks\u96c6\u5408\u88ab\u8f6c\u6362\u6210steam\u8868\u793a\uff1b\u5176\u6b21\uff0c\u5728steam\u4e0a\u7684filter\u64cd\u4f5c\u4f1a\u8fc7\u6ee4\u6389\u6240\u6709CLOSED\u7684task\uff1b\u7b2c\u4e09\uff0cmapToInt\u64cd\u4f5c\u57fa\u4e8e\u6bcf\u4e2atask\u5b9e\u4f8b\u7684Task::getPoints\u65b9\u6cd5\u5c06task\u6d41\u8f6c\u6362\u6210Integer\u96c6\u5408\uff1b\u6700\u540e\uff0c\u901a\u8fc7sum\u65b9\u6cd5\u8ba1\u7b97\u603b\u548c\uff0c\u5f97\u51fa\u6700\u540e\u7684\u7ed3\u679c\u3002 \u5728\u5b66\u4e60\u4e0b\u4e00\u4e2a\u4f8b\u5b50\u4e4b\u524d\uff0c\u8fd8\u9700\u8981\u8bb0\u4f4f\u4e00\u4e9bsteams\uff08 \u70b9\u6b64\u66f4\u591a\u7ec6\u8282 \uff09\u7684\u77e5\u8bc6\u70b9\u3002Steam\u4e4b\u4e0a\u7684\u64cd\u4f5c\u53ef\u5206\u4e3a\u4e2d\u95f4\u64cd\u4f5c\u548c\u665a\u671f\u64cd\u4f5c\u3002 \u4e2d\u95f4\u64cd\u4f5c\u4f1a\u8fd4\u56de\u4e00\u4e2a\u65b0\u7684steam\u2014\u2014\u6267\u884c\u4e00\u4e2a\u4e2d\u95f4\u64cd\u4f5c\uff08\u4f8b\u5982filter\uff09\u5e76\u4e0d\u4f1a\u6267\u884c\u5b9e\u9645\u7684\u8fc7\u6ee4\u64cd\u4f5c\uff0c\u800c\u662f\u521b\u5efa\u4e00\u4e2a\u65b0\u7684steam\uff0c\u5e76\u5c06\u539fsteam\u4e2d\u7b26\u5408\u6761\u4ef6\u7684\u5143\u7d20\u653e\u5165\u65b0\u521b\u5efa\u7684steam\u3002 \u665a\u671f\u64cd\u4f5c\uff08\u4f8b\u5982forEach\u6216\u8005sum\uff09\uff0c\u4f1a\u904d\u5386steam\u5e76\u5f97\u51fa\u7ed3\u679c\u6216\u8005\u9644\u5e26\u7ed3\u679c\uff1b\u5728\u6267\u884c\u665a\u671f\u64cd\u4f5c\u4e4b\u540e\uff0csteam\u5904\u7406\u7ebf\u5df2\u7ecf\u5904\u7406\u5b8c\u6bd5\uff0c\u5c31\u4e0d\u80fd\u4f7f\u7528\u4e86\u3002\u5728\u51e0\u4e4e\u6240\u6709\u60c5\u51b5\u4e0b\uff0c\u665a\u671f\u64cd\u4f5c\u90fd\u662f\u7acb\u523b\u5bf9steam\u8fdb\u884c\u904d\u5386\u3002 steam\u7684\u53e6\u4e00\u4e2a\u4ef7\u503c\u662f\u521b\u9020\u6027\u5730\u652f\u6301\u5e76\u884c\u5904\u7406\uff08parallel processing\uff09\u3002\u5bf9\u4e8e\u4e0a\u8ff0\u7684tasks\u96c6\u5408\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u4e0b\u9762\u7684\u4ee3\u7801\u8ba1\u7b97\u6240\u6709\u4efb\u52a1\u7684\u70b9\u6570\u4e4b\u548c\uff1a // Calculate total points of all tasks final double totalPoints = tasks . stream () . parallel () . map ( task -> task . getPoints () ) // or map( Task::getPoints ) . reduce ( 0 , Integer :: sum ); System . out . println ( \"Total points (all tasks): \" + totalPoints ); \u8fd9\u91cc\u6211\u4eec\u4f7f\u7528parallel\u65b9\u6cd5\u5e76\u884c\u5904\u7406\u6240\u6709\u7684task\uff0c\u5e76\u4f7f\u7528reduce\u65b9\u6cd5\u8ba1\u7b97\u6700\u7ec8\u7684\u7ed3\u679c\u3002\u63a7\u5236\u53f0\u8f93\u51fa\u5982\u4e0b\uff1a Total points\uff08all tasks\uff09: 26.0 \u5bf9\u4e8e\u4e00\u4e2a\u96c6\u5408\uff0c\u7ecf\u5e38\u9700\u8981\u6839\u636e\u67d0\u4e9b\u6761\u4ef6\u5bf9\u5176\u4e2d\u7684\u5143\u7d20\u5206\u7ec4\u3002\u5229\u7528steam\u63d0\u4f9b\u7684API\u53ef\u4ee5\u5f88\u5feb\u5b8c\u6210\u8fd9\u7c7b\u4efb\u52a1\uff0c\u4ee3\u7801\u5982\u4e0b\uff1a // Group tasks by their status final Map < Status , List < Task > > map = tasks . stream () . collect ( Collectors . groupingBy ( Task :: getStatus ) ); System . out . println ( map ); \u63a7\u5236\u53f0\u7684\u8f93\u51fa\u5982\u4e0b\uff1a {CLOSED=[[CLOSED, 8]], OPEN=[[OPEN, 5], [OPEN, 13]]} \u6700\u540e\u4e00\u4e2a\u5173\u4e8etasks\u96c6\u5408\u7684\u4f8b\u5b50\u95ee\u9898\u662f\uff1a\u5982\u4f55\u8ba1\u7b97\u96c6\u5408\u4e2d\u6bcf\u4e2a\u4efb\u52a1\u7684\u70b9\u6570\u5728\u96c6\u5408\u4e2d\u6240\u5360\u7684\u6bd4\u91cd\uff0c\u5177\u4f53\u5904\u7406\u7684\u4ee3\u7801\u5982\u4e0b\uff1a // Calculate the weight of each tasks (as percent of total points) final Collection < String > result = tasks . stream () // Stream< String > . mapToInt ( Task :: getPoints ) // IntStream . asLongStream () // LongStream . mapToDouble ( points -> points / totalPoints ) // DoubleStream . boxed () // Stream< Double > . mapToLong ( weigth -> ( long )( weigth * 100 ) ) // LongStream . mapToObj ( percentage -> percentage + \"%\" ) // Stream< String> . collect ( Collectors . toList () ); // List< String > System . out . println ( result ); \u63a7\u5236\u53f0\u8f93\u51fa\u7ed3\u679c\u5982\u4e0b\uff1a [19%, 50%, 30%] \u6700\u540e\uff0c\u6b63\u5982\u4e4b\u524d\u6240\u8bf4\uff0cSteam API\u4e0d\u4ec5\u53ef\u4ee5\u4f5c\u7528\u4e8eJava\u96c6\u5408\uff0c\u4f20\u7edf\u7684IO\u64cd\u4f5c\uff08\u4ece\u6587\u4ef6\u6216\u8005\u7f51\u7edc\u4e00\u884c\u4e00\u884c\u5f97\u8bfb\u53d6\u6570\u636e\uff09\u53ef\u4ee5\u53d7\u76ca\u4e8esteam\u5904\u7406\uff0c\u8fd9\u91cc\u6709\u4e00\u4e2a\u5c0f\u4f8b\u5b50\uff1a final Path path = new File ( filename ). toPath (); try ( Stream < String > lines = Files . lines ( path , StandardCharsets . UTF_8 ) ) { lines . onClose ( () -> System . out . println ( \"Done!\" ) ). forEach ( System . out :: println ); } Stream\u7684\u65b9\u6cd5onClose \u8fd4\u56de\u4e00\u4e2a\u7b49\u4ef7\u7684\u6709\u989d\u5916\u53e5\u67c4\u7684Stream\uff0c\u5f53Stream\u7684close\uff08\uff09\u65b9\u6cd5\u88ab\u8c03\u7528\u7684\u65f6\u5019\u8fd9\u4e2a\u53e5\u67c4\u4f1a\u88ab\u6267\u884c\u3002Stream API\u3001Lambda\u8868\u8fbe\u5f0f\u8fd8\u6709\u63a5\u53e3\u9ed8\u8ba4\u65b9\u6cd5\u548c\u9759\u6001\u65b9\u6cd5\u652f\u6301\u7684\u65b9\u6cd5\u5f15\u7528\uff0c\u662fJava 8\u5bf9\u8f6f\u4ef6\u5f00\u53d1\u7684\u73b0\u4ee3\u8303\u5f0f\u7684\u54cd\u5e94\u3002 \u70b9\u6b64\u66f4\u591a\u7ec6\u8282","title":"Streams"},{"location":"java/feature/#datetime-apijsr-310","text":"Java 8\u5f15\u5165\u4e86\u65b0\u7684Date-Time API(JSR 310)\u6765\u6539\u8fdb\u65f6\u95f4\u3001\u65e5\u671f\u7684\u5904\u7406\u3002\u65f6\u95f4\u548c\u65e5\u671f\u7684\u7ba1\u7406\u4e00\u76f4\u662f\u6700\u4ee4Java\u5f00\u53d1\u8005\u75db\u82e6\u7684\u95ee\u9898\u3002java.util.Date\u548c\u540e\u6765\u7684java.util.Calendar\u4e00\u76f4\u6ca1\u6709\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff08\u751a\u81f3\u4ee4\u5f00\u53d1\u8005\u66f4\u52a0\u8ff7\u832b\uff09\u3002 \u56e0\u4e3a\u4e0a\u9762\u8fd9\u4e9b\u539f\u56e0\uff0c\u8bde\u751f\u4e86\u7b2c\u4e09\u65b9\u5e93Joda-Time\uff0c\u53ef\u4ee5\u66ff\u4ee3Java\u7684\u65f6\u95f4\u7ba1\u7406API\u3002Java 8\u4e2d\u65b0\u7684\u65f6\u95f4\u548c\u65e5\u671f\u7ba1\u7406API\u6df1\u53d7Joda-Time\u5f71\u54cd\uff0c\u5e76\u5438\u6536\u4e86\u5f88\u591aJoda-Time\u7684\u7cbe\u534e\u3002\u65b0\u7684java.time\u5305\u5305\u542b\u4e86\u6240\u6709\u5173\u4e8e\u65e5\u671f\u3001\u65f6\u95f4\u3001\u65f6\u533a\u3001Instant\uff08\u8ddf\u65e5\u671f\u7c7b\u4f3c\u4f46\u662f\u7cbe\u786e\u5230\u7eb3\u79d2\uff09\u3001duration\uff08\u6301\u7eed\u65f6\u95f4\uff09\u548c\u65f6\u949f\u64cd\u4f5c\u7684\u7c7b\u3002\u65b0\u8bbe\u8ba1\u7684API\u8ba4\u771f\u8003\u8651\u4e86\u8fd9\u4e9b\u7c7b\u7684\u4e0d\u53d8\u6027\uff08\u4ecejava.util.Calendar\u5438\u53d6\u7684\u6559\u8bad\uff09\uff0c\u5982\u679c\u67d0\u4e2a\u5b9e\u4f8b\u9700\u8981\u4fee\u6539\uff0c\u5219\u8fd4\u56de\u4e00\u4e2a\u65b0\u7684\u5bf9\u8c61\u3002 \u6211\u4eec\u63a5\u4e0b\u6765\u770b\u770bjava.time\u5305\u4e2d\u7684\u5173\u952e\u7c7b\u548c\u5404\u81ea\u7684\u4f7f\u7528\u4f8b\u5b50\u3002\u9996\u5148\uff0cClock\u7c7b\u4f7f\u7528\u65f6\u533a\u6765\u8fd4\u56de\u5f53\u524d\u7684\u7eb3\u79d2\u65f6\u95f4\u548c\u65e5\u671f\u3002Clock\u53ef\u4ee5\u66ff\u4ee3System.currentTimeMillis()\u548cTimeZone.getDefault()\u3002 // Get the system clock as UTC offset final Clock clock = Clock . systemUTC (); System . out . println ( clock . instant () ); System . out . println ( clock . millis () ); \u8fd9\u4e2a\u4f8b\u5b50\u7684\u8f93\u51fa\u7ed3\u679c\u662f\uff1a 2014-04-12T15:19:29.282Z 1397315969360 \u7b2c\u4e8c\uff0c\u5173\u6ce8\u4e0bLocalDate\u548cLocalTime\u7c7b\u3002LocalDate\u4ec5\u4ec5\u5305\u542bISO-8601\u65e5\u5386\u7cfb\u7edf\u4e2d\u7684\u65e5\u671f\u90e8\u5206\uff1bLocalTime\u5219\u4ec5\u4ec5\u5305\u542b\u8be5\u65e5\u5386\u7cfb\u7edf\u4e2d\u7684\u65f6\u95f4\u90e8\u5206\u3002\u8fd9\u4e24\u4e2a\u7c7b\u7684\u5bf9\u8c61\u90fd\u53ef\u4ee5\u4f7f\u7528Clock\u5bf9\u8c61\u6784\u5efa\u5f97\u5230\u3002 // Get the local date and local time final LocalDate date = LocalDate . now (); final LocalDate dateFromClock = LocalDate . now ( clock ); System . out . println ( date ); System . out . println ( dateFromClock ); // Get the local date and local time final LocalTime time = LocalTime . now (); final LocalTime timeFromClock = LocalTime . now ( clock ); System . out . println ( time ); System . out . println ( timeFromClock ); \u4e0a\u8ff0\u4f8b\u5b50\u7684\u8f93\u51fa\u7ed3\u679c\u5982\u4e0b\uff1a 2014-04-12 2014-04-12 11:25:54.568 15:25:54.568 LocalDateTime\u7c7b\u5305\u542b\u4e86LocalDate\u548cLocalTime\u7684\u4fe1\u606f\uff0c\u4f46\u662f\u4e0d\u5305\u542bISO-8601\u65e5\u5386\u7cfb\u7edf\u4e2d\u7684\u65f6\u533a\u4fe1\u606f\u3002\u8fd9\u91cc\u6709\u4e00\u4e9b\u5173\u4e8eLocalDate\u548cLocalTime\u7684\u4f8b\u5b50\uff1a // Get the local date/time final LocalDateTime datetime = LocalDateTime . now (); final LocalDateTime datetimeFromClock = LocalDateTime . now ( clock ); System . out . println ( datetime ); System . out . println ( datetimeFromClock ); \u4e0a\u8ff0\u8fd9\u4e2a\u4f8b\u5b50\u7684\u8f93\u51fa\u7ed3\u679c\u5982\u4e0b\uff1a 2014-04-12T11:37:52.309 2014-04-12T15:37:52.309 \u5982\u679c\u4f60\u9700\u8981\u7279\u5b9a\u65f6\u533a\u7684data/time\u4fe1\u606f\uff0c\u5219\u53ef\u4ee5\u4f7f\u7528ZoneDateTime\uff0c\u5b83\u4fdd\u5b58\u6709ISO-8601\u65e5\u671f\u7cfb\u7edf\u7684\u65e5\u671f\u548c\u65f6\u95f4\uff0c\u800c\u4e14\u6709\u65f6\u533a\u4fe1\u606f\u3002\u4e0b\u9762\u662f\u4e00\u4e9b\u4f7f\u7528\u4e0d\u540c\u65f6\u533a\u7684\u4f8b\u5b50\uff1a // Get the zoned date/time final ZonedDateTime zonedDatetime = ZonedDateTime . now (); final ZonedDateTime zonedDatetimeFromClock = ZonedDateTime . now ( clock ); final ZonedDateTime zonedDatetimeFromZone = ZonedDateTime . now ( ZoneId . of ( \"America/Los_Angeles\" ) ); System . out . println ( zonedDatetime ); System . out . println ( zonedDatetimeFromClock ); System . out . println ( zonedDatetimeFromZone ); \u8fd9\u4e2a\u4f8b\u5b50\u7684\u8f93\u51fa\u7ed3\u679c\u662f\uff1a 2014-04-12T11:47:01.017-04:00[America/New_York] 2014-04-12T15:47:01.017Z 2014-04-12T08:47:01.017-07:00[America/Los_Angeles] \u6700\u540e\u770b\u4e0bDuration\u7c7b\uff0c\u5b83\u6301\u6709\u7684\u65f6\u95f4\u7cbe\u786e\u5230\u79d2\u548c\u7eb3\u79d2\u3002\u8fd9\u4f7f\u5f97\u6211\u4eec\u53ef\u4ee5\u5f88\u5bb9\u6613\u5f97\u8ba1\u7b97\u4e24\u4e2a\u65e5\u671f\u4e4b\u95f4\u7684\u4e0d\u540c\uff0c\u4f8b\u5b50\u4ee3\u7801\u5982\u4e0b\uff1a // Get duration between two dates final LocalDateTime from = LocalDateTime . of ( 2014 , Month . APRIL , 16 , 0 , 0 , 0 ); final LocalDateTime to = LocalDateTime . of ( 2015 , Month . APRIL , 16 , 23 , 59 , 59 ); final Duration duration = Duration . between ( from , to ); System . out . println ( \"Duration in days: \" + duration . toDays () ); System . out . println ( \"Duration in hours: \" + duration . toHours () ); \u8fd9\u4e2a\u4f8b\u5b50\u7528\u4e8e\u8ba1\u7b972014\u5e744\u670816\u65e5\u548c2015\u5e744\u670816\u65e5\u4e4b\u95f4\u7684\u5929\u6570\u548c\u5c0f\u65f6\u6570\uff0c\u8f93\u51fa\u7ed3\u679c\u5982\u4e0b\uff1a Duration in days: 365 Duration in hours: 8783 \u5bf9\u4e8eJava 8\u7684\u65b0\u65e5\u671f\u65f6\u95f4\u7684\u603b\u4f53\u5370\u8c61\u8fd8\u662f\u6bd4\u8f83\u79ef\u6781\u7684\uff0c\u4e00\u90e8\u5206\u662f\u56e0\u4e3aJoda-Time\u7684\u79ef\u6781\u5f71\u54cd\uff0c\u53e6\u4e00\u90e8\u5206\u662f\u56e0\u4e3a\u5b98\u65b9\u7ec8\u4e8e\u542c\u53d6\u4e86\u5f00\u53d1\u4eba\u5458\u7684\u9700\u6c42\u3002\u5982\u679c\u60f3\u4e86\u89e3\u548c\u5b66\u4e60\u66f4\u8be6\u7ec6\u7684\u5185\u5bb9\uff0c\u53ef\u4ee5\u53c2\u8003 \u5b98\u65b9\u6587\u6863 \u3002","title":"Date/Time API(JSR 310)"},{"location":"java/feature/#nashorn-javascript","text":"Java 8\u63d0\u4f9b\u4e86\u65b0\u7684Nashorn JavaScript\u5f15\u64ce\uff0c\u4f7f\u5f97\u6211\u4eec\u53ef\u4ee5\u5728JVM\u4e0a\u5f00\u53d1\u548c\u8fd0\u884cJS\u5e94\u7528\u3002Nashorn JavaScript\u5f15\u64ce\u662fjavax.script.ScriptEngine\u7684\u53e6\u4e00\u4e2a\u5b9e\u73b0\u7248\u672c\uff0c\u8fd9\u7c7bScript\u5f15\u64ce\u9075\u5faa\u76f8\u540c\u7684\u89c4\u5219\uff0c\u5141\u8bb8Java\u548cJavaScript\u4ea4\u4e92\u4f7f\u7528\uff0c\u4f8b\u5b50\u4ee3\u7801\u5982\u4e0b\uff1a ScriptEngineManager manager = new ScriptEngineManager (); ScriptEngine engine = manager . getEngineByName ( \"JavaScript\" ); System . out . println ( engine . getClass (). getName () ); System . out . println ( \"Result:\" + engine . eval ( \"function f() { return 1; }; f() + 1;\" ) ); \u8fd9\u4e2a\u4ee3\u7801\u7684\u8f93\u51fa\u7ed3\u679c\u5982\u4e0b\uff1a jdk.nashorn.api.scripting.NashornScriptEngine Result: 2","title":"Nashorn JavaScript\u5f15\u64ce"},{"location":"java/feature/#base64","text":"\u5bf9Base64\u7f16\u7801\u7684\u652f\u6301\u5df2\u7ecf\u88ab\u52a0\u5165\u5230Java 8\u5b98\u65b9\u5e93\u4e2d\uff0c\u8fd9\u6837\u4e0d\u9700\u8981\u4f7f\u7528\u7b2c\u4e09\u65b9\u5e93\u5c31\u53ef\u4ee5\u8fdb\u884cBase64\u7f16\u7801\uff0c\u4f8b\u5b50\u4ee3\u7801\u5982\u4e0b\uff1a package com.javacodegeeks.java8.base64 ; import java.nio.charset.StandardCharsets ; import java.util.Base64 ; public class Base64s { public static void main ( String [] args ) { final String text = \"Base64 finally in Java 8!\" ; final String encoded = Base64 . getEncoder () . encodeToString ( text . getBytes ( StandardCharsets . UTF_8 ) ); System . out . println ( encoded ); final String decoded = new String ( Base64 . getDecoder (). decode ( encoded ), StandardCharsets . UTF_8 ); System . out . println ( decoded ); } } \u8fd9\u4e2a\u4f8b\u5b50\u7684\u8f93\u51fa\u7ed3\u679c\u5982\u4e0b\uff1a QmFzZTY0IGZpbmFsbHkgaW4gSmF2YSA4IQ== Base64 finally in Java 8! \u65b0\u7684Base64API\u4e5f\u652f\u6301URL\u548cMINE\u7684\u7f16\u7801\u89e3\u7801\u3002 (Base64.getUrlEncoder() / Base64.getUrlDecoder(), Base64.getMimeEncoder() / Base64.getMimeDecoder())\u3002","title":"Base64"},{"location":"java/feature/#_20","text":"Java8\u7248\u672c\u65b0\u589e\u4e86\u5f88\u591a\u65b0\u7684\u65b9\u6cd5\uff0c\u7528\u4e8e\u652f\u6301\u5e76\u884c\u6570\u7ec4\u5904\u7406\u3002\u6700\u91cd\u8981\u7684\u65b9\u6cd5\u662fparallelSort()\uff0c\u53ef\u4ee5\u663e\u8457\u52a0\u5feb\u591a\u6838\u673a\u5668\u4e0a\u7684\u6570\u7ec4\u6392\u5e8f\u3002\u4e0b\u9762\u7684\u4f8b\u5b50\u8bba\u8bc1\u4e86parallexXxx\u7cfb\u5217\u7684\u65b9\u6cd5\uff1a package com.javacodegeeks.java8.parallel.arrays ; import java.util.Arrays ; import java.util.concurrent.ThreadLocalRandom ; public class ParallelArrays { public static void main ( String [] args ) { long [] arrayOfLong = new long [ 20000 ]; Arrays . parallelSetAll ( arrayOfLong , index -> ThreadLocalRandom . current (). nextInt ( 1000000 ) ); Arrays . stream ( arrayOfLong ). limit ( 10 ). forEach ( i -> System . out . print ( i + \" \" ) ); System . out . println (); Arrays . parallelSort ( arrayOfLong ); Arrays . stream ( arrayOfLong ). limit ( 10 ). forEach ( i -> System . out . print ( i + \" \" ) ); System . out . println (); } } \u4e0a\u8ff0\u8fd9\u4e9b\u4ee3\u7801\u4f7f\u7528parallelSetAll()\u65b9\u6cd5\u751f\u621020000\u4e2a\u968f\u673a\u6570\uff0c\u7136\u540e\u4f7f\u7528parallelSort()\u65b9\u6cd5\u8fdb\u884c\u6392\u5e8f\u3002\u8fd9\u4e2a\u7a0b\u5e8f\u4f1a\u8f93\u51fa\u4e71\u5e8f\u6570\u7ec4\u548c\u6392\u5e8f\u6570\u7ec4\u7684\u524d10\u4e2a\u5143\u7d20\u3002\u4e0a\u8ff0\u4f8b\u5b50\u7684\u4ee3\u7801\u8f93\u51fa\u7684\u7ed3\u679c\u662f\uff1a Unsorted: 591217 891976 443951 424479 766825 351964 242997 642839 119108 552378 Sorted: 39 220 263 268 325 607 655 678 723 793","title":"\u5e76\u884c\u6570\u7ec4"},{"location":"java/feature/#_21","text":"\u57fa\u4e8e\u65b0\u589e\u7684lambda\u8868\u8fbe\u5f0f\u548csteam\u7279\u6027\uff0c\u4e3aJava 8\u4e2d\u4e3ajava.util.concurrent.ConcurrentHashMap\u7c7b\u6dfb\u52a0\u4e86\u65b0\u7684\u65b9\u6cd5\u6765\u652f\u6301\u805a\u7126\u64cd\u4f5c\uff1b\u53e6\u5916\uff0c\u4e5f\u4e3ajava.util.concurrentForkJoinPool\u7c7b\u6dfb\u52a0\u4e86\u65b0\u7684\u65b9\u6cd5\u6765\u652f\u6301\u901a\u7528\u7ebf\u7a0b\u6c60\u64cd\u4f5c Java 8\u8fd8\u6dfb\u52a0\u4e86\u65b0\u7684java.util.concurrent.locks.StampedLock\u7c7b\uff0c\u7528\u4e8e\u652f\u6301\u57fa\u4e8e\u5bb9\u91cf\u7684\u9501\u2014\u2014\u8be5\u9501\u6709\u4e09\u4e2a\u6a21\u578b\u7528\u4e8e\u652f\u6301\u8bfb\u5199\u64cd\u4f5c\uff08\u53ef\u4ee5\u628a\u8fd9\u4e2a\u9501\u5f53\u505a\u662fjava.util.concurrent.locks.ReadWriteLock\u7684\u66ff\u4ee3\u8005\uff09\u3002 \u5728java.util.concurrent.atomic\u5305\u4e2d\u4e5f\u65b0\u589e\u4e86\u4e0d\u5c11\u5de5\u5177\u7c7b\uff0c\u5217\u4e3e\u5982\u4e0b\uff1a DoubleAccumulator DoubleAdder LongAccumulator LongAdder","title":"\u5e76\u53d1\u6027"},{"location":"java/feature/#java_2","text":"","title":"\u65b0\u7684Java\u5de5\u5177"},{"location":"java/feature/#nashornjjs","text":"jjs\u662f\u4e00\u4e2a\u57fa\u4e8e\u6807\u51c6Nashorn\u5f15\u64ce\u7684\u547d\u4ee4\u884c\u5de5\u5177\uff0c\u53ef\u4ee5\u63a5\u53d7js\u6e90\u7801\u5e76\u6267\u884c\u3002\u4f8b\u5982\uff0c\u6211\u4eec\u5199\u4e00\u4e2afunc.js\u6587\u4ef6\uff0c\u5185\u5bb9\u5982\u4e0b\uff1a function f () { return 1 ; }; print ( f () + 1 ); \u53ef\u4ee5\u5728\u547d\u4ee4\u884c\u4e2d\u6267\u884c\u8fd9\u4e2a\u547d\u4ee4\uff1ajjs func.js\uff0c\u63a7\u5236\u53f0\u8f93\u51fa\u7ed3\u679c\u662f\uff1a 2 \u5982\u679c\u9700\u8981\u4e86\u89e3\u7ec6\u8282\uff0c\u53ef\u4ee5\u53c2\u8003 \u5b98\u65b9\u6587\u6863 \u3002","title":"Nashorn\u5f15\u64ce\uff1ajjs"},{"location":"java/feature/#jdeps","text":"jdeps\u662f\u4e00\u4e2a\u76f8\u5f53\u68d2\u7684\u547d\u4ee4\u884c\u5de5\u5177\uff0c\u5b83\u53ef\u4ee5\u5c55\u793a\u5305\u5c42\u7ea7\u548c\u7c7b\u5c42\u7ea7\u7684Java\u7c7b\u4f9d\u8d56\u5173\u7cfb\uff0c\u5b83\u4ee5.class\u6587\u4ef6\u3001\u76ee\u5f55\u6216\u8005Jar\u6587\u4ef6\u4e3a\u8f93\u5165\uff0c\u7136\u540e\u4f1a\u628a\u4f9d\u8d56\u5173\u7cfb\u8f93\u51fa\u5230\u63a7\u5236\u53f0\u3002 \u6211\u4eec\u53ef\u4ee5\u5229\u7528jedps\u5206\u6790\u4e0bSpring Framework\u5e93\uff0c\u4e3a\u4e86\u8ba9\u7ed3\u679c\u5c11\u4e00\u70b9\uff0c\u4ec5\u4ec5\u5206\u6790\u4e00\u4e2aJAR\u6587\u4ef6\uff1aorg.springframework.core-3.0.5.RELEASE.jar\u3002 jdeps org . springframework . core - 3.0.5 . RELEASE . jar \u8fd9\u4e2a\u547d\u4ee4\u4f1a\u8f93\u51fa\u5f88\u591a\u7ed3\u679c\uff0c\u6211\u4eec\u4ec5\u770b\u4e0b\u5176\u4e2d\u7684\u4e00\u90e8\u5206\uff1a\u4f9d\u8d56\u5173\u7cfb\u6309\u7167\u5305\u5206\u7ec4\uff0c\u5982\u679c\u5728classpath\u4e0a\u627e\u4e0d\u5230\u4f9d\u8d56\uff0c\u5219\u663e\u793a\"not found\". org.springframework.core-3.0.5.RELEASE.jar -> C:\\Program Files\\Java\\jdk1.8.0\\jre\\lib\\rt.jar org.springframework.core (org.springframework.core-3.0.5.RELEASE.jar) -> java.io -> java.lang -> java.lang.annotation -> java.lang.ref -> java.lang.reflect -> java.util -> java.util.concurrent -> org.apache.commons.logging not found -> org.springframework.asm not found -> org.springframework.asm.commons not found org.springframework.core.annotation (org.springframework.core-3.0.5.RELEASE.jar) -> java.lang -> java.lang.annotation -> java.lang.reflect -> java.util \u5982\u679c\u9700\u8981\u4e86\u89e3\u7ec6\u8282\uff0c\u53ef\u4ee5\u53c2\u8003 \u5b98\u65b9\u6587\u6863 \u3002","title":"\u7c7b\u4f9d\u8d56\u5206\u6790\u5668\uff1ajdeps"},{"location":"java/feature/#jvm","text":"\u4f7f\u7528Metaspace\uff08JEP 122\uff09\u4ee3\u66ff\u6301\u4e45\u4ee3\uff08PermGen space\uff09\u3002\u5728JVM\u53c2\u6570\u65b9\u9762\uff0c\u4f7f\u7528-XX:MetaSpaceSize\u548c-XX:MaxMetaspaceSize\u4ee3\u66ff\u539f\u6765\u7684-XX:PermSize\u548c-XX:MaxPermSize\u3002","title":"JVM\u7684\u65b0\u7279\u6027"},{"location":"java/feature/#java-9","text":"\u6a21\u5757\u7cfb\u7edf\uff1a\u6a21\u5757\u662f\u4e00\u4e2a\u5305\u7684\u5bb9\u5668\uff0cJava 9 \u6700\u5927\u7684\u53d8\u5316\u4e4b\u4e00\u662f\u5f15\u5165\u4e86\u6a21\u5757\u7cfb\u7edf\uff08Jigsaw \u9879\u76ee\uff09\u3002 REPL (JShell)\uff1a\u4ea4\u4e92\u5f0f\u7f16\u7a0b\u73af\u5883\u3002 HTTP 2 \u5ba2\u6237\u7aef\uff1aHTTP/2\u6807\u51c6\u662fHTTP\u534f\u8bae\u7684\u6700\u65b0\u7248\u672c\uff0c\u65b0\u7684 HTTPClient API \u652f\u6301 WebSocket \u548c HTTP2 \u6d41\u4ee5\u53ca\u670d\u52a1\u5668\u63a8\u9001\u7279\u6027\u3002 \u6539\u8fdb\u7684 Javadoc\uff1aJavadoc \u73b0\u5728\u652f\u6301\u5728 API \u6587\u6863\u4e2d\u7684\u8fdb\u884c\u641c\u7d22\u3002\u53e6\u5916\uff0cJavadoc \u7684\u8f93\u51fa\u73b0\u5728\u7b26\u5408\u517c\u5bb9 HTML5 \u6807\u51c6\u3002 \u591a\u7248\u672c\u517c\u5bb9 JAR \u5305\uff1a\u591a\u7248\u672c\u517c\u5bb9 JAR \u529f\u80fd\u80fd\u8ba9\u4f60\u521b\u5efa\u4ec5\u5728\u7279\u5b9a\u7248\u672c\u7684 Java \u73af\u5883\u4e2d\u8fd0\u884c\u5e93\u7a0b\u5e8f\u65f6\u9009\u62e9\u4f7f\u7528\u7684 class \u7248\u672c\u3002 \u96c6\u5408\u5de5\u5382\u65b9\u6cd5\uff1aList\uff0cSet \u548c Map \u63a5\u53e3\u4e2d\uff0c\u65b0\u7684\u9759\u6001\u5de5\u5382\u65b9\u6cd5\u53ef\u4ee5\u521b\u5efa\u8fd9\u4e9b\u96c6\u5408\u7684\u4e0d\u53ef\u53d8\u5b9e\u4f8b\u3002 \u79c1\u6709\u63a5\u53e3\u65b9\u6cd5\uff1a\u5728\u63a5\u53e3\u4e2d\u4f7f\u7528private\u79c1\u6709\u65b9\u6cd5\u3002\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 private \u8bbf\u95ee\u4fee\u9970\u7b26\u5728\u63a5\u53e3\u4e2d\u7f16\u5199\u79c1\u6709\u65b9\u6cd5\u3002 \u8fdb\u7a0b API: \u6539\u8fdb\u7684 API \u6765\u63a7\u5236\u548c\u7ba1\u7406\u64cd\u4f5c\u7cfb\u7edf\u8fdb\u7a0b\u3002\u5f15\u8fdb java.lang.ProcessHandle \u53ca\u5176\u5d4c\u5957\u63a5\u53e3 Info \u6765\u8ba9\u5f00\u53d1\u8005\u9003\u79bb\u65f6\u5e38\u56e0\u4e3a\u8981\u83b7\u53d6\u4e00\u4e2a\u672c\u5730\u8fdb\u7a0b\u7684 PID \u800c\u4e0d\u5f97\u4e0d\u4f7f\u7528\u672c\u5730\u4ee3\u7801\u7684\u7a98\u5883\u3002 \u6539\u8fdb\u7684 Stream API\uff1a\u6539\u8fdb\u7684 Stream API \u6dfb\u52a0\u4e86\u4e00\u4e9b\u4fbf\u5229\u7684\u65b9\u6cd5\uff0c\u4f7f\u6d41\u5904\u7406\u66f4\u5bb9\u6613\uff0c\u5e76\u4f7f\u7528\u6536\u96c6\u5668\u7f16\u5199\u590d\u6742\u7684\u67e5\u8be2\u3002 \u6539\u8fdb try-with-resources\uff1a\u5982\u679c\u4f60\u5df2\u7ecf\u6709\u4e00\u4e2a\u8d44\u6e90\u662f final \u6216\u7b49\u6548\u4e8e final \u53d8\u91cf,\u60a8\u53ef\u4ee5\u5728 try-with-resources \u8bed\u53e5\u4e2d\u4f7f\u7528\u8be5\u53d8\u91cf\uff0c\u800c\u65e0\u9700\u5728 try-with-resources \u8bed\u53e5\u4e2d\u58f0\u660e\u4e00\u4e2a\u65b0\u53d8\u91cf\u3002 \u6539\u8fdb\u7684\u5f03\u7528\u6ce8\u89e3 @Deprecated\uff1a\u6ce8\u89e3 @Deprecated \u53ef\u4ee5\u6807\u8bb0 Java API \u72b6\u6001\uff0c\u53ef\u4ee5\u8868\u793a\u88ab\u6807\u8bb0\u7684 API \u5c06\u4f1a\u88ab\u79fb\u9664\uff0c\u6216\u8005\u5df2\u7ecf\u7834\u574f\u3002 \u6539\u8fdb\u94bb\u77f3\u64cd\u4f5c\u7b26(Diamond Operator) \uff1a\u533f\u540d\u7c7b\u53ef\u4ee5\u4f7f\u7528\u94bb\u77f3\u64cd\u4f5c\u7b26(Diamond Operator)\u3002 \u6539\u8fdb Optional \u7c7b\uff1ajava.util.Optional \u6dfb\u52a0\u4e86\u5f88\u591a\u65b0\u7684\u6709\u7528\u65b9\u6cd5\uff0cOptional \u53ef\u4ee5\u76f4\u63a5\u8f6c\u4e3a stream\u3002 \u591a\u5206\u8fa8\u7387\u56fe\u50cf API\uff1a\u5b9a\u4e49\u591a\u5206\u8fa8\u7387\u56fe\u50cfAPI\uff0c\u5f00\u53d1\u8005\u53ef\u4ee5\u5f88\u5bb9\u6613\u7684\u64cd\u4f5c\u548c\u5c55\u793a\u4e0d\u540c\u5206\u8fa8\u7387\u7684\u56fe\u50cf\u4e86\u3002 \u6539\u8fdb\u7684 CompletableFuture API \uff1a CompletableFuture \u7c7b\u7684\u5f02\u6b65\u673a\u5236\u53ef\u4ee5\u5728 ProcessHandle.onExit \u65b9\u6cd5\u9000\u51fa\u65f6\u6267\u884c\u64cd\u4f5c\u3002 \u8f7b\u91cf\u7ea7\u7684 JSON API\uff1a\u5185\u7f6e\u4e86\u4e00\u4e2a\u8f7b\u91cf\u7ea7\u7684JSON API \u54cd\u5e94\u5f0f\u6d41\uff08Reactive Streams) API: Java 9\u4e2d\u5f15\u5165\u4e86\u65b0\u7684\u54cd\u5e94\u5f0f\u6d41 API \u6765\u652f\u6301 Java 9 \u4e2d\u7684\u54cd\u5e94\u5f0f\u7f16\u7a0b\u3002","title":"Java 9 \u65b0\u7279\u6027\u603b\u7ed3"},{"location":"java/feature/#java9-","text":"\u5305\u542bjdk8\u53ca\u4ee5\u524d\u7684jdk\u7248\u672c\uff0c\u6240\u6709\u76ee\u5f55\u7ed3\u6784\u4ee5\u53ca\u76ee\u5f55\u542b\u4e49\u5982\u56fe\uff1a jdk9\u4e4b\u540e\uff0c\u76ee\u5f55\u7ed3\u6784\u53d1\u751f\u53d8\u5316\u5982\u56fe\uff1a \u8fd9\u4e2a\u65b0\u7279\u6027\u53ea\u8981\u4e86\u89e3\u4e0b\u5c31\u53ef\u4ee5\u4e86\uff0c\u8fd9\u4e2a\u76ee\u5f55\u7ed3\u6784\u662f\u65b9\u4fbf\u4e3a\u4e86\u63a5\u4e0b\u6765\u65b0\u7279\u6027\u505a\u4fdd\u8bc1","title":"Java9 \u65b0\u7279\u6027\u4e4b---\u76ee\u5f55\u7ed3\u6784"},{"location":"java/feature/#_22","text":"\u4e00\u4e2a\u5927\u578b\u7684\u9879\u76ee\uff0c\u6bd4\u5982\u6dd8\u5b9d\u5546\u57ce\u7b49\uff0c\u90fd\u4f1a\u5305\u542b\u591a\u4e2a\u6a21\u5757\uff0c\u6bd4\u5982\u8ba2\u5355\u6a21\u5757\uff0c\u524d\u53f0\u6a21\u5757\uff0c\u540e\u53f0\u7ba1\u7406\u6a21\u5757\uff0c\u5e7f\u544a\u4f4d\u6a21\u5757\uff0c\u4f1a\u5458\u6a21\u5757.....\u7b49\u7b49\uff0c\u5404\u4e2a\u6a21\u5757\u4e4b\u95f4\u4f1a\u76f8\u4e92\u8c03\u7528\uff0c\u4e0d\u8fc7\u8fd9\u79cd\u60c5\u51b5\u4e0b\u4f1a\u5f88\u5c11\uff0c\u53ea\u9488\u5bf9\u7279\u6b8a\u60c5\u51b5\uff0c\u5982\u679c\u4e00\u4e2a\u9879\u76ee\u670930\u4e2a\u6a21\u5757\u7cfb\u7edf\u8fdb\u884c\u5f00\u53d1\uff0c\u4f46\u662f\u53ea\u8981\u67d0\u4e2a\u5355\u72ec\u6a21\u5757\u8fd0\u884c\u65f6\uff0c\u90fd\u4f1a\u5e26\u52a8\u6240\u6709\u7684\u6a21\u5757\uff0c\u8fd9\u6837\u5bf9\u4e8ejvm\u6765\u8bf4\u5728\u5185\u5b58\u548c\u6027\u80fd\u4e0a\u4f1a\u5f88\u4f4e\uff0c\u6240\u4ee5\uff0cjava9\u63d0\u4f9b\u4e86\u8fd9\u4e00\u4e2a\u7279\u6027\uff0c\u67d0\u4e00\u4e2a\u6a21\u5757\u8fd0\u884c\u7684\u65f6\u5019\uff0cjvm\u53ea\u4f1a\u542f\u52a8\u548c\u5b83\u6709\u4f9d\u8d56\u7684\u6a21\u5757\uff0c\u5e76\u4e0d\u4f1a\u52a0\u8f7d\u6240\u6709\u7684\u6a21\u5757\u5230\u5185\u5b58\u4e2d\uff0c\u8fd9\u6837\u6027\u80fd\u5927\u5927\u7684\u63d0\u9ad8\u4e86\u3002\u5199\u6cd5\u4e0a\u5982\u4e0b\uff1a \u4e00\u4e2a\u9879\u76ee\u4e2d\u7684\u4e24\u4e2a\u6a21\u5757\uff0c\u6a21\u5757\u4e4b\u95f4\u901a\u8fc7module-info.java\u6765\u5173\u8054\uff0c\u5728IDEA\u7f16\u8f91\u5668\u53f3\u952e\u521b\u5efapackage-info.java \u5728\u8fd9\u4e2a\u4e24\u4e2a\u6a21\u5757java9Demo\u548cjava9Test\u4e2d\uff0cjava9demo\u7f16\u5199\u4e00\u4e2a\u5b9e\u4f53\u7c7bPerson,\u5728java9Test\u8c03\u7528\u8fd9\u6837\u4e00\u4e2a\u8fc7\u7a0b \u8fd9\u4e2a\u662fjava9Demo \u5c06 java9Test \u6a21\u5757\u9700\u8981\u7684\u6587\u4ef6\u5bfc\u51fa exports \u628a\u5b83\u6240\u5728\u7684\u5305\u5bfc\u51fa module java9Demo { requires com . mdxl . layer_cj . entity ; } \u7136\u540e\u5728java9Test\u6a21\u5757\u4e2d\u521b\u5efa\u4e00\u4e2apackage-info.java,\u5f15\u5165java9Demo\u6a21\u5757\u5bfc\u51fa\u5305\u540d module java9Test { requires java9Demo ; } \u8fd9\u6837\u5c31\u53ef\u4ee5\u76f4\u63a5\u5728java9Test\u4e2d\u5f15\u5165Person\u5b9e\u4f53\u7c7b\u4e86\uff0c\u8fd9\u53ea\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\u3002exports \u63a7\u5236\u7740\u90a3\u4e9b\u5305\u53ef\u4ee5\u88ab\u6a21\u5757\u8bbf\u95ee\uff0c\u6240\u4ee5\u4e0d\u88ab\u5bfc\u51fa\u7684\u5305\u4e0d\u80fd\u88ab\u5176\u4ed6\u6a21\u5757\u8bbf\u95ee","title":"\u6a21\u5757\u5316"},{"location":"java/feature/#jshell","text":"\u600e\u4e48\u7406\u89e3\uff0c\u600e\u4e48\u7528\u5462\uff1f\u8fd9\u4e2a\u53ea\u662f\u9488\u5bf9\u4e8ejava9\u6765\u8bf4\uff0c\u76f8\u5f53\u4e8ecmd\u5de5\u5177\uff0c\u4f60\u53ef\u4ee5\u548ccmd\u4e00\u6837\uff0c\u76f4\u63a5\u5199\u65b9\u6cd5\u7b49\u7b49\uff0c\u4e0d\u8fc7\u6211\u8ba4\u4e3a\u53ea\u662f\u9002\u7528\u4e8e\u521d\u5b66\u8005\u505a\u4e00\u4e9b\u6700\u7b80\u5355\u7684\u8fd0\u7b97\u548c\u5199\u4e00\u4e9b\u65b9\u6cd5\uff1a \u5728cmd\u4e2d\u6253\u5f00\u8fd9\u4e2a\u5de5\u5177\uff1a $ jshell | Welcome to JShell -- Version 9 - ea | For an introduction type : / help intro jshell > \u67e5\u770b JShell \u547d\u4ee4 \u8f93\u5165 /help \u53ef\u4ee5\u67e5\u770b JShell\u76f8\u5173\u7684\u547d\u4ee4\uff1a jshell> /help | Type a Java language expression, statement, or declaration. | Or type one of the following commands: | /list [<name or id>|-all|-start] | list the source you have typed | /edit <name or id> | edit a source entry referenced by name or id | /drop <name or id> | delete a source entry referenced by name or id | /save [-all|-history|-start] <file> | Save snippet source to a file. | /open <file> | open a file as source input | /vars [<name or id>|-all|-start] | list the declared variables and their values | /methods [<name or id>|-all|-start] | list the declared methods and their signatures | /types [<name or id>|-all|-start] | list the declared types | /imports | list the imported items \u6267\u884c JShell \u547d\u4ee4 /imports \u547d\u4ee4\u7528\u4e8e\u67e5\u770b\u5df2\u5bfc\u5165\u7684\u5305\uff1a jshell> /imports | import java.io.* | import java.math.* | import java.net.* | import java.nio.file.* | import java.util.* | import java.util.concurrent.* | import java.util.function.* | import java.util.prefs.* | import java.util.regex.* | import java.util.stream.* jshell> \u7b49\u7b49\uff0c\u6211\u8ba4\u4e3a\u53ea\u9002\u7528\u4e8e\u521d\u5b66\u8005\u5b66\u4e60java\u4e0d\u7528\u5176\u4ed6\u7f16\u8f91\u5de5\u5177\u5c31\u53ef\u4ee5\u5b66\u4e60java","title":"JShell\u5de5\u5177"},{"location":"java/feature/#http-2","text":"JDK9\u4e4b\u524d\u63d0\u4f9bHttpURLConnection API\u6765\u5b9e\u73b0Http\u8bbf\u95ee\u529f\u80fd\uff0c\u4f46\u662f\u8fd9\u4e2a\u7c7b\u57fa\u672c\u5f88\u5c11\u4f7f\u7528\uff0c\u4e00\u822c\u90fd\u4f1a\u9009\u62e9Apache\u7684Http Client\uff0c\u6b64\u6b21\u5728Java 9\u7684\u7248\u672c\u4e2d\u5f15\u5165\u4e86\u4e00\u4e2a\u65b0\u7684package:java.net.http\uff0c\u91cc\u9762\u63d0\u4f9b\u4e86\u5bf9Http\u8bbf\u95ee\u5f88\u597d\u7684\u652f\u6301\uff0c\u4e0d\u4ec5\u652f\u6301Http1.1\u800c\u4e14\u8fd8\u652f\u6301HTTP2\uff08\u4ec0\u4e48\u662fHTTP2\uff1f\u8bf7\u53c2\u89c1HTTP2\u7684\u65f6\u4ee3\u6765\u4e86...\uff09\uff0c\u4ee5\u53caWebSocket\uff0c\u636e\u8bf4\u6027\u80fd\u7279\u522b\u597d\u3002 \u6ce8\u610f\uff1a\u65b0\u7684 HttpClient API \u5728 Java 9 \u4e2d\u4ee5\u6240\u8c13\u7684\u5b75\u5316\u5668\u6a21\u5757\u4ea4\u4ed8\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u8fd9\u5957 API \u4e0d\u80fd\u4fdd\u8bc1 100% \u5b8c\u6210\u3002","title":"HTTP 2 \u5ba2\u6237\u7aef"},{"location":"java/feature/#javadoc","text":"javadoc \u5de5\u5177\u53ef\u4ee5\u751f\u6210 Java \u6587\u6863\uff0c Java 9 \u7684 javadoc \u7684\u8f93\u51fa\u73b0\u5728\u7b26\u5408\u517c\u5bb9 HTML5 \u6807\u51c6\u3002 //java 9 \u4e4b\u524d C: \\ JAVA > javadoc - d C :/ JAVA Tester . java //java 9 \u4e4b\u540e C: \\ JAVA > javadoc - d C :/ JAVA - html5 Tester . java","title":"\u6539\u8fdb Javadoc"},{"location":"java/feature/#jar","text":"\u591a\u7248\u672c\u517c\u5bb9 JAR \u529f\u80fd\u80fd\u8ba9\u4f60\u521b\u5efa\u4ec5\u5728\u7279\u5b9a\u7248\u672c\u7684 Java \u73af\u5883\u4e2d\u8fd0\u884c\u5e93\u7a0b\u5e8f\u65f6\u9009\u62e9\u4f7f\u7528\u7684 class \u7248\u672c\u3002 \u901a\u8fc7 --release \u53c2\u6570\u6307\u5b9a\u7f16\u8bd1\u7248\u672c\u3002 \u5177\u4f53\u7684\u53d8\u5316\u5c31\u662f META-INF \u76ee\u5f55\u4e0b MANIFEST.MF \u6587\u4ef6\u65b0\u589e\u4e86\u4e00\u4e2a\u5c5e\u6027\uff1a Multi-Release: true \u7136\u540e META-INF \u76ee\u5f55\u4e0b\u8fd8\u65b0\u589e\u4e86\u4e00\u4e2a versions \u76ee\u5f55\uff0c\u5982\u679c\u662f\u8981\u652f\u6301 java9\uff0c\u5219\u5728 versions \u76ee\u5f55\u4e0b\u6709 9 \u7684\u76ee\u5f55\u3002 multirelease.jar \u251c\u2500\u2500 META-INF \u2502 \u2514\u2500\u2500 versions \u2502 \u2514\u2500\u2500 9 \u2502 \u2514\u2500\u2500 multirelease \u2502 \u2514\u2500\u2500 Helper.class \u251c\u2500\u2500 multirelease \u251c\u2500\u2500 Helper.class \u2514\u2500\u2500 Main.class","title":"\u591a\u7248\u672c\u517c\u5bb9 jar \u5305"},{"location":"java/feature/#_23","text":"Java 9 List\uff0cSet \u548c Map \u63a5\u53e3\u4e2d\uff0c\u65b0\u7684\u9759\u6001\u5de5\u5382\u65b9\u6cd5\u53ef\u4ee5\u521b\u5efa\u8fd9\u4e9b\u96c6\u5408\u7684\u4e0d\u53ef\u53d8\u5b9e\u4f8b\u3002 \u8fd9\u4e9b\u5de5\u5382\u65b9\u6cd5\u53ef\u4ee5\u4ee5\u66f4\u7b80\u6d01\u7684\u65b9\u5f0f\u6765\u521b\u5efa\u96c6\u5408\u3002 \u65e7\u65b9\u6cd5\u521b\u5efa\u96c6\u5408: import java.util.ArrayList ; import java.util.Collections ; import java.util.HashMap ; import java.util.HashSet ; import java.util.List ; import java.util.Map ; import java.util.Set ; public class Tester { public static void main ( String [] args ) { Set < String > set = new HashSet <>(); set . add ( \"A\" ); set . add ( \"B\" ); set . add ( \"C\" ); set = Collections . unmodifiableSet ( set ); System . out . println ( set ); List < String > list = new ArrayList <>(); list . add ( \"A\" ); list . add ( \"B\" ); list . add ( \"C\" ); list = Collections . unmodifiableList ( list ); System . out . println ( list ); Map < String , String > map = new HashMap <>(); map . put ( \"A\" , \"Apple\" ); map . put ( \"B\" , \"Boy\" ); map . put ( \"C\" , \"Cat\" ); map = Collections . unmodifiableMap ( map ); System . out . println ( map ); } } \u6267\u884c\u8f93\u51fa\u7ed3\u679c\u4e3a\uff1a [A, B, C] [A, B, C] {A=Apple, B=Boy, C=Cat} \u65b0\u65b9\u6cd5\u521b\u5efa\u96c6\u5408\uff1a Java 9 \u4e2d\uff0c\u4ee5\u4e0b\u65b9\u6cd5\u88ab\u6dfb\u52a0\u5230 List\uff0cSet \u548c Map \u63a5\u53e3\u4ee5\u53ca\u5b83\u4eec\u7684\u91cd\u8f7d\u5bf9\u8c61\u3002 static < E > List < E > of ( E e1 , E e2 , E e3 ); static < E > Set < E > of ( E e1 , E e2 , E e3 ); static < K , V > Map < K , V > of ( K k1 , V v1 , K k2 , V v2 , K k3 , V v3 ); static < K , V > Map < K , V > ofEntries ( Map . Entry <? extends K ,? extends V >... entries ) * List \u548c Set \u63a5\u53e3, of(...) \u65b9\u6cd5\u91cd\u8f7d\u4e86 0 ~ 10 \u4e2a\u53c2\u6570\u7684\u4e0d\u540c\u65b9\u6cd5 \u3002 * Map \u63a5\u53e3, of(...) \u65b9\u6cd5\u91cd\u8f7d\u4e86 0 ~ 10 \u4e2a\u53c2\u6570\u7684\u4e0d\u540c\u65b9\u6cd5 \u3002 * Map \u63a5\u53e3\u5982\u679c\u8d85\u8fc7 10 \u4e2a\u53c2\u6570, \u53ef\u4ee5\u4f7f\u7528 ofEntries(...) \u65b9\u6cd5\u3002 \u65b0\u65b9\u6cd5\u521b\u5efa\u96c6\u5408: import java.util.ArrayList ; import java.util.Collections ; import java.util.HashMap ; import java.util.HashSet ; import java.util.List ; import java.util.AbstractMap ; import java.util.Map ; import java.util.Set ; public class Tester { public static void main ( String [] args ) { Set < String > set = Set . of ( \"A\" , \"B\" , \"C\" ); System . out . println ( set ); List < String > list = List . of ( \"A\" , \"B\" , \"C\" ); System . out . println ( list ); Map < String , String > map = Map . of ( \"A\" , \"Apple\" , \"B\" , \"Boy\" , \"C\" , \"Cat\" ); System . out . println ( map ); Map < String , String > map1 = Map . ofEntries ( new AbstractMap . SimpleEntry <>( \"A\" , \"Apple\" ), new AbstractMap . SimpleEntry <>( \"B\" , \"Boy\" ), new AbstractMap . SimpleEntry <>( \"C\" , \"Cat\" )); System . out . println ( map1 ); } } \u8f93\u51fa\u7ed3\u679c\u4e3a\uff1a [A, B, C] [A, B, C] {A=Apple, B=Boy, C=Cat} {A=Apple, B=Boy, C=Cat}","title":"\u96c6\u5408\u5de5\u5382\u65b9\u6cd5"},{"location":"java/feature/#_24","text":"\u5728 Java 8\u4e4b\u524d\uff0c\u63a5\u53e3\u53ef\u4ee5\u6709\u5e38\u91cf\u53d8\u91cf\u548c\u62bd\u8c61\u65b9\u6cd5\u3002 \u6211\u4eec\u4e0d\u80fd\u5728\u63a5\u53e3\u4e2d\u63d0\u4f9b\u65b9\u6cd5\u5b9e\u73b0\u3002\u5982\u679c\u6211\u4eec\u8981\u63d0\u4f9b\u62bd\u8c61\u65b9\u6cd5\u548c\u975e\u62bd\u8c61\u65b9\u6cd5\uff08\u65b9\u6cd5\u4e0e\u5b9e\u73b0\uff09\u7684\u7ec4\u5408\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u5f97\u4f7f\u7528\u62bd\u8c61\u7c7b\u3002 public interface Tests { //java 7 \u53ca\u4ee5\u524d\u7279\u6027 \u5e38\u91cf \u62bd\u8c61\u65b9\u6cd5 String str = ' hello wrold ' ; void show ( T str ); //java 8 \u7279\u6027 \u9ed8\u8ba4\u65b9\u6cd5 \u9759\u6001\u65b9\u6cd5 default void def (){ System . out . print ( \"default method\" ); } static void sta (){ System . out . print ( \"static method\" ); } //java 9 \u7279\u6027 \u79c1\u6709\u65b9\u6cd5 \u79c1\u6709\u9759\u6001\u65b9\u6cd5 private void pri (){ System . out . print ( \"private method\" ); } private static void pri_sta (){ System . out . print ( \"private static method\" ); } }","title":"\u79c1\u6709\u63a5\u53e3\u65b9\u6cd5"},{"location":"java/feature/#api_1","text":"\u5728 Java 9 \u4e4b\u524d\uff0cProcess API \u4ecd\u7136\u7f3a\u4e4f\u5bf9\u4f7f\u7528\u672c\u5730\u8fdb\u7a0b\u7684\u57fa\u672c\u652f\u6301\uff0c\u4f8b\u5982\u83b7\u53d6\u8fdb\u7a0b\u7684 PID \u548c\u6240\u6709\u8005\uff0c\u8fdb\u7a0b\u7684\u5f00\u59cb\u65f6\u95f4\uff0c\u8fdb\u7a0b\u4f7f\u7528\u4e86\u591a\u5c11 CPU \u65f6\u95f4\uff0c\u591a\u5c11\u672c\u5730\u8fdb\u7a0b\u6b63\u5728\u8fd0\u884c\u7b49\u3002 Java 9 \u5411 Process API \u6dfb\u52a0\u4e86\u4e00\u4e2a\u540d\u4e3a ProcessHandle \u7684\u63a5\u53e3\u6765\u589e\u5f3a java.lang.Process \u7c7b\u3002 ProcessHandle \u63a5\u53e3\u7684\u5b9e\u4f8b\u6807\u8bc6\u4e00\u4e2a\u672c\u5730\u8fdb\u7a0b\uff0c\u5b83\u5141\u8bb8\u67e5\u8be2\u8fdb\u7a0b\u72b6\u6001\u5e76\u7ba1\u7406\u8fdb\u7a0b\u3002 ProcessHandle \u5d4c\u5957\u63a5\u53e3 Info \u6765\u8ba9\u5f00\u53d1\u8005\u9003\u79bb\u65f6\u5e38\u56e0\u4e3a\u8981\u83b7\u53d6\u4e00\u4e2a\u672c\u5730\u8fdb\u7a0b\u7684 PID \u800c\u4e0d\u5f97\u4e0d\u4f7f\u7528\u672c\u5730\u4ee3\u7801\u7684\u7a98\u5883\u3002 \u6211\u4eec\u4e0d\u80fd\u5728\u63a5\u53e3\u4e2d\u63d0\u4f9b\u65b9\u6cd5\u5b9e\u73b0\u3002\u5982\u679c\u6211\u4eec\u8981\u63d0\u4f9b\u62bd\u8c61\u65b9\u6cd5\u548c\u975e\u62bd\u8c61\u65b9\u6cd5\uff08\u65b9\u6cd5\u4e0e\u5b9e\u73b0\uff09\u7684\u7ec4\u5408\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u5f97\u4f7f\u7528\u62bd\u8c61\u7c7b\u3002 ProcessHandle \u63a5\u53e3\u4e2d\u58f0\u660e\u7684 onExit() \u65b9\u6cd5\u53ef\u7528\u4e8e\u5728\u67d0\u4e2a\u8fdb\u7a0b\u7ec8\u6b62\u65f6\u89e6\u53d1\u67d0\u4e9b\u64cd\u4f5c\u3002 import java.time.ZoneId ; import java.util.stream.Stream ; import java.util.stream.Collectors ; import java.io.IOException ; public class Tester { public static void main ( String [] args ) throws IOException { ProcessBuilder pb = new ProcessBuilder ( \"notepad.exe\" ); String np = \"Not Present\" ; Process p = pb . start (); ProcessHandle . Info info = p . info (); System . out . printf ( \"Process ID : %s%n\" , p . pid ()); System . out . printf ( \"Command name : %s%n\" , info . command (). orElse ( np )); System . out . printf ( \"Command line : %s%n\" , info . commandLine (). orElse ( np )); System . out . printf ( \"Start time: %s%n\" , info . startInstant (). map ( i -> i . atZone ( ZoneId . systemDefault ()) . toLocalDateTime (). toString ()). orElse ( np )); System . out . printf ( \"Arguments : %s%n\" , info . arguments (). map ( a -> Stream . of ( a ). collect ( Collectors . joining ( \" \" ))). orElse ( np )); System . out . printf ( \"User : %s%n\" , info . user (). orElse ( np )); } } \u4ee5\u4e0a\u5b9e\u4f8b\u6267\u884c\u8f93\u51fa\u7ed3\u679c\u4e3a\uff1a Process ID : 5800 Command name : C:\\Windows\\System32\\notepad.exe Command line : Not Present Start time: 2017-11-04T21:35:03.626 Arguments : Not Present User: administrator","title":"\u6539\u8fdb\u7684\u8fdb\u7a0b API"},{"location":"java/feature/#stream-api","text":"Java 9 \u6539\u8fdb\u7684 Stream API \u6dfb\u52a0\u4e86\u4e00\u4e9b\u4fbf\u5229\u7684\u65b9\u6cd5\uff0c\u4f7f\u6d41\u5904\u7406\u66f4\u5bb9\u6613\uff0c\u5e76\u4f7f\u7528\u6536\u96c6\u5668\u7f16\u5199\u590d\u6742\u7684\u67e5\u8be2\u3002 Java 9 \u4e3a Stream \u65b0\u589e\u4e86\u51e0\u4e2a\u65b9\u6cd5\uff1adropWhile\u3001takeWhile\u3001ofNullable\uff0c\u4e3a iterate \u65b9\u6cd5\u65b0\u589e\u4e86\u4e00\u4e2a\u91cd\u8f7d\u65b9\u6cd5\u3002","title":"\u6539\u8fdb\u7684 Stream API"},{"location":"java/feature/#takewhile","text":"default Stream < T > takeWhile ( Predicate <? super T > predicate ) takeWhile() \u65b9\u6cd5\u4f7f\u7528\u4e00\u4e2a\u65ad\u8a00\u4f5c\u4e3a\u53c2\u6570\uff0c\u8fd4\u56de\u7ed9\u5b9a Stream \u7684\u5b50\u96c6\u76f4\u5230\u65ad\u8a00\u8bed\u53e5\u7b2c\u4e00\u6b21\u8fd4\u56de false\u3002\u5982\u679c\u7b2c\u4e00\u4e2a\u503c\u4e0d\u6ee1\u8db3\u65ad\u8a00\u6761\u4ef6\uff0c\u5c06\u8fd4\u56de\u4e00\u4e2a\u7a7a\u7684 Stream\u3002 takeWhile() \u65b9\u6cd5\u5728\u6709\u5e8f\u7684 Stream \u4e2d\uff0ctakeWhile \u8fd4\u56de\u4ece\u5f00\u5934\u5f00\u59cb\u7684\u5c3d\u91cf\u591a\u7684\u5143\u7d20\uff1b\u5728\u65e0\u5e8f\u7684 Stream \u4e2d\uff0ctakeWhile \u8fd4\u56de\u4ece\u5f00\u5934\u5f00\u59cb\u7684\u7b26\u5408 Predicate \u8981\u6c42\u7684\u5143\u7d20\u7684\u5b50\u96c6\u3002 import java.util.stream.Stream ; public class Tester { public static void main ( String [] args ) { Stream . of ( \"a\" , \"b\" , \"c\" , \"\" , \"e\" , \"f\" ). takeWhile ( s ->! s . isEmpty ()) . forEach ( System . out :: print ); } } \u4ee5\u4e0a\u5b9e\u4f8b takeWhile \u65b9\u6cd5\u5728\u78b0\u5230\u7a7a\u5b57\u7b26\u4e32\u65f6\u505c\u6b62\u5faa\u73af\u8f93\u51fa\uff0c\u6267\u884c\u8f93\u51fa\u7ed3\u679c\u4e3a\uff1a abc","title":"takeWhile \u65b9\u6cd5 \u8bed\u6cd5:"},{"location":"java/feature/#dropwhile","text":"default Stream < T > dropWhile ( Predicate <? super T > predicate ) dropWhile \u65b9\u6cd5\u548c takeWhile \u4f5c\u7528\u76f8\u53cd\u7684\uff0c\u4f7f\u7528\u4e00\u4e2a\u65ad\u8a00\u4f5c\u4e3a\u53c2\u6570\uff0c\u76f4\u5230\u65ad\u8a00\u8bed\u53e5\u7b2c\u4e00\u6b21\u8fd4\u56de true \u624d\u8fd4\u56de\u7ed9\u5b9a Stream \u7684\u5b50\u96c6\u3002 import java.util.stream.Stream ; public class Tester { public static void main ( String [] args ) { Stream . of ( \"a\" , \"b\" , \"c\" , \"\" , \"e\" , \"f\" ). dropWhile ( s -> ! s . isEmpty ()) . forEach ( System . out :: print ); } } \u4ee5\u4e0a\u5b9e\u4f8b dropWhile \u65b9\u6cd5\u5728\u78b0\u5230\u7a7a\u5b57\u7b26\u4e32\u65f6\u5f00\u59cb\u5faa\u73af\u8f93\u51fa\uff0c\u6267\u884c\u8f93\u51fa\u7ed3\u679c\u4e3a\uff1a ef","title":"dropWhile \u65b9\u6cd5 \u8bed\u6cd5:"},{"location":"java/feature/#iterate","text":"static < T > Stream < T > iterate ( T seed , Predicate <? super T > hasNext , UnaryOperator < T > next ) \u65b9\u6cd5\u5141\u8bb8\u4f7f\u7528\u521d\u59cb\u79cd\u5b50\u503c\u521b\u5efa\u987a\u5e8f\uff08\u53ef\u80fd\u662f\u65e0\u9650\uff09\u6d41\uff0c\u5e76\u8fed\u4ee3\u5e94\u7528\u6307\u5b9a\u7684\u4e0b\u4e00\u4e2a\u65b9\u6cd5\u3002 \u5f53\u6307\u5b9a\u7684 hasNext \u7684 predicate \u8fd4\u56de false \u65f6\uff0c\u8fed\u4ee3\u505c\u6b62\u3002 java . util . stream . IntStream ; public class Tester { public static void main ( String [] args ) { IntStream . iterate ( 3 , x -> x < 10 , x -> x + 3 ). forEach ( System . out :: println ); } } \u6267\u884c\u8f93\u51fa\u7ed3\u679c\u4e3a\uff1a 3 6 9","title":"iterate \u65b9\u6cd5 \u8bed\u6cd5:"},{"location":"java/feature/#ofnullable","text":"static < T > Stream < T > ofNullable ( T t ) ofNullable \u65b9\u6cd5\u53ef\u4ee5\u9884\u9632 NullPointerExceptions \u5f02\u5e38\uff0c \u53ef\u4ee5\u901a\u8fc7\u68c0\u67e5\u6d41\u6765\u907f\u514d null \u503c\u3002 \u5982\u679c\u6307\u5b9a\u5143\u7d20\u4e3a\u975e null\uff0c\u5219\u83b7\u53d6\u4e00\u4e2a\u5143\u7d20\u5e76\u751f\u6210\u5355\u4e2a\u5143\u7d20\u6d41\uff0c\u5143\u7d20\u4e3a null \u5219\u8fd4\u56de\u4e00\u4e2a\u7a7a\u6d41\u3002 import java.util.stream.Stream ; public class Tester { public static void main ( String [] args ) { long count = Stream . ofNullable ( 100 ). count (); System . out . println ( count ); count = Stream . ofNullable ( null ). count (); System . out . println ( count ); } } \u6267\u884c\u8f93\u51fa\u7ed3\u679c\u4e3a\uff1a 1 0","title":"ofNullable \u65b9\u6cd5 \u8bed\u6cd5:"},{"location":"java/feature/#try-with-resources_1","text":"try-with-resources \u662f JDK 7 \u4e2d\u4e00\u4e2a\u65b0\u7684\u5f02\u5e38\u5904\u7406\u673a\u5236\uff0c\u5b83\u80fd\u591f\u5f88\u5bb9\u6613\u5730\u5173\u95ed\u5728 try-catch \u8bed\u53e5\u5757\u4e2d\u4f7f\u7528\u7684\u8d44\u6e90\u3002\u6240\u8c13\u7684\u8d44\u6e90\uff08resource\uff09\u662f\u6307\u5728\u7a0b\u5e8f\u5b8c\u6210\u540e\uff0c\u5fc5\u987b\u5173\u95ed\u7684\u5bf9\u8c61\u3002try-with-resources \u8bed\u53e5\u786e\u4fdd\u4e86\u6bcf\u4e2a\u8d44\u6e90\u5728\u8bed\u53e5\u7ed3\u675f\u65f6\u5173\u95ed\u3002\u6240\u6709\u5b9e\u73b0\u4e86 java.lang.AutoCloseable \u63a5\u53e3\uff08\u5176\u4e2d\uff0c\u5b83\u5305\u62ec\u5b9e\u73b0\u4e86 java.io.Closeable \u7684\u6240\u6709\u5bf9\u8c61\uff09\uff0c\u53ef\u4ee5\u4f7f\u7528\u4f5c\u4e3a\u8d44\u6e90\u3002 try-with-resources \u58f0\u660e\u5728 JDK 9 \u5df2\u5f97\u5230\u6539\u8fdb\u3002\u5982\u679c\u4f60\u5df2\u7ecf\u6709\u4e00\u4e2a\u8d44\u6e90\u662f final \u6216\u7b49\u6548\u4e8e final \u53d8\u91cf,\u60a8\u53ef\u4ee5\u5728 try-with-resources \u8bed\u53e5\u4e2d\u4f7f\u7528\u8be5\u53d8\u91cf\uff0c\u800c\u65e0\u9700\u5728 try-with-resources \u8bed\u53e5\u4e2d\u58f0\u660e\u4e00\u4e2a\u65b0\u53d8\u91cf\u3002 import java.io.BufferedReader ; import java.io.IOException ; import java.io.Reader ; import java.io.StringReader ; public class Tester { public static void main ( String [] args ) throws IOException { System . out . println ( readData ( \"test\" )); } static String readData ( String message ) throws IOException { Reader inputString = new StringReader ( message ); BufferedReader br = new BufferedReader ( inputString ); try ( BufferedReader br1 = br ) { return br1 . readLine (); } } } \u8f93\u51fa\u7ed3\u679c\u4e3a\uff1a test \u4ee5\u4e0a\u5b9e\u4f8b\u4e2d\u6211\u4eec\u9700\u8981\u5728 try \u8bed\u53e5\u5757\u4e2d\u58f0\u660e\u8d44\u6e90 br1\uff0c\u7136\u540e\u624d\u80fd\u4f7f\u7528\u5b83\u3002 \u5728 Java 9 \u4e2d\uff0c\u6211\u4eec\u4e0d\u9700\u8981\u58f0\u660e\u8d44\u6e90 br1 \u5c31\u53ef\u4ee5\u4f7f\u7528\u5b83\uff0c\u5e76\u5f97\u5230\u76f8\u540c\u7684\u7ed3\u679c\u3002 import java.io.BufferedReader ; import java.io.IOException ; import java.io.Reader ; import java.io.StringReader ; public class Tester { public static void main ( String [] args ) throws IOException { System . out . println ( readData ( \"test\" )); } static String readData ( String message ) throws IOException { Reader inputString = new StringReader ( message ); BufferedReader br = new BufferedReader ( inputString ); try ( br ) { return br . readLine (); } } } \u6267\u884c\u8f93\u51fa\u7ed3\u679c\u4e3a\uff1a test \u5728\u5904\u7406\u5fc5\u987b\u5173\u95ed\u7684\u8d44\u6e90\u65f6\uff0c\u4f7f\u7528try-with-resources\u8bed\u53e5\u66ff\u4ee3try-finally\u8bed\u53e5\u3002 \u751f\u6210\u7684\u4ee3\u7801\u66f4\u7b80\u6d01\uff0c\u66f4\u6e05\u6670\uff0c\u5e76\u4e14\u751f\u6210\u7684\u5f02\u5e38\u66f4\u6709\u7528\u3002 try-with-resources\u8bed\u53e5\u5728\u7f16\u5199\u5fc5\u987b\u5173\u95ed\u8d44\u6e90\u7684\u4ee3\u7801\u65f6\u4f1a\u66f4\u5bb9\u6613\uff0c\u4e5f\u4e0d\u4f1a\u51fa\u9519\uff0c\u800c\u4f7f\u7528try-finally\u8bed\u53e5\u5b9e\u9645\u4e0a\u662f\u4e0d\u53ef\u80fd\u7684\u3002","title":"\u6539\u8fdb\u7684 try-with-resources"},{"location":"java/feature/#deprecated","text":"\u6ce8\u89e3 @Deprecated \u53ef\u4ee5\u6807\u8bb0 Java API \u72b6\u6001\uff0c\u53ef\u4ee5\u662f\u4ee5\u4e0b\u51e0\u79cd\uff1a \u4f7f\u7528\u5b83\u5b58\u5728\u98ce\u9669\uff0c\u53ef\u80fd\u5bfc\u81f4\u9519\u8bef \u53ef\u80fd\u5728\u672a\u6765\u7248\u672c\u4e2d\u4e0d\u517c\u5bb9 \u53ef\u80fd\u5728\u672a\u6765\u7248\u672c\u4e2d\u5220\u9664 \u4e00\u4e2a\u66f4\u597d\u548c\u66f4\u9ad8\u6548\u7684\u65b9\u6848\u5df2\u7ecf\u53d6\u4ee3\u5b83\u3002 Java 9 \u4e2d\u6ce8\u89e3\u589e\u52a0\u4e86\u4e24\u4e2a\u65b0\u5143\u7d20\uff1asince \u548c forRemoval\u3002 * since: \u5143\u7d20\u6307\u5b9a\u5df2\u6ce8\u89e3\u7684API\u5143\u7d20\u5df2\u88ab\u5f03\u7528\u7684\u7248\u672c\u3002 * forRemoval: \u5143\u7d20\u8868\u793a\u6ce8\u89e3\u7684 API \u5143\u7d20\u5728\u5c06\u6765\u7684\u7248\u672c\u4e2d\u88ab\u5220\u9664\uff0c\u5e94\u8be5\u8fc1\u79fb API\u3002","title":"\u6539\u8fdb\u7684 @Deprecated \u6ce8\u89e3"},{"location":"java/feature/#_25","text":"\u94bb\u77f3\u64cd\u4f5c\u7b26\u662f\u5728 java 7 \u4e2d\u5f15\u5165\u7684\uff0c\u53ef\u4ee5\u8ba9\u4ee3\u7801\u66f4\u6613\u8bfb\uff0c\u4f46\u5b83\u4e0d\u80fd\u7528\u4e8e\u533f\u540d\u7684\u5185\u90e8\u7c7b\u3002 \u5728 java 9 \u4e2d\uff0c \u5b83\u53ef\u4ee5\u4e0e\u533f\u540d\u7684\u5185\u90e8\u7c7b\u4e00\u8d77\u4f7f\u7528\uff0c\u4ece\u800c\u63d0\u9ad8\u4ee3\u7801\u7684\u53ef\u8bfb\u6027\u3002 //java6 \u53ca\u4e4b\u524d Map < String , String > map6 = new HashMap < String , String >(); //java7\u548c8 <>\u6ca1\u6709\u4e86\u6570\u636e\u7c7b\u578b Map < String , String > map6 = new HashMap <>(); //java9 \u6dfb\u52a0\u4e86\u533f\u540d\u5185\u90e8\u7c7b\u7684\u529f\u80fd \u540e\u9762\u6dfb\u52a0\u5927\u62ec\u53f7{} \u53ef\u4ee5\u505a\u4e00\u4e9b\u7ec6\u8282\u64cd\u4f5c Map < String , String > map6 = new HashMap <>(){};","title":"\u94bb\u77f3\u64cd\u4f5c\u7b26\u7684\u5347\u7ea7"},{"location":"java/feature/#optional_1","text":"Optional \u7c7b\u5728 Java 8 \u4e2d\u5f15\u5165\uff0cOptional \u7c7b\u7684\u5f15\u5165\u5f88\u597d\u7684\u89e3\u51b3\u7a7a\u6307\u9488\u5f02\u5e38\u3002\u3002\u5728 java 9 \u4e2d, \u6dfb\u52a0\u4e86\u4e09\u4e2a\u65b9\u6cd5\u6765\u6539\u8fdb\u5b83\u7684\u529f\u80fd\uff1a * stream() * ifPresentOrElse() * or()","title":"\u6539\u8fdb\u7684 Optional \u7c7b"},{"location":"java/feature/#stream","text":"public Stream < T > stream () stream \u65b9\u6cd5\u7684\u4f5c\u7528\u5c31\u662f\u5c06 Optional \u8f6c\u4e3a\u4e00\u4e2a Stream\uff0c\u5982\u679c\u8be5 Optional \u4e2d\u5305\u542b\u503c\uff0c\u90a3\u4e48\u5c31\u8fd4\u56de\u5305\u542b\u8fd9\u4e2a\u503c\u7684 Stream\uff0c\u5426\u5219\u8fd4\u56de\u4e00\u4e2a\u7a7a\u7684 Stream\uff08Stream.empty()\uff09\u3002 import java.util.Arrays ; import java.util.List ; import java.util.Optional ; import java.util.stream.Collectors ; import java.util.stream.Stream ; public class Tester { public static void main ( String [] args ) { List < Optional < String >> list = Arrays . asList ( Optional . empty (), Optional . of ( \"A\" ), Optional . empty (), Optional . of ( \"B\" )); //filter the list based to print non-empty values //if optional is non-empty, get the value in stream, otherwise return empty List < String > filteredList = list . stream () . flatMap ( o -> o . isPresent () ? Stream . of ( o . get ()) : Stream . empty ()) . collect ( Collectors . toList ()); //Optional::stream method will return a stream of either one //or zero element if data is present or not. List < String > filteredListJava9 = list . stream () . flatMap ( Optional :: stream ) . collect ( Collectors . toList ()); System . out . println ( filteredList ); System . out . println ( filteredListJava9 ); } } \u6267\u884c\u8f93\u51fa\u7ed3\u679c\u4e3a\uff1a [A, B] [A, B]","title":"stream() \u65b9\u6cd5 \u8bed\u6cd5:"},{"location":"java/feature/#ifpresentorelse","text":"public void ifPresentOrElse ( Consumer <? super T > action , Runnable emptyAction ) ifPresentOrElse \u65b9\u6cd5\u7684\u6539\u8fdb\u5c31\u662f\u6709\u4e86 else\uff0c\u63a5\u53d7\u4e24\u4e2a\u53c2\u6570 Consumer \u548c Runnable\u3002 ifPresentOrElse \u65b9\u6cd5\u7684\u7528\u9014\u662f\uff0c\u5982\u679c\u4e00\u4e2a Optional \u5305\u542b\u503c\uff0c\u5219\u5bf9\u5176\u5305\u542b\u7684\u503c\u8c03\u7528\u51fd\u6570 action\uff0c\u5373 action.accept(value)\uff0c\u8fd9\u4e0e ifPresent \u4e00\u81f4\uff1b\u4e0e ifPresent \u65b9\u6cd5\u7684\u533a\u522b\u5728\u4e8e\uff0cifPresentOrElse \u8fd8\u6709\u7b2c\u4e8c\u4e2a\u53c2\u6570 emptyAction \u2014\u2014 \u5982\u679c Optional \u4e0d\u5305\u542b\u503c\uff0c\u90a3\u4e48 ifPresentOrElse \u4fbf\u4f1a\u8c03\u7528 emptyAction\uff0c\u5373 emptyAction.run()\u3002 import java.util.Optional ; public class Tester { public static void main ( String [] args ) { Optional < Integer > optional = Optional . of ( 1 ); optional . ifPresentOrElse ( x -> System . out . println ( \"Value: \" + x ),() -> System . out . println ( \"Not Present.\" )); optional = Optional . empty (); optional . ifPresentOrElse ( x -> System . out . println ( \"Value: \" + x ),() -> System . out . println ( \"Not Present.\" )); } } \u6267\u884c\u8f93\u51fa\u7ed3\u679c\u4e3a\uff1a Value: 1 Not Present.","title":"ifPresentOrElse() \u65b9\u6cd5 \u8bed\u6cd5:"},{"location":"java/feature/#or","text":"public Optional < T > or ( Supplier <? extends Optional <? extends T >> supplier ) \u5982\u679c\u503c\u5b58\u5728\uff0c\u8fd4\u56de Optional \u6307\u5b9a\u7684\u503c\uff0c\u5426\u5219\u8fd4\u56de\u4e00\u4e2a\u9884\u8bbe\u7684\u503c\u3002 import java.util.Optional ; import java.util.function.Supplier ; public class Tester { public static void main ( String [] args ) { Optional < String > optional1 = Optional . of ( \"Mahesh\" ); Supplier < Optional < String >> supplierString = () -> Optional . of ( \"Not Present\" ); optional1 = optional1 . or ( supplierString ); optional1 . ifPresent ( x -> System . out . println ( \"Value: \" + x )); optional1 = Optional . empty (); optional1 = optional1 . or ( supplierString ); optional1 . ifPresent ( x -> System . out . println ( \"Value: \" + x )); } } \u6267\u884c\u8f93\u51fa\u7ed3\u679c\u4e3a\uff1a Value: Mahesh Value: Not Present","title":"or() \u65b9\u6cd5 \u8bed\u6cd5:"},{"location":"java/feature/#api_2","text":"Java 9 \u5b9a\u4e49\u591a\u5206\u8fa8\u7387\u56fe\u50cf API\uff0c\u5f00\u53d1\u8005\u53ef\u4ee5\u5f88\u5bb9\u6613\u7684\u64cd\u4f5c\u548c\u5c55\u793a\u4e0d\u540c\u5206\u8fa8\u7387\u7684\u56fe\u50cf\u4e86\u3002 \u4ee5\u4e0b\u662f\u591a\u5206\u8fa8\u7387\u56fe\u50cf\u7684\u4e3b\u8981\u64cd\u4f5c\u65b9\u6cd5\uff1a Image getResolutionVariant(double destImageWidth, double destImageHeight) \u2212 \u83b7\u53d6\u7279\u5b9a\u5206\u8fa8\u7387\u7684\u56fe\u50cf\u53d8\u4f53-\u8868\u793a\u4e00\u5f20\u5df2\u77e5\u5206\u8fa8\u7387\u5355\u4f4d\u4e3aDPI\u7684\u7279\u5b9a\u5c3a\u5bf8\u5927\u5c0f\u7684\u903b\u8f91\u56fe\u50cf\uff0c\u5e76\u4e14\u8fd9\u5f20\u56fe\u50cf\u662f\u6700\u4f73\u7684\u53d8\u4f53\u3002\u3002 List getResolutionVariants() \u2212 \u8fd4\u56de\u53ef\u8bfb\u7684\u5206\u8fa8\u7387\u7684\u56fe\u50cf\u53d8\u4f53\u5217\u8868\u3002","title":"\u591a\u5206\u8fa8\u7387\u56fe\u50cf API"},{"location":"java/feature/#completablefuture-api","text":"Java 8 \u5f15\u5165\u4e86 CompletableFuture \u7c7b\uff0c\u53ef\u80fd\u662f java.util.concurrent.Future \u660e\u786e\u7684\u5b8c\u6210\u7248\uff08\u8bbe\u7f6e\u4e86\u5b83\u7684\u503c\u548c\u72b6\u6001\uff09\uff0c\u4e5f\u53ef\u80fd\u88ab\u7528\u4f5cjava.util.concurrent.CompleteStage \u3002\u652f\u6301 future \u5b8c\u6210\u65f6\u89e6\u53d1\u4e00\u4e9b\u4f9d\u8d56\u7684\u51fd\u6570\u548c\u52a8\u4f5c\u3002Java 9 \u5f15\u5165\u4e86\u4e00\u4e9bCompletableFuture \u7684\u6539\u8fdb\uff1a Java 9 \u5bf9 CompletableFuture \u505a\u4e86\u6539\u8fdb\uff1a \u652f\u6301 delays \u548c timeouts \u63d0\u5347\u4e86\u5bf9\u5b50\u7c7b\u5316\u7684\u652f\u6301 \u65b0\u7684\u5de5\u5382\u65b9\u6cd5","title":"\u6539\u8fdb\u7684 CompletableFuture API"},{"location":"java/feature/#delays-timeouts","text":"public CompletableFuture < T > completeOnTimeout ( T value , long timeout , TimeUnit unit ) \u5728 timeout\uff08\u5355\u4f4d\u5728 java.util.concurrent.Timeunits units \u4e2d\uff0c\u6bd4\u5982 MILLISECONDS \uff09\u524d\u4ee5\u7ed9\u5b9a\u7684 value \u5b8c\u6210\u8fd9\u4e2a CompletableFutrue\u3002\u8fd4\u56de\u8fd9\u4e2a CompletableFutrue\u3002 public CompletableFuture < T > orTimeout ( long timeout , TimeUnit unit ) \u5982\u679c\u6ca1\u6709\u5728\u7ed9\u5b9a\u7684 timeout \u5185\u5b8c\u6210\uff0c\u5c31\u4ee5 java.util.concurrent.TimeoutException \u5b8c\u6210\u8fd9\u4e2a CompletableFutrue\uff0c\u5e76\u8fd4\u56de\u8fd9\u4e2a CompletableFutrue","title":"\u652f\u6301 delays \u548c timeouts"},{"location":"java/feature/#_26","text":"\u505a\u4e86\u8bb8\u591a\u6539\u8fdb\u4f7f\u5f97 CompletableFuture \u53ef\u4ee5\u88ab\u66f4\u7b80\u5355\u7684\u7ee7\u627f\u3002\u6bd4\u5982\uff0c\u4f60\u4e5f\u8bb8\u60f3\u91cd\u5199\u65b0\u7684 public Executor defaultExecutor() \u65b9\u6cd5\u6765\u4ee3\u66ff\u9ed8\u8ba4\u7684 executor\u3002 \u53e6\u4e00\u4e2a\u65b0\u7684\u4f7f\u5b50\u7c7b\u5316\u66f4\u5bb9\u6613\u7684\u65b9\u6cd5\u662f\uff1a public < U > CompletableFuture < U > newIncompleteFuture ()","title":"\u589e\u5f3a\u4e86\u5bf9\u5b50\u7c7b\u5316\u7684\u652f\u6301"},{"location":"java/feature/#_27","text":"Java 8\u5f15\u5165\u4e86 <U> CompletableFuture<U> completedFuture(U value) \u5de5\u5382\u65b9\u6cd5\u6765\u8fd4\u56de\u4e00\u4e2a\u5df2\u7ecf\u4ee5\u7ed9\u5b9a value \u5b8c\u6210\u4e86\u7684 CompletableFuture\u3002Java 9\u4ee5 \u4e00\u4e2a\u65b0\u7684 <U> CompletableFuture <U> failedFuture(Throwable ex) \u6765\u8865\u5145\u4e86\u8fd9\u4e2a\u65b9\u6cd5\uff0c\u53ef\u4ee5\u8fd4\u56de\u4e00\u4e2a\u4ee5\u7ed9\u5b9a\u5f02\u5e38\u5b8c\u6210\u7684 CompletableFuture\u3002 \u9664\u6b64\u4ee5\u5916\uff0cJava 9 \u5f15\u5165\u4e86\u4e0b\u9762\u8fd9\u5bf9 stage-oriented \u5de5\u5382\u65b9\u6cd5\uff0c\u8fd4\u56de\u5b8c\u6210\u7684\u6216\u5f02\u5e38\u5b8c\u6210\u7684 completion stages: * <U> CompletionStage<U> completedStage(U value): \u8fd4\u56de\u4e00\u4e2a\u65b0\u7684\u4ee5\u6307\u5b9a value \u5b8c\u6210\u7684CompletionStage \uff0c\u5e76\u4e14\u53ea\u652f\u6301 CompletionStage \u91cc\u7684\u63a5\u53e3\u3002 * <U> CompletionStage<U> failedStage(Throwable ex): \u8fd4\u56de\u4e00\u4e2a\u65b0\u7684\u4ee5\u6307\u5b9a\u5f02\u5e38\u5b8c\u6210\u7684CompletionStage \uff0c\u5e76\u4e14\u53ea\u652f\u6301 CompletionStage \u91cc\u7684\u63a5\u53e3\u3002","title":"\u65b0\u7684\u5de5\u5382\u65b9\u6cd5"},{"location":"linux/often/","text":"Linux \u5e38\u7528\u547d\u4ee4 \u00b6 \u65e5\u5e38\u64cd\u4f5c\u547d\u4ee4 \u00b6 \u67e5\u770b\u5f53\u524d\u6240\u5728\u7684\u5de5\u4f5c\u76ee\u5f55\u7684\u5168\u8def\u5f84 pwd \u00b6 [ root@VM_0_14_centos ~ ] # pwd /root \u67e5\u770b\u5f53\u524d\u7cfb\u7edf\u7684\u65f6\u95f4 date \u00b6 [ root@VM_0_14_centos ~ ] # date +%Y-%m-%d 2018 -11-10 [ root@VM_0_14_centos ~ ] # date +%Y-%m-%d --date=\"-1 day\" #\u52a0\u51cf\u4e5f\u53ef\u4ee5 month | year 2018 -11-09 [ root@VM_0_14_centos ~ ] # date -s \"2018-10-10 15:38:46\" ## \u4fee\u6539\u65f6\u95f4 Sat Nov 10 15 :38:46 CST 2018 \u67e5\u770b\u6709\u8c01\u5728\u7ebf\uff08\u54ea\u4e9b\u4eba\u767b\u9646\u5230\u4e86\u670d\u52a1\u5668\uff09 \u00b6 [ root@VM_0_14_centos ~ ] # who root pts/0 2018 -11-10 15 :19 ( 125 .84.94.225 ) [ root@VM_0_14_centos ~ ] # last root pts/0 125 .84.94.225 Sat Nov 10 15 :19 still logged in root pts/0 125 .84.89.248 Mon Nov 5 08 :32 - 08 :32 ( 00 :00 ) root pts/0 125 .84.92.12 Mon Oct 22 11 :47 - 15 :18 ( 03 :30 ) root pts/0 125 .84.94.170 Fri Oct 19 15 :00 - 21 :07 ( 06 :06 ) root pts/0 125 .84.95.234 Mon Oct 15 10 :16 - 13 :55 ( 03 :39 ) root pts/0 125 .84.95.234 Sat Oct 13 17 :11 - 18 :32 ( 01 :20 ) root pts/1 125 .84.94.251 Thu Oct 11 12 :01 - 17 :09 ( 05 :08 ) root pts/0 125 .84.92.121 Thu Oct 11 09 :02 - 12 :09 ( 03 :07 ) root pts/0 125 .84.94.34 Wed Oct 10 17 :35 - 18 :14 ( 00 :39 ) \u5173\u673a/\u91cd\u542f \u00b6 \u5173\u673a\uff08\u5fc5\u987b\u7528root\u7528\u6237\uff09 shutdown -h now ## \u7acb\u523b\u5173\u673a shutdown -h +10 ## 10\u5206\u949f\u4ee5\u540e\u5173\u673a shutdown -h 12 :00:00 ##12\u70b9\u6574\u7684\u65f6\u5019\u5173\u673a halt # \u7b49\u4e8e\u7acb\u523b\u5173\u673a \u91cd\u542f shutdown -r now reboot # \u7b49\u4e8e\u7acb\u523b\u91cd\u542f \u6e05\u5c4f \u00b6 clear ## \u6216\u8005\u7528\u5feb\u6377\u952e ctrl + l \u9000\u51fa\u5f53\u524d\u8fdb\u7a0b \u00b6 ctrl+c ##\u6709\u4e9b\u7a0b\u5e8f\u4e5f\u53ef\u4ee5\u7528q\u952e\u9000\u51fa \u6302\u8d77\u5f53\u524d\u8fdb\u7a0b \u00b6 ctrl+z ## \u8fdb\u7a0b\u4f1a\u6302\u8d77\u5230\u540e\u53f0 bg jobid ## \u8ba9\u8fdb\u7a0b\u5728\u540e\u53f0\u7ee7\u7eed\u6267\u884c fg jobid ## \u8ba9\u8fdb\u7a0b\u56de\u5230\u524d\u53f0 echo \u00b6 [ root@VM_0_14_centos ~ ] # str='hello wrold' [ root@VM_0_14_centos ~ ] # echo str str [ root@VM_0_14_centos ~ ] # echo $str hello wrold \u76ee\u5f55\u64cd\u4f5c \u00b6 \u67e5\u770b\u76ee\u5f55\u4fe1\u606f \u00b6 ls / ## \u67e5\u770b\u6839\u76ee\u5f55\u4e0b\u7684\u5b50\u8282\u70b9\uff08\u6587\u4ef6\u5939\u548c\u6587\u4ef6\uff09\u4fe1\u606f ls -al ## -a\u662f\u663e\u793a\u9690\u85cf\u6587\u4ef6 -l\u662f\u4ee5\u66f4\u8be6\u7ec6\u7684\u5217\u8868\u5f62\u5f0f\u663e\u793a ls -l ##\u6709\u4e00\u4e2a\u522b\u540d\uff1a ll \u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528ll <\u662f\u4e24\u4e2aL> \u5207\u6362\u5de5\u4f5c\u76ee\u5f55 \u00b6 cd /home/hadoop ## \u5207\u6362\u5230\u7528\u6237\u4e3b\u76ee\u5f55 cd ~ ## \u5207\u6362\u5230\u7528\u6237\u4e3b\u76ee\u5f55 cd - ## \u56de\u9000\u5230\u4e0a\u6b21\u6240\u5728\u7684\u76ee\u5f55 cd ## \u4ec0\u4e48\u8def\u5f84\u90fd\u4e0d\u5e26\uff0c\u5219\u56de\u5230\u7528\u6237\u7684\u4e3b\u76ee\u5f55 \u521b\u5efa\u6587\u4ef6\u5939 \u00b6 mkdir aaa ## \u8fd9\u662f\u76f8\u5bf9\u8def\u5f84\u7684\u5199\u6cd5 mkdir /data ## \u8fd9\u662f\u7edd\u5bf9\u8def\u5f84\u7684\u5199\u6cd5 mkdir -p aaa/bbb/ccc ## \u7ea7\u8054\u521b\u5efa\u76ee\u5f55 \u5220\u9664\u6587\u4ef6\u5939 \u00b6 rmdir aaa ## \u53ef\u4ee5\u5220\u9664\u7a7a\u76ee\u5f55 rm -r aaa ## \u53ef\u4ee5\u628aaaa\u6574\u4e2a\u6587\u4ef6\u5939\u53ca\u5176\u4e2d\u7684\u6240\u6709\u5b50\u8282\u70b9\u5168\u90e8\u5220\u9664 rm -rf aaa ## \u5f3a\u5236\u5220\u9664aaa \u4fee\u6539\u6587\u4ef6\u5939\u540d\u79f0 \u00b6 mv aaa boy mv #\u672c\u8d28\u4e0a\u662f\u79fb\u52a8 mv install.log aaa/ #\u5c06\u5f53\u524d\u76ee\u5f55\u4e0b\u7684install.log \u79fb\u52a8\u5230aaa\u6587\u4ef6\u5939\u4e2d\u53bb rename #\u53ef\u4ee5\u7528\u6765\u6279\u91cf\u66f4\u6539\u6587\u4ef6\u540d [ root@VM_0_14_centos aaa ] # ll total 0 -rw-r--r--. 1 root root 0 Jul 28 17 :33 1 .txt -rw-r--r--. 1 root root 0 Jul 28 17 :33 2 .txt -rw-r--r--. 1 root root 0 Jul 28 17 :33 3 .txt [ root@VM_0_14_centos aaa ] # rename .txt .txt.bak * [ root@VM_0_14_centos aaa ] # ll total 0 -rw-r--r--. 1 root root 0 Jul 28 17 :33 1 .txt.bak -rw-r--r--. 1 root root 0 Jul 28 17 :33 2 .txt.bak -rw-r--r--. 1 root root 0 Jul 28 17 :33 3 .txt.bak \u6587\u4ef6\u64cd\u4f5c \u00b6 \u521b\u5efa\u6587\u4ef6 \u00b6 touch somefile.1 ## \u521b\u5efa\u4e00\u4e2a\u7a7a\u6587\u4ef6 echo \"hi,boy\" > somefile.2 ## \u5229\u7528\u91cd\u5b9a\u5411\u201c>\u201d\u7684\u529f\u80fd\uff0c\u5c06\u4e00\u6761\u6307\u4ee4\u7684\u8f93\u51fa\u7ed3\u679c\u5199\u5165\u5230\u4e00\u4e2a\u6587\u4ef6\u4e2d\uff0c\u4f1a\u8986\u76d6\u539f\u6587\u4ef6\u5185\u5bb9\uff0c\u5982\u679c\u6307\u5b9a\u7684\u6587\u4ef6\u4e0d\u5b58\u5728\uff0c\u5219\u4f1a\u521b\u5efa\u51fa\u6765 echo \"hi baby\" >> somefile.2 ## \u5c06\u4e00\u6761\u6307\u4ee4\u7684\u8f93\u51fa\u7ed3\u679c\u8ffd\u52a0\u5230\u4e00\u4e2a\u6587\u4ef6\u4e2d\uff0c\u4e0d\u4f1a\u8986\u76d6\u539f\u6587\u4ef6\u5185\u5bb9 vi\u6587\u672c\u7f16\u8f91\u5668 \u00b6 \u6700\u57fa\u672c\u7528\u6cd5 vi somefile.4 1. \u9996\u5148\u4f1a\u8fdb\u5165\u201c\u4e00\u822c\u6a21\u5f0f\u201d\uff0c\u6b64\u6a21\u5f0f\u53ea\u63a5\u53d7\u5404\u79cd\u5feb\u6377\u952e\uff0c\u4e0d\u80fd\u7f16\u8f91\u6587\u4ef6\u5185\u5bb9 2. \u6309i\u952e\uff0c\u5c31\u4f1a\u4ece\u4e00\u822c\u6a21\u5f0f\u8fdb\u5165\u7f16\u8f91\u6a21\u5f0f\uff0c\u6b64\u6a21\u5f0f\u4e0b\uff0c\u6572\u5165\u7684\u90fd\u662f\u6587\u4ef6\u5185\u5bb9 3. \u7f16\u8f91\u5b8c\u6210\u4e4b\u540e\uff0c\u6309Esc\u952e\u9000\u51fa\u7f16\u8f91\u6a21\u5f0f\uff0c\u56de\u5230\u4e00\u822c\u6a21\u5f0f\uff1b 4. \u518d\u6309\uff1a\uff0c\u8fdb\u5165\u201c\u5e95\u884c\u547d\u4ee4\u6a21\u5f0f\u201d\uff0c\u8f93\u5165wq\u547d\u4ee4\uff0c\u56de\u8f66\u5373\u53ef \u5e38\u7528\u5feb\u6377\u952e \u4e00\u4e9b\u6709\u7528\u7684\u5feb\u6377\u952e\uff08\u5728\u4e00\u822c\u6a21\u5f0f\u4e0b\u4f7f\u7528\uff09\uff1a * a \u5728\u5149\u6807\u540e\u4e00\u4f4d\u5f00\u59cb\u63d2\u5165 * A \u5728\u8be5\u884c\u7684\u6700\u540e\u63d2\u5165 * I \u5728\u8be5\u884c\u7684\u6700\u524d\u9762\u63d2\u5165 * gg \u76f4\u63a5\u8df3\u5230\u6587\u4ef6\u7684\u9996\u884c * G \u76f4\u63a5\u8df3\u5230\u6587\u4ef6\u7684\u672b\u884c * dd \u5220\u9664\u4e00\u884c * 3dd \u5220\u96643\u884c * yy \u590d\u5236\u4e00\u884c * 3yy \u590d\u52363\u884c * p \u7c98\u8d34 * u undo * v \u8fdb\u5165\u5b57\u7b26\u9009\u62e9\u6a21\u5f0f\uff0c\u9009\u62e9\u5b8c\u6210\u540e\uff0c\u6309y\u590d\u5236\uff0c\u6309p\u7c98\u8d34 * ctrl+v \u8fdb\u5165\u5757\u9009\u62e9\u6a21\u5f0f\uff0c\u9009\u62e9\u5b8c\u6210\u540e\uff0c\u6309y\u590d\u5236\uff0c\u6309p\u7c98\u8d34 * shift+v \u8fdb\u5165\u884c\u9009\u62e9\u6a21\u5f0f\uff0c\u9009\u62e9\u5b8c\u6210\u540e\uff0c\u6309y\u590d\u5236\uff0c\u6309p\u7c98\u8d34 \u67e5\u627e\u5e76\u66ff\u6362 1. \u663e\u793a\u884c\u53f7:set nu 2. \u9690\u85cf\u884c\u53f7:set nonu 3. \u67e5\u627e\u5173\u952e\u5b57:/you ## \u6548\u679c\uff1a\u67e5\u627e\u6587\u4ef6\u4e2d\u51fa\u73b0\u7684you\uff0c\u5e76\u5b9a\u4f4d\u5230\u7b2c\u4e00\u4e2a\u627e\u5230\u7684\u5730\u65b9\uff0c\u6309n\u53ef\u4ee5\u5b9a\u4f4d\u5230\u4e0b\u4e00\u4e2a\u5339\u914d\u4f4d\u7f6e\uff08\u6309N\u5b9a\u4f4d\u5230\u4e0a\u4e00\u4e2a\uff09 4. \u66ff\u6362\u64cd\u4f5c:s/sad/bbb ## \u67e5\u627e\u5149\u6807\u6240\u5728\u884c\u7684\u7b2c\u4e00\u4e2asad\uff0c\u66ff\u6362\u4e3abbb.:%s/sad/bbb ##\u67e5\u627e\u6587\u4ef6\u4e2d\u6240\u6709sad\uff0c\u66ff\u6362\u4e3abbb \u62f7\u8d1d/\u5220\u9664/\u79fb\u52a8 \u00b6 cp somefile.1 /home/hadoop/ rm /home/hadoop/somefile.1 rm -f /home/hadoop/somefile.1 mv /home/hadoop/somefile.1 ../ \u67e5\u770b\u6587\u4ef6\u5185\u5bb9 \u00b6 cat somefile \u4e00\u6b21\u6027\u5c06\u6587\u4ef6\u5185\u5bb9\u5168\u90e8\u8f93\u51fa\uff08\u63a7\u5236\u53f0\uff09 more somefile \u53ef\u4ee5\u7ffb\u9875\u67e5\u770b, \u4e0b\u7ffb\u4e00\u9875 ( \u7a7a\u683c ) \u4e0a\u7ffb\u4e00\u9875\uff08b\uff09 \u9000\u51fa\uff08q\uff09 less somefile \u53ef\u4ee5\u7ffb\u9875\u67e5\u770b,\u4e0b\u7ffb\u4e00\u9875 ( \u7a7a\u683c ) \u4e0a\u7ffb\u4e00\u9875\uff08b\uff09\uff0c\u4e0a\u7ffb\u4e00\u884c ( \u2191 ) \u4e0b\u7ffb\u4e00\u884c\uff08\u2193\uff09 \u53ef\u4ee5\u641c\u7d22\u5173\u952e\u5b57\uff08/keyword\uff09 \u8df3\u5230\u6587\u4ef6\u672b\u5c3e\uff1a G \u8df3\u5230\u6587\u4ef6\u9996\u884c\uff1a gg \u9000\u51faless \uff1a q tail -10 install.log \u67e5\u770b\u6587\u4ef6\u5c3e\u90e8\u768410\u884c tail +10 install.log \u67e5\u770b\u6587\u4ef6 10 -->\u672b\u884c tail -f install.log \u5c0ff\u8ddf\u8e2a\u6587\u4ef6\u7684\u552f\u4e00inode\u53f7\uff0c\u5c31\u7b97\u6587\u4ef6\u6539\u540d\u540e\uff0c\u8fd8\u662f\u8ddf\u8e2a\u539f\u6765\u8fd9\u4e2ainode\u8868\u793a\u7684\u6587\u4ef6 tail -F install.log \u5927F\u6309\u7167\u6587\u4ef6\u540d\u6765\u8ddf\u8e2a head -10 install.log \u67e5\u770b\u6587\u4ef6\u5934\u90e8\u768410 \u6253\u5305\u538b\u7f29 \u00b6 gzip\u538b\u7f29:gzip a.txt \u89e3\u538b:gunzip a.txt.gz \u6216\u8005 gzip -d a.txt.gz bzip2\u538b\u7f29:bzip2 a \u89e3\u538b:bunzip2 a.bz2 \u6216\u8005 bzip2 -d a.bz2 \u6253\u5305\uff1a\u5c06\u6307\u5b9a\u6587\u4ef6\u6216\u6587\u4ef6\u5939-> tar -cvf bak.tar ./aaa \u5c06/etc/password\u8ffd\u52a0\u6587\u4ef6\u5230bak.tar\u4e2d\u00ae-> tar -rvf bak.tar /etc/password \u89e3\u538b:tar -xvf bak.tar \u6253\u5305\u5e76\u538b\u7f29:tar -zcvf a.tar.gz aaa/ \u89e3\u5305\u5e76\u89e3\u538b\u7f29(\u91cd\u8981\u7684\u4e8b\u60c5\u8bf4\u4e09\u904d!!!):tar -zxvf a.tar.gz \u89e3\u538b\u5230/usr/\u4e0b->tar -zxvf a.tar.gz -C /usr \u67e5\u770b\u538b\u7f29\u5305\u5185\u5bb9:tar -ztvf a.tar.gz zip/unzip \u6253\u5305\u5e76\u538b\u7f29\u6210bz2:tar -jcvf a.tar.bz2 \u89e3\u538bbz2:tar -jxvf a.tar.bz2 \u67e5\u627e\u547d\u4ee4 \u00b6 \u5e38\u7528\u67e5\u627e\u547d\u4ee4\u7684\u4f7f\u7528 \u00b6 \u67e5\u627e\u53ef\u6267\u884c\u7684\u547d\u4ee4\u6240\u5728\u7684\u8def\u5f84\uff1awhich ls \u67e5\u627e\u53ef\u6267\u884c\u7684\u547d\u4ee4\u548c\u5e2e\u52a9\u7684\u4f4d\u7f6e\uff1awhereis ls \u4ece\u67d0\u4e2a\u6587\u4ef6\u5939\u5f00\u59cb\u67e5\u627e\u6587\u4ef6\uff1afind / -name \"hadooop*\" \u6216\u8005find / -name \"hadooop*\" -ls \u67e5\u627e\u5e76\u5220\u9664\uff1afind / -name \"hadooop*\" -ok rm {} \\;find / -name \"hadooop*\" -exec rm {} \\; \u67e5\u627e\u7528\u6237\u4e3ahadoop\u7684\u6587\u4ef6:find /usr -user hadoop -ls \u67e5\u627e\u7528\u6237\u4e3ahadoop\u7684\u6587\u4ef6\u5939:find /home -user hadoop -type d -ls \u67e5\u627e\u6743\u9650\u4e3a777\u7684\u6587\u4ef6:find / -perm -777 -type d -ls \u663e\u793a\u547d\u4ee4\u5386\u53f2:history grep\u547d\u4ee4 \u00b6 \u57fa\u672c\u4f7f\u7528 \u67e5\u8be2\u5305\u542bhadoop\u7684\u884c grep hadoop /etc/password \u67e5\u8be2\u5305\u542baaa\u7684\u884c grep aaa ./*.txt cut\u622a\u53d6\u4ee5:\u5206\u5272\u4fdd\u7559\u7b2c\u4e03\u6bb5: grep hadoop /etc/passwd | cut -d: -f7 \u67e5\u8be2\u4e0d\u5305\u542bhadoop\u7684\u884c:grep -v hadoop /etc/passwd \u6b63\u5219\u8868\u8fbe\u5305\u542bhadoop:grep 'hadoop' /etc/passwd \u6b63\u5219\u8868\u8fbe(\u70b9\u4ee3\u8868\u4efb\u610f\u4e00\u4e2a\u5b57\u7b26):grep 'h.*p' /etc/passwd \u6b63\u5219\u8868\u8fbe\u4ee5hadoop\u5f00\u5934:grep '^hadoop' /etc/passwd \u6b63\u5219\u8868\u8fbe\u4ee5hadoop\u7ed3\u5c3e:grep 'hadoop$' /etc/passwd \u89c4\u5219\uff1a . : \u4efb\u610f\u4e00\u4e2a\u5b57\u7b26 a* : \u4efb\u610f\u591a\u4e2aa(\u96f6\u4e2a\u6216\u591a\u4e2aa) a? : \u96f6\u4e2a\u6216\u4e00\u4e2aa a+ : \u4e00\u4e2a\u6216\u591a\u4e2aa .* : \u4efb\u610f\u591a\u4e2a\u4efb\u610f\u5b57\u7b26 \\. : \u8f6c\u4e49. o\\{2\\} : o\u91cd\u590d\u4e24\u6b21 \u67e5\u627e\u4e0d\u662f\u4ee5#\u5f00\u5934\u7684\u884c: grep -v '^#' a.txt | grep -v '^$' \u4ee5h\u6216r\u5f00\u5934\u7684:grep '^[hr]' /etc/passwd \u4e0d\u662f\u4ee5h\u548cr\u5f00\u5934\u7684:grep ' [ hr]' /etc/passwd \u4e0d\u662f\u4ee5h\u5230r\u5f00\u5934\u7684:grep ' [ h-r]' /etc/passwd \u6587\u4ef6\u6743\u9650\u7684\u64cd\u4f5c \u00b6 linux\u6587\u4ef6\u6743\u9650\u7684\u63cf\u8ff0\u683c\u5f0f\u89e3\u8bfb \u00b6 drwxr-xr-x \uff08\u4e5f\u53ef\u4ee5\u7528\u4e8c\u8fdb\u5236\u8868\u793a 111 101 101 --> 755\uff09 d\uff1a\u6807\u8bc6\u8282\u70b9\u7c7b\u578b\uff08d\uff1a\u6587\u4ef6\u5939 -\uff1a\u6587\u4ef6 l:\u94fe\u63a5\uff09 r\uff1a\u53ef\u8bfb w\uff1a\u53ef\u5199 x\uff1a\u53ef\u6267\u884c \u7b2c\u4e00\u7ec4rwx\uff1a ## \u8868\u793a\u8fd9\u4e2a\u6587\u4ef6\u7684\u62e5\u6709\u8005\u5bf9\u5b83\u7684\u6743\u9650\uff1a\u53ef\u8bfb\u53ef\u5199\u53ef\u6267\u884c \u7b2c\u4e8c\u7ec4r-x\uff1a ## \u8868\u793a\u8fd9\u4e2a\u6587\u4ef6\u7684\u6240\u5c5e\u7ec4\u7528\u6237\u5bf9\u5b83\u7684\u6743\u9650\uff1a\u53ef\u8bfb\uff0c\u4e0d\u53ef\u5199\uff0c\u53ef\u6267\u884c \u7b2c\u4e09\u7ec4r-x\uff1a ## \u8868\u793a\u8fd9\u4e2a\u6587\u4ef6\u7684\u5176\u4ed6\u7528\u6237\uff08\u76f8\u5bf9\u4e8e\u4e0a\u9762\u4e24\u7c7b\u7528\u6237\uff09\u5bf9\u5b83\u7684\u6743\u9650\uff1a\u53ef\u8bfb\uff0c\u4e0d\u53ef\u5199\uff0c\u53ef \u4fee\u6539\u6587\u4ef6\u6743\u9650 \u00b6 chmod g-rw haha.dat ## \u8868\u793a\u5c06haha.dat\u5bf9\u6240\u5c5e\u7ec4\u7684rw\u6743\u9650\u53d6\u6d88 chmod o-rw haha.dat ## \u8868\u793a\u5c06haha.dat\u5bf9\u5176\u4ed6\u4eba\u7684rw\u6743\u9650\u53d6\u6d88 chmod u+x haha.dat ## \u8868\u793a\u5c06haha.dat\u5bf9\u6240\u5c5e\u7528\u6237\u7684\u6743\u9650\u589e\u52a0x chmod a-x haha.dat ## \u8868\u793a\u5c06haha.dat\u5bf9\u6240\u7528\u6237\u53d6\u6d88x\u6743\u9650 chmod 664 haha.dat ## \u4e5f\u53ef\u4ee5\u7528\u6570\u5b57\u7684\u65b9\u5f0f\u6765\u4fee\u6539\u6743\u9650 \u5c31\u4f1a\u4fee\u6539\u6210 rw-rw-r-- chmod -R 770 aaa/ ## \u5982\u679c\u8981\u5c06\u4e00\u4e2a\u6587\u4ef6\u5939\u7684\u6240\u6709\u5185\u5bb9\u6743\u9650\u7edf\u4e00\u4fee\u6539\uff0c\u5219\u53ef\u4ee5-R\u53c2\u6570 \u4fee\u6539\u6587\u4ef6\u6240\u6709\u6743 \u00b6 <\u53ea\u6709root\u6743\u9650\u80fd\u6267\u884c> chown angela aaa ## \u6539\u53d8\u6240\u5c5e\u7528\u6237 chown :angela aaa ## \u6539\u53d8\u6240\u5c5e\u7ec4 chown angela:angela aaa/ ## \u540c\u65f6\u4fee\u6539\u6240\u5c5e\u7528\u6237\u548c\u6240\u5c5e\u7ec4 \u57fa\u672c\u7684\u7528\u6237\u7ba1\u7406 \u00b6 \u6dfb\u52a0\u4e00\u4e2a\u7528\u6237\uff1a useradd spark passwd spark \u6839\u636e\u63d0\u793a\u8bbe\u7f6e\u5bc6\u7801\uff1b \u5373\u53ef \u5220\u9664\u4e00\u4e2a\u7528\u6237\uff1a userdel -r spark \u52a0\u4e00\u4e2a-r\u5c31\u8868\u793a\u628a\u7528\u6237\u53ca\u7528\u6237\u7684\u4e3b\u76ee\u5f55\u90fd\u5220\u9664 \u6dfb\u52a0\u7528\u6237 \u00b6 \u6dfb\u52a0\u4e00\u4e2atom\u7528\u6237\uff0c\u8bbe\u7f6e\u5b83\u5c5e\u4e8eusers\u7ec4\uff0c\u5e76\u6dfb\u52a0\u6ce8\u91ca\u4fe1\u606f \u5206\u6b65\u5b8c\u6210\uff1auseradd tom usermod -g users tom usermod -c \"hr tom\" tom \u4e00\u6b65\u5b8c\u6210\uff1auseradd -g users -c \"hr tom\" tom \u8bbe\u7f6etom\u7528\u6237\u7684\u5bc6\u7801 passwd tom \u4fee\u6539\u7528\u6237 \u00b6 \u4fee\u6539tom\u7528\u6237\u7684\u767b\u9646\u540d\u4e3atomcat usermod -l tomcat tom \u5c06tomcat\u6dfb\u52a0\u5230sys\u548croot\u7ec4\u4e2d usermod -G sys,root tomcat \u67e5\u770btomcat\u7684\u7ec4\u4fe1\u606f groups tomcat \u7528\u6237\u7ec4\u64cd\u4f5c \u00b6 \u6dfb\u52a0\u4e00\u4e2a\u53ebamerica\u7684\u7ec4 groupadd america \u5c06jerry\u6dfb\u52a0\u5230america\u7ec4\u4e2d usermod -g america jerry \u5c06tomcat\u7528\u6237\u4eceroot\u7ec4\u548csys\u7ec4\u5220\u9664 gpasswd -d tomcat root gpasswd -d tomcat sys \u5c06america\u7ec4\u540d\u4fee\u6539\u4e3aam groupmod -n am america \u4e3a\u7528\u6237\u914d\u7f6esudo\u6743\u9650 \u00b6 \u7528root\u7f16\u8f91 vi /etc/sudoers \u5728\u6587\u4ef6\u7684\u5982\u4e0b\u4f4d\u7f6e\uff0c\u4e3ahadoop\u6dfb\u52a0\u4e00\u884c\u5373\u53ef root ALL=(ALL) ALL hadoop ALL=(ALL) ALL \u7136\u540e\uff0chadoop\u7528\u6237\u5c31\u53ef\u4ee5\u7528sudo\u6765\u6267\u884c\u7cfb\u7edf\u7ea7\u522b\u7684\u6307\u4ee4 [root@localhost ~]$ sudo useradd xiaoming \u7cfb\u7edf\u7ba1\u7406\u64cd\u4f5c \u00b6 \u6302\u8f7d\u5916\u90e8\u5b58\u50a8\u8bbe\u5907 \u00b6 \u53ef\u4ee5\u6302\u8f7d\u5149\u76d8\u3001\u786c\u76d8\u3001\u78c1\u5e26\u3001\u5149\u76d8\u955c\u50cf\u6587\u4ef6\u7b49 1. \u6302\u8f7d\u5149\u9a71 mkdir /mnt/cdrom \u521b\u5efa\u4e00\u4e2a\u76ee\u5f55\uff0c\u7528\u6765\u6302\u8f7d mount -t iso9660 -o ro /dev/cdrom /mnt/cdrom/ \u5c06\u8bbe\u5907/dev/cdrom\u6302\u8f7d\u5230 \u6302\u8f7d\u70b9 \uff1a /mnt/cdrom\u4e2d \u6302\u8f7d\u5149\u76d8\u955c\u50cf\u6587\u4ef6\uff08.iso\u6587\u4ef6\uff09 mount -t iso9660 -o loop /home/hadoop/Centos-7.0.DVD.iso /mnt/centos \u6ce8\uff1a\u6302\u8f7d\u7684\u8d44\u6e90\u5728\u91cd\u542f\u540e\u5373\u5931\u6548\uff0c\u9700\u8981\u91cd\u65b0\u6302\u8f7d\u3002\u8981\u60f3\u81ea\u52a8\u6302\u8f7d\uff0c\u53ef\u4ee5\u5c06\u6302\u8f7d\u4fe1\u606f\u8bbe\u7f6e\u5230/etc/fstab\u914d\u7f6e\u6587\u4ef6\u4e2d\uff0c\u5982\u4e0b\uff1a /dev/cdrom/mnt/cdromiso9660 defaults 0 0 \u5378\u8f7d umount umount /mnt/cdrom \u5b58\u50a8\u7a7a\u95f4\u67e5\u770b df -h \u7edf\u8ba1\u6587\u4ef6\u6216\u6587\u4ef6\u5939\u7684\u5927\u5c0f \u00b6 du -sh /mnt/cdrom/packages df -h \u67e5\u770b\u78c1\u76d8\u7684\u7a7a\u95f4 \u7cfb\u7edf\u670d\u52a1\u7ba1\u7406 \u00b6 service sshd status service sshd stop service sshd start service sshd restart \u7cfb\u7edf\u542f\u52a8\u7ea7\u522b\u7ba1\u7406 \u00b6 vi /etc/inittab # Default runlevel. The runlevels used are: # 0 - halt (Do NOT set initdefault to this) # 1 - Single user mode # 2 - Multiuser, without NFS (The same as 3, if you do not have networking) # 3 - Full multiuser mode # 4 - unused # 5 - X11 # 6 - reboot (Do NOT set initdefault to this) # id:3:initdefault: ## \u901a\u5e38\u5c06\u9ed8\u8ba4\u542f\u52a8\u7ea7\u522b\u8bbe\u7f6e\u4e3a\uff1a3 \u8fdb\u7a0b\u7ba1\u7406 \u00b6 top free ps -ef | grep ssh kill -9 SSH\u514d\u5bc6\u767b\u9646\u914d\u7f6e \u00b6 SSH\u5de5\u4f5c\u673a\u5236 \u00b6 \u76f8\u5173\u6982\u5ff5 SSH \u4e3a Secure Shell\uff08\u5b89\u5168\u5916\u58f3\u534f\u8bae\uff09 \u7684\u7f29\u5199\u3002 \u5f88\u591aftp\u3001pop\u548ctelnet\u5728\u672c\u8d28\u4e0a\u90fd\u662f\u4e0d\u5b89\u5168\u7684\uff0c\u56e0\u4e3a\u5b83\u4eec\u5728\u7f51\u7edc\u4e0a\u7528\u660e\u6587\u4f20\u9001\u53e3\u4ee4\u548c\u6570\u636e\uff0c\u522b\u6709\u7528\u5fc3\u7684\u4eba\u975e\u5e38\u5bb9\u6613\u5c31\u53ef\u4ee5\u622a\u83b7\u8fd9\u4e9b\u53e3\u4ee4\u548c\u6570\u636e\u3002 \u800cSSH\u5c31\u662f\u4e13\u4e3a\u8fdc\u7a0b\u767b\u5f55\u4f1a\u8bdd\u548c\u5176\u4ed6\u7f51\u7edc\u670d\u52a1\u63d0\u4f9b\u5b89\u5168\u6027\u7684\u534f\u8bae\u3002 SSH\u662f\u7531\u5ba2\u6237\u7aef\u548c\u670d\u52a1\u7aef\u7684\u8f6f\u4ef6\u7ec4\u6210\u7684 \u670d\u52a1\u7aef\u662f\u4e00\u4e2a\u5b88\u62a4\u8fdb\u7a0b(sshd)\uff0c\u4ed6\u5728\u540e\u53f0\u8fd0\u884c\u5e76\u54cd\u5e94\u6765\u81ea\u5ba2\u6237\u7aef\u7684\u8fde\u63a5\u8bf7\u6c42\u3002 \u5ba2\u6237\u7aef\u5305\u542bssh\u7a0b\u5e8f\u4ee5\u53ca\u50cfscp\uff08\u8fdc\u7a0b\u62f7\u8d1d\uff09\u3001slogin\uff08\u8fdc\u7a0b\u767b\u9646\uff09\u3001sftp\uff08\u5b89\u5168\u6587\u4ef6\u4f20\u8f93\uff09\u7b49\u5176\u4ed6\u7684\u5e94\u7528\u7a0b\u5e8f\u3002 \u8ba4\u8bc1\u673a\u5236 \u4ece\u5ba2\u6237\u7aef\u6765\u770b\uff0cSSH\u63d0\u4f9b\u4e24\u79cd\u7ea7\u522b\u7684\u5b89\u5168\u9a8c\u8bc1\u3002 \u7b2c\u4e00\u79cd\u7ea7\u522b\uff08\u57fa\u4e8e\u53e3\u4ee4\u7684\u5b89\u5168\u9a8c\u8bc1\uff09 \u53ea\u8981\u4f60\u77e5\u9053\u81ea\u5df1\u5e10\u53f7\u548c\u53e3\u4ee4\uff0c\u5c31\u53ef\u4ee5\u767b\u5f55\u5230\u8fdc\u7a0b\u4e3b\u673a\u3002 \u7b2c\u4e8c\u79cd\u7ea7\u522b\uff08\u57fa\u4e8e\u5bc6\u94a5\u7684\u5b89\u5168\u9a8c\u8bc1\uff09 \u9700\u8981\u4f9d\u9760\u5bc6\u5319\uff0c\u4e5f\u5c31\u662f\u4f60\u5fc5\u987b\u4e3a\u81ea\u5df1\u521b\u5efa\u4e00\u5bf9\u5bc6\u5319\uff0c\u5e76\u628a\u516c\u7528\u5bc6\u5319\u653e\u5728\u9700\u8981\u8bbf\u95ee\u7684\u670d\u52a1\u5668\u4e0a\u3002\u5982\u679c\u4f60\u8981\u8fde\u63a5\u5230SSH\u670d\u52a1\u5668\u4e0a\uff0c \u5ba2\u6237\u7aef\u8f6f\u4ef6\u5c31\u4f1a\u5411\u670d\u52a1\u5668\u53d1\u51fa\u8bf7\u6c42\uff0c\u8bf7\u6c42\u7528\u4f60\u7684\u5bc6\u5319\u8fdb\u884c\u5b89\u5168\u9a8c\u8bc1\u3002\u670d\u52a1\u5668\u6536\u5230\u8bf7\u6c42\u4e4b\u540e\uff0c\u5148\u5728\u8be5\u670d\u52a1\u5668\u4e0a\u4f60\u7684\u4e3b\u76ee\u5f55\u4e0b\u5bfb\u627e\u4f60\u7684\u516c\u7528\u5bc6\u5319\uff0c \u7136\u540e\u628a\u5b83\u548c\u4f60\u53d1\u9001\u8fc7\u6765\u7684\u516c\u7528\u5bc6\u5319\u8fdb\u884c\u6bd4\u8f83\u3002\u5982\u679c\u4e24\u4e2a\u5bc6\u5319\u4e00\u81f4\uff0c\u670d\u52a1\u5668\u5c31\u7528\u516c\u7528\u5bc6\u5319\u52a0\u5bc6\u201c\u8d28\u8be2\u201d\uff08challenge\uff09\u5e76\u628a\u5b83\u53d1\u9001\u7ed9\u5ba2\u6237\u7aef\u8f6f\u4ef6\u3002 \u5ba2\u6237\u7aef\u8f6f\u4ef6\u6536\u5230\u201c\u8d28\u8be2\u201d\u4e4b\u540e\u5c31\u53ef\u4ee5\u7528\u4f60\u7684\u79c1\u4eba\u5bc6\u5319\u89e3\u5bc6\u518d\u628a\u5b83\u53d1\u9001\u7ed9\u670d\u52a1\u5668\u3002 \u5bc6\u94a5\u767b\u9646\u65b9\u5f0f\u914d\u7f6e \u00b6 \u5047\u5982 A \u8981\u767b\u9646 B \u5728A\u4e0a\u64cd\u4f5c\uff1a 1. \u9996\u5148\u751f\u6210\u5bc6\u94a5\u5bf9:ssh-keygen (\u63d0\u793a\u65f6\uff0c\u76f4\u63a5\u56de\u8f66\u5373\u53ef) 2. \u518d\u5c06A\u81ea\u5df1\u7684\u516c\u94a5\u62f7\u8d1d\u5e76\u8ffd\u52a0\u5230B\u7684\u6388\u6743\u5217\u8868\u6587\u4ef6authorized_keys\u4e2d: ssh-copy-id B \u7f51\u7edc\u7ba1\u7406 \u00b6 \u4e3b\u673a\u540d\u914d\u7f6e \u00b6 \u67e5\u770b\u4e3b\u673a\u540d:hostname \u4fee\u6539\u4e3b\u673a\u540d(\u91cd\u542f\u540e\u65e0\u6548):hostname hadoop \u4fee\u6539\u4e3b\u673a\u540d(\u91cd\u542f\u540e\u6c38\u4e45\u751f\u6548) :vi /ect/sysconfig/network IP\u5730\u5740\u914d\u7f6e \u00b6 \u4fee\u6539IP\u5730\u5740 1. \u65b9\u5f0f\u4e00\uff1asetup \u7528root\u8f93\u5165setup\u547d\u4ee4\uff0c\u8fdb\u5165\u4ea4\u4e92\u5f0f\u4fee\u6539\u754c\u9762 2. \u65b9\u5f0f\u4e8c\uff1a\u4fee\u6539\u914d\u7f6e\u6587\u4ef6 \u4e00\u822c\u4f7f\u7528\u8fd9\u79cd\u65b9\u6cd5 (\u91cd\u542f\u540e\u6c38\u4e45\u751f\u6548) vi /etc/sysconfig/network-scripts/ifcfg-eth0 3. \u65b9\u5f0f\u4e09\uff1aifconfig\u547d\u4ee4(\u91cd\u542f\u540e\u65e0\u6548) ifconfig eth0 192.168.12.22\u4fee\u6539IP\u5730\u5740 \u7f51\u7edc\u670d\u52a1\u7ba1\u7406 \u00b6 \u540e\u53f0\u670d\u52a1\u7ba1\u7406 service network status \u67e5\u770b\u6307\u5b9a\u670d\u52a1\u7684\u72b6\u6001 service network stop \u505c\u6b62\u6307\u5b9a\u670d\u52a1 service network start \u542f\u52a8\u6307\u5b9a\u670d\u52a1 service network restart \u91cd\u542f\u6307\u5b9a\u670d\u52a1 service --status-all \u67e5\u770b\u7cfb\u7edf\u4e2d\u6240\u6709\u7684\u540e\u53f0\u670d\u52a1 \u8bbe\u7f6e\u540e\u53f0\u670d\u52a1\u7684\u81ea\u542f\u914d\u7f6e chkconfig \u67e5\u770b\u6240\u6709\u670d\u52a1\u5668\u81ea\u542f\u914d\u7f6e chkconfig iptables off \u5173\u6389\u6307\u5b9a\u670d\u52a1\u7684\u81ea\u52a8\u542f\u52a8 chkconfig iptables on \u5f00\u542f\u6307\u5b9a\u670d\u52a1\u7684\u81ea\u52a8\u542f\u52a8","title":"\u5e38\u7528\u547d\u4ee4"},{"location":"linux/often/#linux","text":"","title":"Linux \u5e38\u7528\u547d\u4ee4"},{"location":"linux/often/#_1","text":"","title":"\u65e5\u5e38\u64cd\u4f5c\u547d\u4ee4"},{"location":"linux/often/#pwd","text":"[ root@VM_0_14_centos ~ ] # pwd /root","title":"\u67e5\u770b\u5f53\u524d\u6240\u5728\u7684\u5de5\u4f5c\u76ee\u5f55\u7684\u5168\u8def\u5f84 pwd"},{"location":"linux/often/#date","text":"[ root@VM_0_14_centos ~ ] # date +%Y-%m-%d 2018 -11-10 [ root@VM_0_14_centos ~ ] # date +%Y-%m-%d --date=\"-1 day\" #\u52a0\u51cf\u4e5f\u53ef\u4ee5 month | year 2018 -11-09 [ root@VM_0_14_centos ~ ] # date -s \"2018-10-10 15:38:46\" ## \u4fee\u6539\u65f6\u95f4 Sat Nov 10 15 :38:46 CST 2018","title":"\u67e5\u770b\u5f53\u524d\u7cfb\u7edf\u7684\u65f6\u95f4 date"},{"location":"linux/often/#_2","text":"[ root@VM_0_14_centos ~ ] # who root pts/0 2018 -11-10 15 :19 ( 125 .84.94.225 ) [ root@VM_0_14_centos ~ ] # last root pts/0 125 .84.94.225 Sat Nov 10 15 :19 still logged in root pts/0 125 .84.89.248 Mon Nov 5 08 :32 - 08 :32 ( 00 :00 ) root pts/0 125 .84.92.12 Mon Oct 22 11 :47 - 15 :18 ( 03 :30 ) root pts/0 125 .84.94.170 Fri Oct 19 15 :00 - 21 :07 ( 06 :06 ) root pts/0 125 .84.95.234 Mon Oct 15 10 :16 - 13 :55 ( 03 :39 ) root pts/0 125 .84.95.234 Sat Oct 13 17 :11 - 18 :32 ( 01 :20 ) root pts/1 125 .84.94.251 Thu Oct 11 12 :01 - 17 :09 ( 05 :08 ) root pts/0 125 .84.92.121 Thu Oct 11 09 :02 - 12 :09 ( 03 :07 ) root pts/0 125 .84.94.34 Wed Oct 10 17 :35 - 18 :14 ( 00 :39 )","title":"\u67e5\u770b\u6709\u8c01\u5728\u7ebf\uff08\u54ea\u4e9b\u4eba\u767b\u9646\u5230\u4e86\u670d\u52a1\u5668\uff09"},{"location":"linux/often/#_3","text":"\u5173\u673a\uff08\u5fc5\u987b\u7528root\u7528\u6237\uff09 shutdown -h now ## \u7acb\u523b\u5173\u673a shutdown -h +10 ## 10\u5206\u949f\u4ee5\u540e\u5173\u673a shutdown -h 12 :00:00 ##12\u70b9\u6574\u7684\u65f6\u5019\u5173\u673a halt # \u7b49\u4e8e\u7acb\u523b\u5173\u673a \u91cd\u542f shutdown -r now reboot # \u7b49\u4e8e\u7acb\u523b\u91cd\u542f","title":"\u5173\u673a/\u91cd\u542f"},{"location":"linux/often/#_4","text":"clear ## \u6216\u8005\u7528\u5feb\u6377\u952e ctrl + l","title":"\u6e05\u5c4f"},{"location":"linux/often/#_5","text":"ctrl+c ##\u6709\u4e9b\u7a0b\u5e8f\u4e5f\u53ef\u4ee5\u7528q\u952e\u9000\u51fa","title":"\u9000\u51fa\u5f53\u524d\u8fdb\u7a0b"},{"location":"linux/often/#_6","text":"ctrl+z ## \u8fdb\u7a0b\u4f1a\u6302\u8d77\u5230\u540e\u53f0 bg jobid ## \u8ba9\u8fdb\u7a0b\u5728\u540e\u53f0\u7ee7\u7eed\u6267\u884c fg jobid ## \u8ba9\u8fdb\u7a0b\u56de\u5230\u524d\u53f0","title":"\u6302\u8d77\u5f53\u524d\u8fdb\u7a0b"},{"location":"linux/often/#echo","text":"[ root@VM_0_14_centos ~ ] # str='hello wrold' [ root@VM_0_14_centos ~ ] # echo str str [ root@VM_0_14_centos ~ ] # echo $str hello wrold","title":"echo"},{"location":"linux/often/#_7","text":"","title":"\u76ee\u5f55\u64cd\u4f5c"},{"location":"linux/often/#_8","text":"ls / ## \u67e5\u770b\u6839\u76ee\u5f55\u4e0b\u7684\u5b50\u8282\u70b9\uff08\u6587\u4ef6\u5939\u548c\u6587\u4ef6\uff09\u4fe1\u606f ls -al ## -a\u662f\u663e\u793a\u9690\u85cf\u6587\u4ef6 -l\u662f\u4ee5\u66f4\u8be6\u7ec6\u7684\u5217\u8868\u5f62\u5f0f\u663e\u793a ls -l ##\u6709\u4e00\u4e2a\u522b\u540d\uff1a ll \u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528ll <\u662f\u4e24\u4e2aL>","title":"\u67e5\u770b\u76ee\u5f55\u4fe1\u606f"},{"location":"linux/often/#_9","text":"cd /home/hadoop ## \u5207\u6362\u5230\u7528\u6237\u4e3b\u76ee\u5f55 cd ~ ## \u5207\u6362\u5230\u7528\u6237\u4e3b\u76ee\u5f55 cd - ## \u56de\u9000\u5230\u4e0a\u6b21\u6240\u5728\u7684\u76ee\u5f55 cd ## \u4ec0\u4e48\u8def\u5f84\u90fd\u4e0d\u5e26\uff0c\u5219\u56de\u5230\u7528\u6237\u7684\u4e3b\u76ee\u5f55","title":"\u5207\u6362\u5de5\u4f5c\u76ee\u5f55"},{"location":"linux/often/#_10","text":"mkdir aaa ## \u8fd9\u662f\u76f8\u5bf9\u8def\u5f84\u7684\u5199\u6cd5 mkdir /data ## \u8fd9\u662f\u7edd\u5bf9\u8def\u5f84\u7684\u5199\u6cd5 mkdir -p aaa/bbb/ccc ## \u7ea7\u8054\u521b\u5efa\u76ee\u5f55","title":"\u521b\u5efa\u6587\u4ef6\u5939"},{"location":"linux/often/#_11","text":"rmdir aaa ## \u53ef\u4ee5\u5220\u9664\u7a7a\u76ee\u5f55 rm -r aaa ## \u53ef\u4ee5\u628aaaa\u6574\u4e2a\u6587\u4ef6\u5939\u53ca\u5176\u4e2d\u7684\u6240\u6709\u5b50\u8282\u70b9\u5168\u90e8\u5220\u9664 rm -rf aaa ## \u5f3a\u5236\u5220\u9664aaa","title":"\u5220\u9664\u6587\u4ef6\u5939"},{"location":"linux/often/#_12","text":"mv aaa boy mv #\u672c\u8d28\u4e0a\u662f\u79fb\u52a8 mv install.log aaa/ #\u5c06\u5f53\u524d\u76ee\u5f55\u4e0b\u7684install.log \u79fb\u52a8\u5230aaa\u6587\u4ef6\u5939\u4e2d\u53bb rename #\u53ef\u4ee5\u7528\u6765\u6279\u91cf\u66f4\u6539\u6587\u4ef6\u540d [ root@VM_0_14_centos aaa ] # ll total 0 -rw-r--r--. 1 root root 0 Jul 28 17 :33 1 .txt -rw-r--r--. 1 root root 0 Jul 28 17 :33 2 .txt -rw-r--r--. 1 root root 0 Jul 28 17 :33 3 .txt [ root@VM_0_14_centos aaa ] # rename .txt .txt.bak * [ root@VM_0_14_centos aaa ] # ll total 0 -rw-r--r--. 1 root root 0 Jul 28 17 :33 1 .txt.bak -rw-r--r--. 1 root root 0 Jul 28 17 :33 2 .txt.bak -rw-r--r--. 1 root root 0 Jul 28 17 :33 3 .txt.bak","title":"\u4fee\u6539\u6587\u4ef6\u5939\u540d\u79f0"},{"location":"linux/often/#_13","text":"","title":"\u6587\u4ef6\u64cd\u4f5c"},{"location":"linux/often/#_14","text":"touch somefile.1 ## \u521b\u5efa\u4e00\u4e2a\u7a7a\u6587\u4ef6 echo \"hi,boy\" > somefile.2 ## \u5229\u7528\u91cd\u5b9a\u5411\u201c>\u201d\u7684\u529f\u80fd\uff0c\u5c06\u4e00\u6761\u6307\u4ee4\u7684\u8f93\u51fa\u7ed3\u679c\u5199\u5165\u5230\u4e00\u4e2a\u6587\u4ef6\u4e2d\uff0c\u4f1a\u8986\u76d6\u539f\u6587\u4ef6\u5185\u5bb9\uff0c\u5982\u679c\u6307\u5b9a\u7684\u6587\u4ef6\u4e0d\u5b58\u5728\uff0c\u5219\u4f1a\u521b\u5efa\u51fa\u6765 echo \"hi baby\" >> somefile.2 ## \u5c06\u4e00\u6761\u6307\u4ee4\u7684\u8f93\u51fa\u7ed3\u679c\u8ffd\u52a0\u5230\u4e00\u4e2a\u6587\u4ef6\u4e2d\uff0c\u4e0d\u4f1a\u8986\u76d6\u539f\u6587\u4ef6\u5185\u5bb9","title":"\u521b\u5efa\u6587\u4ef6"},{"location":"linux/often/#vi","text":"\u6700\u57fa\u672c\u7528\u6cd5 vi somefile.4 1. \u9996\u5148\u4f1a\u8fdb\u5165\u201c\u4e00\u822c\u6a21\u5f0f\u201d\uff0c\u6b64\u6a21\u5f0f\u53ea\u63a5\u53d7\u5404\u79cd\u5feb\u6377\u952e\uff0c\u4e0d\u80fd\u7f16\u8f91\u6587\u4ef6\u5185\u5bb9 2. \u6309i\u952e\uff0c\u5c31\u4f1a\u4ece\u4e00\u822c\u6a21\u5f0f\u8fdb\u5165\u7f16\u8f91\u6a21\u5f0f\uff0c\u6b64\u6a21\u5f0f\u4e0b\uff0c\u6572\u5165\u7684\u90fd\u662f\u6587\u4ef6\u5185\u5bb9 3. \u7f16\u8f91\u5b8c\u6210\u4e4b\u540e\uff0c\u6309Esc\u952e\u9000\u51fa\u7f16\u8f91\u6a21\u5f0f\uff0c\u56de\u5230\u4e00\u822c\u6a21\u5f0f\uff1b 4. \u518d\u6309\uff1a\uff0c\u8fdb\u5165\u201c\u5e95\u884c\u547d\u4ee4\u6a21\u5f0f\u201d\uff0c\u8f93\u5165wq\u547d\u4ee4\uff0c\u56de\u8f66\u5373\u53ef \u5e38\u7528\u5feb\u6377\u952e \u4e00\u4e9b\u6709\u7528\u7684\u5feb\u6377\u952e\uff08\u5728\u4e00\u822c\u6a21\u5f0f\u4e0b\u4f7f\u7528\uff09\uff1a * a \u5728\u5149\u6807\u540e\u4e00\u4f4d\u5f00\u59cb\u63d2\u5165 * A \u5728\u8be5\u884c\u7684\u6700\u540e\u63d2\u5165 * I \u5728\u8be5\u884c\u7684\u6700\u524d\u9762\u63d2\u5165 * gg \u76f4\u63a5\u8df3\u5230\u6587\u4ef6\u7684\u9996\u884c * G \u76f4\u63a5\u8df3\u5230\u6587\u4ef6\u7684\u672b\u884c * dd \u5220\u9664\u4e00\u884c * 3dd \u5220\u96643\u884c * yy \u590d\u5236\u4e00\u884c * 3yy \u590d\u52363\u884c * p \u7c98\u8d34 * u undo * v \u8fdb\u5165\u5b57\u7b26\u9009\u62e9\u6a21\u5f0f\uff0c\u9009\u62e9\u5b8c\u6210\u540e\uff0c\u6309y\u590d\u5236\uff0c\u6309p\u7c98\u8d34 * ctrl+v \u8fdb\u5165\u5757\u9009\u62e9\u6a21\u5f0f\uff0c\u9009\u62e9\u5b8c\u6210\u540e\uff0c\u6309y\u590d\u5236\uff0c\u6309p\u7c98\u8d34 * shift+v \u8fdb\u5165\u884c\u9009\u62e9\u6a21\u5f0f\uff0c\u9009\u62e9\u5b8c\u6210\u540e\uff0c\u6309y\u590d\u5236\uff0c\u6309p\u7c98\u8d34 \u67e5\u627e\u5e76\u66ff\u6362 1. \u663e\u793a\u884c\u53f7:set nu 2. \u9690\u85cf\u884c\u53f7:set nonu 3. \u67e5\u627e\u5173\u952e\u5b57:/you ## \u6548\u679c\uff1a\u67e5\u627e\u6587\u4ef6\u4e2d\u51fa\u73b0\u7684you\uff0c\u5e76\u5b9a\u4f4d\u5230\u7b2c\u4e00\u4e2a\u627e\u5230\u7684\u5730\u65b9\uff0c\u6309n\u53ef\u4ee5\u5b9a\u4f4d\u5230\u4e0b\u4e00\u4e2a\u5339\u914d\u4f4d\u7f6e\uff08\u6309N\u5b9a\u4f4d\u5230\u4e0a\u4e00\u4e2a\uff09 4. \u66ff\u6362\u64cd\u4f5c:s/sad/bbb ## \u67e5\u627e\u5149\u6807\u6240\u5728\u884c\u7684\u7b2c\u4e00\u4e2asad\uff0c\u66ff\u6362\u4e3abbb.:%s/sad/bbb ##\u67e5\u627e\u6587\u4ef6\u4e2d\u6240\u6709sad\uff0c\u66ff\u6362\u4e3abbb","title":"vi\u6587\u672c\u7f16\u8f91\u5668"},{"location":"linux/often/#_15","text":"cp somefile.1 /home/hadoop/ rm /home/hadoop/somefile.1 rm -f /home/hadoop/somefile.1 mv /home/hadoop/somefile.1 ../","title":"\u62f7\u8d1d/\u5220\u9664/\u79fb\u52a8"},{"location":"linux/often/#_16","text":"cat somefile \u4e00\u6b21\u6027\u5c06\u6587\u4ef6\u5185\u5bb9\u5168\u90e8\u8f93\u51fa\uff08\u63a7\u5236\u53f0\uff09 more somefile \u53ef\u4ee5\u7ffb\u9875\u67e5\u770b, \u4e0b\u7ffb\u4e00\u9875 ( \u7a7a\u683c ) \u4e0a\u7ffb\u4e00\u9875\uff08b\uff09 \u9000\u51fa\uff08q\uff09 less somefile \u53ef\u4ee5\u7ffb\u9875\u67e5\u770b,\u4e0b\u7ffb\u4e00\u9875 ( \u7a7a\u683c ) \u4e0a\u7ffb\u4e00\u9875\uff08b\uff09\uff0c\u4e0a\u7ffb\u4e00\u884c ( \u2191 ) \u4e0b\u7ffb\u4e00\u884c\uff08\u2193\uff09 \u53ef\u4ee5\u641c\u7d22\u5173\u952e\u5b57\uff08/keyword\uff09 \u8df3\u5230\u6587\u4ef6\u672b\u5c3e\uff1a G \u8df3\u5230\u6587\u4ef6\u9996\u884c\uff1a gg \u9000\u51faless \uff1a q tail -10 install.log \u67e5\u770b\u6587\u4ef6\u5c3e\u90e8\u768410\u884c tail +10 install.log \u67e5\u770b\u6587\u4ef6 10 -->\u672b\u884c tail -f install.log \u5c0ff\u8ddf\u8e2a\u6587\u4ef6\u7684\u552f\u4e00inode\u53f7\uff0c\u5c31\u7b97\u6587\u4ef6\u6539\u540d\u540e\uff0c\u8fd8\u662f\u8ddf\u8e2a\u539f\u6765\u8fd9\u4e2ainode\u8868\u793a\u7684\u6587\u4ef6 tail -F install.log \u5927F\u6309\u7167\u6587\u4ef6\u540d\u6765\u8ddf\u8e2a head -10 install.log \u67e5\u770b\u6587\u4ef6\u5934\u90e8\u768410","title":"\u67e5\u770b\u6587\u4ef6\u5185\u5bb9"},{"location":"linux/often/#_17","text":"gzip\u538b\u7f29:gzip a.txt \u89e3\u538b:gunzip a.txt.gz \u6216\u8005 gzip -d a.txt.gz bzip2\u538b\u7f29:bzip2 a \u89e3\u538b:bunzip2 a.bz2 \u6216\u8005 bzip2 -d a.bz2 \u6253\u5305\uff1a\u5c06\u6307\u5b9a\u6587\u4ef6\u6216\u6587\u4ef6\u5939-> tar -cvf bak.tar ./aaa \u5c06/etc/password\u8ffd\u52a0\u6587\u4ef6\u5230bak.tar\u4e2d\u00ae-> tar -rvf bak.tar /etc/password \u89e3\u538b:tar -xvf bak.tar \u6253\u5305\u5e76\u538b\u7f29:tar -zcvf a.tar.gz aaa/ \u89e3\u5305\u5e76\u89e3\u538b\u7f29(\u91cd\u8981\u7684\u4e8b\u60c5\u8bf4\u4e09\u904d!!!):tar -zxvf a.tar.gz \u89e3\u538b\u5230/usr/\u4e0b->tar -zxvf a.tar.gz -C /usr \u67e5\u770b\u538b\u7f29\u5305\u5185\u5bb9:tar -ztvf a.tar.gz zip/unzip \u6253\u5305\u5e76\u538b\u7f29\u6210bz2:tar -jcvf a.tar.bz2 \u89e3\u538bbz2:tar -jxvf a.tar.bz2","title":"\u6253\u5305\u538b\u7f29"},{"location":"linux/often/#_18","text":"","title":"\u67e5\u627e\u547d\u4ee4"},{"location":"linux/often/#_19","text":"\u67e5\u627e\u53ef\u6267\u884c\u7684\u547d\u4ee4\u6240\u5728\u7684\u8def\u5f84\uff1awhich ls \u67e5\u627e\u53ef\u6267\u884c\u7684\u547d\u4ee4\u548c\u5e2e\u52a9\u7684\u4f4d\u7f6e\uff1awhereis ls \u4ece\u67d0\u4e2a\u6587\u4ef6\u5939\u5f00\u59cb\u67e5\u627e\u6587\u4ef6\uff1afind / -name \"hadooop*\" \u6216\u8005find / -name \"hadooop*\" -ls \u67e5\u627e\u5e76\u5220\u9664\uff1afind / -name \"hadooop*\" -ok rm {} \\;find / -name \"hadooop*\" -exec rm {} \\; \u67e5\u627e\u7528\u6237\u4e3ahadoop\u7684\u6587\u4ef6:find /usr -user hadoop -ls \u67e5\u627e\u7528\u6237\u4e3ahadoop\u7684\u6587\u4ef6\u5939:find /home -user hadoop -type d -ls \u67e5\u627e\u6743\u9650\u4e3a777\u7684\u6587\u4ef6:find / -perm -777 -type d -ls \u663e\u793a\u547d\u4ee4\u5386\u53f2:history","title":"\u5e38\u7528\u67e5\u627e\u547d\u4ee4\u7684\u4f7f\u7528"},{"location":"linux/often/#grep","text":"\u57fa\u672c\u4f7f\u7528 \u67e5\u8be2\u5305\u542bhadoop\u7684\u884c grep hadoop /etc/password \u67e5\u8be2\u5305\u542baaa\u7684\u884c grep aaa ./*.txt cut\u622a\u53d6\u4ee5:\u5206\u5272\u4fdd\u7559\u7b2c\u4e03\u6bb5: grep hadoop /etc/passwd | cut -d: -f7 \u67e5\u8be2\u4e0d\u5305\u542bhadoop\u7684\u884c:grep -v hadoop /etc/passwd \u6b63\u5219\u8868\u8fbe\u5305\u542bhadoop:grep 'hadoop' /etc/passwd \u6b63\u5219\u8868\u8fbe(\u70b9\u4ee3\u8868\u4efb\u610f\u4e00\u4e2a\u5b57\u7b26):grep 'h.*p' /etc/passwd \u6b63\u5219\u8868\u8fbe\u4ee5hadoop\u5f00\u5934:grep '^hadoop' /etc/passwd \u6b63\u5219\u8868\u8fbe\u4ee5hadoop\u7ed3\u5c3e:grep 'hadoop$' /etc/passwd \u89c4\u5219\uff1a . : \u4efb\u610f\u4e00\u4e2a\u5b57\u7b26 a* : \u4efb\u610f\u591a\u4e2aa(\u96f6\u4e2a\u6216\u591a\u4e2aa) a? : \u96f6\u4e2a\u6216\u4e00\u4e2aa a+ : \u4e00\u4e2a\u6216\u591a\u4e2aa .* : \u4efb\u610f\u591a\u4e2a\u4efb\u610f\u5b57\u7b26 \\. : \u8f6c\u4e49. o\\{2\\} : o\u91cd\u590d\u4e24\u6b21 \u67e5\u627e\u4e0d\u662f\u4ee5#\u5f00\u5934\u7684\u884c: grep -v '^#' a.txt | grep -v '^$' \u4ee5h\u6216r\u5f00\u5934\u7684:grep '^[hr]' /etc/passwd \u4e0d\u662f\u4ee5h\u548cr\u5f00\u5934\u7684:grep ' [ hr]' /etc/passwd \u4e0d\u662f\u4ee5h\u5230r\u5f00\u5934\u7684:grep ' [ h-r]' /etc/passwd","title":"grep\u547d\u4ee4"},{"location":"linux/often/#_20","text":"","title":"\u6587\u4ef6\u6743\u9650\u7684\u64cd\u4f5c"},{"location":"linux/often/#linux_1","text":"drwxr-xr-x \uff08\u4e5f\u53ef\u4ee5\u7528\u4e8c\u8fdb\u5236\u8868\u793a 111 101 101 --> 755\uff09 d\uff1a\u6807\u8bc6\u8282\u70b9\u7c7b\u578b\uff08d\uff1a\u6587\u4ef6\u5939 -\uff1a\u6587\u4ef6 l:\u94fe\u63a5\uff09 r\uff1a\u53ef\u8bfb w\uff1a\u53ef\u5199 x\uff1a\u53ef\u6267\u884c \u7b2c\u4e00\u7ec4rwx\uff1a ## \u8868\u793a\u8fd9\u4e2a\u6587\u4ef6\u7684\u62e5\u6709\u8005\u5bf9\u5b83\u7684\u6743\u9650\uff1a\u53ef\u8bfb\u53ef\u5199\u53ef\u6267\u884c \u7b2c\u4e8c\u7ec4r-x\uff1a ## \u8868\u793a\u8fd9\u4e2a\u6587\u4ef6\u7684\u6240\u5c5e\u7ec4\u7528\u6237\u5bf9\u5b83\u7684\u6743\u9650\uff1a\u53ef\u8bfb\uff0c\u4e0d\u53ef\u5199\uff0c\u53ef\u6267\u884c \u7b2c\u4e09\u7ec4r-x\uff1a ## \u8868\u793a\u8fd9\u4e2a\u6587\u4ef6\u7684\u5176\u4ed6\u7528\u6237\uff08\u76f8\u5bf9\u4e8e\u4e0a\u9762\u4e24\u7c7b\u7528\u6237\uff09\u5bf9\u5b83\u7684\u6743\u9650\uff1a\u53ef\u8bfb\uff0c\u4e0d\u53ef\u5199\uff0c\u53ef","title":"linux\u6587\u4ef6\u6743\u9650\u7684\u63cf\u8ff0\u683c\u5f0f\u89e3\u8bfb"},{"location":"linux/often/#_21","text":"chmod g-rw haha.dat ## \u8868\u793a\u5c06haha.dat\u5bf9\u6240\u5c5e\u7ec4\u7684rw\u6743\u9650\u53d6\u6d88 chmod o-rw haha.dat ## \u8868\u793a\u5c06haha.dat\u5bf9\u5176\u4ed6\u4eba\u7684rw\u6743\u9650\u53d6\u6d88 chmod u+x haha.dat ## \u8868\u793a\u5c06haha.dat\u5bf9\u6240\u5c5e\u7528\u6237\u7684\u6743\u9650\u589e\u52a0x chmod a-x haha.dat ## \u8868\u793a\u5c06haha.dat\u5bf9\u6240\u7528\u6237\u53d6\u6d88x\u6743\u9650 chmod 664 haha.dat ## \u4e5f\u53ef\u4ee5\u7528\u6570\u5b57\u7684\u65b9\u5f0f\u6765\u4fee\u6539\u6743\u9650 \u5c31\u4f1a\u4fee\u6539\u6210 rw-rw-r-- chmod -R 770 aaa/ ## \u5982\u679c\u8981\u5c06\u4e00\u4e2a\u6587\u4ef6\u5939\u7684\u6240\u6709\u5185\u5bb9\u6743\u9650\u7edf\u4e00\u4fee\u6539\uff0c\u5219\u53ef\u4ee5-R\u53c2\u6570","title":"\u4fee\u6539\u6587\u4ef6\u6743\u9650"},{"location":"linux/often/#_22","text":"<\u53ea\u6709root\u6743\u9650\u80fd\u6267\u884c> chown angela aaa ## \u6539\u53d8\u6240\u5c5e\u7528\u6237 chown :angela aaa ## \u6539\u53d8\u6240\u5c5e\u7ec4 chown angela:angela aaa/ ## \u540c\u65f6\u4fee\u6539\u6240\u5c5e\u7528\u6237\u548c\u6240\u5c5e\u7ec4","title":"\u4fee\u6539\u6587\u4ef6\u6240\u6709\u6743"},{"location":"linux/often/#_23","text":"\u6dfb\u52a0\u4e00\u4e2a\u7528\u6237\uff1a useradd spark passwd spark \u6839\u636e\u63d0\u793a\u8bbe\u7f6e\u5bc6\u7801\uff1b \u5373\u53ef \u5220\u9664\u4e00\u4e2a\u7528\u6237\uff1a userdel -r spark \u52a0\u4e00\u4e2a-r\u5c31\u8868\u793a\u628a\u7528\u6237\u53ca\u7528\u6237\u7684\u4e3b\u76ee\u5f55\u90fd\u5220\u9664","title":"\u57fa\u672c\u7684\u7528\u6237\u7ba1\u7406"},{"location":"linux/often/#_24","text":"\u6dfb\u52a0\u4e00\u4e2atom\u7528\u6237\uff0c\u8bbe\u7f6e\u5b83\u5c5e\u4e8eusers\u7ec4\uff0c\u5e76\u6dfb\u52a0\u6ce8\u91ca\u4fe1\u606f \u5206\u6b65\u5b8c\u6210\uff1auseradd tom usermod -g users tom usermod -c \"hr tom\" tom \u4e00\u6b65\u5b8c\u6210\uff1auseradd -g users -c \"hr tom\" tom \u8bbe\u7f6etom\u7528\u6237\u7684\u5bc6\u7801 passwd tom","title":"\u6dfb\u52a0\u7528\u6237"},{"location":"linux/often/#_25","text":"\u4fee\u6539tom\u7528\u6237\u7684\u767b\u9646\u540d\u4e3atomcat usermod -l tomcat tom \u5c06tomcat\u6dfb\u52a0\u5230sys\u548croot\u7ec4\u4e2d usermod -G sys,root tomcat \u67e5\u770btomcat\u7684\u7ec4\u4fe1\u606f groups tomcat","title":"\u4fee\u6539\u7528\u6237"},{"location":"linux/often/#_26","text":"\u6dfb\u52a0\u4e00\u4e2a\u53ebamerica\u7684\u7ec4 groupadd america \u5c06jerry\u6dfb\u52a0\u5230america\u7ec4\u4e2d usermod -g america jerry \u5c06tomcat\u7528\u6237\u4eceroot\u7ec4\u548csys\u7ec4\u5220\u9664 gpasswd -d tomcat root gpasswd -d tomcat sys \u5c06america\u7ec4\u540d\u4fee\u6539\u4e3aam groupmod -n am america","title":"\u7528\u6237\u7ec4\u64cd\u4f5c"},{"location":"linux/often/#sudo","text":"\u7528root\u7f16\u8f91 vi /etc/sudoers \u5728\u6587\u4ef6\u7684\u5982\u4e0b\u4f4d\u7f6e\uff0c\u4e3ahadoop\u6dfb\u52a0\u4e00\u884c\u5373\u53ef root ALL=(ALL) ALL hadoop ALL=(ALL) ALL \u7136\u540e\uff0chadoop\u7528\u6237\u5c31\u53ef\u4ee5\u7528sudo\u6765\u6267\u884c\u7cfb\u7edf\u7ea7\u522b\u7684\u6307\u4ee4 [root@localhost ~]$ sudo useradd xiaoming","title":"\u4e3a\u7528\u6237\u914d\u7f6esudo\u6743\u9650"},{"location":"linux/often/#_27","text":"","title":"\u7cfb\u7edf\u7ba1\u7406\u64cd\u4f5c"},{"location":"linux/often/#_28","text":"\u53ef\u4ee5\u6302\u8f7d\u5149\u76d8\u3001\u786c\u76d8\u3001\u78c1\u5e26\u3001\u5149\u76d8\u955c\u50cf\u6587\u4ef6\u7b49 1. \u6302\u8f7d\u5149\u9a71 mkdir /mnt/cdrom \u521b\u5efa\u4e00\u4e2a\u76ee\u5f55\uff0c\u7528\u6765\u6302\u8f7d mount -t iso9660 -o ro /dev/cdrom /mnt/cdrom/ \u5c06\u8bbe\u5907/dev/cdrom\u6302\u8f7d\u5230 \u6302\u8f7d\u70b9 \uff1a /mnt/cdrom\u4e2d \u6302\u8f7d\u5149\u76d8\u955c\u50cf\u6587\u4ef6\uff08.iso\u6587\u4ef6\uff09 mount -t iso9660 -o loop /home/hadoop/Centos-7.0.DVD.iso /mnt/centos \u6ce8\uff1a\u6302\u8f7d\u7684\u8d44\u6e90\u5728\u91cd\u542f\u540e\u5373\u5931\u6548\uff0c\u9700\u8981\u91cd\u65b0\u6302\u8f7d\u3002\u8981\u60f3\u81ea\u52a8\u6302\u8f7d\uff0c\u53ef\u4ee5\u5c06\u6302\u8f7d\u4fe1\u606f\u8bbe\u7f6e\u5230/etc/fstab\u914d\u7f6e\u6587\u4ef6\u4e2d\uff0c\u5982\u4e0b\uff1a /dev/cdrom/mnt/cdromiso9660 defaults 0 0 \u5378\u8f7d umount umount /mnt/cdrom \u5b58\u50a8\u7a7a\u95f4\u67e5\u770b df -h","title":"\u6302\u8f7d\u5916\u90e8\u5b58\u50a8\u8bbe\u5907"},{"location":"linux/often/#_29","text":"du -sh /mnt/cdrom/packages df -h \u67e5\u770b\u78c1\u76d8\u7684\u7a7a\u95f4","title":"\u7edf\u8ba1\u6587\u4ef6\u6216\u6587\u4ef6\u5939\u7684\u5927\u5c0f"},{"location":"linux/often/#_30","text":"service sshd status service sshd stop service sshd start service sshd restart","title":"\u7cfb\u7edf\u670d\u52a1\u7ba1\u7406"},{"location":"linux/often/#_31","text":"vi /etc/inittab # Default runlevel. The runlevels used are: # 0 - halt (Do NOT set initdefault to this) # 1 - Single user mode # 2 - Multiuser, without NFS (The same as 3, if you do not have networking) # 3 - Full multiuser mode # 4 - unused # 5 - X11 # 6 - reboot (Do NOT set initdefault to this) # id:3:initdefault: ## \u901a\u5e38\u5c06\u9ed8\u8ba4\u542f\u52a8\u7ea7\u522b\u8bbe\u7f6e\u4e3a\uff1a3","title":"\u7cfb\u7edf\u542f\u52a8\u7ea7\u522b\u7ba1\u7406"},{"location":"linux/often/#_32","text":"top free ps -ef | grep ssh kill -9","title":"\u8fdb\u7a0b\u7ba1\u7406"},{"location":"linux/often/#ssh","text":"","title":"SSH\u514d\u5bc6\u767b\u9646\u914d\u7f6e"},{"location":"linux/often/#ssh_1","text":"\u76f8\u5173\u6982\u5ff5 SSH \u4e3a Secure Shell\uff08\u5b89\u5168\u5916\u58f3\u534f\u8bae\uff09 \u7684\u7f29\u5199\u3002 \u5f88\u591aftp\u3001pop\u548ctelnet\u5728\u672c\u8d28\u4e0a\u90fd\u662f\u4e0d\u5b89\u5168\u7684\uff0c\u56e0\u4e3a\u5b83\u4eec\u5728\u7f51\u7edc\u4e0a\u7528\u660e\u6587\u4f20\u9001\u53e3\u4ee4\u548c\u6570\u636e\uff0c\u522b\u6709\u7528\u5fc3\u7684\u4eba\u975e\u5e38\u5bb9\u6613\u5c31\u53ef\u4ee5\u622a\u83b7\u8fd9\u4e9b\u53e3\u4ee4\u548c\u6570\u636e\u3002 \u800cSSH\u5c31\u662f\u4e13\u4e3a\u8fdc\u7a0b\u767b\u5f55\u4f1a\u8bdd\u548c\u5176\u4ed6\u7f51\u7edc\u670d\u52a1\u63d0\u4f9b\u5b89\u5168\u6027\u7684\u534f\u8bae\u3002 SSH\u662f\u7531\u5ba2\u6237\u7aef\u548c\u670d\u52a1\u7aef\u7684\u8f6f\u4ef6\u7ec4\u6210\u7684 \u670d\u52a1\u7aef\u662f\u4e00\u4e2a\u5b88\u62a4\u8fdb\u7a0b(sshd)\uff0c\u4ed6\u5728\u540e\u53f0\u8fd0\u884c\u5e76\u54cd\u5e94\u6765\u81ea\u5ba2\u6237\u7aef\u7684\u8fde\u63a5\u8bf7\u6c42\u3002 \u5ba2\u6237\u7aef\u5305\u542bssh\u7a0b\u5e8f\u4ee5\u53ca\u50cfscp\uff08\u8fdc\u7a0b\u62f7\u8d1d\uff09\u3001slogin\uff08\u8fdc\u7a0b\u767b\u9646\uff09\u3001sftp\uff08\u5b89\u5168\u6587\u4ef6\u4f20\u8f93\uff09\u7b49\u5176\u4ed6\u7684\u5e94\u7528\u7a0b\u5e8f\u3002 \u8ba4\u8bc1\u673a\u5236 \u4ece\u5ba2\u6237\u7aef\u6765\u770b\uff0cSSH\u63d0\u4f9b\u4e24\u79cd\u7ea7\u522b\u7684\u5b89\u5168\u9a8c\u8bc1\u3002 \u7b2c\u4e00\u79cd\u7ea7\u522b\uff08\u57fa\u4e8e\u53e3\u4ee4\u7684\u5b89\u5168\u9a8c\u8bc1\uff09 \u53ea\u8981\u4f60\u77e5\u9053\u81ea\u5df1\u5e10\u53f7\u548c\u53e3\u4ee4\uff0c\u5c31\u53ef\u4ee5\u767b\u5f55\u5230\u8fdc\u7a0b\u4e3b\u673a\u3002 \u7b2c\u4e8c\u79cd\u7ea7\u522b\uff08\u57fa\u4e8e\u5bc6\u94a5\u7684\u5b89\u5168\u9a8c\u8bc1\uff09 \u9700\u8981\u4f9d\u9760\u5bc6\u5319\uff0c\u4e5f\u5c31\u662f\u4f60\u5fc5\u987b\u4e3a\u81ea\u5df1\u521b\u5efa\u4e00\u5bf9\u5bc6\u5319\uff0c\u5e76\u628a\u516c\u7528\u5bc6\u5319\u653e\u5728\u9700\u8981\u8bbf\u95ee\u7684\u670d\u52a1\u5668\u4e0a\u3002\u5982\u679c\u4f60\u8981\u8fde\u63a5\u5230SSH\u670d\u52a1\u5668\u4e0a\uff0c \u5ba2\u6237\u7aef\u8f6f\u4ef6\u5c31\u4f1a\u5411\u670d\u52a1\u5668\u53d1\u51fa\u8bf7\u6c42\uff0c\u8bf7\u6c42\u7528\u4f60\u7684\u5bc6\u5319\u8fdb\u884c\u5b89\u5168\u9a8c\u8bc1\u3002\u670d\u52a1\u5668\u6536\u5230\u8bf7\u6c42\u4e4b\u540e\uff0c\u5148\u5728\u8be5\u670d\u52a1\u5668\u4e0a\u4f60\u7684\u4e3b\u76ee\u5f55\u4e0b\u5bfb\u627e\u4f60\u7684\u516c\u7528\u5bc6\u5319\uff0c \u7136\u540e\u628a\u5b83\u548c\u4f60\u53d1\u9001\u8fc7\u6765\u7684\u516c\u7528\u5bc6\u5319\u8fdb\u884c\u6bd4\u8f83\u3002\u5982\u679c\u4e24\u4e2a\u5bc6\u5319\u4e00\u81f4\uff0c\u670d\u52a1\u5668\u5c31\u7528\u516c\u7528\u5bc6\u5319\u52a0\u5bc6\u201c\u8d28\u8be2\u201d\uff08challenge\uff09\u5e76\u628a\u5b83\u53d1\u9001\u7ed9\u5ba2\u6237\u7aef\u8f6f\u4ef6\u3002 \u5ba2\u6237\u7aef\u8f6f\u4ef6\u6536\u5230\u201c\u8d28\u8be2\u201d\u4e4b\u540e\u5c31\u53ef\u4ee5\u7528\u4f60\u7684\u79c1\u4eba\u5bc6\u5319\u89e3\u5bc6\u518d\u628a\u5b83\u53d1\u9001\u7ed9\u670d\u52a1\u5668\u3002","title":"SSH\u5de5\u4f5c\u673a\u5236"},{"location":"linux/often/#_33","text":"\u5047\u5982 A \u8981\u767b\u9646 B \u5728A\u4e0a\u64cd\u4f5c\uff1a 1. \u9996\u5148\u751f\u6210\u5bc6\u94a5\u5bf9:ssh-keygen (\u63d0\u793a\u65f6\uff0c\u76f4\u63a5\u56de\u8f66\u5373\u53ef) 2. \u518d\u5c06A\u81ea\u5df1\u7684\u516c\u94a5\u62f7\u8d1d\u5e76\u8ffd\u52a0\u5230B\u7684\u6388\u6743\u5217\u8868\u6587\u4ef6authorized_keys\u4e2d: ssh-copy-id B","title":"\u5bc6\u94a5\u767b\u9646\u65b9\u5f0f\u914d\u7f6e"},{"location":"linux/often/#_34","text":"","title":"\u7f51\u7edc\u7ba1\u7406"},{"location":"linux/often/#_35","text":"\u67e5\u770b\u4e3b\u673a\u540d:hostname \u4fee\u6539\u4e3b\u673a\u540d(\u91cd\u542f\u540e\u65e0\u6548):hostname hadoop \u4fee\u6539\u4e3b\u673a\u540d(\u91cd\u542f\u540e\u6c38\u4e45\u751f\u6548) :vi /ect/sysconfig/network","title":"\u4e3b\u673a\u540d\u914d\u7f6e"},{"location":"linux/often/#ip","text":"\u4fee\u6539IP\u5730\u5740 1. \u65b9\u5f0f\u4e00\uff1asetup \u7528root\u8f93\u5165setup\u547d\u4ee4\uff0c\u8fdb\u5165\u4ea4\u4e92\u5f0f\u4fee\u6539\u754c\u9762 2. \u65b9\u5f0f\u4e8c\uff1a\u4fee\u6539\u914d\u7f6e\u6587\u4ef6 \u4e00\u822c\u4f7f\u7528\u8fd9\u79cd\u65b9\u6cd5 (\u91cd\u542f\u540e\u6c38\u4e45\u751f\u6548) vi /etc/sysconfig/network-scripts/ifcfg-eth0 3. \u65b9\u5f0f\u4e09\uff1aifconfig\u547d\u4ee4(\u91cd\u542f\u540e\u65e0\u6548) ifconfig eth0 192.168.12.22\u4fee\u6539IP\u5730\u5740","title":"IP\u5730\u5740\u914d\u7f6e"},{"location":"linux/often/#_36","text":"\u540e\u53f0\u670d\u52a1\u7ba1\u7406 service network status \u67e5\u770b\u6307\u5b9a\u670d\u52a1\u7684\u72b6\u6001 service network stop \u505c\u6b62\u6307\u5b9a\u670d\u52a1 service network start \u542f\u52a8\u6307\u5b9a\u670d\u52a1 service network restart \u91cd\u542f\u6307\u5b9a\u670d\u52a1 service --status-all \u67e5\u770b\u7cfb\u7edf\u4e2d\u6240\u6709\u7684\u540e\u53f0\u670d\u52a1 \u8bbe\u7f6e\u540e\u53f0\u670d\u52a1\u7684\u81ea\u542f\u914d\u7f6e chkconfig \u67e5\u770b\u6240\u6709\u670d\u52a1\u5668\u81ea\u542f\u914d\u7f6e chkconfig iptables off \u5173\u6389\u6307\u5b9a\u670d\u52a1\u7684\u81ea\u52a8\u542f\u52a8 chkconfig iptables on \u5f00\u542f\u6307\u5b9a\u670d\u52a1\u7684\u81ea\u52a8\u542f\u52a8","title":"\u7f51\u7edc\u670d\u52a1\u7ba1\u7406"},{"location":"net/c_sharp/","text":"\u4e00\u5c0f\u65f6\u5b66\u4f1aC# 6 \u00b6 \u4e00\u3001\u5b57\u7b26\u4e32\u63d2\u503c \uff08String Interpolation\uff09 \u00b6 C# 6\u4e4b\u524d\u6211\u4eec\u62fc\u63a5\u5b57\u7b26\u4e32\u65f6\u9700\u8981\u8fd9\u6837 var Name = \"Jack\" ; var results = \"Hello\" + Name ; \u6216\u8005 var Name = \"Jack\" ; var results = string . Format ( \"Hello {0}\" , Name ); \u4f46\u662fC#6\u91cc\u6211\u4eec\u5c31\u53ef\u4ee5\u4f7f\u7528\u65b0\u7684\u5b57\u7b26\u4e32\u63d2\u503c\u7279\u6027 var Name = \"Jack\" ; var results = $ \"Hello {Name}\" ; \u4e0a\u9762\u53ea\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\uff0c\u60f3\u60f3\u5982\u679c\u6709\u591a\u4e2a\u503c\u8981\u66ff\u6362\u7684\u8bdd\uff0c\u7528C#6\u7684\u8fd9\u4e2a\u65b0\u7279\u6027\uff0c\u4ee3\u7801\u5c31\u4f1a\u5927\u5927\u51cf\u5c0f\uff0c\u800c\u4e14\u53ef\u8bfb\u6027\u6bd4\u8d77\u4e4b\u524d\u5927\u5927\u589e\u5f3a Person p = new Person { FirstName = \"Jack\" , LastName = \"Wang\" , Age = 100 }; var results = string . Format ( \"First Name: {0} LastName: {1} Age: { 2} \" , p . FirstName , p . LastName , p . Age ); \u6709\u4e86\u5b57\u7b26\u4e32\u63d2\u503c\u540e: var results = $ \"First Name: {p.FirstName} LastName: {p.LastName} Age: {p.Age}\" ; \u5b57\u7b26\u4e32\u63d2\u503c\u4e0d\u5149\u662f\u53ef\u4ee5\u63d2\u7b80\u5355\u7684\u5b57\u7b26\u4e32\uff0c\u8fd8\u53ef\u4ee5\u76f4\u63a5\u63d2\u5165\u4ee3\u7801 Console . WriteLine ( $ \"Jack is saying { new Tools().SayHello() }\" ); var info = $ \"Your discount is {await GetDiscount()}\" ; \u90a3\u4e48\u5982\u4f55\u5904\u7406\u591a\u8bed\u8a00\u5462\uff1f\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 IFormattable\u4e0b\u9762\u7684\u4ee3\u7801\u5982\u4f55\u5b9e\u73b0\u591a\u8bed\u8a00\uff1f Double remain = 2000.5 ; var results = $ \"your money is {remain:C}\" ; \u8f93\u51fa your money is $2,000.50 \u4f7f\u7528IFormattable \u591a\u8bed\u8a00 class Program { static void Main ( string [] args ) { Double remain = 2000.5 ; var results = ChineseText ( $ \"your money is {remain:C}\" ); Console . WriteLine ( results ); Console . Read (); } public static string ChineseText ( IFormattable formattable ) { return formattable . ToString ( null , new CultureInfo ( \"zh-cn\" )); } } \u8f93\u51fa your money is \uffe52,000.50 \u4e8c\u3001\u7a7a\u64cd\u4f5c\u7b26 ( ?. ) \u00b6 C# 6\u6dfb\u52a0\u4e86\u4e00\u4e2a ?. \u64cd\u4f5c\u7b26\uff0c\u5f53\u4e00\u4e2a\u5bf9\u8c61\u6216\u8005\u5c5e\u6027\u804c\u4e3a\u7a7a\u65f6\u76f4\u63a5\u8fd4\u56denull, \u5c31\u4e0d\u518d\u7ee7\u7eed\u6267\u884c\u540e\u9762\u7684\u4ee3\u7801\uff0c\u5728\u4e4b\u524d\u6211\u4eec\u7684\u4ee3\u7801\u91cc\u7ecf\u5e38\u51fa\u73b0 NullException, \u6240\u4ee5\u6211\u4eec\u5c31\u9700\u8981\u52a0\u5f88\u591aNull\u7684\u5224\u65ad\uff0c\u6bd4\u5982 if ( user != null && user . Project != null && user . Project . Tasks != null && user . Project . Tasks . Count > 0 ) { Console . WriteLine ( user . Project . Tasks . First (). Name ); } \u73b0\u5728\u6211\u4eec\u53ef\u4ee5\u4e0d\u7528\u5199 IF \u76f4\u63a5\u5199\u6210\u5982\u4e0b\u8fd9\u6837 Console . WriteLine ( user ?. Project ?. Tasks ?. First ()?. Name ); \u8fd9\u4e2a?. \u7279\u6027\u4e0d\u5149\u662f\u53ef\u4ee5\u7528\u4e8e\u53d6\u503c\uff0c\u4e5f\u53ef\u4ee5\u7528\u4e8e\u65b9\u6cd5\u8c03\u7528\uff0c\u5982\u679c\u5bf9\u8c61\u4e3a\u7a7a\u5c06\u4e0d\u8fdb\u884c\u4efb\u4f55\u64cd\u4f5c\uff0c\u4e0b\u9762\u7684\u4ee3\u7801\u4e0d\u4f1a\u62a5\u9519\uff0c\u4e5f\u4e0d\u4f1a\u6709\u4efb\u4f55\u8f93\u51fa\u3002 class Program { static void Main ( string [] args ) { User user = null ; user ?. SayHello (); Console . Read (); } } public class User { public void SayHello () { Console . WriteLine ( \"Ha Ha\" ); } } \u8fd8\u53ef\u4ee5\u7528\u4e8e\u6570\u7ec4\u7684\u7d22\u5f15\u5668 class Program { static void Main ( string [] args ) { User [] users = null ; List < User > listUsers = null ; // Console.WriteLine(users[1]?.Name); // \u62a5\u9519 // Console.WriteLine(listUsers[1]?.Name); //\u62a5\u9519 Console . WriteLine ( users ?[ 1 ]. Name ); // \u6b63\u5e38 Console . WriteLine ( listUsers ?[ 1 ]. Name ); // \u6b63\u5e38 Console . ReadLine (); } } \u6ce8\u610f\uff1a \u4e0a\u9762\u7684\u4ee3\u7801\u867d\u7136\u53ef\u4ee5\u8ba9\u6211\u4eec\u5c11\u4e9b\u5f88\u591a\u4ee3\u7801\uff0c\u800c\u4e14\u4e5f\u51cf\u5c11\u4e86\u7a7a\u5f02\u5e38\uff0c\u4f46\u662f\u6211\u4eec\u5374\u9700\u8981\u5c0f\u5fc3\u4f7f\u7528\uff0c\u56e0\u4e3a\u6709\u7684\u65f6\u5019\u6211\u4eec\u786e\u5b9e\u662f\u9700\u8981\u629b\u51fa\u7a7a\u5f02\u5e38\uff0c\u90a3\u4e48\u4f7f\u7528\u8fd9\u4e2a\u7279\u6027\u53cd\u800c\u9690\u85cf\u4e86Bug \u4e09\u3001 NameOf \u00b6 \u8fc7\u53bb\uff0c\u6211\u4eec\u6709\u5f88\u591a\u7684\u5730\u65b9\u9700\u8981\u4e9b\u786c\u5b57\u7b26\u4e32\uff0c\u5bfc\u81f4\u91cd\u6784\u6bd4\u8f83\u56f0\u96be\uff0c\u800c\u4e14\u4e00\u65e6\u6572\u9519\u5b57\u6bcd\u5f88\u96be\u5bdf\u89c9\u51fa\u6765\uff0c\u6bd4\u5982 if ( role == \"admin\" ) { } WPF \u4e5f\u7ecf\u5e38\u6709\u8fd9\u6837\u7684\u4ee3\u7801 public string Name { get { return name ; } set { name = value ; RaisePropertyChanged ( \"Name\" ); } } \u73b0\u5728\u6709\u4e86C#6 NameOf\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u8fd9\u6837 public string Name { get { return name ; } set { name = value ; RaisePropertyChanged ( NameOf ( Name )); } } static void Main ( string [] args ) { Console . WriteLine ( nameof ( User . Name )); // output: Name Console . WriteLine ( nameof ( System . Linq )); // output: Linq Console . WriteLine ( nameof ( List < User >)); // output: List Console . ReadLine (); } \u6ce8\u610f\uff1a NameOf\u53ea\u4f1a\u8fd4\u56deMember\u7684\u5b57\u7b26\u4e32\uff0c\u5982\u679c\u524d\u9762\u6709\u5bf9\u8c61\u6216\u8005\u547d\u540d\u7a7a\u95f4\uff0cNameOf\u53ea\u4f1a\u8fd4\u56de . \u7684\u6700\u540e\u4e00\u90e8\u5206, \u53e6\u5916NameOf\u6709\u5f88\u591a\u60c5\u51b5\u662f\u4e0d\u652f\u6301\u7684\uff0c\u6bd4\u5982\u65b9\u6cd5\uff0c\u5173\u952e\u5b57\uff0c\u5bf9\u8c61\u7684\u5b9e\u4f8b\u4ee5\u53ca\u5b57\u7b26\u4e32\u548c\u8868\u8fbe\u5f0f \u56db\u3001\u5728Catch\u548cFinally\u91cc\u4f7f\u7528Await \u00b6 \u5728\u4e4b\u524d\u7684\u7248\u672c\u91cc\uff0cC#\u5f00\u53d1\u56e2\u961f\u8ba4\u4e3a\u5728Catch\u548cFinally\u91cc\u4f7f\u7528Await\u662f\u4e0d\u53ef\u80fd\uff0c\u800c\u73b0\u5728\u4ed6\u4eec\u5728C#6\u91cc\u5b9e\u73b0\u4e86\u5b83\u3002 Resource res = null ; try { res = await Resource . OpenAsync (); // You could always do this. } catch ( ResourceException e ) { await Resource . LogAsync ( res , e ); // Now you can do this \u2026 } finally { if ( res != null ) await res . CloseAsync (); // \u2026 and this. } \u4e94\u3001\u8868\u8fbe\u5f0f\u65b9\u6cd5\u4f53 \u00b6 \u4e00\u53e5\u8bdd\u7684\u65b9\u6cd5\u4f53\u53ef\u4ee5\u76f4\u63a5\u5199\u6210\u7bad\u5934\u51fd\u6570\uff0c\u800c\u4e0d\u518d\u9700\u8981\u5927\u62ec\u53f7 class Program { private static string SayHello () => \"Hello World\" ; private static string JackSayHello () => $ \"Jack {SayHello()}\" ; static void Main ( string [] args ) { Console . WriteLine ( SayHello ()); Console . WriteLine ( JackSayHello ()); Console . ReadLine (); } } \u516d\u3001\u81ea\u52a8\u5c5e\u6027\u521d\u59cb\u5316\u5668 \u00b6 \u4e4b\u524d\u6211\u4eec\u9700\u8981\u8d4b\u521d\u59cb\u5316\u503c\uff0c\u4e00\u822c\u9700\u8981\u8fd9\u6837 public class Person { public int Age { get ; set ; } public Person () { Age = 100 ; } } \u4f46\u662fC# 6\u7684\u65b0\u7279\u6027\u91cc\u6211\u4eec\u8fd9\u6837\u8d4b\u503c public class Person { public int Age { get ; set ; } = 100 ; } \u4e03\u3001\u53ea\u8bfb\u81ea\u52a8\u5c5e\u6027 \u00b6 C# 1\u91cc\u6211\u4eec\u53ef\u4ee5\u8fd9\u6837\u5b9e\u73b0\u53ea\u8bfb\u5c5e\u6027 public class Person { private int age = 100 ; public int Age { get { return age ; } } } \u4f46\u662f\u5f53\u6211\u4eec\u6709\u81ea\u52a8\u5c5e\u6027\u65f6\uff0c\u6211\u4eec\u6ca1\u529e\u6cd5\u5b9e\u884c\u53ea\u8bfb\u5c5e\u6027\uff0c\u56e0\u4e3a\u81ea\u52a8\u5c5e\u6027\u4e0d\u652f\u6301readonly\u5173\u952e\u5b57\uff0c\u6240\u4ee5\u6211\u4eec\u53ea\u80fd\u7f29\u5c0f\u8bbf\u95ee\u6743\u9650 public class Person { public int Age { get ; private set ; } } \u4f46\u662f C#6\u91cc\u6211\u4eec\u53ef\u4ee5\u5b9e\u73b0readonly\u7684\u81ea\u52a8\u5c5e\u6027\u4e86 public class Person { public int Age { get ; } = 100 ; } \u516b\u3001\u5f02\u5e38\u8fc7\u6ee4\u5668 Exception Filter \u00b6 static void Main ( string [] args ) { try { throw new ArgumentException ( \"Age\" ); } catch ( ArgumentException argumentException ) when ( argumentException . Message . Equals ( \"Name\" )) { throw new ArgumentException ( \"Name Exception\" ); } catch ( ArgumentException argumentException ) when ( argumentException . Message . Equals ( \"Age\" )) { throw new Exception ( \"not handle\" ); } catch ( Exception e ) { throw ; } } \u5728\u4e4b\u524d\uff0c\u4e00\u79cd\u5f02\u5e38\u53ea\u80fd\u88abCatch\u4e00\u6b21\uff0c\u73b0\u5728\u6709\u4e86Filter\u540e\u53ef\u4ee5\u5bf9\u76f8\u540c\u7684\u5f02\u5e38\u8fdb\u884c\u8fc7\u6ee4\uff0c\u81f3\u4e8e\u6709\u4ec0\u4e48\u7528\uff0c\u90a3\u5c31\u662f\u89c1\u4ec1\u89c1\u667a\u4e86\uff0c\u6211\u89c9\u5f97\u4e0a\u9762\u7684\u4f8b\u5b50\uff0c\u5b9a\u4e49\u4e24\u4e2a\u5177\u4f53\u7684\u5f02\u5e38 NameArgumentException \u548cAgeArgumentException\u4ee3\u7801\u66f4\u6613\u8bfb\u3002 \u4e5d\u3001 Index \u521d\u59cb\u5316\u5668 \u00b6 \u8fd9\u4e2a\u4e3b\u8981\u662f\u7528\u5728Dictionary\u4e0a\uff0c\u81f3\u4e8e\u6709\u4ec0\u4e48\u7528\uff0c\u6211\u76ee\u524d\u6ca1\u611f\u89c9\u5230\u6709\u4e00\u70b9\u7528\u5904\uff0c\u8c01\u80fd\u77e5\u9053\u5f88\u597d\u7684\u4f7f\u7528\u573a\u666f\uff0c\u6b22\u8fce\u8865\u5145: var names = new Dictionary < int , string > { [1] = \"Jack\" , [2] = \"Alex\" , [3] = \"Eric\" , [4] = \"Jo\" }; foreach ( var item in names ) { Console . WriteLine ( $ \"{item.Key} = {item.Value}\" ); } \u5341\u3001using \u9759\u6001\u7c7b\u7684\u65b9\u6cd5\u53ef\u4ee5\u4f7f\u7528 static using \u00b6 \u8fd9\u4e2a\u529f\u80fd\u5728\u6211\u770b\u6765\uff0c\u540c\u6837\u662f\u5f88\u6ca1\u6709\u7528\u7684\u529f\u80fd\uff0c\u4e5f\u4e3a\u53bb\u6389\u524d\u7f00\u6709\u7684\u65f6\u5019\u6211\u4eec\u4e0d\u77e5\u9053\u8fd9\u4e2a\u662f\u6765\u81ea\u54ea\u91cc\u7684\uff0c\u800c\u4e14\u5982\u679c\u6709\u4e00\u4e2a\u540c\u540d\u65b9\u6cd5\u4e0d\u77e5\u9053\u5177\u4f53\u7528\u54ea\u4e2a\uff0c\u5f53\u7136\u7ecf\u8bc1\u5b9e\u662f\u4f7f\u7528\u7c7b\u672c\u8eab\u7684\u8986\u76d6\uff0c\u4f46\u662f\u5bb9\u6613\u641e\u6df7\u4e0d\u662f\u5417\uff1f using System ; using static System . Math ; namespace CSharp6NewFeatures { class Program { static void Main ( string [] args ) { Console . WriteLine ( Log10 ( 5 )+ PI ); } } } \u603b\u7ed3 \u4e0a\u9762\u4e00\u5230\u516b\u6211\u8ba4\u4e3a\u90fd\u662f\u6bd4\u8f83\u6709\u7528\u7684\u65b0\u7279\u6027\uff0c\u540e\u9762\u7684\u51e0\u4e2a\u6211\u89c9\u5f97\u7528\u5904\u4e0d\u5927\uff0c\u5f53\u7136\u5982\u679c\u627e\u5230\u5408\u9002\u7684\u4f7f\u7528\u573a\u666f\u5e94\u8be5\u6709\u7528\uff0c\u6b22\u8fce\u5927\u5bb6\u8865\u5145\u3002 \u6700\u540e\uff0c\u795d\u5927\u5bb6\u7f16\u7a0b\u6109\u5feb\u3002","title":"C# 6"},{"location":"net/c_sharp/#c-6","text":"","title":"\u4e00\u5c0f\u65f6\u5b66\u4f1aC# 6"},{"location":"net/c_sharp/#string-interpolation","text":"C# 6\u4e4b\u524d\u6211\u4eec\u62fc\u63a5\u5b57\u7b26\u4e32\u65f6\u9700\u8981\u8fd9\u6837 var Name = \"Jack\" ; var results = \"Hello\" + Name ; \u6216\u8005 var Name = \"Jack\" ; var results = string . Format ( \"Hello {0}\" , Name ); \u4f46\u662fC#6\u91cc\u6211\u4eec\u5c31\u53ef\u4ee5\u4f7f\u7528\u65b0\u7684\u5b57\u7b26\u4e32\u63d2\u503c\u7279\u6027 var Name = \"Jack\" ; var results = $ \"Hello {Name}\" ; \u4e0a\u9762\u53ea\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\uff0c\u60f3\u60f3\u5982\u679c\u6709\u591a\u4e2a\u503c\u8981\u66ff\u6362\u7684\u8bdd\uff0c\u7528C#6\u7684\u8fd9\u4e2a\u65b0\u7279\u6027\uff0c\u4ee3\u7801\u5c31\u4f1a\u5927\u5927\u51cf\u5c0f\uff0c\u800c\u4e14\u53ef\u8bfb\u6027\u6bd4\u8d77\u4e4b\u524d\u5927\u5927\u589e\u5f3a Person p = new Person { FirstName = \"Jack\" , LastName = \"Wang\" , Age = 100 }; var results = string . Format ( \"First Name: {0} LastName: {1} Age: { 2} \" , p . FirstName , p . LastName , p . Age ); \u6709\u4e86\u5b57\u7b26\u4e32\u63d2\u503c\u540e: var results = $ \"First Name: {p.FirstName} LastName: {p.LastName} Age: {p.Age}\" ; \u5b57\u7b26\u4e32\u63d2\u503c\u4e0d\u5149\u662f\u53ef\u4ee5\u63d2\u7b80\u5355\u7684\u5b57\u7b26\u4e32\uff0c\u8fd8\u53ef\u4ee5\u76f4\u63a5\u63d2\u5165\u4ee3\u7801 Console . WriteLine ( $ \"Jack is saying { new Tools().SayHello() }\" ); var info = $ \"Your discount is {await GetDiscount()}\" ; \u90a3\u4e48\u5982\u4f55\u5904\u7406\u591a\u8bed\u8a00\u5462\uff1f\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 IFormattable\u4e0b\u9762\u7684\u4ee3\u7801\u5982\u4f55\u5b9e\u73b0\u591a\u8bed\u8a00\uff1f Double remain = 2000.5 ; var results = $ \"your money is {remain:C}\" ; \u8f93\u51fa your money is $2,000.50 \u4f7f\u7528IFormattable \u591a\u8bed\u8a00 class Program { static void Main ( string [] args ) { Double remain = 2000.5 ; var results = ChineseText ( $ \"your money is {remain:C}\" ); Console . WriteLine ( results ); Console . Read (); } public static string ChineseText ( IFormattable formattable ) { return formattable . ToString ( null , new CultureInfo ( \"zh-cn\" )); } } \u8f93\u51fa your money is \uffe52,000.50","title":"\u4e00\u3001\u5b57\u7b26\u4e32\u63d2\u503c \uff08String Interpolation\uff09"},{"location":"net/c_sharp/#_1","text":"C# 6\u6dfb\u52a0\u4e86\u4e00\u4e2a ?. \u64cd\u4f5c\u7b26\uff0c\u5f53\u4e00\u4e2a\u5bf9\u8c61\u6216\u8005\u5c5e\u6027\u804c\u4e3a\u7a7a\u65f6\u76f4\u63a5\u8fd4\u56denull, \u5c31\u4e0d\u518d\u7ee7\u7eed\u6267\u884c\u540e\u9762\u7684\u4ee3\u7801\uff0c\u5728\u4e4b\u524d\u6211\u4eec\u7684\u4ee3\u7801\u91cc\u7ecf\u5e38\u51fa\u73b0 NullException, \u6240\u4ee5\u6211\u4eec\u5c31\u9700\u8981\u52a0\u5f88\u591aNull\u7684\u5224\u65ad\uff0c\u6bd4\u5982 if ( user != null && user . Project != null && user . Project . Tasks != null && user . Project . Tasks . Count > 0 ) { Console . WriteLine ( user . Project . Tasks . First (). Name ); } \u73b0\u5728\u6211\u4eec\u53ef\u4ee5\u4e0d\u7528\u5199 IF \u76f4\u63a5\u5199\u6210\u5982\u4e0b\u8fd9\u6837 Console . WriteLine ( user ?. Project ?. Tasks ?. First ()?. Name ); \u8fd9\u4e2a?. \u7279\u6027\u4e0d\u5149\u662f\u53ef\u4ee5\u7528\u4e8e\u53d6\u503c\uff0c\u4e5f\u53ef\u4ee5\u7528\u4e8e\u65b9\u6cd5\u8c03\u7528\uff0c\u5982\u679c\u5bf9\u8c61\u4e3a\u7a7a\u5c06\u4e0d\u8fdb\u884c\u4efb\u4f55\u64cd\u4f5c\uff0c\u4e0b\u9762\u7684\u4ee3\u7801\u4e0d\u4f1a\u62a5\u9519\uff0c\u4e5f\u4e0d\u4f1a\u6709\u4efb\u4f55\u8f93\u51fa\u3002 class Program { static void Main ( string [] args ) { User user = null ; user ?. SayHello (); Console . Read (); } } public class User { public void SayHello () { Console . WriteLine ( \"Ha Ha\" ); } } \u8fd8\u53ef\u4ee5\u7528\u4e8e\u6570\u7ec4\u7684\u7d22\u5f15\u5668 class Program { static void Main ( string [] args ) { User [] users = null ; List < User > listUsers = null ; // Console.WriteLine(users[1]?.Name); // \u62a5\u9519 // Console.WriteLine(listUsers[1]?.Name); //\u62a5\u9519 Console . WriteLine ( users ?[ 1 ]. Name ); // \u6b63\u5e38 Console . WriteLine ( listUsers ?[ 1 ]. Name ); // \u6b63\u5e38 Console . ReadLine (); } } \u6ce8\u610f\uff1a \u4e0a\u9762\u7684\u4ee3\u7801\u867d\u7136\u53ef\u4ee5\u8ba9\u6211\u4eec\u5c11\u4e9b\u5f88\u591a\u4ee3\u7801\uff0c\u800c\u4e14\u4e5f\u51cf\u5c11\u4e86\u7a7a\u5f02\u5e38\uff0c\u4f46\u662f\u6211\u4eec\u5374\u9700\u8981\u5c0f\u5fc3\u4f7f\u7528\uff0c\u56e0\u4e3a\u6709\u7684\u65f6\u5019\u6211\u4eec\u786e\u5b9e\u662f\u9700\u8981\u629b\u51fa\u7a7a\u5f02\u5e38\uff0c\u90a3\u4e48\u4f7f\u7528\u8fd9\u4e2a\u7279\u6027\u53cd\u800c\u9690\u85cf\u4e86Bug","title":"\u4e8c\u3001\u7a7a\u64cd\u4f5c\u7b26 ( ?. )"},{"location":"net/c_sharp/#nameof","text":"\u8fc7\u53bb\uff0c\u6211\u4eec\u6709\u5f88\u591a\u7684\u5730\u65b9\u9700\u8981\u4e9b\u786c\u5b57\u7b26\u4e32\uff0c\u5bfc\u81f4\u91cd\u6784\u6bd4\u8f83\u56f0\u96be\uff0c\u800c\u4e14\u4e00\u65e6\u6572\u9519\u5b57\u6bcd\u5f88\u96be\u5bdf\u89c9\u51fa\u6765\uff0c\u6bd4\u5982 if ( role == \"admin\" ) { } WPF \u4e5f\u7ecf\u5e38\u6709\u8fd9\u6837\u7684\u4ee3\u7801 public string Name { get { return name ; } set { name = value ; RaisePropertyChanged ( \"Name\" ); } } \u73b0\u5728\u6709\u4e86C#6 NameOf\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u8fd9\u6837 public string Name { get { return name ; } set { name = value ; RaisePropertyChanged ( NameOf ( Name )); } } static void Main ( string [] args ) { Console . WriteLine ( nameof ( User . Name )); // output: Name Console . WriteLine ( nameof ( System . Linq )); // output: Linq Console . WriteLine ( nameof ( List < User >)); // output: List Console . ReadLine (); } \u6ce8\u610f\uff1a NameOf\u53ea\u4f1a\u8fd4\u56deMember\u7684\u5b57\u7b26\u4e32\uff0c\u5982\u679c\u524d\u9762\u6709\u5bf9\u8c61\u6216\u8005\u547d\u540d\u7a7a\u95f4\uff0cNameOf\u53ea\u4f1a\u8fd4\u56de . \u7684\u6700\u540e\u4e00\u90e8\u5206, \u53e6\u5916NameOf\u6709\u5f88\u591a\u60c5\u51b5\u662f\u4e0d\u652f\u6301\u7684\uff0c\u6bd4\u5982\u65b9\u6cd5\uff0c\u5173\u952e\u5b57\uff0c\u5bf9\u8c61\u7684\u5b9e\u4f8b\u4ee5\u53ca\u5b57\u7b26\u4e32\u548c\u8868\u8fbe\u5f0f","title":"\u4e09\u3001 NameOf"},{"location":"net/c_sharp/#catchfinallyawait","text":"\u5728\u4e4b\u524d\u7684\u7248\u672c\u91cc\uff0cC#\u5f00\u53d1\u56e2\u961f\u8ba4\u4e3a\u5728Catch\u548cFinally\u91cc\u4f7f\u7528Await\u662f\u4e0d\u53ef\u80fd\uff0c\u800c\u73b0\u5728\u4ed6\u4eec\u5728C#6\u91cc\u5b9e\u73b0\u4e86\u5b83\u3002 Resource res = null ; try { res = await Resource . OpenAsync (); // You could always do this. } catch ( ResourceException e ) { await Resource . LogAsync ( res , e ); // Now you can do this \u2026 } finally { if ( res != null ) await res . CloseAsync (); // \u2026 and this. }","title":"\u56db\u3001\u5728Catch\u548cFinally\u91cc\u4f7f\u7528Await"},{"location":"net/c_sharp/#_2","text":"\u4e00\u53e5\u8bdd\u7684\u65b9\u6cd5\u4f53\u53ef\u4ee5\u76f4\u63a5\u5199\u6210\u7bad\u5934\u51fd\u6570\uff0c\u800c\u4e0d\u518d\u9700\u8981\u5927\u62ec\u53f7 class Program { private static string SayHello () => \"Hello World\" ; private static string JackSayHello () => $ \"Jack {SayHello()}\" ; static void Main ( string [] args ) { Console . WriteLine ( SayHello ()); Console . WriteLine ( JackSayHello ()); Console . ReadLine (); } }","title":"\u4e94\u3001\u8868\u8fbe\u5f0f\u65b9\u6cd5\u4f53"},{"location":"net/c_sharp/#_3","text":"\u4e4b\u524d\u6211\u4eec\u9700\u8981\u8d4b\u521d\u59cb\u5316\u503c\uff0c\u4e00\u822c\u9700\u8981\u8fd9\u6837 public class Person { public int Age { get ; set ; } public Person () { Age = 100 ; } } \u4f46\u662fC# 6\u7684\u65b0\u7279\u6027\u91cc\u6211\u4eec\u8fd9\u6837\u8d4b\u503c public class Person { public int Age { get ; set ; } = 100 ; }","title":"\u516d\u3001\u81ea\u52a8\u5c5e\u6027\u521d\u59cb\u5316\u5668"},{"location":"net/c_sharp/#_4","text":"C# 1\u91cc\u6211\u4eec\u53ef\u4ee5\u8fd9\u6837\u5b9e\u73b0\u53ea\u8bfb\u5c5e\u6027 public class Person { private int age = 100 ; public int Age { get { return age ; } } } \u4f46\u662f\u5f53\u6211\u4eec\u6709\u81ea\u52a8\u5c5e\u6027\u65f6\uff0c\u6211\u4eec\u6ca1\u529e\u6cd5\u5b9e\u884c\u53ea\u8bfb\u5c5e\u6027\uff0c\u56e0\u4e3a\u81ea\u52a8\u5c5e\u6027\u4e0d\u652f\u6301readonly\u5173\u952e\u5b57\uff0c\u6240\u4ee5\u6211\u4eec\u53ea\u80fd\u7f29\u5c0f\u8bbf\u95ee\u6743\u9650 public class Person { public int Age { get ; private set ; } } \u4f46\u662f C#6\u91cc\u6211\u4eec\u53ef\u4ee5\u5b9e\u73b0readonly\u7684\u81ea\u52a8\u5c5e\u6027\u4e86 public class Person { public int Age { get ; } = 100 ; }","title":"\u4e03\u3001\u53ea\u8bfb\u81ea\u52a8\u5c5e\u6027"},{"location":"net/c_sharp/#exception-filter","text":"static void Main ( string [] args ) { try { throw new ArgumentException ( \"Age\" ); } catch ( ArgumentException argumentException ) when ( argumentException . Message . Equals ( \"Name\" )) { throw new ArgumentException ( \"Name Exception\" ); } catch ( ArgumentException argumentException ) when ( argumentException . Message . Equals ( \"Age\" )) { throw new Exception ( \"not handle\" ); } catch ( Exception e ) { throw ; } } \u5728\u4e4b\u524d\uff0c\u4e00\u79cd\u5f02\u5e38\u53ea\u80fd\u88abCatch\u4e00\u6b21\uff0c\u73b0\u5728\u6709\u4e86Filter\u540e\u53ef\u4ee5\u5bf9\u76f8\u540c\u7684\u5f02\u5e38\u8fdb\u884c\u8fc7\u6ee4\uff0c\u81f3\u4e8e\u6709\u4ec0\u4e48\u7528\uff0c\u90a3\u5c31\u662f\u89c1\u4ec1\u89c1\u667a\u4e86\uff0c\u6211\u89c9\u5f97\u4e0a\u9762\u7684\u4f8b\u5b50\uff0c\u5b9a\u4e49\u4e24\u4e2a\u5177\u4f53\u7684\u5f02\u5e38 NameArgumentException \u548cAgeArgumentException\u4ee3\u7801\u66f4\u6613\u8bfb\u3002","title":"\u516b\u3001\u5f02\u5e38\u8fc7\u6ee4\u5668 Exception Filter"},{"location":"net/c_sharp/#index","text":"\u8fd9\u4e2a\u4e3b\u8981\u662f\u7528\u5728Dictionary\u4e0a\uff0c\u81f3\u4e8e\u6709\u4ec0\u4e48\u7528\uff0c\u6211\u76ee\u524d\u6ca1\u611f\u89c9\u5230\u6709\u4e00\u70b9\u7528\u5904\uff0c\u8c01\u80fd\u77e5\u9053\u5f88\u597d\u7684\u4f7f\u7528\u573a\u666f\uff0c\u6b22\u8fce\u8865\u5145: var names = new Dictionary < int , string > { [1] = \"Jack\" , [2] = \"Alex\" , [3] = \"Eric\" , [4] = \"Jo\" }; foreach ( var item in names ) { Console . WriteLine ( $ \"{item.Key} = {item.Value}\" ); }","title":"\u4e5d\u3001 Index \u521d\u59cb\u5316\u5668"},{"location":"net/c_sharp/#using-static-using","text":"\u8fd9\u4e2a\u529f\u80fd\u5728\u6211\u770b\u6765\uff0c\u540c\u6837\u662f\u5f88\u6ca1\u6709\u7528\u7684\u529f\u80fd\uff0c\u4e5f\u4e3a\u53bb\u6389\u524d\u7f00\u6709\u7684\u65f6\u5019\u6211\u4eec\u4e0d\u77e5\u9053\u8fd9\u4e2a\u662f\u6765\u81ea\u54ea\u91cc\u7684\uff0c\u800c\u4e14\u5982\u679c\u6709\u4e00\u4e2a\u540c\u540d\u65b9\u6cd5\u4e0d\u77e5\u9053\u5177\u4f53\u7528\u54ea\u4e2a\uff0c\u5f53\u7136\u7ecf\u8bc1\u5b9e\u662f\u4f7f\u7528\u7c7b\u672c\u8eab\u7684\u8986\u76d6\uff0c\u4f46\u662f\u5bb9\u6613\u641e\u6df7\u4e0d\u662f\u5417\uff1f using System ; using static System . Math ; namespace CSharp6NewFeatures { class Program { static void Main ( string [] args ) { Console . WriteLine ( Log10 ( 5 )+ PI ); } } } \u603b\u7ed3 \u4e0a\u9762\u4e00\u5230\u516b\u6211\u8ba4\u4e3a\u90fd\u662f\u6bd4\u8f83\u6709\u7528\u7684\u65b0\u7279\u6027\uff0c\u540e\u9762\u7684\u51e0\u4e2a\u6211\u89c9\u5f97\u7528\u5904\u4e0d\u5927\uff0c\u5f53\u7136\u5982\u679c\u627e\u5230\u5408\u9002\u7684\u4f7f\u7528\u573a\u666f\u5e94\u8be5\u6709\u7528\uff0c\u6b22\u8fce\u5927\u5bb6\u8865\u5145\u3002 \u6700\u540e\uff0c\u795d\u5927\u5bb6\u7f16\u7a0b\u6109\u5feb\u3002","title":"\u5341\u3001using \u9759\u6001\u7c7b\u7684\u65b9\u6cd5\u53ef\u4ee5\u4f7f\u7528 static using"},{"location":"php/","text":"PHP \u00b6 \u5728PHP\u5f00\u53d1\u4e2d\uff0c\u9009\u62e9\u5408\u9002\u7684\u6846\u67b6\u6709\u52a9\u4e8e\u52a0\u5feb\u8f6f\u4ef6\u5f00\u53d1\uff0c\u8282\u7ea6\u5b9d\u8d35\u7684\u9879\u76ee\u65f6\u95f4\uff0c\u8ba9\u5f00\u53d1\u8005\u4e13\u6ce8\u4e8e\u529f\u80fd\u7684\u5b9e\u73b0\u4e0a\u3002\u7531\u4e8e\u6d41\u884c\u7684\u6846\u67b6\u7ecf\u8fc7\u4e86\u5927\u91cf\u9879\u76ee\u7684\u68c0\u9a8c\uff0c\u6240\u4ee5\u4f7f\u7528\u6846\u67b6\u8fd8\u6709\u52a9\u4e8e\u521b\u5efa\u66f4\u52a0\u7a33\u5b9a\u548c\u5b89\u5168\u7684\u5e94\u7528\u7a0b\u5e8f\u3002\u672c\u6587\u641c\u96c6\u4e86\u76ee\u524d\u5168\u7403\u6700\u6d41\u884c\u768425\u6b3ePHP\u6846\u67b6\uff0c\u6b22\u8fce\u5927\u5bb6\u4ea4\u6d41\u5b66\u4e60\u3002 1\u3001Laravel \u00b6 Laravel\u662f\u4e00\u4e2a\u7b80\u5355\u4f18\u96c5\u7684PHPWeb\u5f00\u53d1\u6846\u67b6\uff0c\u53ef\u4ee5\u5c06\u5f00\u53d1\u8005\u4ece\u610f\u5927\u5229\u9762\u6761\u5f0f\u7684\u4ee3\u7801\u4e2d\u89e3\u653e\u51fa\u6765\uff0c\u901a\u8fc7\u7b80\u5355\u3001\u9ad8\u96c5\u3001\u8868\u8fbe\u5f0f\u8bed\u6cd5\u5f00\u53d1\u51fa\u5f88\u68d2\u7684Web\u5e94\u7528\uff0cLaravel\u62e5\u6709\u66f4\u5bcc\u6709\u8868\u73b0\u529b\u7684\u8bed\u6cd5\u3001\u9ad8\u8d28\u91cf\u7684\u6587\u6863\u3001\u4e30\u5bcc\u7684\u6269\u5c55\u5305\uff0c\u88ab\u79f0\u4e3a\u201c\u5de8\u5320\u7ea7PHP\u5f00\u53d1\u6846\u67b6\u201d\u3002 2\u3001Phalcon \u00b6 Phalcon\u662f\u4e00\u4e2a\u5f00\u6e90\u7684\u3001\u5168\u6808\u7684\u3001\u7528C\u8bed\u8a00\u7f16\u5199\u7684PHP5\u6846\u67b6\uff0c\u4e3a\u5f00\u53d1\u8005\u63d0\u4f9b\u4e86\u7f51\u7ad9\u53ca\u5e94\u7528\u5f00\u53d1\u6240\u9700\u7684\u5927\u91cf\u9ad8\u7ea7\u5de5\u5177\uff0c\u4e14Phalcon\u662f\u677e\u8026\u5408\u7684\uff0c\u5f00\u53d1\u8005\u53ef\u4ee5\u6839\u636e\u9700\u8981\u4f7f\u7528\u5176\u4ed6\u7ec4\u4ef6\u3002Phalcon\u4e2d\u7684\u6240\u6709\u51fd\u6570\u90fd\u4ee5PHP\u7c7b\u7684\u65b9\u5f0f\u5448\u73b0\uff0c\u5f00\u53d1\u8005\u65e0\u9700\u5b66\u4e60\u548c\u4f7f\u7528C\u8bed\u8a00\uff0c\u4e14\u65e0\u9700\u62c5\u5fc3\u6027\u80fd\u95ee\u9898\u3002 3\u3001Symfony2 \u00b6 Symfony2\u662f\u4e00\u4e2a\u5f00\u6e90\u7684PHPWeb\u6846\u67b6\uff0c\u6709\u7740\u5f00\u53d1\u901f\u5ea6\u5feb\u3001\u6027\u80fd\u9ad8\u7b49\u7279\u70b9\u3002\u4e0e\u5176\u4ed6\u6846\u67b6\u76f8\u6bd4\uff0cSymfony2\u7684\u4f18\u52bf\u5305\u62ec\uff1a\u652f\u6301DI\uff08\u4f9d\u8d56\u6ce8\u5165\uff09\u548cIoC\uff08\u63a7\u5236\u53cd\u8f6c\uff09\uff1b\u6269\u5c55\u6027\u5f3a\uff1b\u6587\u6863\u548c\u793e\u533a\u6bd4\u8f83\u6210\u719f\u3002\u4f46\u662fSymfony2\u7684\u5b66\u4e60\u66f2\u7ebf\u4e5f\u6bd4\u8f83\u9661\u5ced\uff0c\u6ca1\u6709\u7ecf\u9a8c\u7684\u521d\u5b66\u8005\u5f80\u5f80\u9700\u8981\u4e00\u4e9b\u7ec3\u4e60\u624d\u80fd\u638c\u63e1\u5176\u7279\u6027\u3002 4\u3001CodeIgniter \u00b6 CodeIgniter\u662f\u4e00\u4e2a\u7b80\u5355\u5feb\u901f\u7684PHPMVC\u6846\u67b6\u3002CodeIgniter\u4e0d\u9700\u8981\u5927\u91cf\u4ee3\u7801\uff081.6.2\u7248\u672c\u4ec5\u4e3a2.8MB\uff0c\u5176\u4e2d\u76841.3MB\u662f\u53ef\u4ee5\u5220\u9664\u7684\u7528\u6237\u6587\u6863\uff09\uff0c\u4e5f\u4e0d\u4f1a\u8981\u6c42\u60a8\u63d2\u5165\u7c7b\u4f3c\u4e8ePEAR\u7684\u5e9e\u5927\u7684\u5e93\u3002\u5b83\u5728PHP4\u548cPHP5\u4e2d\u8868\u73b0\u540c\u6837\u826f\u597d\uff0c\u5141\u8bb8\u60a8\u521b\u5efa\u53ef\u79fb\u690d\u7684\u5e94\u7528\u7a0b\u5e8f\u3002\u6700\u540e\uff0c\u60a8\u4e0d\u5fc5\u4f7f\u7528\u6a21\u677f\u5f15\u64ce\u6765\u521b\u5efa\u89c6\u56fe\u2014\u53ea\u9700\u6cbf\u7528\u65e7\u5f0f\u7684HTML\u548cPHP\u5373\u53ef\u3002CodeIgniter\u5165\u95e8\u975e\u5e38\u5bb9\u6613\uff0c\u800c\u4e14\u6709\u5f88\u5168\u9762\u7684\u4e2d\u6587\u7248\u7528\u6237\u5f00\u53d1\u624b\u518c\uff0c\u5728\u5b98\u65b9\u7f51\u7ad9\u4e0a\u53ef\u4ee5\u4e86\u89e3\u5230\u66f4\u591a\u5185\u5bb9\u3002 5\u3001Yii \u00b6 Yii\u662f\u4e00\u4e2a\u57fa\u4e8e\u7ec4\u4ef6\u7684\u9ad8\u6027\u80fdPHP\u6846\u67b6\uff0c\u7528\u4e8e\u5f00\u53d1\u5927\u578bWeb\u5e94\u7528\u3002Yii\u91c7\u7528\u4e25\u683c\u7684OOP\u7f16\u5199\uff0c\u5e76\u6709\u7740\u5b8c\u5584\u7684\u5e93\u5f15\u7528\u4ee5\u53ca\u5168\u9762\u7684\u6559\u7a0b\u3002\u4eceMVC\uff0cDAO/ActiveRecord\uff0cwidgets\uff0ccaching\uff0c\u7b49\u7ea7\u5f0fRBAC\uff0cWeb\u670d\u52a1\uff0c\u5230\u4e3b\u9898\u5316\uff0cI18N\u548cL10N\uff0cYii\u63d0\u4f9b\u4e86\u4eca\u65e5Web2.0\u5e94\u7528\u5f00\u53d1\u6240\u9700\u8981\u7684\u51e0\u4e4e\u4e00\u5207\u529f\u80fd\u3002\u4e8b\u5b9e\u4e0a\uff0cYii\u662f\u6700\u6709\u6548\u7387\u7684PHP\u6846\u67b6\u4e4b\u4e00\u3002Yii\u662f\u4e00\u4e2a\u9ad8\u6027\u80fd\u7684PHP5\u7684web\u5e94\u7528\u7a0b\u5e8f\u5f00\u53d1\u6846\u67b6\u3002\u901a\u8fc7\u4e00\u4e2a\u7b80\u5355\u7684\u547d\u4ee4\u884c\u5de5\u5177yiic\u53ef\u4ee5\u5feb\u901f\u521b\u5efa\u4e00\u4e2aweb\u5e94\u7528\u7a0b\u5e8f\u7684\u4ee3\u7801\u6846\u67b6\uff0c\u5f00\u53d1\u8005\u53ef\u4ee5\u5728\u751f\u6210\u7684\u4ee3\u7801\u6846\u67b6\u57fa\u7840\u4e0a\u6dfb\u52a0\u4e1a\u52a1\u903b\u8f91\uff0c\u4ee5\u5feb\u901f\u5b8c\u6210\u5e94\u7528\u7a0b\u5e8f\u7684\u5f00\u53d1\u3002 6\u3001Aura \u00b6 Aura\u4e3aPHP5.4\u53ca\u4ee5\u4e0a\u7248\u672c\u63d0\u4f9b\u72ec\u7acb\u7684\u7c7b\u5e93\uff0c\u5b83\u7684\u4ee3\u7801\u975e\u5e38\u5e72\u51c0\uff0c\u5e76\u4e14\u771f\u6b63\u72ec\u7acb\u3002\u8fd9\u4e9b\u5305\u53ef\u4ee5\u5355\u72ec\u4f7f\u7528\uff0c\u4e5f\u53ef\u4ee5\u5c06\u5b83\u4eec\u5408\u5e76\u5230\u5f00\u53d1\u8005\u81ea\u5df1\u7684\u6846\u67b6\u4e2d\u3002\u56fd\u5185\u8d44\u6599\u975e\u5e38\u5c11\u3002 7\u3001Cakephp \u00b6 CakePHP\u662f\u4e00\u4e2a\u8fd0\u7528\u4e86\u8bf8\u5982ActiveRecord\u3001AssociationDataMapping\u3001FrontController\u548cMVC\u7b49\u8457\u540d\u8bbe\u8ba1\u6a21\u5f0f\u7684\u5feb\u901f\u5f00\u53d1\u6846\u67b6\u3002\u8be5\u9879\u76ee\u4e3b\u8981\u76ee\u6807\u662f\u63d0\u4f9b\u4e00\u4e2a\u53ef\u4ee5\u8ba9\u5404\u79cd\u5c42\u6b21\u7684PHP\u5f00\u53d1\u4eba\u5458\u5feb\u901f\u5730\u5f00\u53d1\u51fa\u5065\u58ee\u7684Web\u5e94\u7528\uff0c\u800c\u53c8\u4e0d\u5931\u7075\u6d3b\u6027\u3002CakePHP\u662f\u4e00\u4e2a\u57fa\u4e8ePHP\uff0c\u514d\u8d39\u4e14\u5f00\u6e90\u7684\u8fc5\u901f\u53d1\u5c55\u6846\u67b6\u6700\u5f00\u59cb\u4eceRubyOnRails\u6846\u67b6\u91cc\u5f97\u5230\u7075\u611f\u3002CakePHP\u62e5\u6709\u4e00\u4e2a\u6d3b\u8dc3\u7684\u5f00\u53d1\u56e2\u961f\u4ee5\u53ca\u793e\u533a\uff0c\u4f7fCakePHP\u672c\u8eab\u66f4\u5177\u5907\u5e94\u6709\u7684\u4ef7\u503c\u3002\u53e6\u5916\uff0c\u4f7f\u7528CakePHP\u4e5f\u610f\u5473\u7740\u60a8\u7684\u5e94\u7528\u7a0b\u5e8f\u5c06\u66f4\u5bb9\u6613\u5730\u6d4b\u8bd5\u4ee5\u53ca\u66f4\u5bb9\u6613\u5730\u88ab\u6539\u826f\u3001\u66f4\u65b0\u3002 8\u3001Zend \u00b6 \u7531\u6700\u6d41\u884c\u6700\u4e13\u4e1a\u7684PHPIDE\u4ea7\u54c1ZendStudio\u7684\u5f00\u53d1\u5546\u5f00\u53d1\uff0cZendFramework(\u7b80\u5199ZF)\u662f\u5f00\u6e90\u7684\uff0c\u4e3b\u8981\u7528\u4e8eWeb\u5e94\u7528\u7a0b\u5e8f\u7684\u5f00\u53d1\u548c\u670d\u52a1\uff0cZF\u91c7\u7528MVC(Model\u2013View-Controller)\u67b6\u6784\u6a21\u5f0f\u6765\u5206\u79bb\u5e94\u7528\u7a0b\u5e8f\u4e2d\u4e0d\u540c\u7684\u90e8\u5206\u65b9\u4fbf\u7a0b\u5e8f\u7684\u5f00\u53d1\u548c\u7ef4\u62a4\u3002 9\u3001Kohana \u00b6 Kohana\u662f\u4e00\u6b3e\u7eafPHP5\u7684\u6846\u67b6\uff0c\u57fa\u4e8eMVC\u6a21\u5f0f\u5f00\u53d1\uff0c\u5b83\u7684\u7279\u70b9\u5c31\u662f\u9ad8\u5b89\u5168\u6027\uff0c\u8f7b\u91cf\u7ea7\u4ee3\u7801\uff0c\u5bb9\u6613\u4f7f\u7528\u30022009\u5e749\u6708\u53d1\u5e03\u4e863.0\u7248\u672c\uff0c\u652f\u6301HMVC\u6a21\u5f0f\u3002 10\u3001FuelPHP \u00b6 FuelPHP\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u3001\u7075\u6d3b\u7684\u3001\u793e\u533a\u9a71\u52a8\u7684PHP5.3web\u6846\u67b6\u3002\u5b83\u7684\u8bde\u751f\u6e90\u81ea\u4e8e\u5f88\u591a\u5f00\u53d1\u793e\u533a\u5bf9\u4e8e\u73b0\u6709\u5f00\u53d1\u6846\u67b6\u7684\u4e0d\u6ee1\uff0cFuelPHP\u975e\u5e38\u4fbf\u643a\uff0c\u51e0\u4e4e\u6240\u6709\u7684\u670d\u52a1\u5668\u90fd\u80fd\u591f\u5f88\u597d\u7684\u652f\u6301\uff0c\u5e76\u4e14\u7b80\u6d01\u5f3a\u5927\u7684\u8bed\u6cd5\u4e5f\u80fd\u591f\u8ba9\u4f60\u5f88\u5feb\u559c\u6b22\u4e0a\u5b83\u3002 11\u3001Slim \u00b6 Slim\u662f\u4e00\u6b3ePHP\u5fae\u6846\u67b6\uff0c\u53ef\u4ee5\u5e2e\u52a9\u4f60\u5feb\u901f\u7f16\u5199\u7b80\u5355\u4f46\u529f\u80fd\u5f3a\u5927\u7684web\u5e94\u7528\u548cAPI\u3002 12\u3001Typo3 \u00b6 Typo3\u5185\u5bb9\u7ba1\u7406\u7cfb\u7edf\uff0c\u662f\u57fa\u4e8ePHP4/PHP5+MYsql\u7684\u5185\u5bb9\u7ba1\u7406\u7cfb\u7edf(\u6846\u67b6)(CMS/CMF),\u517c\u5bb9PHP4\u548cPHP5.\u6570\u636e\u5e93\u7cfb\u7edf\u9664Mysql\u4e4b\u5916\uff0c\u4e5f\u80fd\u8fd0\u884c\u4e8eOracle,MS-SQL,ODBC,LDAP\u7b49\u5176\u5b83\u6570\u636e\u5e93\u7cfb\u7edf\uff0c\u652f\u6301Typo3\u7684\u670d\u52a1\u5668\u7cfb\u7edf\uff1aApache\u6216\u8005IIS\u67b6\u8bbe\u7684\u670d\u52a1\u5668\u3002 13\u3001ThinkPHP \u00b6 ThinkPHP\u662f\u4e3a\u4e86\u7b80\u5316\u4f01\u4e1a\u7ea7\u5e94\u7528\u5f00\u53d1\u548c\u654f\u6377WEB\u5e94\u7528\u5f00\u53d1\u800c\u8bde\u751f\u7684\u3002\u6700\u65e9\u8bde\u751f\u4e8e2006\u5e74\u521d\uff0c2007\u5e74\u5143\u65e6\u6b63\u5f0f\u66f4\u540d\u4e3aThinkPHP\uff0c\u5e76\u4e14\u9075\u5faaApache2\u5f00\u6e90\u534f\u8bae\u53d1\u5e03\u3002ThinkPHP\u4ece\u8bde\u751f\u4ee5\u6765\u4e00\u76f4\u79c9\u627f\u7b80\u6d01\u5b9e\u7528\u7684\u8bbe\u8ba1\u539f\u5219\uff0c\u5728\u4fdd\u6301\u51fa\u8272\u7684\u6027\u80fd\u548c\u81f3\u7b80\u7684\u4ee3\u7801\u7684\u540c\u65f6\uff0c\u4e5f\u6ce8\u91cd\u6613\u7528\u6027\u3002\u5e76\u4e14\u62e5\u6709\u4f17\u591a\u539f\u521b\u529f\u80fd\u548c\u7279\u6027\uff0c\u5728\u793e\u533a\u56e2\u961f\u7684\u79ef\u6781\u53c2\u4e0e\u4e0b\uff0c\u5728\u6613\u7528\u6027\u3001\u6269\u5c55\u6027\u548c\u6027\u80fd\u65b9\u9762\u4e0d\u65ad\u4f18\u5316\u548c\u6539\u8fdb\u3002ThinkPHP\u662f\u4e00\u4e2a\u5feb\u901f\u3001\u517c\u5bb9\u800c\u4e14\u7b80\u5355\u7684\u8f7b\u91cf\u7ea7\u56fd\u4ea7PHP\u5f00\u53d1\u6846\u67b6\uff0c\u8bde\u751f\u4e8e2006\u5e74\u521d\uff0c\u539f\u540dFCS\uff0c2007\u5e74\u5143\u65e6\u6b63\u5f0f\u66f4\u540d\u4e3aThinkPHP\uff0c\u9075\u5faaApache2\u5f00\u6e90\u534f\u8bae\u53d1\u5e03\uff0c\u4eceStruts\u7ed3\u6784\u79fb\u690d\u8fc7\u6765\u5e76\u505a\u4e86\u6539\u8fdb\u548c\u5b8c\u5584\uff0c\u540c\u65f6\u4e5f\u501f\u9274\u4e86\u56fd\u5916\u5f88\u591a\u4f18\u79c0\u7684\u6846\u67b6\u548c\u6a21\u5f0f\uff0c\u4f7f\u7528\u9762\u5411\u5bf9\u8c61\u7684\u5f00\u53d1\u7ed3\u6784\u548cMVC\u6a21\u5f0f\uff0c\u878d\u5408\u4e86Struts\u7684\u601d\u60f3\u548cTagLib\uff08\u6807\u7b7e\u5e93\uff09\u3001RoR\u7684ORM\u6620\u5c04\u548cActiveRecord\u6a21\u5f0f\u3002 14\u3001Flight \u00b6 Flight\u662f\u4e00\u4e2a\u5feb\u901f\u3001\u7b80\u5355\u3001\u53ef\u6269\u5c55\u7684\u5fae\u578bPHP\u6846\u67b6\uff0c\u5141\u8bb8\u7528\u6237\u5feb\u901f\u7684\u6784\u5efaRestfulWeb\u5e94\u7528\u7a0b\u5e8f\uff0c\u540c\u6837\u6613\u4e8e\u5b66\u4e60\u548c\u4f7f\u7528\uff0c\u7b80\u5355\u4f46\u662f\u5f88\u5f3a\u5927\uff01 15\u3001PHPixie \u00b6 PHPixie\u662f\u4e00\u4e2a\u8f7b\u91cf\u7ea7\u7684MVCPHP\u6846\u67b6,\u8bbe\u8ba1\u7528\u4e8e\u5feb\u901f\u5f00\u53d1,\u6613\u4e8e\u5b66\u4e60,\u5e76\u63d0\u4f9b\u4e00\u4e2a\u575a\u5b9e\u7684\u57fa\u7840\u5f00\u53d1\u6846\u67b6\u3002 16\u3001Yaf \u00b6 Yaf\uff0c\u5168\u79f0YetAnotherFramework\uff0c\u662f\u4e00\u4e2aC\u8bed\u8a00\u7f16\u5199\u7684PHP\u6846\u67b6\uff0c\u662f\u4e00\u4e2a\u4ee5PHP\u6269\u5c55\u5f62\u5f0f\u63d0\u4f9b\u7684PHP\u5f00\u53d1\u6846\u67b6,\u76f8\u6bd4\u4e8e\u4e00\u822c\u7684PHP\u6846\u67b6,\u5b83\u66f4\u5feb\uff0c\u66f4\u8f7b\u4fbf.\u5b83\u63d0\u4f9b\u4e86Bootstrap,\u8def\u7531,\u5206\u53d1,\u89c6\u56fe,\u63d2\u4ef6,\u662f\u4e00\u4e2a\u5168\u529f\u80fd\u7684PHP\u6846\u67b6\u3002\u6700\u65b0\u7248\u672c\u4e3a2014-10-22\u53d1\u5e03\u76842.3.3\u3002 17\u3001Swoole \u00b6 Swoole\u662f\u4e00\u79cdPHP\u9ad8\u7ea7Web\u5f00\u53d1\u6846\u67b6\uff0c\u6846\u67b6\u4e0d\u662f\u4e3a\u4e86\u63d0\u5347\u7f51\u7ad9\u7684\u6027\u80fd\uff0c\u662f\u4e3a\u4e86\u63d0\u5347\u7f51\u7ad9\u7684\u5f00\u53d1\u6548\u7387\u3002\u6700\u5c11\u7684\u6027\u80fd\u635f\u8017\uff0c\u6362\u53d6\u6700\u5927\u7684\u5f00\u53d1\u6548\u7387\u3002\u5229\u7528Swoole\u6846\u67b6\uff0c\u5f00\u53d1\u4e00\u4e2a\u590d\u6742\u7684Web\u529f\u80fd\uff0c\u53ef\u4ee5\u5728\u5f88\u77ed\u7684\u65f6\u95f4\u5185\u5b8c\u6210\u3002 18\u3001Nette \u00b6 Nette\u6846\u67b6\u53ef\u4ee5\u8ba9\u60a8\u66f4\u6709\u6548\u5730\u5de5\u4f5c\uff0c\u4e13\u6ce8\u4e8e\u91cd\u8981\u7684\u5185\u5bb9\uff0c\u5e76\u4f7f\u60a8\u7684\u4ee3\u7801\u66f4\u52a0\u53ef\u8bfb\u548c\u7ed3\u6784\u5316\u3002 19\u3001Drupal \u00b6 Drupal\u662f\u4f7f\u7528PHP\u8bed\u8a00\u7f16\u5199\u7684\u5f00\u6e90\u5185\u5bb9\u7ba1\u7406\u6846\u67b6\uff08CMF\uff09\uff0c\u5b83\u7531\u5185\u5bb9\u7ba1\u7406\u7cfb\u7edf\uff08CMS\uff09\u548cPHP\u5f00\u53d1\u6846\u67b6\uff08Framework\uff09\u5171\u540c\u6784\u6210\u3002\u8fde\u7eed\u591a\u5e74\u8363\u83b7\u5168\u7403\u6700\u4f73CMS\u5927\u5956\uff0c\u662f\u57fa\u4e8ePHP\u8bed\u8a00\u6700\u8457\u540d\u7684WEB\u5e94\u7528\u7a0b\u5e8f\u3002\u622a\u6b622011\u5e74\u5e95\uff0c\u5171\u670913,802\u4f4dWEB\u4e13\u5bb6\u53c2\u52a0\u4e86Drupal\u7684\u5f00\u53d1\u5de5\u4f5c\uff1b228\u4e2a\u56fd\u5bb6\u4f7f\u7528181\u79cd\u8bed\u8a00\u7684729,791\u4f4d\u7f51\u7ad9\u8bbe\u8ba1\u5de5\u4f5c\u8005\u4f7f\u7528Drupal\u3002\u8457\u540d\u6848\u4f8b\u5305\u62ec\uff1a\u8054\u5408\u56fd\u3001\u7f8e\u56fd\u767d\u5bab\u3001\u7f8e\u56fd\u5546\u52a1\u90e8\u3001\u7ebd\u7ea6\u65f6\u62a5\u3001\u534e\u7eb3\u3001\u8fea\u65af\u5c3c\u3001\u8054\u90a6\u5feb\u9012\u3001\u7d22\u5c3c\u3001\u7f8e\u56fd\u54c8\u4f5b\u5927\u5b66\u3001Ubuntu\u7b49\u3002 20\u3001Workerman \u00b6 Workerman\u662f\u4e00\u6b3e\u7eafPHP\u5f00\u53d1\u7684\u5f00\u6e90\u9ad8\u6027\u80fd\u7684PHPsocket\u670d\u52a1\u5668\u6846\u67b6\u3002\u88ab\u5e7f\u6cdb\u7684\u7528\u4e8e\u624b\u673aapp\u3001\u79fb\u52a8\u901a\u8baf\uff0c\u5fae\u4fe1\u5c0f\u7a0b\u5e8f\uff0c\u624b\u6e38\u670d\u52a1\u7aef\u3001\u7f51\u7edc\u6e38\u620f\u3001PHP\u804a\u5929\u5ba4\u3001\u786c\u4ef6\u901a\u8baf\u3001\u667a\u80fd\u5bb6\u5c45\u3001\u8f66\u8054\u7f51\u3001\u7269\u8054\u7f51\u7b49\u9886\u57df\u7684\u5f00\u53d1\u3002\u652f\u6301TCP\u957f\u8fde\u63a5\uff0c\u652f\u6301Websocket\u3001HTTP\u7b49\u534f\u8bae\uff0c\u652f\u6301\u81ea\u5b9a\u4e49\u534f\u8bae\u3002\u62e5\u6709\u5f02\u6b65Mysql\u3001\u5f02\u6b65Redis\u3001\u5f02\u6b65Http\u3001\u5f02\u6b65\u6d88\u606f\u961f\u5217\u7b49\u4f17\u591a\u9ad8\u6027\u80fd\u7ec4\u4ef6\u3002 21\u3001PHPDevShell \u00b6 PHPDevShell\u662f\u4e00\u4e2a\u5f00\u6e90\uff08GNU/LGPL\uff09\u7684\u5feb\u901f\u5e94\u7528\u5f00\u53d1\u6846\u67b6\uff0c\u7528\u4e8e\u5f00\u53d1\u4e0d\u542bJava\u7684\u7eafPHP\u3002\u5b83\u6709\u4e00\u4e2a\u5b8c\u6574\u7684GUI\u7ba1\u7406\u5458\u540e\u53f0\u754c\u9762\u3002\u5176\u4e3b\u8981\u76ee\u6807\u5728\u4e8e\u5f00\u53d1\u63d2\u4ef6\u4e00\u7c7b\u7684\u57fa\u4e8e\u7ba1\u7406\u7684\u5e94\u7528\uff0c\u5176\u4e2d\u901f\u5ea6\u3001\u5b89\u5168\u3001\u7a33\u5b9a\u6027\u53ca\u5f39\u6027\u662f\u6700\u4f18\u5148\u8003\u8651\u7684\u91cd\u70b9\u3002\u5176\u8bbe\u8ba1\u5f62\u6210\u4e86\u4e00\u4e2a\u7b80\u5355\u7684\u5b66\u4e60\u66f2\u7ebf\uff0cPHP\u5f00\u53d1\u8005\u65e0\u9700\u5b66\u4e60\u590d\u6742\u7684\u65b0\u672f\u8bed\u3002PHPDevShell\u7684\u5230\u6765\u6ee1\u8db3\u4e86\u5f00\u53d1\u8005\u4eec\u5bf9\u4e8e\u4e00\u4e2a\u8f7b\u91cf\u7ea7\u4f46\u662f\u529f\u80fd\u5b8c\u5584\uff0c\u53ef\u4ee5\u65e0\u9650\u5236\u7684\u8fdb\u884c\u914d\u7f6e\u7684GUI\u7684\u9700\u6c42\u3002 22\u3001Akelos \u00b6 AkelosPHP\u6846\u67b6\u662f\u4e00\u4e2a\u57fa\u4e8eMVC\u8bbe\u8ba1\u6a21\u5f0f\u7684web\u5e94\u7528\u5f00\u53d1\u5e73\u53f0\u3002\u57fa\u4e8e\u826f\u597d\u7684\u4f7f\u7528\u4e60\u60ef\uff0c\u4f7f\u7528\u5b83\u53ef\u4ee5\u5b8c\u6210\u5982\u4e0b\u4efb\u52a1\uff1a\u25c6\u65b9\u4fbf\u7684\u4f7f\u7528Ajax\u7f16\u5199views\uff1b\u25c6\u901a\u8fc7\u63a7\u5236\u5668\u7ba1\u7406\u8bf7\u6c42\uff08request\uff09\u53ca\u54cd\u5e94\uff08response\uff09\uff1b\u25c6\u7ba1\u7406\u56fd\u9645\u5316\u7684\u5e94\u7528\uff1b\u25c6\u4f7f\u7528\u7b80\u5355\u7684\u534f\u8bae\u4e0e\u6a21\u578b\u53ca\u6570\u636e\u5e93\u901a\u4fe1 \u4f60\u7684Akelos\u5e94\u7528\u53ef\u4ee5\u5728\u5927\u591a\u6570\u5171\u4eab\u4e3b\u673a\u670d\u52a1\u4f9b\u5e94\u65b9\u4e0a\u8fd0\u884c\uff0c\u56e0\u4e3aAkelos\u5bf9\u670d\u52a1\u5668\u552f\u4e00\u7684\u8981\u6c42\u5c31\u662f\u652f\u6301PHP\u3002\u56e0\u6b64\uff0cAkelosPHP\u6846\u67b6\u662f\u7406\u60f3\u7684\u7528\u4e8e\u53d1\u5e03\u5355\u72ecweb\u5e94\u7528\u7684\u6846\u67b6\uff0c\u56e0\u4e3a\u5b83\u4e0d\u9700\u8981\u975e\u6807\u51c6PHP\u914d\u7f6e\u4fbf\u80fd\u8fd0\u884c\u3002 23\u3001Prado \u00b6 PRADO\u56e2\u961f\u7531\u4e00\u4e9bPRADO\u72c2\u70ed\u8005\u7ec4\u6210\uff0c\u8fd9\u4e9b\u6210\u5458\u5f00\u53d1\u5e76\u63a8\u52a8PRADO\u6846\u67b6\u4ee5\u53ca\u76f8\u5173\u9879\u76ee\u7684\u8fdb\u884c\u3002 PRADO\u7684\u7075\u611f\u8d77\u6e90\u4e8eApacheTapestry\u3002\u4ece04\u5e74\u5f00\u59cb\uff0cPRADO\u6210\u4e3aSourceForge\u4e0a\u7684\u5f00\u6e90\u9879\u76ee\u4e4b\u4e00\u3002\u8fd9\u4e2a\u9879\u76ee\u76ee\u524d\u8fdb\u5c55\u5230\u4e863.x\u7248\u672c\u3002 24\u3001ZooP \u00b6 ZoopPHP\u6846\u67b6\uff0c\u610f\u4e3aZoop\u9762\u5411\u5bf9\u8c61\u7684PHP\u6846\u67b6\u3002\u8fd9\u662f\u4e2a\u7a33\u5b9a\uff0c\u53ef\u4f38\u7f29\u5e76\u53ef\u79fb\u690d\u7684\u6846\u67b6\u3002\u4ece\u8bde\u751f\u5230\u73b0\u5728\u76845\u5e74\u95f4\uff0c\u5df2\u7ecf\u5728\u4e0d\u5c11\u4ea7\u54c1\u5f00\u53d1\u4e2d\u88ab\u4f7f\u7528\u3002Zoop\u662f\u4e00\u4e2a\u5feb\u901f\uff0c\u6709\u6548\u5e76\u5e72\u51c0\u7684\u6846\u67b6\u3002\u5b83\u7684\u4f38\u7f29\u6027\u5f88\u597d\uff0c\u4f60\u53ef\u4ee5\u53ea\u5b89\u88c5\u4f60\u9700\u8981\u7684\u529f\u80fd\u3002\u5bf9\u4ee3\u7801\u5e76\u4e0d\u5f88\u719f\u6089\u7684\u5f00\u53d1\u8005\u4e5f\u53ef\u4ee5\u901a\u8fc7Zoop\u5feb\u901f\u7684\u5f00\u53d1\u5b89\u5168\u7684web\u5e94\u7528\u3002\u719f\u7ec3\u7684\u5f00\u53d1\u8005\u5219\u53ef\u4ee5\u66f4\u52a0\u5c06Zoop\u7684\u5f39\u6027\u5229\u7528\u5230\u6781\u81f4\u3002 25\u3001QPHP \u00b6 QPHP\uff0c\u610f\u4e3a\u5feb\u901fPHP\uff0c\u5b83\u662f\u4e00\u4e2a\u4e0eASP.NET\u7c7b\u4f3c\u7684MVC\u6846\u67b6\u3002\u57fa\u672c\u4e0a\u5b83\u662f\u8fd9\u6837\u4e00\u4e2a\u60c5\u51b5\uff1a\u25c6\u6574\u5408\u4e86Java\u548cC#\u7684\u7f8e\u611f\uff1b\u25c6\u9664\u53bb\u4e86\u5728\u5176\u4ed6PHP\u6846\u67b6\u4e2d\u4f7f\u7528\u7684Perl\u5f62\u5f0f\u7684\u610f\u4e49\u542b\u7cca\u7684\u8bed\u8a00\uff1b\u25c6\u5927\u91cf\u57fa\u4e8eOOP\u7684\u6982\u5ff5 \u6700\u540e\u8bf4\u4e00\u53e5\uff0cPHP\u662f\u4e16\u754c\u4e0a\u6700\u597d\u7684\u8bed\u8a00\uff01","title":"PHP"},{"location":"php/#php","text":"\u5728PHP\u5f00\u53d1\u4e2d\uff0c\u9009\u62e9\u5408\u9002\u7684\u6846\u67b6\u6709\u52a9\u4e8e\u52a0\u5feb\u8f6f\u4ef6\u5f00\u53d1\uff0c\u8282\u7ea6\u5b9d\u8d35\u7684\u9879\u76ee\u65f6\u95f4\uff0c\u8ba9\u5f00\u53d1\u8005\u4e13\u6ce8\u4e8e\u529f\u80fd\u7684\u5b9e\u73b0\u4e0a\u3002\u7531\u4e8e\u6d41\u884c\u7684\u6846\u67b6\u7ecf\u8fc7\u4e86\u5927\u91cf\u9879\u76ee\u7684\u68c0\u9a8c\uff0c\u6240\u4ee5\u4f7f\u7528\u6846\u67b6\u8fd8\u6709\u52a9\u4e8e\u521b\u5efa\u66f4\u52a0\u7a33\u5b9a\u548c\u5b89\u5168\u7684\u5e94\u7528\u7a0b\u5e8f\u3002\u672c\u6587\u641c\u96c6\u4e86\u76ee\u524d\u5168\u7403\u6700\u6d41\u884c\u768425\u6b3ePHP\u6846\u67b6\uff0c\u6b22\u8fce\u5927\u5bb6\u4ea4\u6d41\u5b66\u4e60\u3002","title":"PHP"},{"location":"php/#1laravel","text":"Laravel\u662f\u4e00\u4e2a\u7b80\u5355\u4f18\u96c5\u7684PHPWeb\u5f00\u53d1\u6846\u67b6\uff0c\u53ef\u4ee5\u5c06\u5f00\u53d1\u8005\u4ece\u610f\u5927\u5229\u9762\u6761\u5f0f\u7684\u4ee3\u7801\u4e2d\u89e3\u653e\u51fa\u6765\uff0c\u901a\u8fc7\u7b80\u5355\u3001\u9ad8\u96c5\u3001\u8868\u8fbe\u5f0f\u8bed\u6cd5\u5f00\u53d1\u51fa\u5f88\u68d2\u7684Web\u5e94\u7528\uff0cLaravel\u62e5\u6709\u66f4\u5bcc\u6709\u8868\u73b0\u529b\u7684\u8bed\u6cd5\u3001\u9ad8\u8d28\u91cf\u7684\u6587\u6863\u3001\u4e30\u5bcc\u7684\u6269\u5c55\u5305\uff0c\u88ab\u79f0\u4e3a\u201c\u5de8\u5320\u7ea7PHP\u5f00\u53d1\u6846\u67b6\u201d\u3002","title":"1\u3001Laravel"},{"location":"php/#2phalcon","text":"Phalcon\u662f\u4e00\u4e2a\u5f00\u6e90\u7684\u3001\u5168\u6808\u7684\u3001\u7528C\u8bed\u8a00\u7f16\u5199\u7684PHP5\u6846\u67b6\uff0c\u4e3a\u5f00\u53d1\u8005\u63d0\u4f9b\u4e86\u7f51\u7ad9\u53ca\u5e94\u7528\u5f00\u53d1\u6240\u9700\u7684\u5927\u91cf\u9ad8\u7ea7\u5de5\u5177\uff0c\u4e14Phalcon\u662f\u677e\u8026\u5408\u7684\uff0c\u5f00\u53d1\u8005\u53ef\u4ee5\u6839\u636e\u9700\u8981\u4f7f\u7528\u5176\u4ed6\u7ec4\u4ef6\u3002Phalcon\u4e2d\u7684\u6240\u6709\u51fd\u6570\u90fd\u4ee5PHP\u7c7b\u7684\u65b9\u5f0f\u5448\u73b0\uff0c\u5f00\u53d1\u8005\u65e0\u9700\u5b66\u4e60\u548c\u4f7f\u7528C\u8bed\u8a00\uff0c\u4e14\u65e0\u9700\u62c5\u5fc3\u6027\u80fd\u95ee\u9898\u3002","title":"2\u3001Phalcon"},{"location":"php/#3symfony2","text":"Symfony2\u662f\u4e00\u4e2a\u5f00\u6e90\u7684PHPWeb\u6846\u67b6\uff0c\u6709\u7740\u5f00\u53d1\u901f\u5ea6\u5feb\u3001\u6027\u80fd\u9ad8\u7b49\u7279\u70b9\u3002\u4e0e\u5176\u4ed6\u6846\u67b6\u76f8\u6bd4\uff0cSymfony2\u7684\u4f18\u52bf\u5305\u62ec\uff1a\u652f\u6301DI\uff08\u4f9d\u8d56\u6ce8\u5165\uff09\u548cIoC\uff08\u63a7\u5236\u53cd\u8f6c\uff09\uff1b\u6269\u5c55\u6027\u5f3a\uff1b\u6587\u6863\u548c\u793e\u533a\u6bd4\u8f83\u6210\u719f\u3002\u4f46\u662fSymfony2\u7684\u5b66\u4e60\u66f2\u7ebf\u4e5f\u6bd4\u8f83\u9661\u5ced\uff0c\u6ca1\u6709\u7ecf\u9a8c\u7684\u521d\u5b66\u8005\u5f80\u5f80\u9700\u8981\u4e00\u4e9b\u7ec3\u4e60\u624d\u80fd\u638c\u63e1\u5176\u7279\u6027\u3002","title":"3\u3001Symfony2"},{"location":"php/#4codeigniter","text":"CodeIgniter\u662f\u4e00\u4e2a\u7b80\u5355\u5feb\u901f\u7684PHPMVC\u6846\u67b6\u3002CodeIgniter\u4e0d\u9700\u8981\u5927\u91cf\u4ee3\u7801\uff081.6.2\u7248\u672c\u4ec5\u4e3a2.8MB\uff0c\u5176\u4e2d\u76841.3MB\u662f\u53ef\u4ee5\u5220\u9664\u7684\u7528\u6237\u6587\u6863\uff09\uff0c\u4e5f\u4e0d\u4f1a\u8981\u6c42\u60a8\u63d2\u5165\u7c7b\u4f3c\u4e8ePEAR\u7684\u5e9e\u5927\u7684\u5e93\u3002\u5b83\u5728PHP4\u548cPHP5\u4e2d\u8868\u73b0\u540c\u6837\u826f\u597d\uff0c\u5141\u8bb8\u60a8\u521b\u5efa\u53ef\u79fb\u690d\u7684\u5e94\u7528\u7a0b\u5e8f\u3002\u6700\u540e\uff0c\u60a8\u4e0d\u5fc5\u4f7f\u7528\u6a21\u677f\u5f15\u64ce\u6765\u521b\u5efa\u89c6\u56fe\u2014\u53ea\u9700\u6cbf\u7528\u65e7\u5f0f\u7684HTML\u548cPHP\u5373\u53ef\u3002CodeIgniter\u5165\u95e8\u975e\u5e38\u5bb9\u6613\uff0c\u800c\u4e14\u6709\u5f88\u5168\u9762\u7684\u4e2d\u6587\u7248\u7528\u6237\u5f00\u53d1\u624b\u518c\uff0c\u5728\u5b98\u65b9\u7f51\u7ad9\u4e0a\u53ef\u4ee5\u4e86\u89e3\u5230\u66f4\u591a\u5185\u5bb9\u3002","title":"4\u3001CodeIgniter"},{"location":"php/#5yii","text":"Yii\u662f\u4e00\u4e2a\u57fa\u4e8e\u7ec4\u4ef6\u7684\u9ad8\u6027\u80fdPHP\u6846\u67b6\uff0c\u7528\u4e8e\u5f00\u53d1\u5927\u578bWeb\u5e94\u7528\u3002Yii\u91c7\u7528\u4e25\u683c\u7684OOP\u7f16\u5199\uff0c\u5e76\u6709\u7740\u5b8c\u5584\u7684\u5e93\u5f15\u7528\u4ee5\u53ca\u5168\u9762\u7684\u6559\u7a0b\u3002\u4eceMVC\uff0cDAO/ActiveRecord\uff0cwidgets\uff0ccaching\uff0c\u7b49\u7ea7\u5f0fRBAC\uff0cWeb\u670d\u52a1\uff0c\u5230\u4e3b\u9898\u5316\uff0cI18N\u548cL10N\uff0cYii\u63d0\u4f9b\u4e86\u4eca\u65e5Web2.0\u5e94\u7528\u5f00\u53d1\u6240\u9700\u8981\u7684\u51e0\u4e4e\u4e00\u5207\u529f\u80fd\u3002\u4e8b\u5b9e\u4e0a\uff0cYii\u662f\u6700\u6709\u6548\u7387\u7684PHP\u6846\u67b6\u4e4b\u4e00\u3002Yii\u662f\u4e00\u4e2a\u9ad8\u6027\u80fd\u7684PHP5\u7684web\u5e94\u7528\u7a0b\u5e8f\u5f00\u53d1\u6846\u67b6\u3002\u901a\u8fc7\u4e00\u4e2a\u7b80\u5355\u7684\u547d\u4ee4\u884c\u5de5\u5177yiic\u53ef\u4ee5\u5feb\u901f\u521b\u5efa\u4e00\u4e2aweb\u5e94\u7528\u7a0b\u5e8f\u7684\u4ee3\u7801\u6846\u67b6\uff0c\u5f00\u53d1\u8005\u53ef\u4ee5\u5728\u751f\u6210\u7684\u4ee3\u7801\u6846\u67b6\u57fa\u7840\u4e0a\u6dfb\u52a0\u4e1a\u52a1\u903b\u8f91\uff0c\u4ee5\u5feb\u901f\u5b8c\u6210\u5e94\u7528\u7a0b\u5e8f\u7684\u5f00\u53d1\u3002","title":"5\u3001Yii"},{"location":"php/#6aura","text":"Aura\u4e3aPHP5.4\u53ca\u4ee5\u4e0a\u7248\u672c\u63d0\u4f9b\u72ec\u7acb\u7684\u7c7b\u5e93\uff0c\u5b83\u7684\u4ee3\u7801\u975e\u5e38\u5e72\u51c0\uff0c\u5e76\u4e14\u771f\u6b63\u72ec\u7acb\u3002\u8fd9\u4e9b\u5305\u53ef\u4ee5\u5355\u72ec\u4f7f\u7528\uff0c\u4e5f\u53ef\u4ee5\u5c06\u5b83\u4eec\u5408\u5e76\u5230\u5f00\u53d1\u8005\u81ea\u5df1\u7684\u6846\u67b6\u4e2d\u3002\u56fd\u5185\u8d44\u6599\u975e\u5e38\u5c11\u3002","title":"6\u3001Aura"},{"location":"php/#7cakephp","text":"CakePHP\u662f\u4e00\u4e2a\u8fd0\u7528\u4e86\u8bf8\u5982ActiveRecord\u3001AssociationDataMapping\u3001FrontController\u548cMVC\u7b49\u8457\u540d\u8bbe\u8ba1\u6a21\u5f0f\u7684\u5feb\u901f\u5f00\u53d1\u6846\u67b6\u3002\u8be5\u9879\u76ee\u4e3b\u8981\u76ee\u6807\u662f\u63d0\u4f9b\u4e00\u4e2a\u53ef\u4ee5\u8ba9\u5404\u79cd\u5c42\u6b21\u7684PHP\u5f00\u53d1\u4eba\u5458\u5feb\u901f\u5730\u5f00\u53d1\u51fa\u5065\u58ee\u7684Web\u5e94\u7528\uff0c\u800c\u53c8\u4e0d\u5931\u7075\u6d3b\u6027\u3002CakePHP\u662f\u4e00\u4e2a\u57fa\u4e8ePHP\uff0c\u514d\u8d39\u4e14\u5f00\u6e90\u7684\u8fc5\u901f\u53d1\u5c55\u6846\u67b6\u6700\u5f00\u59cb\u4eceRubyOnRails\u6846\u67b6\u91cc\u5f97\u5230\u7075\u611f\u3002CakePHP\u62e5\u6709\u4e00\u4e2a\u6d3b\u8dc3\u7684\u5f00\u53d1\u56e2\u961f\u4ee5\u53ca\u793e\u533a\uff0c\u4f7fCakePHP\u672c\u8eab\u66f4\u5177\u5907\u5e94\u6709\u7684\u4ef7\u503c\u3002\u53e6\u5916\uff0c\u4f7f\u7528CakePHP\u4e5f\u610f\u5473\u7740\u60a8\u7684\u5e94\u7528\u7a0b\u5e8f\u5c06\u66f4\u5bb9\u6613\u5730\u6d4b\u8bd5\u4ee5\u53ca\u66f4\u5bb9\u6613\u5730\u88ab\u6539\u826f\u3001\u66f4\u65b0\u3002","title":"7\u3001Cakephp"},{"location":"php/#8zend","text":"\u7531\u6700\u6d41\u884c\u6700\u4e13\u4e1a\u7684PHPIDE\u4ea7\u54c1ZendStudio\u7684\u5f00\u53d1\u5546\u5f00\u53d1\uff0cZendFramework(\u7b80\u5199ZF)\u662f\u5f00\u6e90\u7684\uff0c\u4e3b\u8981\u7528\u4e8eWeb\u5e94\u7528\u7a0b\u5e8f\u7684\u5f00\u53d1\u548c\u670d\u52a1\uff0cZF\u91c7\u7528MVC(Model\u2013View-Controller)\u67b6\u6784\u6a21\u5f0f\u6765\u5206\u79bb\u5e94\u7528\u7a0b\u5e8f\u4e2d\u4e0d\u540c\u7684\u90e8\u5206\u65b9\u4fbf\u7a0b\u5e8f\u7684\u5f00\u53d1\u548c\u7ef4\u62a4\u3002","title":"8\u3001Zend"},{"location":"php/#9kohana","text":"Kohana\u662f\u4e00\u6b3e\u7eafPHP5\u7684\u6846\u67b6\uff0c\u57fa\u4e8eMVC\u6a21\u5f0f\u5f00\u53d1\uff0c\u5b83\u7684\u7279\u70b9\u5c31\u662f\u9ad8\u5b89\u5168\u6027\uff0c\u8f7b\u91cf\u7ea7\u4ee3\u7801\uff0c\u5bb9\u6613\u4f7f\u7528\u30022009\u5e749\u6708\u53d1\u5e03\u4e863.0\u7248\u672c\uff0c\u652f\u6301HMVC\u6a21\u5f0f\u3002","title":"9\u3001Kohana"},{"location":"php/#10fuelphp","text":"FuelPHP\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u3001\u7075\u6d3b\u7684\u3001\u793e\u533a\u9a71\u52a8\u7684PHP5.3web\u6846\u67b6\u3002\u5b83\u7684\u8bde\u751f\u6e90\u81ea\u4e8e\u5f88\u591a\u5f00\u53d1\u793e\u533a\u5bf9\u4e8e\u73b0\u6709\u5f00\u53d1\u6846\u67b6\u7684\u4e0d\u6ee1\uff0cFuelPHP\u975e\u5e38\u4fbf\u643a\uff0c\u51e0\u4e4e\u6240\u6709\u7684\u670d\u52a1\u5668\u90fd\u80fd\u591f\u5f88\u597d\u7684\u652f\u6301\uff0c\u5e76\u4e14\u7b80\u6d01\u5f3a\u5927\u7684\u8bed\u6cd5\u4e5f\u80fd\u591f\u8ba9\u4f60\u5f88\u5feb\u559c\u6b22\u4e0a\u5b83\u3002","title":"10\u3001FuelPHP"},{"location":"php/#11slim","text":"Slim\u662f\u4e00\u6b3ePHP\u5fae\u6846\u67b6\uff0c\u53ef\u4ee5\u5e2e\u52a9\u4f60\u5feb\u901f\u7f16\u5199\u7b80\u5355\u4f46\u529f\u80fd\u5f3a\u5927\u7684web\u5e94\u7528\u548cAPI\u3002","title":"11\u3001Slim"},{"location":"php/#12typo3","text":"Typo3\u5185\u5bb9\u7ba1\u7406\u7cfb\u7edf\uff0c\u662f\u57fa\u4e8ePHP4/PHP5+MYsql\u7684\u5185\u5bb9\u7ba1\u7406\u7cfb\u7edf(\u6846\u67b6)(CMS/CMF),\u517c\u5bb9PHP4\u548cPHP5.\u6570\u636e\u5e93\u7cfb\u7edf\u9664Mysql\u4e4b\u5916\uff0c\u4e5f\u80fd\u8fd0\u884c\u4e8eOracle,MS-SQL,ODBC,LDAP\u7b49\u5176\u5b83\u6570\u636e\u5e93\u7cfb\u7edf\uff0c\u652f\u6301Typo3\u7684\u670d\u52a1\u5668\u7cfb\u7edf\uff1aApache\u6216\u8005IIS\u67b6\u8bbe\u7684\u670d\u52a1\u5668\u3002","title":"12\u3001Typo3"},{"location":"php/#13thinkphp","text":"ThinkPHP\u662f\u4e3a\u4e86\u7b80\u5316\u4f01\u4e1a\u7ea7\u5e94\u7528\u5f00\u53d1\u548c\u654f\u6377WEB\u5e94\u7528\u5f00\u53d1\u800c\u8bde\u751f\u7684\u3002\u6700\u65e9\u8bde\u751f\u4e8e2006\u5e74\u521d\uff0c2007\u5e74\u5143\u65e6\u6b63\u5f0f\u66f4\u540d\u4e3aThinkPHP\uff0c\u5e76\u4e14\u9075\u5faaApache2\u5f00\u6e90\u534f\u8bae\u53d1\u5e03\u3002ThinkPHP\u4ece\u8bde\u751f\u4ee5\u6765\u4e00\u76f4\u79c9\u627f\u7b80\u6d01\u5b9e\u7528\u7684\u8bbe\u8ba1\u539f\u5219\uff0c\u5728\u4fdd\u6301\u51fa\u8272\u7684\u6027\u80fd\u548c\u81f3\u7b80\u7684\u4ee3\u7801\u7684\u540c\u65f6\uff0c\u4e5f\u6ce8\u91cd\u6613\u7528\u6027\u3002\u5e76\u4e14\u62e5\u6709\u4f17\u591a\u539f\u521b\u529f\u80fd\u548c\u7279\u6027\uff0c\u5728\u793e\u533a\u56e2\u961f\u7684\u79ef\u6781\u53c2\u4e0e\u4e0b\uff0c\u5728\u6613\u7528\u6027\u3001\u6269\u5c55\u6027\u548c\u6027\u80fd\u65b9\u9762\u4e0d\u65ad\u4f18\u5316\u548c\u6539\u8fdb\u3002ThinkPHP\u662f\u4e00\u4e2a\u5feb\u901f\u3001\u517c\u5bb9\u800c\u4e14\u7b80\u5355\u7684\u8f7b\u91cf\u7ea7\u56fd\u4ea7PHP\u5f00\u53d1\u6846\u67b6\uff0c\u8bde\u751f\u4e8e2006\u5e74\u521d\uff0c\u539f\u540dFCS\uff0c2007\u5e74\u5143\u65e6\u6b63\u5f0f\u66f4\u540d\u4e3aThinkPHP\uff0c\u9075\u5faaApache2\u5f00\u6e90\u534f\u8bae\u53d1\u5e03\uff0c\u4eceStruts\u7ed3\u6784\u79fb\u690d\u8fc7\u6765\u5e76\u505a\u4e86\u6539\u8fdb\u548c\u5b8c\u5584\uff0c\u540c\u65f6\u4e5f\u501f\u9274\u4e86\u56fd\u5916\u5f88\u591a\u4f18\u79c0\u7684\u6846\u67b6\u548c\u6a21\u5f0f\uff0c\u4f7f\u7528\u9762\u5411\u5bf9\u8c61\u7684\u5f00\u53d1\u7ed3\u6784\u548cMVC\u6a21\u5f0f\uff0c\u878d\u5408\u4e86Struts\u7684\u601d\u60f3\u548cTagLib\uff08\u6807\u7b7e\u5e93\uff09\u3001RoR\u7684ORM\u6620\u5c04\u548cActiveRecord\u6a21\u5f0f\u3002","title":"13\u3001ThinkPHP"},{"location":"php/#14flight","text":"Flight\u662f\u4e00\u4e2a\u5feb\u901f\u3001\u7b80\u5355\u3001\u53ef\u6269\u5c55\u7684\u5fae\u578bPHP\u6846\u67b6\uff0c\u5141\u8bb8\u7528\u6237\u5feb\u901f\u7684\u6784\u5efaRestfulWeb\u5e94\u7528\u7a0b\u5e8f\uff0c\u540c\u6837\u6613\u4e8e\u5b66\u4e60\u548c\u4f7f\u7528\uff0c\u7b80\u5355\u4f46\u662f\u5f88\u5f3a\u5927\uff01","title":"14\u3001Flight"},{"location":"php/#15phpixie","text":"PHPixie\u662f\u4e00\u4e2a\u8f7b\u91cf\u7ea7\u7684MVCPHP\u6846\u67b6,\u8bbe\u8ba1\u7528\u4e8e\u5feb\u901f\u5f00\u53d1,\u6613\u4e8e\u5b66\u4e60,\u5e76\u63d0\u4f9b\u4e00\u4e2a\u575a\u5b9e\u7684\u57fa\u7840\u5f00\u53d1\u6846\u67b6\u3002","title":"15\u3001PHPixie"},{"location":"php/#16yaf","text":"Yaf\uff0c\u5168\u79f0YetAnotherFramework\uff0c\u662f\u4e00\u4e2aC\u8bed\u8a00\u7f16\u5199\u7684PHP\u6846\u67b6\uff0c\u662f\u4e00\u4e2a\u4ee5PHP\u6269\u5c55\u5f62\u5f0f\u63d0\u4f9b\u7684PHP\u5f00\u53d1\u6846\u67b6,\u76f8\u6bd4\u4e8e\u4e00\u822c\u7684PHP\u6846\u67b6,\u5b83\u66f4\u5feb\uff0c\u66f4\u8f7b\u4fbf.\u5b83\u63d0\u4f9b\u4e86Bootstrap,\u8def\u7531,\u5206\u53d1,\u89c6\u56fe,\u63d2\u4ef6,\u662f\u4e00\u4e2a\u5168\u529f\u80fd\u7684PHP\u6846\u67b6\u3002\u6700\u65b0\u7248\u672c\u4e3a2014-10-22\u53d1\u5e03\u76842.3.3\u3002","title":"16\u3001Yaf"},{"location":"php/#17swoole","text":"Swoole\u662f\u4e00\u79cdPHP\u9ad8\u7ea7Web\u5f00\u53d1\u6846\u67b6\uff0c\u6846\u67b6\u4e0d\u662f\u4e3a\u4e86\u63d0\u5347\u7f51\u7ad9\u7684\u6027\u80fd\uff0c\u662f\u4e3a\u4e86\u63d0\u5347\u7f51\u7ad9\u7684\u5f00\u53d1\u6548\u7387\u3002\u6700\u5c11\u7684\u6027\u80fd\u635f\u8017\uff0c\u6362\u53d6\u6700\u5927\u7684\u5f00\u53d1\u6548\u7387\u3002\u5229\u7528Swoole\u6846\u67b6\uff0c\u5f00\u53d1\u4e00\u4e2a\u590d\u6742\u7684Web\u529f\u80fd\uff0c\u53ef\u4ee5\u5728\u5f88\u77ed\u7684\u65f6\u95f4\u5185\u5b8c\u6210\u3002","title":"17\u3001Swoole"},{"location":"php/#18nette","text":"Nette\u6846\u67b6\u53ef\u4ee5\u8ba9\u60a8\u66f4\u6709\u6548\u5730\u5de5\u4f5c\uff0c\u4e13\u6ce8\u4e8e\u91cd\u8981\u7684\u5185\u5bb9\uff0c\u5e76\u4f7f\u60a8\u7684\u4ee3\u7801\u66f4\u52a0\u53ef\u8bfb\u548c\u7ed3\u6784\u5316\u3002","title":"18\u3001Nette"},{"location":"php/#19drupal","text":"Drupal\u662f\u4f7f\u7528PHP\u8bed\u8a00\u7f16\u5199\u7684\u5f00\u6e90\u5185\u5bb9\u7ba1\u7406\u6846\u67b6\uff08CMF\uff09\uff0c\u5b83\u7531\u5185\u5bb9\u7ba1\u7406\u7cfb\u7edf\uff08CMS\uff09\u548cPHP\u5f00\u53d1\u6846\u67b6\uff08Framework\uff09\u5171\u540c\u6784\u6210\u3002\u8fde\u7eed\u591a\u5e74\u8363\u83b7\u5168\u7403\u6700\u4f73CMS\u5927\u5956\uff0c\u662f\u57fa\u4e8ePHP\u8bed\u8a00\u6700\u8457\u540d\u7684WEB\u5e94\u7528\u7a0b\u5e8f\u3002\u622a\u6b622011\u5e74\u5e95\uff0c\u5171\u670913,802\u4f4dWEB\u4e13\u5bb6\u53c2\u52a0\u4e86Drupal\u7684\u5f00\u53d1\u5de5\u4f5c\uff1b228\u4e2a\u56fd\u5bb6\u4f7f\u7528181\u79cd\u8bed\u8a00\u7684729,791\u4f4d\u7f51\u7ad9\u8bbe\u8ba1\u5de5\u4f5c\u8005\u4f7f\u7528Drupal\u3002\u8457\u540d\u6848\u4f8b\u5305\u62ec\uff1a\u8054\u5408\u56fd\u3001\u7f8e\u56fd\u767d\u5bab\u3001\u7f8e\u56fd\u5546\u52a1\u90e8\u3001\u7ebd\u7ea6\u65f6\u62a5\u3001\u534e\u7eb3\u3001\u8fea\u65af\u5c3c\u3001\u8054\u90a6\u5feb\u9012\u3001\u7d22\u5c3c\u3001\u7f8e\u56fd\u54c8\u4f5b\u5927\u5b66\u3001Ubuntu\u7b49\u3002","title":"19\u3001Drupal"},{"location":"php/#20workerman","text":"Workerman\u662f\u4e00\u6b3e\u7eafPHP\u5f00\u53d1\u7684\u5f00\u6e90\u9ad8\u6027\u80fd\u7684PHPsocket\u670d\u52a1\u5668\u6846\u67b6\u3002\u88ab\u5e7f\u6cdb\u7684\u7528\u4e8e\u624b\u673aapp\u3001\u79fb\u52a8\u901a\u8baf\uff0c\u5fae\u4fe1\u5c0f\u7a0b\u5e8f\uff0c\u624b\u6e38\u670d\u52a1\u7aef\u3001\u7f51\u7edc\u6e38\u620f\u3001PHP\u804a\u5929\u5ba4\u3001\u786c\u4ef6\u901a\u8baf\u3001\u667a\u80fd\u5bb6\u5c45\u3001\u8f66\u8054\u7f51\u3001\u7269\u8054\u7f51\u7b49\u9886\u57df\u7684\u5f00\u53d1\u3002\u652f\u6301TCP\u957f\u8fde\u63a5\uff0c\u652f\u6301Websocket\u3001HTTP\u7b49\u534f\u8bae\uff0c\u652f\u6301\u81ea\u5b9a\u4e49\u534f\u8bae\u3002\u62e5\u6709\u5f02\u6b65Mysql\u3001\u5f02\u6b65Redis\u3001\u5f02\u6b65Http\u3001\u5f02\u6b65\u6d88\u606f\u961f\u5217\u7b49\u4f17\u591a\u9ad8\u6027\u80fd\u7ec4\u4ef6\u3002","title":"20\u3001Workerman"},{"location":"php/#21phpdevshell","text":"PHPDevShell\u662f\u4e00\u4e2a\u5f00\u6e90\uff08GNU/LGPL\uff09\u7684\u5feb\u901f\u5e94\u7528\u5f00\u53d1\u6846\u67b6\uff0c\u7528\u4e8e\u5f00\u53d1\u4e0d\u542bJava\u7684\u7eafPHP\u3002\u5b83\u6709\u4e00\u4e2a\u5b8c\u6574\u7684GUI\u7ba1\u7406\u5458\u540e\u53f0\u754c\u9762\u3002\u5176\u4e3b\u8981\u76ee\u6807\u5728\u4e8e\u5f00\u53d1\u63d2\u4ef6\u4e00\u7c7b\u7684\u57fa\u4e8e\u7ba1\u7406\u7684\u5e94\u7528\uff0c\u5176\u4e2d\u901f\u5ea6\u3001\u5b89\u5168\u3001\u7a33\u5b9a\u6027\u53ca\u5f39\u6027\u662f\u6700\u4f18\u5148\u8003\u8651\u7684\u91cd\u70b9\u3002\u5176\u8bbe\u8ba1\u5f62\u6210\u4e86\u4e00\u4e2a\u7b80\u5355\u7684\u5b66\u4e60\u66f2\u7ebf\uff0cPHP\u5f00\u53d1\u8005\u65e0\u9700\u5b66\u4e60\u590d\u6742\u7684\u65b0\u672f\u8bed\u3002PHPDevShell\u7684\u5230\u6765\u6ee1\u8db3\u4e86\u5f00\u53d1\u8005\u4eec\u5bf9\u4e8e\u4e00\u4e2a\u8f7b\u91cf\u7ea7\u4f46\u662f\u529f\u80fd\u5b8c\u5584\uff0c\u53ef\u4ee5\u65e0\u9650\u5236\u7684\u8fdb\u884c\u914d\u7f6e\u7684GUI\u7684\u9700\u6c42\u3002","title":"21\u3001PHPDevShell"},{"location":"php/#22akelos","text":"AkelosPHP\u6846\u67b6\u662f\u4e00\u4e2a\u57fa\u4e8eMVC\u8bbe\u8ba1\u6a21\u5f0f\u7684web\u5e94\u7528\u5f00\u53d1\u5e73\u53f0\u3002\u57fa\u4e8e\u826f\u597d\u7684\u4f7f\u7528\u4e60\u60ef\uff0c\u4f7f\u7528\u5b83\u53ef\u4ee5\u5b8c\u6210\u5982\u4e0b\u4efb\u52a1\uff1a\u25c6\u65b9\u4fbf\u7684\u4f7f\u7528Ajax\u7f16\u5199views\uff1b\u25c6\u901a\u8fc7\u63a7\u5236\u5668\u7ba1\u7406\u8bf7\u6c42\uff08request\uff09\u53ca\u54cd\u5e94\uff08response\uff09\uff1b\u25c6\u7ba1\u7406\u56fd\u9645\u5316\u7684\u5e94\u7528\uff1b\u25c6\u4f7f\u7528\u7b80\u5355\u7684\u534f\u8bae\u4e0e\u6a21\u578b\u53ca\u6570\u636e\u5e93\u901a\u4fe1 \u4f60\u7684Akelos\u5e94\u7528\u53ef\u4ee5\u5728\u5927\u591a\u6570\u5171\u4eab\u4e3b\u673a\u670d\u52a1\u4f9b\u5e94\u65b9\u4e0a\u8fd0\u884c\uff0c\u56e0\u4e3aAkelos\u5bf9\u670d\u52a1\u5668\u552f\u4e00\u7684\u8981\u6c42\u5c31\u662f\u652f\u6301PHP\u3002\u56e0\u6b64\uff0cAkelosPHP\u6846\u67b6\u662f\u7406\u60f3\u7684\u7528\u4e8e\u53d1\u5e03\u5355\u72ecweb\u5e94\u7528\u7684\u6846\u67b6\uff0c\u56e0\u4e3a\u5b83\u4e0d\u9700\u8981\u975e\u6807\u51c6PHP\u914d\u7f6e\u4fbf\u80fd\u8fd0\u884c\u3002","title":"22\u3001Akelos"},{"location":"php/#23prado","text":"PRADO\u56e2\u961f\u7531\u4e00\u4e9bPRADO\u72c2\u70ed\u8005\u7ec4\u6210\uff0c\u8fd9\u4e9b\u6210\u5458\u5f00\u53d1\u5e76\u63a8\u52a8PRADO\u6846\u67b6\u4ee5\u53ca\u76f8\u5173\u9879\u76ee\u7684\u8fdb\u884c\u3002 PRADO\u7684\u7075\u611f\u8d77\u6e90\u4e8eApacheTapestry\u3002\u4ece04\u5e74\u5f00\u59cb\uff0cPRADO\u6210\u4e3aSourceForge\u4e0a\u7684\u5f00\u6e90\u9879\u76ee\u4e4b\u4e00\u3002\u8fd9\u4e2a\u9879\u76ee\u76ee\u524d\u8fdb\u5c55\u5230\u4e863.x\u7248\u672c\u3002","title":"23\u3001Prado"},{"location":"php/#24zoop","text":"ZoopPHP\u6846\u67b6\uff0c\u610f\u4e3aZoop\u9762\u5411\u5bf9\u8c61\u7684PHP\u6846\u67b6\u3002\u8fd9\u662f\u4e2a\u7a33\u5b9a\uff0c\u53ef\u4f38\u7f29\u5e76\u53ef\u79fb\u690d\u7684\u6846\u67b6\u3002\u4ece\u8bde\u751f\u5230\u73b0\u5728\u76845\u5e74\u95f4\uff0c\u5df2\u7ecf\u5728\u4e0d\u5c11\u4ea7\u54c1\u5f00\u53d1\u4e2d\u88ab\u4f7f\u7528\u3002Zoop\u662f\u4e00\u4e2a\u5feb\u901f\uff0c\u6709\u6548\u5e76\u5e72\u51c0\u7684\u6846\u67b6\u3002\u5b83\u7684\u4f38\u7f29\u6027\u5f88\u597d\uff0c\u4f60\u53ef\u4ee5\u53ea\u5b89\u88c5\u4f60\u9700\u8981\u7684\u529f\u80fd\u3002\u5bf9\u4ee3\u7801\u5e76\u4e0d\u5f88\u719f\u6089\u7684\u5f00\u53d1\u8005\u4e5f\u53ef\u4ee5\u901a\u8fc7Zoop\u5feb\u901f\u7684\u5f00\u53d1\u5b89\u5168\u7684web\u5e94\u7528\u3002\u719f\u7ec3\u7684\u5f00\u53d1\u8005\u5219\u53ef\u4ee5\u66f4\u52a0\u5c06Zoop\u7684\u5f39\u6027\u5229\u7528\u5230\u6781\u81f4\u3002","title":"24\u3001ZooP"},{"location":"php/#25qphp","text":"QPHP\uff0c\u610f\u4e3a\u5feb\u901fPHP\uff0c\u5b83\u662f\u4e00\u4e2a\u4e0eASP.NET\u7c7b\u4f3c\u7684MVC\u6846\u67b6\u3002\u57fa\u672c\u4e0a\u5b83\u662f\u8fd9\u6837\u4e00\u4e2a\u60c5\u51b5\uff1a\u25c6\u6574\u5408\u4e86Java\u548cC#\u7684\u7f8e\u611f\uff1b\u25c6\u9664\u53bb\u4e86\u5728\u5176\u4ed6PHP\u6846\u67b6\u4e2d\u4f7f\u7528\u7684Perl\u5f62\u5f0f\u7684\u610f\u4e49\u542b\u7cca\u7684\u8bed\u8a00\uff1b\u25c6\u5927\u91cf\u57fa\u4e8eOOP\u7684\u6982\u5ff5 \u6700\u540e\u8bf4\u4e00\u53e5\uff0cPHP\u662f\u4e16\u754c\u4e0a\u6700\u597d\u7684\u8bed\u8a00\uff01","title":"25\u3001QPHP"},{"location":"python/feature/","text":"Python\u65b0\u7279\u6027 \u00b6 Python2.x\u4e0e3\u200b\u200b.x\u7248\u672c\u533a\u522b \u00b6 Python\u76843\u200b\u200b.0\u7248\u672c\uff0c\u5e38\u88ab\u79f0\u4e3aPython 3000\uff0c\u6216\u7b80\u79f0Py3k\u3002\u76f8\u5bf9\u4e8ePython\u7684\u65e9\u671f\u7248\u672c\uff0c\u8fd9\u662f\u4e00\u4e2a\u8f83\u5927\u7684\u5347\u7ea7\u3002 \u4e3a\u4e86\u4e0d\u5e26\u5165\u8fc7\u591a\u7684\u7d2f\u8d58\uff0cPython 3.0\u5728\u8bbe\u8ba1\u7684\u65f6\u5019\u6ca1\u6709\u8003\u8651\u5411\u4e0b\u76f8\u5bb9\u3002 \u8bb8\u591a\u9488\u5bf9\u65e9\u671fPython\u7248\u672c\u8bbe\u8ba1\u7684\u7a0b\u5f0f\u90fd\u65e0\u6cd5\u5728Python 3.0\u4e0a\u6b63\u5e38\u6267\u884c\u3002 \u4e3a\u4e86\u7167\u987e\u73b0\u6709\u7a0b\u5f0f\uff0cPython 2.6\u4f5c\u4e3a\u4e00\u4e2a\u8fc7\u6e21\u7248\u672c\uff0c\u57fa\u672c\u4f7f\u7528\u4e86Python 2.x\u7684\u8bed\u6cd5\u548c\u5e93\uff0c\u540c\u65f6\u8003\u8651\u4e86\u5411Python 3.0\u7684\u8fc1\u79fb\uff0c\u5141\u8bb8\u4f7f\u7528\u90e8\u5206Python 3.0\u7684\u8bed\u6cd5\u4e0e\u51fd\u6570\u3002 \u65b0\u7684Python\u7a0b\u5f0f\u5efa\u8bae\u4f7f\u7528Python 3.0\u7248\u672c\u7684\u8bed\u6cd5\u3002 \u9664\u975e\u6267\u884c\u73af\u5883\u65e0\u6cd5\u5b89\u88c5Python 3.0\u6216\u8005\u7a0b\u5f0f\u672c\u8eab\u4f7f\u7528\u4e86\u4e0d\u652f\u63f4Python 3.0\u7684\u7b2c\u4e09\u65b9\u5e93\u3002\u76ee\u524d\u4e0d\u652f\u63f4Python 3.0\u7684\u7b2c\u4e09\u65b9\u5e93\u6709Twisted, py2exe, PIL\u7b49\u3002 \u5927\u591a\u6570\u7b2c\u4e09\u65b9\u5e93\u90fd\u6b63\u5728\u52aa\u529b\u5730\u76f8\u5bb9Python 3.0\u7248\u672c\u3002\u5373\u4f7f\u65e0\u6cd5\u7acb\u5373\u4f7f\u7528Python 3.0\uff0c\u4e5f\u5efa\u8bae\u7f16\u5199\u76f8\u5bb9Python 3.0\u7248\u672c\u7684\u7a0b\u5f0f\uff0c\u7136\u540e\u4f7f\u7528Python 2.6, Python 2.7\u6765\u6267\u884c\u3002 Python 3.0\u7684\u53d8\u5316\u4e3b\u8981\u5728\u4ee5\u4e0b\u51e0\u4e2a\u65b9\u9762: print \u51fd\u6570 \u00b6 print\u8bed\u53e5\u6ca1\u6709\u4e86\uff0c\u53d6\u800c\u4ee3\u4e4b\u7684\u662fprint()\u51fd\u6570\u3002 Python 2.6\u4e0ePython 2.7\u90e8\u5206\u5730\u652f\u6301\u8fd9\u79cd\u5f62\u5f0f\u7684print\u8bed\u6cd5\u3002\u5728Python 2.6\u4e0ePython 2.7\u91cc\u9762\uff0c\u4ee5\u4e0b\u4e09\u79cd\u5f62\u5f0f\u662f\u7b49\u4ef7\u7684\uff1a print \"fish\" print ( \"fish\" ) #\u6ce8\u610fprint\u540e\u9762\u6709\u4e2a\u7a7a\u683c print ( \"fish\" ) #print()\u4e0d\u80fd\u5e26\u6709\u4efb\u4f55\u5176\u5b83\u53c2\u6570 \u7136\u800c\uff0cPython 2.6\u5b9e\u9645\u5df2\u7ecf\u652f\u6301\u65b0\u7684print()\u8bed\u6cd5\uff1a from __future__ import print_function print ( \"fish\" , \"panda\" , sep = ', ' ) Unicode \u00b6 Python 2 \u6709 ASCII str() \u7c7b\u578b\uff0cunicode() \u662f\u5355\u72ec\u7684\uff0c\u4e0d\u662f byte \u7c7b\u578b\u3002 \u73b0\u5728\uff0c \u5728 Python 3\uff0c\u6211\u4eec\u6700\u7ec8\u6709\u4e86 Unicode (utf-8) \u5b57\u7b26\u4e32\uff0c\u4ee5\u53ca\u4e00\u4e2a\u5b57\u8282\u7c7b\uff1abyte \u548c bytearrays\u3002 \u7531\u4e8e Python3.X \u6e90\u7801\u6587\u4ef6\u9ed8\u8ba4\u4f7f\u7528utf-8\u7f16\u7801\uff0c\u8fd9\u5c31\u4f7f\u5f97\u4ee5\u4e0b\u4ee3\u7801\u662f\u5408\u6cd5\u7684\uff1a >>> \u4e2d\u56fd = 'china' >>> print ( \u4e2d\u56fd ) china Python 2.x >>> str = \"\u6211\u7231\u5317\u4eac\u5929\u5b89\u95e8\" >>> str ' \\xe6\\x88\\x91\\xe7\\x88\\xb1\\xe5\\x8c\\x97\\xe4\\xba\\xac\\xe5\\xa4\\xa9\\xe5\\xae\\x89\\xe9\\x97\\xa8 ' >>> str = u \"\u6211\u7231\u5317\u4eac\u5929\u5b89\u95e8\" >>> str u ' \\u6211\\u7231\\u5317\\u4eac\\u5929\\u5b89\\u95e8 ' Python 3.x >>> str = \"\u6211\u7231\u5317\u4eac\u5929\u5b89\u95e8\" >>> str '\u6211\u7231\u5317\u4eac\u5929\u5b89\u95e8' \u9664\u6cd5\u8fd0\u7b97 \u00b6 Python\u4e2d\u7684\u9664\u6cd5\u8f83\u5176\u5b83\u8bed\u8a00\u663e\u5f97\u975e\u5e38\u9ad8\u7aef\uff0c\u6709\u5957\u5f88\u590d\u6742\u7684\u89c4\u5219\u3002Python\u4e2d\u7684\u9664\u6cd5\u6709\u4e24\u4e2a\u8fd0\u7b97\u7b26\uff0c/\u548c// \u9996\u5148\u6765\u8bf4/\u9664\u6cd5: \u5728python 2.x\u4e2d/\u9664\u6cd5\u5c31\u8ddf\u6211\u4eec\u719f\u6089\u7684\u5927\u591a\u6570\u8bed\u8a00\uff0c\u6bd4\u5982Java\u554aC\u554a\u5dee\u4e0d\u591a\uff0c\u6574\u6570\u76f8\u9664\u7684\u7ed3\u679c\u662f\u4e00\u4e2a\u6574\u6570\uff0c\u628a\u5c0f\u6570\u90e8\u5206\u5b8c\u5168\u5ffd\u7565\u6389\uff0c\u6d6e\u70b9\u6570\u9664\u6cd5\u4f1a\u4fdd\u7559\u5c0f\u6570\u70b9\u7684\u90e8\u5206\u5f97\u5230\u4e00\u4e2a\u6d6e\u70b9\u6570\u7684\u7ed3\u679c\u3002 \u5728python 3.x\u4e2d/\u9664\u6cd5\u4e0d\u518d\u8fd9\u4e48\u505a\u4e86\uff0c\u5bf9\u4e8e\u6574\u6570\u4e4b\u95f4\u7684\u76f8\u9664\uff0c\u7ed3\u679c\u4e5f\u4f1a\u662f\u6d6e\u70b9\u6570\u3002 Python 2.x: >>> 1 / 2 0 >>> 1.0 / 2.0 0.5 Python 3.x: >>> 1 / 2 0.5 \u800c\u5bf9\u4e8e//\u9664\u6cd5\uff0c\u8fd9\u79cd\u9664\u6cd5\u53eb\u505afloor\u9664\u6cd5\uff0c\u4f1a\u5bf9\u9664\u6cd5\u7684\u7ed3\u679c\u81ea\u52a8\u8fdb\u884c\u4e00\u4e2afloor\u64cd\u4f5c\uff0c\u5728python 2.x\u548cpython 3.x\u4e2d\u662f\u4e00\u81f4\u7684\u3002 python 2.x: >>> - 1 // 2 - 1 python 3.x: >>> - 1 // 2 - 1 \u6ce8\u610f\u7684\u662f\u5e76\u4e0d\u662f\u820d\u5f03\u5c0f\u6570\u90e8\u5206\uff0c\u800c\u662f\u6267\u884c floor \u64cd\u4f5c\uff0c\u5982\u679c\u8981\u622a\u53d6\u6574\u6570\u90e8\u5206\uff0c\u90a3\u4e48\u9700\u8981\u4f7f\u7528 math \u6a21\u5757\u7684 trunc \u51fd\u6570 python 3.x: >>> import math >>> math . trunc ( 1 / 2 ) 0 >>> math . trunc ( - 1 / 2 ) 0 \u5f02\u5e38 \u00b6 \u5728 Python 3 \u4e2d\u5904\u7406\u5f02\u5e38\u4e5f\u8f7b\u5fae\u7684\u6539\u53d8\u4e86\uff0c\u5728 Python 3 \u4e2d\u6211\u4eec\u73b0\u5728\u4f7f\u7528 as \u4f5c\u4e3a\u5173\u952e\u8bcd\u3002 \u6355\u83b7\u5f02\u5e38\u7684\u8bed\u6cd5\u7531 except exc, var \u6539\u4e3a except exc as var\u3002 \u4f7f\u7528\u8bed\u6cd5except (exc1, exc2) as var\u53ef\u4ee5\u540c\u65f6\u6355\u83b7\u591a\u79cd\u7c7b\u522b\u7684\u5f02\u5e38\u3002 Python 2.6\u5df2\u7ecf\u652f\u6301\u8fd9\u4e24\u79cd\u8bed\u6cd5\u3002 1. \u57282.x\u65f6\u4ee3\uff0c\u6240\u6709\u7c7b\u578b\u7684\u5bf9\u8c61\u90fd\u662f\u53ef\u4ee5\u88ab\u76f4\u63a5\u629b\u51fa\u7684\uff0c\u57283.x\u65f6\u4ee3\uff0c\u53ea\u6709\u7ee7\u627f\u81eaBaseException\u7684\u5bf9\u8c61\u624d\u53ef\u4ee5\u88ab\u629b\u51fa\u3002 2. 2.x raise\u8bed\u53e5\u4f7f\u7528\u9017\u53f7\u5c06\u629b\u51fa\u5bf9\u8c61\u7c7b\u578b\u548c\u53c2\u6570\u5206\u5f00\uff0c3.x\u53d6\u6d88\u4e86\u8fd9\u79cd\u5947\u8469\u7684\u5199\u6cd5\uff0c\u76f4\u63a5\u8c03\u7528\u6784\u9020\u51fd\u6570\u629b\u51fa\u5bf9\u8c61\u5373\u53ef\u3002 \u57282.x\u65f6\u4ee3\uff0c\u5f02\u5e38\u5728\u4ee3\u7801\u4e2d\u9664\u4e86\u8868\u793a\u7a0b\u5e8f\u9519\u8bef\uff0c\u8fd8\u7ecf\u5e38\u505a\u4e00\u4e9b\u666e\u901a\u63a7\u5236\u7ed3\u6784\u5e94\u8be5\u505a\u7684\u4e8b\u60c5\uff0c\u57283.x\u4e2d\u53ef\u4ee5\u770b\u51fa\uff0c\u8bbe\u8ba1\u8005\u8ba9\u5f02\u5e38\u53d8\u7684\u66f4\u52a0\u4e13\u4e00\uff0c\u53ea\u6709\u5728\u9519\u8bef\u53d1\u751f\u7684\u60c5\u51b5\u624d\u80fd\u53bb\u7528\u5f02\u5e38\u6355\u83b7\u8bed\u53e5\u6765\u5904\u7406\u3002 xrange \u00b6 \u5728 Python 2 \u4e2d xrange() \u521b\u5efa\u8fed\u4ee3\u5bf9\u8c61\u7684\u7528\u6cd5\u662f\u975e\u5e38\u6d41\u884c\u7684\u3002\u6bd4\u5982\uff1a for \u5faa\u73af\u6216\u8005\u662f\u5217\u8868/\u96c6\u5408/\u5b57\u5178\u63a8\u5bfc\u5f0f\u3002 \u8fd9\u4e2a\u8868\u73b0\u5341\u5206\u50cf\u751f\u6210\u5668\uff08\u6bd4\u5982\u3002\"\u60f0\u6027\u6c42\u503c\"\uff09\u3002\u4f46\u662f\u8fd9\u4e2a xrange-iterable \u662f\u65e0\u7a77\u7684\uff0c\u610f\u5473\u7740\u4f60\u53ef\u4ee5\u65e0\u9650\u904d\u5386\u3002 \u7531\u4e8e\u5b83\u7684\u60f0\u6027\u6c42\u503c\uff0c\u5982\u679c\u4f60\u4e0d\u5f97\u4ec5\u4ec5\u4e0d\u904d\u5386\u5b83\u4e00\u6b21\uff0cxrange() \u51fd\u6570 \u6bd4 range() \u66f4\u5feb\uff08\u6bd4\u5982 for \u5faa\u73af\uff09\u3002\u5c3d\u7ba1\u5982\u6b64\uff0c\u5bf9\u6bd4\u8fed\u4ee3\u4e00\u6b21\uff0c\u4e0d\u5efa\u8bae\u4f60\u91cd\u590d\u8fed\u4ee3\u591a\u6b21\uff0c\u56e0\u4e3a\u751f\u6210\u5668\u6bcf\u6b21\u90fd\u4ece\u5934\u5f00\u59cb\u3002 \u5728 Python 3 \u4e2d\uff0crange() \u662f\u50cf xrange() \u90a3\u6837\u5b9e\u73b0\u4ee5\u81f3\u4e8e\u4e00\u4e2a\u4e13\u95e8\u7684 xrange() \u51fd\u6570\u90fd\u4e0d\u518d\u5b58\u5728\uff08\u5728 Python 3 \u4e2d xrange() \u4f1a\u629b\u51fa\u547d\u540d\u5f02\u5e38\uff09\u3002 import timeit n = 10000 def test_range ( n ): return for i in range ( n ): pass def test_xrange ( n ): for i in xrange ( n ): pass Python 2 print 'Python' , python_version () print ' \\n timing range()' % timeit test_range ( n ) print ' \\n\\n timing xrange()' % timeit test_xrange ( n ) #Python 2.7.6 timing range () 1000 loops , best of 3 : 433 \u00b5 s per loop timing xrange () 1000 loops , best of 3 : 350 \u00b5 s per loop Python 3 print ( 'Python' , python_version ()) print ( ' \\n timing range()' ) % timeit test_range ( n ) #Python 3.4.1 timing range () 1000 loops , best of 3 : 520 \u00b5 s per loop print ( xrange ( 10 )) --------------------------------------------------------------------------- NameError Traceback ( most recent call last ) < ipython - input - 5 - 5 d8f9b79ea70 > in < module > () ----> 1 print ( xrange ( 10 )) NameError : name 'xrange' is not defined \u516b\u8fdb\u5236\u5b57\u9762\u91cf\u8868\u793a \u00b6 \u516b\u8fdb\u5236\u6570\u5fc5\u987b\u5199\u62100o777\uff0c\u539f\u6765\u7684\u5f62\u5f0f0777\u4e0d\u80fd\u7528\u4e86\uff1b\u4e8c\u8fdb\u5236\u5fc5\u987b\u5199\u62100b111\u3002 \u65b0\u589e\u4e86\u4e00\u4e2abin()\u51fd\u6570\u7528\u4e8e\u5c06\u4e00\u4e2a\u6574\u6570\u8f6c\u6362\u6210\u4e8c\u8fdb\u5236\u5b57\u4e32\u3002 Python 2.6\u5df2\u7ecf\u652f\u6301\u8fd9\u4e24\u79cd\u8bed\u6cd5\u3002 \u5728Python 3.x\u4e2d\uff0c\u8868\u793a\u516b\u8fdb\u5236\u5b57\u9762\u91cf\u7684\u65b9\u5f0f\u53ea\u6709\u4e00\u79cd\uff0c\u5c31\u662f0o1000\u3002 python 2.x >>> 0 o1000 512 >>> 01000 512 python 3.x >>> 01000 File \"<stdin>\" , line 1 01000 ^ SyntaxError : invalid token >>> 0 o1000 512 \u4e0d\u7b49\u8fd0\u7b97\u7b26 \u00b6 Python 2.x\u4e2d\u4e0d\u7b49\u4e8e\u6709\u4e24\u79cd\u5199\u6cd5 != \u548c <> Python 3.x\u4e2d\u53bb\u6389\u4e86<>, \u53ea\u6709!=\u4e00\u79cd\u5199\u6cd5\uff0c\u8fd8\u597d\uff0c\u6211\u4ece\u6765\u6ca1\u6709\u4f7f\u7528<>\u7684\u4e60\u60ef \u53bb\u6389\u4e86repr\u8868\u8fbe\u5f0f`` \u00b6 Python 2.x \u4e2d\u53cd\u5f15\u53f7 \u76f8\u5f53\u4e8erepr\u51fd\u6570\u7684\u4f5c\u7528 Python 3.x \u4e2d\u53bb\u6389\u4e86 \u8fd9\u79cd\u5199\u6cd5\uff0c\u53ea\u5141\u8bb8\u4f7f\u7528repr\u51fd\u6570\uff0c\u8fd9\u6837\u505a\u7684\u76ee\u7684\u662f\u4e3a\u4e86\u4f7f\u4ee3\u7801\u770b\u4e0a\u53bb\u66f4\u6e05\u6670\u4e48\uff1f\u4e0d\u8fc7\u6211\u611f\u89c9\u7528repr\u7684\u673a\u4f1a\u5f88\u5c11\uff0c\u4e00\u822c\u53ea\u5728debug\u7684\u65f6\u5019\u624d\u7528\uff0c\u591a\u6570\u65f6\u5019\u8fd8\u662f\u7528str\u51fd\u6570\u6765\u7528\u5b57\u7b26\u4e32\u63cf\u8ff0\u5bf9\u8c61\u3002 def sendMail ( from_ : str , to : str , title : str , body : str ) -> bool : pass \u591a\u4e2a\u6a21\u5757\u88ab\u6539\u540d\uff08\u6839\u636ePEP8\uff09 \u00b6 \u65e7\u7684\u540d\u5b57 \u65b0\u7684\u540d\u5b57 _winreg winreg ConfigParser configParaser copy_reg copyreg Queue queue SocketServer socketserver repr reprlib StringIO\u6a21\u5757\u73b0\u5728\u88ab\u5408\u5e76\u5230\u65b0\u7684io\u6a21\u7ec4\u5185\u3002 new, md5, gopherlib\u7b49\u6a21\u5757\u88ab\u5220\u9664\u3002 Python 2.6\u5df2\u7ecf\u652f\u63f4\u65b0\u7684io\u6a21\u7ec4\u3002 httplib, BaseHTTPServer, CGIHTTPServer, SimpleHTTPServer, Cookie, cookielib\u88ab\u5408\u5e76\u5230http\u5305\u5185\u3002 \u53d6\u6d88\u4e86exec\u8bed\u53e5\uff0c\u53ea\u5269\u4e0bexec()\u51fd\u6570\u3002 Python 2.6\u5df2\u7ecf\u652f\u63f4exec()\u51fd\u6570\u3002 ### \u6570\u636e\u7c7b\u578b 1. Py3.X\u53bb\u9664\u4e86long\u7c7b\u578b\uff0c\u73b0\u5728\u53ea\u6709\u4e00\u79cd\u6574\u578b\u2014\u2014int\uff0c\u4f46\u5b83\u7684\u884c\u4e3a\u5c31\u50cf2.X\u7248\u672c\u7684long 2. \u65b0\u589e\u4e86bytes\u7c7b\u578b\uff0c\u5bf9\u5e94\u4e8e2.X\u7248\u672c\u7684\u516b\u4f4d\u4e32\uff0c\u5b9a\u4e49\u4e00\u4e2abytes\u5b57\u9762\u91cf\u7684\u65b9\u6cd5\u5982\u4e0b\uff1a >>> b = b 'china' >>> type ( b ) < type 'bytes' > str\u5bf9\u8c61\u548cbytes\u5bf9\u8c61\u53ef\u4ee5\u4f7f\u7528.encode() (str -> bytes) or .decode() (bytes -> str)\u65b9\u6cd5\u76f8\u4e92\u8f6c\u5316\u3002 >>> s = b . decode () >>> s 'china' >>> b1 = s . encode () >>> b1 b 'china' 3. dict\u7684.keys()\u3001.items \u548c.values()\u65b9\u6cd5\u8fd4\u56de\u8fed\u4ee3\u5668\uff0c\u8fd4\u56de\u7684\u503c\u4e0d\u518d\u662flist\uff0c\u800c\u662fview\u3002\u6240\u4ee5dict.iterkeys(),dict.iteritems()\u548cdict.itervalues()\u88ab\u53bb\u6389\u4e86\u3002\u540c\u65f6\u53bb\u6389\u7684\u8fd8\u6709 dict.has_key()\uff0c\u7528 in\u66ff\u4ee3\u5b83\u5427 \u3002 ### \u6253\u5f00\u6587\u4ef6 \u539f\uff1a file ( ..... ) #\u6216 open ( ..... ) \u6539\u4e3a\u53ea\u80fd\u7528 open ( ..... ) ### \u4ece\u952e\u76d8\u5f55\u5165\u4e00\u4e2a\u5b57\u7b26\u4e32 \u5728python2.x\u4e2draw_input()\u548cinput( )\uff0c\u4e24\u4e2a\u51fd\u6570\u90fd\u5b58\u5728\uff0c\u5176\u4e2d\u533a\u522b\u4e3a\uff1a raw_input()---\u5c06\u6240\u6709\u8f93\u5165\u4f5c\u4e3a\u5b57\u7b26\u4e32\u770b\u5f85\uff0c\u8fd4\u56de\u5b57\u7b26\u4e32\u7c7b\u578b input()-----\u53ea\u80fd\u63a5\u6536\"\u6570\u5b57\"\u7684\u8f93\u5165\uff0c\u5728\u5bf9\u5f85\u7eaf\u6570\u5b57\u8f93\u5165\u65f6\u5177\u6709\u81ea\u5df1\u7684\u7279\u6027\uff0c\u5b83\u8fd4\u56de\u6240\u8f93\u5165\u7684\u6570\u5b57\u7684\u7c7b\u578b\uff08int, float \uff09 \u5728python3.x\u4e2draw_input()\u548cinput( )\u8fdb\u884c\u4e86\u6574\u5408\uff0c\u53bb\u9664\u4e86raw_input()\uff0c\u4ec5\u4fdd\u7559\u4e86input()\u51fd\u6570\uff0c\u5176\u63a5\u6536\u4efb\u610f\u4efb\u6027\u8f93\u5165\uff0c\u5c06\u6240\u6709\u8f93\u5165\u9ed8\u8ba4\u4e3a\u5b57\u7b26\u4e32\u5904\u7406\uff0c\u5e76\u8fd4\u56de\u5b57\u7b26\u4e32\u7c7b\u578b\u3002 \u539f: raw_input ( \"\u63d0\u793a\u4fe1\u606f\" ) \u6539\u4e3a: input ( \"\u63d0\u793a\u4fe1\u606f\" ) ### map\u3001filter \u548c reduce \u8fd9\u4e09\u4e2a\u51fd\u6570\u53f7\u79f0\u662f\u51fd\u6570\u5f0f\u7f16\u7a0b\u7684\u4ee3\u8868\u3002\u5728 Python3.x \u548c Python2.x \u4e2d\u4e5f\u6709\u4e86\u5f88\u5927\u7684\u5dee\u5f02\u3002 \u9996\u5148\u6211\u4eec\u5148\u7b80\u5355\u7684\u5728 Python2.x \u7684\u4ea4\u4e92\u4e0b\u8f93\u5165 map \u548c filter,\u770b\u5230\u5b83\u4eec\u4e24\u8005\u7684\u7c7b\u578b\u662f built-in function(\u5185\u7f6e\u51fd\u6570): >>> map < built - in function map > >>> filter < built - in function filter > >>> \u5b83\u4eec\u8f93\u51fa\u7684\u7ed3\u679c\u7c7b\u578b\u90fd\u662f\u5217\u8868: >>> map ( lambda x : x * 2 , [ 1 , 2 , 3 ]) [ 2 , 4 , 6 ] >>> filter ( lambda x : x % 2 == 0 , range ( 10 )) [ 0 , 2 , 4 , 6 , 8 ] >>> \u4f46\u662f\u5728Python 3.x\u4e2d\u5b83\u4eec\u5374\u4e0d\u662f\u8fd9\u4e2a\u6837\u5b50\u4e86\uff1a >>> map < class ' map '> >>> map ( print ,[ 1 , 2 , 3 ]) < map object at 0x10d8bd400 > >>> filter < class ' filter '> >>> filter ( lambda x : x % 2 == 0 , range ( 10 )) < filter object at 0x10d8bd3c8 > >>> \u9996\u5148\u5b83\u4eec\u4ece\u51fd\u6570\u53d8\u6210\u4e86\u7c7b\uff0c\u5176\u6b21\uff0c\u5b83\u4eec\u7684\u8fd4\u56de\u7ed3\u679c\u4e5f\u4ece\u5f53\u521d\u7684\u5217\u8868\u6210\u4e86\u4e00\u4e2a\u53ef\u8fed\u4ee3\u7684\u5bf9\u8c61, \u6211\u4eec\u5c1d\u8bd5\u7528 next \u51fd\u6570\u6765\u8fdb\u884c\u624b\u5de5\u8fed\u4ee3: >>> f = filter ( lambda x : x % 2 == 0 , range ( 10 )) >>> next ( f ) 0 >>> next ( f ) 2 >>> next ( f ) 4 >>> next ( f ) 6 >>> \u5bf9\u4e8e\u6bd4\u8f83\u9ad8\u7aef\u7684 reduce \u51fd\u6570\uff0c\u5b83\u5728 Python 3.x \u4e2d\u5df2\u7ecf\u4e0d\u5c5e\u4e8e built-in \u4e86\uff0c\u88ab\u632a\u5230 functools \u6a21\u5757\u5f53\u4e2d\u3002 Python3.+\u65b0\u7279\u6027 \u00b6 \u65b0\u7684\u8bed\u6cd5\u7279\u6027\uff1a * \u683c\u5f0f\u5316\u5b57\u7b26\u4e32\u5b57\u9762\u503c * \u6570\u5b57\u5b57\u7b26\u4e32\u4e2d\u652f\u6301\u4e0b\u5212\u7ebf * \u53d8\u91cf\u6ce8\u91ca\u7684\u8bed\u6cd5 * \u5f02\u6b65\u751f\u6210\u5668 * \u5f02\u6b65\u5217\u8868\u63a8\u5bfc * \u7528\u7c7b\u5904\u7406\u6570\u636e\u65f6\u51cf\u5c11\u6837\u677f\u4ee3\u7801\u7684\u6570\u636e\u7c7b * \u4e00\u5904\u53ef\u80fd\u65e0\u6cd5\u5411\u540e\u517c\u5bb9\u7684\u53d8\u66f4\u6d89\u53ca\u5904\u7406\u751f\u6210\u5668\u4e2d\u7684\u5f02\u5e38 * \u9762\u5411\u89e3\u91ca\u5668\u7684\u201c\u5f00\u53d1\u6a21\u5f0f * \u5177\u6709\u7eb3\u79d2\u5206\u8fa8\u7387\u7684\u65f6\u95f4\u5bf9\u8c61 * \u73af\u5883\u4e2d\u9ed8\u8ba4\u4f7f\u7528UTF-8\u7f16\u7801\u7684UTF-8\u6a21\u5f0f * \u89e6\u53d1\u8c03\u8bd5\u5668\u7684\u4e00\u4e2a\u65b0\u7684\u5185\u7f6e\u51fd\u6570 \u65b0\u7684\u6a21\u5757 \u00b6 \u6dfb\u52a0\u4e86\u4e00\u4e2a\u5b89\u5168\u6a21\u5757secrets\u5230\u6807\u51c6\u5e93\u4e2d CPython\u5b9e\u73b0\u6539\u8fdb \u00b6 \u5b57\u5178\u57fa\u4e8eRaymond Hettinger\u7684\u5efa\u8bae\u4f7f\u7528\u66f4\u7d27\u51d1\u7684\u8868\u793a\u91cd\u65b0\u5b9e\u73b0\u4e86\uff0c\u548cPyPy\u7684\u5b57\u5178\u5b9e\u73b0\u7c7b\u4f3c\u3002\u7ed3\u679c\u662f\u548c3.5\u7248\u672c\u76f8\u6bd4\uff0c3.6\u7248\u672c\u5b57\u5178\u7684\u5185\u5b58\u4f7f\u7528\u51cf\u5c11\u4e8620%\u523025%\u3002 \u4f7f\u7528\u65b0\u7684\u534f\u8bae\uff0c\u81ea\u5b9a\u4e49\u7c7b\u7684\u521b\u5efa\u88ab\u7b80\u5316\u4e86\u3002 \u7c7b\u5c5e\u6027\u7684\u5b9a\u4e49\u987a\u5e8f\u80fd\u591f\u88ab\u4fdd\u5b58\u3002 \u5728**kwargs\u4e2d\u5143\u7d20\u7684\u987a\u5e8f\u5bf9\u5e94\u4e8e\u4f20\u9012\u7ed9\u51fd\u6570\u65f6\u7684\u5173\u952e\u5b57\u53c2\u6570\u7684\u987a\u5e8f\u3002 \u6dfb\u52a0\u4e86DTrace\u548cSystemTap\u63a2\u6d4b\u7684\u652f\u6301\u3002 \u65b0\u7684PYTHONMALLOC\u73af\u5883\u53d8\u91cf\u53ef\u4ee5\u7528\u4e8e\u8c03\u8bd5\u89e3\u91ca\u5668\u5185\u5b58\u5206\u914d\u548c\u8bbf\u95ee\u9519\u8bef\u3002 \u91cd\u5927\u7684\u6807\u51c6\u5e93\u6539\u8fdb \u00b6 asyncio\u6a21\u5757\u63a5\u6536\u4e86\u65b0\u7279\u6027\uff0c\u91cd\u5927\u7684\u53ef\u7528\u6027\u548c\u6027\u80fd\u6539\u8fdb\uff0c\u7136\u540e\u4fee\u590d\u4e86\u5927\u91cf\u7684BUG\u3002\u4ecePython 3.6\u5f00\u59cbasyncio\u6a21\u5757\u4e0d\u518d\u662f\u4e34\u65f6\u7684\u4e86\uff0c\u5b83\u5df2\u7ecf\u88ab\u8ba4\u4e3a\u662f\u7a33\u5b9a\u7684\u4e86\u3002 \u65b0\u7684\u6587\u4ef6\u7cfb\u7edf\u8def\u5f84\u534f\u8bae\u5df2\u5b9e\u73b0\uff0c\u7528\u4e8e\u652f\u6301\u8def\u5f84\u7c7b\u5bf9\u8c61\u3002\u6240\u6709\u6807\u51c6\u5e93\u51fd\u6570\u5728\u5904\u7406\u8def\u5f84\u65f6\u5df2\u4f7f\u7528\u65b0\u7684\u534f\u8bae\u3002 datetime\u6a21\u5757\u5728\u672c\u5730\u65f6\u95f4\u6d88\u9664\u6b67\u4e49\u4e0a\u83b7\u5f97\u4e86\u652f\u6301\u3002 typing\u6a21\u5757\u63a5\u53d7\u4e86\u4e00\u4e9b\u6539\u8fdb\u3002 tracemalloc\u6a21\u5757\u7ecf\u8fc7\u91cd\u5927\u6539\u9020\uff0c\u73b0\u5728\u53ef\u4ee5\u4e3aResourceWarnning\u63d0\u4f9b\u66f4\u597d\u7684\u8f93\u51fa\uff0c\u4e5f\u4e3a\u5185\u5b58\u5206\u914d\u9519\u8bef\u63d0\u4f9b\u66f4\u597d\u7684\u8bca\u65ad\u3002 \u5b89\u5168\u6539\u8fdb \u00b6 secrets\u6a21\u5757\u5df2\u88ab\u6dfb\u52a0\uff0c\u53ef\u4ee5\u751f\u6210\u66f4\u5b89\u5168\u7684\u4f2a\u968f\u673a\u6570\u3002 \u5728Linux\u4e0a\uff0cos.urandom()\u73b0\u5728\u4f1a\u88ab\u9501\u4f4f\uff0c\u76f4\u5230\u7cfb\u7edf\u7684\u4f2a\u968f\u673a\u6ef4\u6c60\u88ab\u521d\u59cb\u5316\u589e\u52a0\u5b89\u5168\u3002 hashlib\u548cssl\u6a21\u5757\u73b0\u5728\u652f\u6301OpenSSL 1.1.0\u3002 hashlib\u6a21\u5757\u73b0\u5728\u652f\u6301BLAKE2\u3001SHA-3\u548cSHAKE\u6458\u8981\u7b97\u6cd5\u548cscrypt()\u79d8\u94a5\u5bfc\u51fa\u529f\u80fd\u3002 Windows\u6539\u8fdb \u00b6 Windows\u6587\u4ef6\u7cfb\u7edf\u548c\u63a7\u5236\u53f0\u7f16\u7801\u6539\u4e3a\u4e86UTF-8\u3002 python.exe\u548cpythonw.exe\u73b0\u5728\u652f\u6301\u957f\u8def\u5f84\uff0c\u8be6\u60c5\u8bf7\u770b removing the MAX_PATH limitation \u3002 \u4e00\u4e2a._pth\u6587\u4ef6\u53ef\u4ee5\u88ab\u6dfb\u52a0\u7528\u4e8e\u9694\u79bb\u6a21\u5757\uff0c\u907f\u514d\u5168\u8def\u5f84\u641c\u7d22\uff0c\u8be6\u60c5\u8bf7\u770b\u6587\u6863\u3002 Formatted\u5b57\u7b26\u4e32\u5b57\u9762\u503c \u00b6 Formatted\u5b57\u7b26\u4e32\u662f\u5e26\u6709\u2019f\u2019\u5b57\u7b26\u524d\u7f00\u7684\u5b57\u7b26\u4e32\uff0c\u53ef\u4ee5\u5f88\u65b9\u4fbf\u7684\u683c\u5f0f\u5316\u5b57\u7b26\u4e32\u3002 >>> name = \"xiaoming\" >>> f \"He name is {name}\" 'He name is xiaoming' >>> width = 10 >>> precision = 4 >>> value = decimal . Decimal ( \"12.34567\" ) >>> f \"result: {value:{width}.{precision}}\" 'result: 12.35' \u6570\u5b57\u4e2d\u652f\u6301\u4e0b\u5212\u7ebf \u00b6 \u6570\u5b57\u4e2d\u652f\u6301\u4f7f\u7528\u4e0b\u5212\u7ebf\uff0c\u65b9\u4fbf\u9605\u8bfb\uff0c\u4f8b\u5982\uff1a >>> 1 _000_000_000_000_000 1000000000000000 >>> 0 x_FF_FF_FF_FF 4294967295 \u5b57\u7b26\u4e32format\u65b9\u6cd5\u4e5f\u652f\u6301\u4e86\u2019_\u2019\u9009\u9879\uff0c\u5f53\u683c\u5f0f\u5316\u4e3a\u6d6e\u70b9\u6570\u6216\u6574\u6570\u65f6\uff0c\u4ee53\u4f4d\u5206\u9694\uff0c\u5f53\u683c\u5f0f\u5316\u4e3a\u2019b\u2019,\u2019o\u2019,\u2019x\u2019\u548c\u2019X\u2019\u65f6\uff0c\u4ee54\u4f4d\u5206\u9694 >>> '{:_}' . format ( 10000000 ) '10_000_000' >>> '{:_b}' . format ( 10000000 ) '1001_1000_1001_0110_1000_0000' \u53d8\u91cf\u6ce8\u91ca\u8bed\u6cd5 \u00b6 \u53d8\u91cf\u6ce8\u91ca\u6ca1\u6709\u7ed9\u53d8\u91cf\u5e26\u6765\u7279\u6b8a\u7684\u610f\u4e49\uff0c\u53ea\u662f\u4e3a\u4e86\u65b9\u4fbfIDE\u505a\u7c7b\u578b\u68c0\u67e5\u3002 >>> from typing import List , Dict >>> primes : List [ int ] = [] >>> stats : Dict [ str , int ] = {} \u4e0a\u9762\u4ee3\u7801\u4e2dprimes\u4e3a\u53d8\u91cf\u540d\uff0cList[int]\u4e3a\u53d8\u91cf\u6ce8\u91ca\uff0c\u7528\u6765\u8bf4\u660eprimes\u5217\u8868\u662f\u7528\u6765\u5b58\u653eint\u7c7b\u578b\u6570\u636e\u7684\uff0c\u4f46\u662f\u8fd9\u4e2a\u4e0d\u662f\u5f3a\u5236\u6027\u7684\uff0c\u4f60\u4f7f\u7528append()\u65b9\u6cd5\u6dfb\u52a0\u4e00\u4e2astr\u7c7b\u578b\u6570\u636e\u4e5f\u662f\u53ef\u4ee5\u7684\uff0cIDE\u4f1a\u63d0\u793a\u4f60\u6dfb\u52a0\u7684\u6570\u636e\u6709\u8bef\uff0c\u4f46\u662f\u8fd0\u884c\u65f6\u4e0d\u4f1a\u62a5\u9519\u3002 \u5f02\u6b65\u751f\u6210\u5668 \u00b6 \u5728Python3.5\u4e2d\uff0cawait\u548cyield\u4e0d\u80fd\u518d\u540c\u4e00\u4e2a\u51fd\u6570\u4e2d\u4f7f\u7528\uff0c\u4f46\u662fPython3.6\u5df2\u7ecf\u53d6\u6d88\u4e86\u8fd9\u4e2a\u9650\u5236\uff0c\u53ef\u4ee5\u5728\u540c\u4e00\u4e2a\u51fd\u6570\u4f53\u4e2d\u4f7f\u7528\u4e86 async def ticker ( delay , to ): \"\"\"Yield numbers from 0 to *to* every *delay* seconds.\"\"\" for i in range ( to ): yield i await asyncio . sleep ( delay ) \u5f02\u6b65\u5217\u8868\u63a8\u5bfc \u00b6 \u589e\u52a0\u5728list\u3001set\u548cdict\u7684\u5217\u8868\u63a8\u5bfc\u548c\u751f\u6210\u8868\u8fbe\u5f0f\u4e2d\u4f7f\u7528async for\u3002 \u5982\u4e0b\u9762\u8fd9\u6bb5\u4ee3\u7801: result = [] async for i in aiter (): if i % 2 : result . append ( i ) \u4f7f\u7528\u5f02\u6b65\u63a8\u5bfc\u5f0f\u4e4b\u540e\uff0c\u53ef\u4ee5\u7b80\u5199\u6210 result = [ i async for i in aiter () if i % 2 ] \u73b0\u5728\u4e5f\u652f\u6301\u5728\u6240\u6709\u7684\u63a8\u5bfc\u5f0f\u4e2d\u4f7f\u7528await\u8868\u8fbe\u5f0f result = [await fun() for fun in funcs] Python\u6570\u636e\u7c7b \u00b6 \u4f17\u6240\u5468\u77e5\uff0cPython\u662f\u5904\u7406\u7ed3\u6784\u5316\u6570\u636e\u7684\u4e00\u79cd\u5feb\u6377\u53c8\u65b9\u4fbf\u7684\u65b9\u6cd5\u3002Python\u63d0\u4f9b\u4e86\u7528\u6765\u7ec4\u7ec7\u7ba1\u7406\u7ed3\u6784\uff0c\u5e76\u5c06\u5e38\u89c1\u884c\u4e3a\u4e0e\u6570\u636e\u5b9e\u4f8b\u8054\u7cfb\u8d77\u6765\u7684\u7c7b\uff0c\u4f46\u662f\u62e5\u6709\u8bb8\u591a\u521d\u59cb\u5316\u5668\u7684\u7c7b\u5386\u6765\u5b58\u5728\u8fd9\u4e2a\u5f0a\u7aef\uff1a\u9700\u8981\u5927\u91cf\u7684\u6837\u677f\u4ee3\u7801\u4e3a\u5b83\u4eec\u521b\u5efa\u5b9e\u4f8b\u3002\u6bd4\u5982\u8bf4\uff1a class User (): def __init__ ( self , name , user_id , just_joined = True ): self . name = name self . id = user_id self . just_joined = just_joined \u4e3a\u4e86\u4f7f\u8fd9\u5b9e\u73b0\u81ea\u52a8\u5316\uff1a\u4e3a\u7c7b\u521b\u5efa\u5b9e\u4f8b\uff0cPython 3.7\u5f15\u5165\u4e86\u4e00\u4e2a\u65b0\u7684\u6a21\u5757dataclasses\uff0c\u5982 pep-0557 \u4e2d\u6240\u8ff0\u3002\u5b83\u63d0\u4f9b\u4e86\u4e00\u4e2a\u88c5\u9970\u5668\uff0c\u80fd\u591f\u4ee5\u5f02\u5e38\u7b80\u5355\u7684\u65b9\u5f0f\u91cd\u73b0\u4e0a\u8ff0\u884c\u4e3a\uff1a @dataclass class User (): name : str user_id : int just_joined : bool = True \u56e0\u800c\u751f\u6210\u7684\u7c7b\u8fd0\u884c\u8d77\u6765\u5982\u540c\u666e\u901a\u7684Python\u7c7b\u3002\u4f60\u8fd8\u53ef\u4ee5\u58f0\u660e\u67d0\u4e9b\u5b57\u6bb5\u662f\u201c\u51bb\u7ed3\u201d\u6216\u4e0d\u53ef\u53d8\u7684\uff0c\u5e76\u4e14\u4f7f\u521b\u5efa\u5c5e\u6027\u7684\u7279\u6b8a\u65b9\u6cd5\uff08\u6bd4\u5982__hash__\u6216__repr__\uff09\u5b9e\u73b0\u81ea\u52a8\u5316\uff08\u6216\u624b\u52a8\u8986\u76d6\uff09\u3002 Python\u751f\u6210\u5668\u5f02\u5e38\u5904\u7406 \u00b6 \u6b63\u5982 PEP 479 \u4e2d\u6982\u8ff0\uff0c\u5f00\u53d1\u4e86\u4e00\u6bb5\u65f6\u95f4\u7684\u4e00\u5904\u53d8\u66f4\u65e8\u5728\u8ba9\u4eba\u4eec\u66f4\u5bb9\u6613\u8c03\u8bd5Python\u751f\u6210\u5668\u5f15\u53d1\u7684StopIteration\u5f02\u5e38\u3002\u4ee5\u524d\uff0c\u751f\u6210\u5668\u9047\u5230\u53e6\u4e00\u4e2a\u95ee\u9898\u65f6\u5f88\u5bb9\u6613\u5f15\u53d1StopIteration\uff0c\u800c\u4e0d\u662f\u7531\u4e8e\u5b83\u7528\u5b8c\u4e86\u9700\u8981\u8fed\u4ee3\u7684\u4e1c\u897f\u3002\u8fd9\u5e26\u6765\u4e86\u4e00\u6574\u6279\u5f88\u96be\u8ffd\u8e2a\u7684\u4ee3\u7801\u7f3a\u9677\u3002 \u5728Python 3.7\u4e2d\uff0c\u751f\u6210\u5668\u5f15\u53d1StopIteration\u5f02\u5e38\u540e\uff0cStopIteration\u5f02\u5e38\u5c06\u88ab\u8f6c\u6362\u6210RuntimeError\u5f02\u5e38\uff0c\u90a3\u6837\u5b83\u4e0d\u4f1a\u6084\u6084\u4e00\u8def\u5f71\u54cd\u5e94\u7528\u7a0b\u5e8f\u7684\u5806\u6808\u6846\u67b6\u3002\u8fd9\u610f\u5473\u7740\u5982\u4f55\u5904\u7406\u751f\u6210\u5668\u7684\u884c\u4e3a\u65b9\u9762\u4e0d\u592a\u654f\u9510\u7684\u4e00\u4e9b\u7a0b\u5e8f\u4f1a\u5728Python 3.7\u4e2d\u629b\u51faRuntimeError\u3002\u800c\u5728Python 3.6\u4e2d\uff0c\u8fd9\u79cd\u884c\u4e3a\u751f\u6210\u4e00\u4e2a\u5f03\u7528\u8b66\u544a\uff1b\u5728Python 3.7\u4e2d\uff0c\u5b83\u751f\u6210\u4e00\u4e2a\u5b8c\u6574\u7684\u9519\u8bef\u3002 \u4e00\u4e2a\u7b80\u6613\u7684\u65b9\u6cd5\u662f\u4f7f\u7528try/except\u4ee3\u7801\u6bb5\uff0c\u5728StopIteration\u4f20\u64ad\u5230\u751f\u6210\u5668\u7684\u5916\u9762\u6355\u83b7\u5b83\u3002\u66f4\u597d\u7684\u89e3\u51b3\u65b9\u6848\u662f\u91cd\u65b0\u8003\u8651\u5982\u4f55\u6784\u5efa\u751f\u6210\u5668\u2015\u2015\u6bd4\u5982\u8bf4\uff0c\u4f7f\u7528return\u8bed\u53e5\u6765\u7ec8\u6b62\u751f\u6210\u5668\uff0c\u800c\u4e0d\u662f\u624b\u52a8\u5f15\u53d1StopIteration\u3002\u60f3\u8fdb\u4e00\u6b65\u4e86\u89e3\u5982\u4f55\u5728\u73b0\u6709\u4ee3\u7801\u4e2d\u8865\u6551\u8fd9\u4e2a\u95ee\u9898\uff0c\u5982\u4f55\u5728\u65b0\u4ee3\u7801\u4e2d\u9632\u8303\u8be5\u95ee\u9898\uff0c\u8bf7\u53c2\u9605 PEP 469 \u3002 Python\u5f00\u53d1\u6a21\u5f0f \u00b6 Python\u89e3\u91ca\u5668\u65b0\u7684\u547d\u4ee4\u884c\u5f00\u5173\uff1a-X\u8ba9\u5f00\u53d1\u4eba\u5458\u53ef\u4ee5\u4e3a\u89e3\u91ca\u5668\u8bbe\u7f6e\u8bb8\u591a\u4f4e\u7ea7\u9009\u9879\u3002\u5728Python 3.7\u4e2d\uff0c\u9009\u9879-X dev\u542f\u7528\u201c\u5f00\u53d1\u6a21\u5f0f\u201d\uff0c\u8fd9\u79cd\u8fd0\u884c\u65f6\u68c0\u67e5\u673a\u5236\u901a\u5e38\u5bf9\u6027\u80fd\u6709\u91cd\u5927\u5f71\u54cd\uff0c\u4f46\u5728\u8c03\u8bd5\u8fc7\u7a0b\u4e2d\u5bf9\u5f00\u53d1\u4eba\u5458\u5f88\u6709\u7528\u3002 -X dev\u6fc0\u6d3b\u7684\u9009\u9879\u5305\u62ec\uff1a * asyncio\u6a21\u5757\u7684\u8c03\u8bd5\u6a21\u5f0f\u3002\u8fd9\u4e3a\u5f02\u6b65\u64cd\u4f5c\u63d0\u4f9b\u4e86\u66f4\u8be6\u7ec6\u7684\u65e5\u5fd7\u8bb0\u5f55\u548c\u5f02\u5e38\u5904\u7406\uff0c\u800c\u5f02\u5e38\u64cd\u4f5c\u53ef\u80fd\u5f88\u96be\u8c03\u8bd5\u6216\u63a8\u7406\u3002 * \u9762\u5411\u5185\u5b58\u5206\u914d\u5668\u7684\u8c03\u8bd5\u94a9\u5b50\u3002\u8fd9\u5bf9\u4e8e\u7f16\u5199CPython\u6269\u5c55\u4ef6\u7684\u90a3\u4e9b\u4eba\u5f88\u6709\u7528\u3002\u5b83\u80fd\u591f\u5b9e\u73b0\u66f4\u660e\u786e\u7684\u8fd0\u884c\u65f6\u68c0\u67e5\uff0c\u4e86\u89e3CPython\u5982\u4f55\u5728\u5185\u90e8\u5206\u914d\u5185\u5b58\u548c\u91ca\u653e\u5185\u5b58\u3002 * \u542f\u7528faulthandler\u6a21\u5757\uff0c\u90a3\u6837\u53d1\u751f\u5d29\u6e83\u540e\uff0ctraceback\u59cb\u7ec8\u8f6c\u50a8\u51fa\u53bb\u3002 \u5177\u6709\u7eb3\u79d2\u5206\u8fa8\u7387\u7684Python\u65f6\u95f4\u51fd\u6570 \u00b6 Python 3.7\u4e2d\u4e00\u7c7b\u65b0\u7684\u65f6\u95f4\u51fd\u6570\u8fd4\u56de\u7eb3\u79d2\u7cbe\u5ea6\u7684\u65f6\u95f4\u503c\u3002\u5c3d\u7ba1Python\u662f\u4e00\u79cd\u89e3\u91ca\u578b\u8bed\u8a00\uff0c\u4f46\u662fPython\u7684\u6838\u5fc3\u5f00\u53d1\u4eba\u5458\u7ef4\u514b\u591a\u2022\u65af\u5ef7\u7eb3\uff08Victor Stinner\uff09\u4e3b\u5f20\u62a5\u544a\u7eb3\u79d2\u7cbe\u5ea6\u7684\u65f6\u95f4\u3002\u6700\u4e3b\u8981\u7684\u539f\u56e0\u662f\uff0c\u5728\u5904\u7406\u8f6c\u6362\u5176\u4ed6\u7a0b\u5e8f\uff08\u6bd4\u5982\u6570\u636e\u5e93\uff09\u8bb0\u5f55\u7684\u65f6\u95f4\u503c\u65f6\uff0c\u53ef\u4ee5\u907f\u514d\u4e22\u5931\u7cbe\u5ea6\u3002 \u65b0\u7684\u65f6\u95f4\u51fd\u6570\u4f7f\u7528\u540e\u7f00_ns\u3002\u6bd4\u5982\u8bf4\uff0ctime.process_time()\u7684\u7eb3\u79d2\u7248\u672c\u662ftime.process_time_ns()\u3002\u8bf7\u6ce8\u610f\uff0c\u5e76\u975e\u6240\u6709\u7684\u65f6\u95f4\u51fd\u6570\u90fd\u6709\u5bf9\u5e94\u7684\u7eb3\u79d2\u7248\u672c\uff0c\u56e0\u4e3a\u5176\u4e2d\u4e00\u4e9b\u65f6\u95f4\u51fd\u6570\u5e76\u4e0d\u5f97\u76ca\u4e8e\u6b64\u3002 Python UTF-8\u6a21\u5f0f \u00b6 Python\u4e00\u76f4\u652f\u6301UTF-8\uff0c\u4ee5\u4fbf\u8f7b\u677e\u5904\u7406\u5b57\u7b26\u4e32\u548c\u6587\u672c\u3002\u4f46\u662f\u5468\u56f4\u73af\u5883\u4e2d\u7684\u8bed\u8a00\u73af\u5883\uff08locale\uff09\u6709\u65f6\u4ecd\u662fASCII\uff0c\u800c\u4e0d\u662fUTF-8\uff0c\u68c0\u6d4b\u8bed\u8a00\u73af\u5883\u7684\u673a\u5236\u5e76\u4e0d\u603b\u662f\u5f88\u53ef\u9760\u3002 Python 3.7\u6dfb\u52a0\u4e86\u6240\u8c13\u7684\u201cUTF-8\u6a21\u5f0f\u201d\uff0c\u53ef\u901a\u8fc7-X\u547d\u4ee4\u884c\u5f00\u5173\u542f\u7528\u8be5\u6a21\u5f0f\uff0c\u8be5\u6a21\u5f0f\u5047\u8bbeUTF-8\u662f\u73af\u5883\u63d0\u4f9b\u7684\u8bed\u8a00\u73af\u5883\u3002\u5728POSIX\u8bed\u8a00\u73af\u5883\u4e2d\uff0cUTF-8\u6a21\u5f0f\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u5df2\u88ab\u542f\u7528\uff0c\u4f46\u5728\u5176\u4ed6\u4f4d\u7f6e\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u88ab\u7981\u7528\uff0c\u4ee5\u514d\u7834\u574f\u5411\u540e\u517c\u5bb9\u3002\u503c\u5f97\u8bd5\u4e00\u8bd5\u5728\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u5f00\u542fUTF-8\u6a21\u5f0f\uff0c\u4f46\u4e0d\u5e94\u8be5\u5728\u751f\u4ea7\u73af\u5883\u4e0b\u542f\u7528\u5b83\uff0c\u9664\u975e\u4f60\u786e\u4fe1Python\u4e0e\u5468\u56f4\u73af\u5883\u7684\u6240\u6709\u4ea4\u4e92\u90fd\u4f7f\u7528UTF-8\u3002 \u5185\u7f6ebreakpoint()\u51fd\u6570 \u00b6 Python\u968f\u5e26\u5185\u7f6e\u7684\u8c03\u8bd5\u5668\uff0c\u4e0d\u8fc7\u5b83\u4e5f\u53ef\u4ee5\u8fde\u5165\u5230\u7b2c\u4e09\u65b9\u8c03\u8bd5\u5de5\u5177\uff0c\u53ea\u8981\u5b83\u4eec\u80fd\u4e0ePython\u7684\u5185\u90e8\u8c03\u8bd5API\u8fdb\u884c\u5bf9\u8bdd\u3002\u4e0d\u8fc7\uff0cPython\u5230\u76ee\u524d\u4e3a\u6b62\u7f3a\u5c11\u4e00\u79cd\u4ecePython\u5e94\u7528\u7a0b\u5e8f\u91cc\u9762\u4ee5\u7f16\u7a0b\u65b9\u5f0f\u89e6\u53d1\u8c03\u8bd5\u5668\u7684\u6807\u51c6\u5316\u65b9\u6cd5\u3002 Python 3.7\u6dfb\u52a0\u4e86breakpoint()\uff0c\u8fd9\u4e2a\u5185\u7f6e\u51fd\u6570\u4f7f\u5f97\u51fd\u6570\u88ab\u8c03\u7528\u65f6\uff0c\u8ba9\u6267\u884c\u5207\u6362\u5230\u8c03\u8bd5\u5668\u3002\u76f8\u5e94\u7684\u8c03\u8bd5\u5668\u4e0d\u4e00\u5b9a\u662fPython\u81ea\u5df1\u7684pdb\uff0c\u53ef\u4ee5\u662f\u4e4b\u524d\u88ab\u8bbe\u4e3a\u9996\u9009\u8c03\u8bd5\u5668\u7684\u4efb\u4f55\u8c03\u8bd5\u5668\u3002\u4ee5\u524d\uff0c\u8c03\u8bd5\u5668\u4e0d\u5f97\u4e0d\u624b\u52a8\u8bbe\u7f6e\uff0c\u7136\u540e\u8c03\u7528\uff0c\u56e0\u800c\u4f7f\u4ee3\u7801\u66f4\u5197\u957f\u3002\u800c\u6709\u4e86breakpoint()\uff0c\u53ea\u9700\u4e00\u4e2a\u547d\u4ee4\u5373\u53ef\u8c03\u7528\u8c03\u8bd5\u5668\uff0c\u5e76\u4e14\u8ba9\u8bbe\u7f6e\u8c03\u8bd5\u5668\u548c\u8c03\u7528\u8c03\u8bd5\u5668\u6cfe\u6e2d\u5206\u660e\u3002 \u5176\u4ed6\u65b0\u7684Python 3.7\u529f\u80fd \u00b6 Python 3.7\u6709\u53e6\u5916\u7684\u4f17\u591a\u53d8\u66f4\u3002\u4e0b\u9762\u662f\u4f60\u5728\u4f7f\u7528\u6700\u65b0\u7248\u672c\u7684Python\u65f6\u53ef\u80fd\u4f1a\u9047\u5230\u7684\u5176\u4ed6\u4e00\u4e9b\u529f\u80fd\uff1a \u9762\u5411\u7ebf\u7a0b\u672c\u5730\u5b58\u50a8\u652f\u6301\u7684C-API PEP 539 \u4e2d\u63cf\u8ff0\uff0c\u7ebf\u7a0b\u7279\u5b9a\u5b58\u50a8\uff08TSS\uff09API\u53d6\u4ee3\u4e86\u8001\u5f0f\u7684\u7ebf\u7a0b\u672c\u5730\u5b58\u50a8\uff08TLS\uff09API\u3002\u5982\u679c\u8c01\u5b9a\u5236CPython\u6216\u7f16\u5199\u4f7f\u7528\u89e3\u91ca\u5668\u7684\u5185\u90e8API\u7684CPython\u6269\u5c55\u4ef6\uff0c\u5c31\u8981\u660e\u767d\u8fd9\u4e00\u70b9\u3002 \u6a21\u5757\u5c5e\u6027\u8bbf\u95ee\u5b9a\u5236 \u4f60\u5728Python\u7a0b\u5e8f\u4e2d\u521b\u5efa\u6a21\u5757\u65f6\uff0c\u73b0\u5728\u53ef\u4ee5\u9488\u5bf9\u8be5\u6a21\u5757\u7684\u5b9e\u4f8b\u5b9a\u5236\u5c5e\u6027\u8bbf\u95ee\u7684\u884c\u4e3a\u3002\u4e3a\u6b64\uff0c\u53ea\u9700\u8981\u5728\u6a21\u5757\u91cc\u9762\u521b\u5efa\u4e00\u4e2a__getattr__\u65b9\u6cd5\uff0c\u5c31\u8ddf\u4e3a\u4e00\u4e2a\u7c7b\u521b\u5efa\u65b9\u6cd5\u90a3\u6837\u3002\u8fd9\u6837\u4e00\u6765\uff0c\u5c31\u53ef\u4ee5\u5bf9\u8bf8\u5982\u8bf7\u6c42\u6a21\u5757\u91cc\u9762\u4e0d\u5b58\u5728\u7684\u51fd\u6570\u6216\u65b9\u6cd5\u4e4b\u7c7b\u7684\u64cd\u4f5c\u8fdb\u884c\u62e6\u622a\u3001\u6807\u8bb0\u6216\u4ee3\u7406\u3002 Python importlib\u8d44\u6e90 importlib\u6a21\u5757\u73b0\u5728\u53ef\u7528\u6765\u8bfb\u53d6\u201c\u8d44\u6e90\u201d\uff0c\u5373\u968fPython\u5e94\u7528\u7a0b\u5e8f\u4e00\u5e76\u4ea4\u4ed8\u7684\u4e8c\u8fdb\u5236\u5de5\u4ef6\uff0c\u6bd4\u5982\u6570\u636e\u6587\u4ef6\u3002\u8fd9\u6837\u4e00\u6765\uff0c\u5f00\u53d1\u4eba\u5458\u53ef\u4ee5\u901a\u8fc7importlib\u7684\u62bd\u8c61\u6765\u8bbf\u95ee\u90a3\u4e9b\u6587\u4ef6\uff0c\u6240\u4ee5\u5b83\u4eec\u5b58\u50a8\u5728\u7cfb\u7edf\u4e0a\u67d0\u4e2a\u5730\u65b9\u7684.zip\u6587\u4ef6\u4e2d\u8fd8\u662f\u5b58\u50a8\u5728\u76ee\u5f55\u4e2d\u5e76\u4e0d\u91cd\u8981\u3002 \u5e95\u5c42\u4f18\u5316 \u73b0\u5728\u8bb8\u591a\u5355\u72ec\u7684\u64cd\u4f5c\u66f4\u5feb\u901f\u4e86\uff1a \u7531\u4e8e\u65b0\u7684\u64cd\u4f5c\u7801\uff0c\u65b9\u6cd5\u8c03\u7528\u8d77\u6765\u6700\u591a\u5feb20%\u3002\uff08\u9664\u975e\u4f60\u5728\u7f16\u5199\u76f4\u63a5\u5904\u7406Python\u64cd\u4f5c\u7801\u7684\u4ee3\u7801\uff0c\u5426\u5219\u4e0d\u9700\u8981\u62c5\u5fc3\u7531\u6b64\u5e26\u6765\u7684\u5f71\u54cd\u3002\uff09 \u6b63\u5219\u8868\u8fbe\u5f0f\u4e2d\u4e0d\u533a\u5206\u5927\u5c0f\u5199\u7684\u5339\u914d\u901f\u5ea6\u66f4\u5feb\u4e86\uff0c\u6709\u65f6\u8981\u5feb20\u500d\u3002 \u6e90\u4ee3\u7801\u4e2d\u7684\u4e00\u4e9b\u5e38\u91cf\u73b0\u5728\u53ef\u4ee5\u66f4\u9ad8\u6548\u5730\u4f18\u5316\u3002","title":"Python\u7279\u6027"},{"location":"python/feature/#python","text":"","title":"Python\u65b0\u7279\u6027"},{"location":"python/feature/#python2x3x","text":"Python\u76843\u200b\u200b.0\u7248\u672c\uff0c\u5e38\u88ab\u79f0\u4e3aPython 3000\uff0c\u6216\u7b80\u79f0Py3k\u3002\u76f8\u5bf9\u4e8ePython\u7684\u65e9\u671f\u7248\u672c\uff0c\u8fd9\u662f\u4e00\u4e2a\u8f83\u5927\u7684\u5347\u7ea7\u3002 \u4e3a\u4e86\u4e0d\u5e26\u5165\u8fc7\u591a\u7684\u7d2f\u8d58\uff0cPython 3.0\u5728\u8bbe\u8ba1\u7684\u65f6\u5019\u6ca1\u6709\u8003\u8651\u5411\u4e0b\u76f8\u5bb9\u3002 \u8bb8\u591a\u9488\u5bf9\u65e9\u671fPython\u7248\u672c\u8bbe\u8ba1\u7684\u7a0b\u5f0f\u90fd\u65e0\u6cd5\u5728Python 3.0\u4e0a\u6b63\u5e38\u6267\u884c\u3002 \u4e3a\u4e86\u7167\u987e\u73b0\u6709\u7a0b\u5f0f\uff0cPython 2.6\u4f5c\u4e3a\u4e00\u4e2a\u8fc7\u6e21\u7248\u672c\uff0c\u57fa\u672c\u4f7f\u7528\u4e86Python 2.x\u7684\u8bed\u6cd5\u548c\u5e93\uff0c\u540c\u65f6\u8003\u8651\u4e86\u5411Python 3.0\u7684\u8fc1\u79fb\uff0c\u5141\u8bb8\u4f7f\u7528\u90e8\u5206Python 3.0\u7684\u8bed\u6cd5\u4e0e\u51fd\u6570\u3002 \u65b0\u7684Python\u7a0b\u5f0f\u5efa\u8bae\u4f7f\u7528Python 3.0\u7248\u672c\u7684\u8bed\u6cd5\u3002 \u9664\u975e\u6267\u884c\u73af\u5883\u65e0\u6cd5\u5b89\u88c5Python 3.0\u6216\u8005\u7a0b\u5f0f\u672c\u8eab\u4f7f\u7528\u4e86\u4e0d\u652f\u63f4Python 3.0\u7684\u7b2c\u4e09\u65b9\u5e93\u3002\u76ee\u524d\u4e0d\u652f\u63f4Python 3.0\u7684\u7b2c\u4e09\u65b9\u5e93\u6709Twisted, py2exe, PIL\u7b49\u3002 \u5927\u591a\u6570\u7b2c\u4e09\u65b9\u5e93\u90fd\u6b63\u5728\u52aa\u529b\u5730\u76f8\u5bb9Python 3.0\u7248\u672c\u3002\u5373\u4f7f\u65e0\u6cd5\u7acb\u5373\u4f7f\u7528Python 3.0\uff0c\u4e5f\u5efa\u8bae\u7f16\u5199\u76f8\u5bb9Python 3.0\u7248\u672c\u7684\u7a0b\u5f0f\uff0c\u7136\u540e\u4f7f\u7528Python 2.6, Python 2.7\u6765\u6267\u884c\u3002 Python 3.0\u7684\u53d8\u5316\u4e3b\u8981\u5728\u4ee5\u4e0b\u51e0\u4e2a\u65b9\u9762:","title":"Python2.x\u4e0e3\u200b\u200b.x\u7248\u672c\u533a\u522b"},{"location":"python/feature/#print","text":"print\u8bed\u53e5\u6ca1\u6709\u4e86\uff0c\u53d6\u800c\u4ee3\u4e4b\u7684\u662fprint()\u51fd\u6570\u3002 Python 2.6\u4e0ePython 2.7\u90e8\u5206\u5730\u652f\u6301\u8fd9\u79cd\u5f62\u5f0f\u7684print\u8bed\u6cd5\u3002\u5728Python 2.6\u4e0ePython 2.7\u91cc\u9762\uff0c\u4ee5\u4e0b\u4e09\u79cd\u5f62\u5f0f\u662f\u7b49\u4ef7\u7684\uff1a print \"fish\" print ( \"fish\" ) #\u6ce8\u610fprint\u540e\u9762\u6709\u4e2a\u7a7a\u683c print ( \"fish\" ) #print()\u4e0d\u80fd\u5e26\u6709\u4efb\u4f55\u5176\u5b83\u53c2\u6570 \u7136\u800c\uff0cPython 2.6\u5b9e\u9645\u5df2\u7ecf\u652f\u6301\u65b0\u7684print()\u8bed\u6cd5\uff1a from __future__ import print_function print ( \"fish\" , \"panda\" , sep = ', ' )","title":"print \u51fd\u6570"},{"location":"python/feature/#unicode","text":"Python 2 \u6709 ASCII str() \u7c7b\u578b\uff0cunicode() \u662f\u5355\u72ec\u7684\uff0c\u4e0d\u662f byte \u7c7b\u578b\u3002 \u73b0\u5728\uff0c \u5728 Python 3\uff0c\u6211\u4eec\u6700\u7ec8\u6709\u4e86 Unicode (utf-8) \u5b57\u7b26\u4e32\uff0c\u4ee5\u53ca\u4e00\u4e2a\u5b57\u8282\u7c7b\uff1abyte \u548c bytearrays\u3002 \u7531\u4e8e Python3.X \u6e90\u7801\u6587\u4ef6\u9ed8\u8ba4\u4f7f\u7528utf-8\u7f16\u7801\uff0c\u8fd9\u5c31\u4f7f\u5f97\u4ee5\u4e0b\u4ee3\u7801\u662f\u5408\u6cd5\u7684\uff1a >>> \u4e2d\u56fd = 'china' >>> print ( \u4e2d\u56fd ) china Python 2.x >>> str = \"\u6211\u7231\u5317\u4eac\u5929\u5b89\u95e8\" >>> str ' \\xe6\\x88\\x91\\xe7\\x88\\xb1\\xe5\\x8c\\x97\\xe4\\xba\\xac\\xe5\\xa4\\xa9\\xe5\\xae\\x89\\xe9\\x97\\xa8 ' >>> str = u \"\u6211\u7231\u5317\u4eac\u5929\u5b89\u95e8\" >>> str u ' \\u6211\\u7231\\u5317\\u4eac\\u5929\\u5b89\\u95e8 ' Python 3.x >>> str = \"\u6211\u7231\u5317\u4eac\u5929\u5b89\u95e8\" >>> str '\u6211\u7231\u5317\u4eac\u5929\u5b89\u95e8'","title":"Unicode"},{"location":"python/feature/#_1","text":"Python\u4e2d\u7684\u9664\u6cd5\u8f83\u5176\u5b83\u8bed\u8a00\u663e\u5f97\u975e\u5e38\u9ad8\u7aef\uff0c\u6709\u5957\u5f88\u590d\u6742\u7684\u89c4\u5219\u3002Python\u4e2d\u7684\u9664\u6cd5\u6709\u4e24\u4e2a\u8fd0\u7b97\u7b26\uff0c/\u548c// \u9996\u5148\u6765\u8bf4/\u9664\u6cd5: \u5728python 2.x\u4e2d/\u9664\u6cd5\u5c31\u8ddf\u6211\u4eec\u719f\u6089\u7684\u5927\u591a\u6570\u8bed\u8a00\uff0c\u6bd4\u5982Java\u554aC\u554a\u5dee\u4e0d\u591a\uff0c\u6574\u6570\u76f8\u9664\u7684\u7ed3\u679c\u662f\u4e00\u4e2a\u6574\u6570\uff0c\u628a\u5c0f\u6570\u90e8\u5206\u5b8c\u5168\u5ffd\u7565\u6389\uff0c\u6d6e\u70b9\u6570\u9664\u6cd5\u4f1a\u4fdd\u7559\u5c0f\u6570\u70b9\u7684\u90e8\u5206\u5f97\u5230\u4e00\u4e2a\u6d6e\u70b9\u6570\u7684\u7ed3\u679c\u3002 \u5728python 3.x\u4e2d/\u9664\u6cd5\u4e0d\u518d\u8fd9\u4e48\u505a\u4e86\uff0c\u5bf9\u4e8e\u6574\u6570\u4e4b\u95f4\u7684\u76f8\u9664\uff0c\u7ed3\u679c\u4e5f\u4f1a\u662f\u6d6e\u70b9\u6570\u3002 Python 2.x: >>> 1 / 2 0 >>> 1.0 / 2.0 0.5 Python 3.x: >>> 1 / 2 0.5 \u800c\u5bf9\u4e8e//\u9664\u6cd5\uff0c\u8fd9\u79cd\u9664\u6cd5\u53eb\u505afloor\u9664\u6cd5\uff0c\u4f1a\u5bf9\u9664\u6cd5\u7684\u7ed3\u679c\u81ea\u52a8\u8fdb\u884c\u4e00\u4e2afloor\u64cd\u4f5c\uff0c\u5728python 2.x\u548cpython 3.x\u4e2d\u662f\u4e00\u81f4\u7684\u3002 python 2.x: >>> - 1 // 2 - 1 python 3.x: >>> - 1 // 2 - 1 \u6ce8\u610f\u7684\u662f\u5e76\u4e0d\u662f\u820d\u5f03\u5c0f\u6570\u90e8\u5206\uff0c\u800c\u662f\u6267\u884c floor \u64cd\u4f5c\uff0c\u5982\u679c\u8981\u622a\u53d6\u6574\u6570\u90e8\u5206\uff0c\u90a3\u4e48\u9700\u8981\u4f7f\u7528 math \u6a21\u5757\u7684 trunc \u51fd\u6570 python 3.x: >>> import math >>> math . trunc ( 1 / 2 ) 0 >>> math . trunc ( - 1 / 2 ) 0","title":"\u9664\u6cd5\u8fd0\u7b97"},{"location":"python/feature/#_2","text":"\u5728 Python 3 \u4e2d\u5904\u7406\u5f02\u5e38\u4e5f\u8f7b\u5fae\u7684\u6539\u53d8\u4e86\uff0c\u5728 Python 3 \u4e2d\u6211\u4eec\u73b0\u5728\u4f7f\u7528 as \u4f5c\u4e3a\u5173\u952e\u8bcd\u3002 \u6355\u83b7\u5f02\u5e38\u7684\u8bed\u6cd5\u7531 except exc, var \u6539\u4e3a except exc as var\u3002 \u4f7f\u7528\u8bed\u6cd5except (exc1, exc2) as var\u53ef\u4ee5\u540c\u65f6\u6355\u83b7\u591a\u79cd\u7c7b\u522b\u7684\u5f02\u5e38\u3002 Python 2.6\u5df2\u7ecf\u652f\u6301\u8fd9\u4e24\u79cd\u8bed\u6cd5\u3002 1. \u57282.x\u65f6\u4ee3\uff0c\u6240\u6709\u7c7b\u578b\u7684\u5bf9\u8c61\u90fd\u662f\u53ef\u4ee5\u88ab\u76f4\u63a5\u629b\u51fa\u7684\uff0c\u57283.x\u65f6\u4ee3\uff0c\u53ea\u6709\u7ee7\u627f\u81eaBaseException\u7684\u5bf9\u8c61\u624d\u53ef\u4ee5\u88ab\u629b\u51fa\u3002 2. 2.x raise\u8bed\u53e5\u4f7f\u7528\u9017\u53f7\u5c06\u629b\u51fa\u5bf9\u8c61\u7c7b\u578b\u548c\u53c2\u6570\u5206\u5f00\uff0c3.x\u53d6\u6d88\u4e86\u8fd9\u79cd\u5947\u8469\u7684\u5199\u6cd5\uff0c\u76f4\u63a5\u8c03\u7528\u6784\u9020\u51fd\u6570\u629b\u51fa\u5bf9\u8c61\u5373\u53ef\u3002 \u57282.x\u65f6\u4ee3\uff0c\u5f02\u5e38\u5728\u4ee3\u7801\u4e2d\u9664\u4e86\u8868\u793a\u7a0b\u5e8f\u9519\u8bef\uff0c\u8fd8\u7ecf\u5e38\u505a\u4e00\u4e9b\u666e\u901a\u63a7\u5236\u7ed3\u6784\u5e94\u8be5\u505a\u7684\u4e8b\u60c5\uff0c\u57283.x\u4e2d\u53ef\u4ee5\u770b\u51fa\uff0c\u8bbe\u8ba1\u8005\u8ba9\u5f02\u5e38\u53d8\u7684\u66f4\u52a0\u4e13\u4e00\uff0c\u53ea\u6709\u5728\u9519\u8bef\u53d1\u751f\u7684\u60c5\u51b5\u624d\u80fd\u53bb\u7528\u5f02\u5e38\u6355\u83b7\u8bed\u53e5\u6765\u5904\u7406\u3002","title":"\u5f02\u5e38"},{"location":"python/feature/#xrange","text":"\u5728 Python 2 \u4e2d xrange() \u521b\u5efa\u8fed\u4ee3\u5bf9\u8c61\u7684\u7528\u6cd5\u662f\u975e\u5e38\u6d41\u884c\u7684\u3002\u6bd4\u5982\uff1a for \u5faa\u73af\u6216\u8005\u662f\u5217\u8868/\u96c6\u5408/\u5b57\u5178\u63a8\u5bfc\u5f0f\u3002 \u8fd9\u4e2a\u8868\u73b0\u5341\u5206\u50cf\u751f\u6210\u5668\uff08\u6bd4\u5982\u3002\"\u60f0\u6027\u6c42\u503c\"\uff09\u3002\u4f46\u662f\u8fd9\u4e2a xrange-iterable \u662f\u65e0\u7a77\u7684\uff0c\u610f\u5473\u7740\u4f60\u53ef\u4ee5\u65e0\u9650\u904d\u5386\u3002 \u7531\u4e8e\u5b83\u7684\u60f0\u6027\u6c42\u503c\uff0c\u5982\u679c\u4f60\u4e0d\u5f97\u4ec5\u4ec5\u4e0d\u904d\u5386\u5b83\u4e00\u6b21\uff0cxrange() \u51fd\u6570 \u6bd4 range() \u66f4\u5feb\uff08\u6bd4\u5982 for \u5faa\u73af\uff09\u3002\u5c3d\u7ba1\u5982\u6b64\uff0c\u5bf9\u6bd4\u8fed\u4ee3\u4e00\u6b21\uff0c\u4e0d\u5efa\u8bae\u4f60\u91cd\u590d\u8fed\u4ee3\u591a\u6b21\uff0c\u56e0\u4e3a\u751f\u6210\u5668\u6bcf\u6b21\u90fd\u4ece\u5934\u5f00\u59cb\u3002 \u5728 Python 3 \u4e2d\uff0crange() \u662f\u50cf xrange() \u90a3\u6837\u5b9e\u73b0\u4ee5\u81f3\u4e8e\u4e00\u4e2a\u4e13\u95e8\u7684 xrange() \u51fd\u6570\u90fd\u4e0d\u518d\u5b58\u5728\uff08\u5728 Python 3 \u4e2d xrange() \u4f1a\u629b\u51fa\u547d\u540d\u5f02\u5e38\uff09\u3002 import timeit n = 10000 def test_range ( n ): return for i in range ( n ): pass def test_xrange ( n ): for i in xrange ( n ): pass Python 2 print 'Python' , python_version () print ' \\n timing range()' % timeit test_range ( n ) print ' \\n\\n timing xrange()' % timeit test_xrange ( n ) #Python 2.7.6 timing range () 1000 loops , best of 3 : 433 \u00b5 s per loop timing xrange () 1000 loops , best of 3 : 350 \u00b5 s per loop Python 3 print ( 'Python' , python_version ()) print ( ' \\n timing range()' ) % timeit test_range ( n ) #Python 3.4.1 timing range () 1000 loops , best of 3 : 520 \u00b5 s per loop print ( xrange ( 10 )) --------------------------------------------------------------------------- NameError Traceback ( most recent call last ) < ipython - input - 5 - 5 d8f9b79ea70 > in < module > () ----> 1 print ( xrange ( 10 )) NameError : name 'xrange' is not defined","title":"xrange"},{"location":"python/feature/#_3","text":"\u516b\u8fdb\u5236\u6570\u5fc5\u987b\u5199\u62100o777\uff0c\u539f\u6765\u7684\u5f62\u5f0f0777\u4e0d\u80fd\u7528\u4e86\uff1b\u4e8c\u8fdb\u5236\u5fc5\u987b\u5199\u62100b111\u3002 \u65b0\u589e\u4e86\u4e00\u4e2abin()\u51fd\u6570\u7528\u4e8e\u5c06\u4e00\u4e2a\u6574\u6570\u8f6c\u6362\u6210\u4e8c\u8fdb\u5236\u5b57\u4e32\u3002 Python 2.6\u5df2\u7ecf\u652f\u6301\u8fd9\u4e24\u79cd\u8bed\u6cd5\u3002 \u5728Python 3.x\u4e2d\uff0c\u8868\u793a\u516b\u8fdb\u5236\u5b57\u9762\u91cf\u7684\u65b9\u5f0f\u53ea\u6709\u4e00\u79cd\uff0c\u5c31\u662f0o1000\u3002 python 2.x >>> 0 o1000 512 >>> 01000 512 python 3.x >>> 01000 File \"<stdin>\" , line 1 01000 ^ SyntaxError : invalid token >>> 0 o1000 512","title":"\u516b\u8fdb\u5236\u5b57\u9762\u91cf\u8868\u793a"},{"location":"python/feature/#_4","text":"Python 2.x\u4e2d\u4e0d\u7b49\u4e8e\u6709\u4e24\u79cd\u5199\u6cd5 != \u548c <> Python 3.x\u4e2d\u53bb\u6389\u4e86<>, \u53ea\u6709!=\u4e00\u79cd\u5199\u6cd5\uff0c\u8fd8\u597d\uff0c\u6211\u4ece\u6765\u6ca1\u6709\u4f7f\u7528<>\u7684\u4e60\u60ef","title":"\u4e0d\u7b49\u8fd0\u7b97\u7b26"},{"location":"python/feature/#repr","text":"Python 2.x \u4e2d\u53cd\u5f15\u53f7 \u76f8\u5f53\u4e8erepr\u51fd\u6570\u7684\u4f5c\u7528 Python 3.x \u4e2d\u53bb\u6389\u4e86 \u8fd9\u79cd\u5199\u6cd5\uff0c\u53ea\u5141\u8bb8\u4f7f\u7528repr\u51fd\u6570\uff0c\u8fd9\u6837\u505a\u7684\u76ee\u7684\u662f\u4e3a\u4e86\u4f7f\u4ee3\u7801\u770b\u4e0a\u53bb\u66f4\u6e05\u6670\u4e48\uff1f\u4e0d\u8fc7\u6211\u611f\u89c9\u7528repr\u7684\u673a\u4f1a\u5f88\u5c11\uff0c\u4e00\u822c\u53ea\u5728debug\u7684\u65f6\u5019\u624d\u7528\uff0c\u591a\u6570\u65f6\u5019\u8fd8\u662f\u7528str\u51fd\u6570\u6765\u7528\u5b57\u7b26\u4e32\u63cf\u8ff0\u5bf9\u8c61\u3002 def sendMail ( from_ : str , to : str , title : str , body : str ) -> bool : pass","title":"\u53bb\u6389\u4e86repr\u8868\u8fbe\u5f0f``"},{"location":"python/feature/#pep8","text":"\u65e7\u7684\u540d\u5b57 \u65b0\u7684\u540d\u5b57 _winreg winreg ConfigParser configParaser copy_reg copyreg Queue queue SocketServer socketserver repr reprlib StringIO\u6a21\u5757\u73b0\u5728\u88ab\u5408\u5e76\u5230\u65b0\u7684io\u6a21\u7ec4\u5185\u3002 new, md5, gopherlib\u7b49\u6a21\u5757\u88ab\u5220\u9664\u3002 Python 2.6\u5df2\u7ecf\u652f\u63f4\u65b0\u7684io\u6a21\u7ec4\u3002 httplib, BaseHTTPServer, CGIHTTPServer, SimpleHTTPServer, Cookie, cookielib\u88ab\u5408\u5e76\u5230http\u5305\u5185\u3002 \u53d6\u6d88\u4e86exec\u8bed\u53e5\uff0c\u53ea\u5269\u4e0bexec()\u51fd\u6570\u3002 Python 2.6\u5df2\u7ecf\u652f\u63f4exec()\u51fd\u6570\u3002 ### \u6570\u636e\u7c7b\u578b 1. Py3.X\u53bb\u9664\u4e86long\u7c7b\u578b\uff0c\u73b0\u5728\u53ea\u6709\u4e00\u79cd\u6574\u578b\u2014\u2014int\uff0c\u4f46\u5b83\u7684\u884c\u4e3a\u5c31\u50cf2.X\u7248\u672c\u7684long 2. \u65b0\u589e\u4e86bytes\u7c7b\u578b\uff0c\u5bf9\u5e94\u4e8e2.X\u7248\u672c\u7684\u516b\u4f4d\u4e32\uff0c\u5b9a\u4e49\u4e00\u4e2abytes\u5b57\u9762\u91cf\u7684\u65b9\u6cd5\u5982\u4e0b\uff1a >>> b = b 'china' >>> type ( b ) < type 'bytes' > str\u5bf9\u8c61\u548cbytes\u5bf9\u8c61\u53ef\u4ee5\u4f7f\u7528.encode() (str -> bytes) or .decode() (bytes -> str)\u65b9\u6cd5\u76f8\u4e92\u8f6c\u5316\u3002 >>> s = b . decode () >>> s 'china' >>> b1 = s . encode () >>> b1 b 'china' 3. dict\u7684.keys()\u3001.items \u548c.values()\u65b9\u6cd5\u8fd4\u56de\u8fed\u4ee3\u5668\uff0c\u8fd4\u56de\u7684\u503c\u4e0d\u518d\u662flist\uff0c\u800c\u662fview\u3002\u6240\u4ee5dict.iterkeys(),dict.iteritems()\u548cdict.itervalues()\u88ab\u53bb\u6389\u4e86\u3002\u540c\u65f6\u53bb\u6389\u7684\u8fd8\u6709 dict.has_key()\uff0c\u7528 in\u66ff\u4ee3\u5b83\u5427 \u3002 ### \u6253\u5f00\u6587\u4ef6 \u539f\uff1a file ( ..... ) #\u6216 open ( ..... ) \u6539\u4e3a\u53ea\u80fd\u7528 open ( ..... ) ### \u4ece\u952e\u76d8\u5f55\u5165\u4e00\u4e2a\u5b57\u7b26\u4e32 \u5728python2.x\u4e2draw_input()\u548cinput( )\uff0c\u4e24\u4e2a\u51fd\u6570\u90fd\u5b58\u5728\uff0c\u5176\u4e2d\u533a\u522b\u4e3a\uff1a raw_input()---\u5c06\u6240\u6709\u8f93\u5165\u4f5c\u4e3a\u5b57\u7b26\u4e32\u770b\u5f85\uff0c\u8fd4\u56de\u5b57\u7b26\u4e32\u7c7b\u578b input()-----\u53ea\u80fd\u63a5\u6536\"\u6570\u5b57\"\u7684\u8f93\u5165\uff0c\u5728\u5bf9\u5f85\u7eaf\u6570\u5b57\u8f93\u5165\u65f6\u5177\u6709\u81ea\u5df1\u7684\u7279\u6027\uff0c\u5b83\u8fd4\u56de\u6240\u8f93\u5165\u7684\u6570\u5b57\u7684\u7c7b\u578b\uff08int, float \uff09 \u5728python3.x\u4e2draw_input()\u548cinput( )\u8fdb\u884c\u4e86\u6574\u5408\uff0c\u53bb\u9664\u4e86raw_input()\uff0c\u4ec5\u4fdd\u7559\u4e86input()\u51fd\u6570\uff0c\u5176\u63a5\u6536\u4efb\u610f\u4efb\u6027\u8f93\u5165\uff0c\u5c06\u6240\u6709\u8f93\u5165\u9ed8\u8ba4\u4e3a\u5b57\u7b26\u4e32\u5904\u7406\uff0c\u5e76\u8fd4\u56de\u5b57\u7b26\u4e32\u7c7b\u578b\u3002 \u539f: raw_input ( \"\u63d0\u793a\u4fe1\u606f\" ) \u6539\u4e3a: input ( \"\u63d0\u793a\u4fe1\u606f\" ) ### map\u3001filter \u548c reduce \u8fd9\u4e09\u4e2a\u51fd\u6570\u53f7\u79f0\u662f\u51fd\u6570\u5f0f\u7f16\u7a0b\u7684\u4ee3\u8868\u3002\u5728 Python3.x \u548c Python2.x \u4e2d\u4e5f\u6709\u4e86\u5f88\u5927\u7684\u5dee\u5f02\u3002 \u9996\u5148\u6211\u4eec\u5148\u7b80\u5355\u7684\u5728 Python2.x \u7684\u4ea4\u4e92\u4e0b\u8f93\u5165 map \u548c filter,\u770b\u5230\u5b83\u4eec\u4e24\u8005\u7684\u7c7b\u578b\u662f built-in function(\u5185\u7f6e\u51fd\u6570): >>> map < built - in function map > >>> filter < built - in function filter > >>> \u5b83\u4eec\u8f93\u51fa\u7684\u7ed3\u679c\u7c7b\u578b\u90fd\u662f\u5217\u8868: >>> map ( lambda x : x * 2 , [ 1 , 2 , 3 ]) [ 2 , 4 , 6 ] >>> filter ( lambda x : x % 2 == 0 , range ( 10 )) [ 0 , 2 , 4 , 6 , 8 ] >>> \u4f46\u662f\u5728Python 3.x\u4e2d\u5b83\u4eec\u5374\u4e0d\u662f\u8fd9\u4e2a\u6837\u5b50\u4e86\uff1a >>> map < class ' map '> >>> map ( print ,[ 1 , 2 , 3 ]) < map object at 0x10d8bd400 > >>> filter < class ' filter '> >>> filter ( lambda x : x % 2 == 0 , range ( 10 )) < filter object at 0x10d8bd3c8 > >>> \u9996\u5148\u5b83\u4eec\u4ece\u51fd\u6570\u53d8\u6210\u4e86\u7c7b\uff0c\u5176\u6b21\uff0c\u5b83\u4eec\u7684\u8fd4\u56de\u7ed3\u679c\u4e5f\u4ece\u5f53\u521d\u7684\u5217\u8868\u6210\u4e86\u4e00\u4e2a\u53ef\u8fed\u4ee3\u7684\u5bf9\u8c61, \u6211\u4eec\u5c1d\u8bd5\u7528 next \u51fd\u6570\u6765\u8fdb\u884c\u624b\u5de5\u8fed\u4ee3: >>> f = filter ( lambda x : x % 2 == 0 , range ( 10 )) >>> next ( f ) 0 >>> next ( f ) 2 >>> next ( f ) 4 >>> next ( f ) 6 >>> \u5bf9\u4e8e\u6bd4\u8f83\u9ad8\u7aef\u7684 reduce \u51fd\u6570\uff0c\u5b83\u5728 Python 3.x \u4e2d\u5df2\u7ecf\u4e0d\u5c5e\u4e8e built-in \u4e86\uff0c\u88ab\u632a\u5230 functools \u6a21\u5757\u5f53\u4e2d\u3002","title":"\u591a\u4e2a\u6a21\u5757\u88ab\u6539\u540d\uff08\u6839\u636ePEP8\uff09"},{"location":"python/feature/#python3","text":"\u65b0\u7684\u8bed\u6cd5\u7279\u6027\uff1a * \u683c\u5f0f\u5316\u5b57\u7b26\u4e32\u5b57\u9762\u503c * \u6570\u5b57\u5b57\u7b26\u4e32\u4e2d\u652f\u6301\u4e0b\u5212\u7ebf * \u53d8\u91cf\u6ce8\u91ca\u7684\u8bed\u6cd5 * \u5f02\u6b65\u751f\u6210\u5668 * \u5f02\u6b65\u5217\u8868\u63a8\u5bfc * \u7528\u7c7b\u5904\u7406\u6570\u636e\u65f6\u51cf\u5c11\u6837\u677f\u4ee3\u7801\u7684\u6570\u636e\u7c7b * \u4e00\u5904\u53ef\u80fd\u65e0\u6cd5\u5411\u540e\u517c\u5bb9\u7684\u53d8\u66f4\u6d89\u53ca\u5904\u7406\u751f\u6210\u5668\u4e2d\u7684\u5f02\u5e38 * \u9762\u5411\u89e3\u91ca\u5668\u7684\u201c\u5f00\u53d1\u6a21\u5f0f * \u5177\u6709\u7eb3\u79d2\u5206\u8fa8\u7387\u7684\u65f6\u95f4\u5bf9\u8c61 * \u73af\u5883\u4e2d\u9ed8\u8ba4\u4f7f\u7528UTF-8\u7f16\u7801\u7684UTF-8\u6a21\u5f0f * \u89e6\u53d1\u8c03\u8bd5\u5668\u7684\u4e00\u4e2a\u65b0\u7684\u5185\u7f6e\u51fd\u6570","title":"Python3.+\u65b0\u7279\u6027"},{"location":"python/feature/#_5","text":"\u6dfb\u52a0\u4e86\u4e00\u4e2a\u5b89\u5168\u6a21\u5757secrets\u5230\u6807\u51c6\u5e93\u4e2d","title":"\u65b0\u7684\u6a21\u5757"},{"location":"python/feature/#cpython","text":"\u5b57\u5178\u57fa\u4e8eRaymond Hettinger\u7684\u5efa\u8bae\u4f7f\u7528\u66f4\u7d27\u51d1\u7684\u8868\u793a\u91cd\u65b0\u5b9e\u73b0\u4e86\uff0c\u548cPyPy\u7684\u5b57\u5178\u5b9e\u73b0\u7c7b\u4f3c\u3002\u7ed3\u679c\u662f\u548c3.5\u7248\u672c\u76f8\u6bd4\uff0c3.6\u7248\u672c\u5b57\u5178\u7684\u5185\u5b58\u4f7f\u7528\u51cf\u5c11\u4e8620%\u523025%\u3002 \u4f7f\u7528\u65b0\u7684\u534f\u8bae\uff0c\u81ea\u5b9a\u4e49\u7c7b\u7684\u521b\u5efa\u88ab\u7b80\u5316\u4e86\u3002 \u7c7b\u5c5e\u6027\u7684\u5b9a\u4e49\u987a\u5e8f\u80fd\u591f\u88ab\u4fdd\u5b58\u3002 \u5728**kwargs\u4e2d\u5143\u7d20\u7684\u987a\u5e8f\u5bf9\u5e94\u4e8e\u4f20\u9012\u7ed9\u51fd\u6570\u65f6\u7684\u5173\u952e\u5b57\u53c2\u6570\u7684\u987a\u5e8f\u3002 \u6dfb\u52a0\u4e86DTrace\u548cSystemTap\u63a2\u6d4b\u7684\u652f\u6301\u3002 \u65b0\u7684PYTHONMALLOC\u73af\u5883\u53d8\u91cf\u53ef\u4ee5\u7528\u4e8e\u8c03\u8bd5\u89e3\u91ca\u5668\u5185\u5b58\u5206\u914d\u548c\u8bbf\u95ee\u9519\u8bef\u3002","title":"CPython\u5b9e\u73b0\u6539\u8fdb"},{"location":"python/feature/#_6","text":"asyncio\u6a21\u5757\u63a5\u6536\u4e86\u65b0\u7279\u6027\uff0c\u91cd\u5927\u7684\u53ef\u7528\u6027\u548c\u6027\u80fd\u6539\u8fdb\uff0c\u7136\u540e\u4fee\u590d\u4e86\u5927\u91cf\u7684BUG\u3002\u4ecePython 3.6\u5f00\u59cbasyncio\u6a21\u5757\u4e0d\u518d\u662f\u4e34\u65f6\u7684\u4e86\uff0c\u5b83\u5df2\u7ecf\u88ab\u8ba4\u4e3a\u662f\u7a33\u5b9a\u7684\u4e86\u3002 \u65b0\u7684\u6587\u4ef6\u7cfb\u7edf\u8def\u5f84\u534f\u8bae\u5df2\u5b9e\u73b0\uff0c\u7528\u4e8e\u652f\u6301\u8def\u5f84\u7c7b\u5bf9\u8c61\u3002\u6240\u6709\u6807\u51c6\u5e93\u51fd\u6570\u5728\u5904\u7406\u8def\u5f84\u65f6\u5df2\u4f7f\u7528\u65b0\u7684\u534f\u8bae\u3002 datetime\u6a21\u5757\u5728\u672c\u5730\u65f6\u95f4\u6d88\u9664\u6b67\u4e49\u4e0a\u83b7\u5f97\u4e86\u652f\u6301\u3002 typing\u6a21\u5757\u63a5\u53d7\u4e86\u4e00\u4e9b\u6539\u8fdb\u3002 tracemalloc\u6a21\u5757\u7ecf\u8fc7\u91cd\u5927\u6539\u9020\uff0c\u73b0\u5728\u53ef\u4ee5\u4e3aResourceWarnning\u63d0\u4f9b\u66f4\u597d\u7684\u8f93\u51fa\uff0c\u4e5f\u4e3a\u5185\u5b58\u5206\u914d\u9519\u8bef\u63d0\u4f9b\u66f4\u597d\u7684\u8bca\u65ad\u3002","title":"\u91cd\u5927\u7684\u6807\u51c6\u5e93\u6539\u8fdb"},{"location":"python/feature/#_7","text":"secrets\u6a21\u5757\u5df2\u88ab\u6dfb\u52a0\uff0c\u53ef\u4ee5\u751f\u6210\u66f4\u5b89\u5168\u7684\u4f2a\u968f\u673a\u6570\u3002 \u5728Linux\u4e0a\uff0cos.urandom()\u73b0\u5728\u4f1a\u88ab\u9501\u4f4f\uff0c\u76f4\u5230\u7cfb\u7edf\u7684\u4f2a\u968f\u673a\u6ef4\u6c60\u88ab\u521d\u59cb\u5316\u589e\u52a0\u5b89\u5168\u3002 hashlib\u548cssl\u6a21\u5757\u73b0\u5728\u652f\u6301OpenSSL 1.1.0\u3002 hashlib\u6a21\u5757\u73b0\u5728\u652f\u6301BLAKE2\u3001SHA-3\u548cSHAKE\u6458\u8981\u7b97\u6cd5\u548cscrypt()\u79d8\u94a5\u5bfc\u51fa\u529f\u80fd\u3002","title":"\u5b89\u5168\u6539\u8fdb"},{"location":"python/feature/#windows","text":"Windows\u6587\u4ef6\u7cfb\u7edf\u548c\u63a7\u5236\u53f0\u7f16\u7801\u6539\u4e3a\u4e86UTF-8\u3002 python.exe\u548cpythonw.exe\u73b0\u5728\u652f\u6301\u957f\u8def\u5f84\uff0c\u8be6\u60c5\u8bf7\u770b removing the MAX_PATH limitation \u3002 \u4e00\u4e2a._pth\u6587\u4ef6\u53ef\u4ee5\u88ab\u6dfb\u52a0\u7528\u4e8e\u9694\u79bb\u6a21\u5757\uff0c\u907f\u514d\u5168\u8def\u5f84\u641c\u7d22\uff0c\u8be6\u60c5\u8bf7\u770b\u6587\u6863\u3002","title":"Windows\u6539\u8fdb"},{"location":"python/feature/#formatted","text":"Formatted\u5b57\u7b26\u4e32\u662f\u5e26\u6709\u2019f\u2019\u5b57\u7b26\u524d\u7f00\u7684\u5b57\u7b26\u4e32\uff0c\u53ef\u4ee5\u5f88\u65b9\u4fbf\u7684\u683c\u5f0f\u5316\u5b57\u7b26\u4e32\u3002 >>> name = \"xiaoming\" >>> f \"He name is {name}\" 'He name is xiaoming' >>> width = 10 >>> precision = 4 >>> value = decimal . Decimal ( \"12.34567\" ) >>> f \"result: {value:{width}.{precision}}\" 'result: 12.35'","title":"Formatted\u5b57\u7b26\u4e32\u5b57\u9762\u503c"},{"location":"python/feature/#_8","text":"\u6570\u5b57\u4e2d\u652f\u6301\u4f7f\u7528\u4e0b\u5212\u7ebf\uff0c\u65b9\u4fbf\u9605\u8bfb\uff0c\u4f8b\u5982\uff1a >>> 1 _000_000_000_000_000 1000000000000000 >>> 0 x_FF_FF_FF_FF 4294967295 \u5b57\u7b26\u4e32format\u65b9\u6cd5\u4e5f\u652f\u6301\u4e86\u2019_\u2019\u9009\u9879\uff0c\u5f53\u683c\u5f0f\u5316\u4e3a\u6d6e\u70b9\u6570\u6216\u6574\u6570\u65f6\uff0c\u4ee53\u4f4d\u5206\u9694\uff0c\u5f53\u683c\u5f0f\u5316\u4e3a\u2019b\u2019,\u2019o\u2019,\u2019x\u2019\u548c\u2019X\u2019\u65f6\uff0c\u4ee54\u4f4d\u5206\u9694 >>> '{:_}' . format ( 10000000 ) '10_000_000' >>> '{:_b}' . format ( 10000000 ) '1001_1000_1001_0110_1000_0000'","title":"\u6570\u5b57\u4e2d\u652f\u6301\u4e0b\u5212\u7ebf"},{"location":"python/feature/#_9","text":"\u53d8\u91cf\u6ce8\u91ca\u6ca1\u6709\u7ed9\u53d8\u91cf\u5e26\u6765\u7279\u6b8a\u7684\u610f\u4e49\uff0c\u53ea\u662f\u4e3a\u4e86\u65b9\u4fbfIDE\u505a\u7c7b\u578b\u68c0\u67e5\u3002 >>> from typing import List , Dict >>> primes : List [ int ] = [] >>> stats : Dict [ str , int ] = {} \u4e0a\u9762\u4ee3\u7801\u4e2dprimes\u4e3a\u53d8\u91cf\u540d\uff0cList[int]\u4e3a\u53d8\u91cf\u6ce8\u91ca\uff0c\u7528\u6765\u8bf4\u660eprimes\u5217\u8868\u662f\u7528\u6765\u5b58\u653eint\u7c7b\u578b\u6570\u636e\u7684\uff0c\u4f46\u662f\u8fd9\u4e2a\u4e0d\u662f\u5f3a\u5236\u6027\u7684\uff0c\u4f60\u4f7f\u7528append()\u65b9\u6cd5\u6dfb\u52a0\u4e00\u4e2astr\u7c7b\u578b\u6570\u636e\u4e5f\u662f\u53ef\u4ee5\u7684\uff0cIDE\u4f1a\u63d0\u793a\u4f60\u6dfb\u52a0\u7684\u6570\u636e\u6709\u8bef\uff0c\u4f46\u662f\u8fd0\u884c\u65f6\u4e0d\u4f1a\u62a5\u9519\u3002","title":"\u53d8\u91cf\u6ce8\u91ca\u8bed\u6cd5"},{"location":"python/feature/#_10","text":"\u5728Python3.5\u4e2d\uff0cawait\u548cyield\u4e0d\u80fd\u518d\u540c\u4e00\u4e2a\u51fd\u6570\u4e2d\u4f7f\u7528\uff0c\u4f46\u662fPython3.6\u5df2\u7ecf\u53d6\u6d88\u4e86\u8fd9\u4e2a\u9650\u5236\uff0c\u53ef\u4ee5\u5728\u540c\u4e00\u4e2a\u51fd\u6570\u4f53\u4e2d\u4f7f\u7528\u4e86 async def ticker ( delay , to ): \"\"\"Yield numbers from 0 to *to* every *delay* seconds.\"\"\" for i in range ( to ): yield i await asyncio . sleep ( delay )","title":"\u5f02\u6b65\u751f\u6210\u5668"},{"location":"python/feature/#_11","text":"\u589e\u52a0\u5728list\u3001set\u548cdict\u7684\u5217\u8868\u63a8\u5bfc\u548c\u751f\u6210\u8868\u8fbe\u5f0f\u4e2d\u4f7f\u7528async for\u3002 \u5982\u4e0b\u9762\u8fd9\u6bb5\u4ee3\u7801: result = [] async for i in aiter (): if i % 2 : result . append ( i ) \u4f7f\u7528\u5f02\u6b65\u63a8\u5bfc\u5f0f\u4e4b\u540e\uff0c\u53ef\u4ee5\u7b80\u5199\u6210 result = [ i async for i in aiter () if i % 2 ] \u73b0\u5728\u4e5f\u652f\u6301\u5728\u6240\u6709\u7684\u63a8\u5bfc\u5f0f\u4e2d\u4f7f\u7528await\u8868\u8fbe\u5f0f result = [await fun() for fun in funcs]","title":"\u5f02\u6b65\u5217\u8868\u63a8\u5bfc"},{"location":"python/feature/#python_1","text":"\u4f17\u6240\u5468\u77e5\uff0cPython\u662f\u5904\u7406\u7ed3\u6784\u5316\u6570\u636e\u7684\u4e00\u79cd\u5feb\u6377\u53c8\u65b9\u4fbf\u7684\u65b9\u6cd5\u3002Python\u63d0\u4f9b\u4e86\u7528\u6765\u7ec4\u7ec7\u7ba1\u7406\u7ed3\u6784\uff0c\u5e76\u5c06\u5e38\u89c1\u884c\u4e3a\u4e0e\u6570\u636e\u5b9e\u4f8b\u8054\u7cfb\u8d77\u6765\u7684\u7c7b\uff0c\u4f46\u662f\u62e5\u6709\u8bb8\u591a\u521d\u59cb\u5316\u5668\u7684\u7c7b\u5386\u6765\u5b58\u5728\u8fd9\u4e2a\u5f0a\u7aef\uff1a\u9700\u8981\u5927\u91cf\u7684\u6837\u677f\u4ee3\u7801\u4e3a\u5b83\u4eec\u521b\u5efa\u5b9e\u4f8b\u3002\u6bd4\u5982\u8bf4\uff1a class User (): def __init__ ( self , name , user_id , just_joined = True ): self . name = name self . id = user_id self . just_joined = just_joined \u4e3a\u4e86\u4f7f\u8fd9\u5b9e\u73b0\u81ea\u52a8\u5316\uff1a\u4e3a\u7c7b\u521b\u5efa\u5b9e\u4f8b\uff0cPython 3.7\u5f15\u5165\u4e86\u4e00\u4e2a\u65b0\u7684\u6a21\u5757dataclasses\uff0c\u5982 pep-0557 \u4e2d\u6240\u8ff0\u3002\u5b83\u63d0\u4f9b\u4e86\u4e00\u4e2a\u88c5\u9970\u5668\uff0c\u80fd\u591f\u4ee5\u5f02\u5e38\u7b80\u5355\u7684\u65b9\u5f0f\u91cd\u73b0\u4e0a\u8ff0\u884c\u4e3a\uff1a @dataclass class User (): name : str user_id : int just_joined : bool = True \u56e0\u800c\u751f\u6210\u7684\u7c7b\u8fd0\u884c\u8d77\u6765\u5982\u540c\u666e\u901a\u7684Python\u7c7b\u3002\u4f60\u8fd8\u53ef\u4ee5\u58f0\u660e\u67d0\u4e9b\u5b57\u6bb5\u662f\u201c\u51bb\u7ed3\u201d\u6216\u4e0d\u53ef\u53d8\u7684\uff0c\u5e76\u4e14\u4f7f\u521b\u5efa\u5c5e\u6027\u7684\u7279\u6b8a\u65b9\u6cd5\uff08\u6bd4\u5982__hash__\u6216__repr__\uff09\u5b9e\u73b0\u81ea\u52a8\u5316\uff08\u6216\u624b\u52a8\u8986\u76d6\uff09\u3002","title":"Python\u6570\u636e\u7c7b"},{"location":"python/feature/#python_2","text":"\u6b63\u5982 PEP 479 \u4e2d\u6982\u8ff0\uff0c\u5f00\u53d1\u4e86\u4e00\u6bb5\u65f6\u95f4\u7684\u4e00\u5904\u53d8\u66f4\u65e8\u5728\u8ba9\u4eba\u4eec\u66f4\u5bb9\u6613\u8c03\u8bd5Python\u751f\u6210\u5668\u5f15\u53d1\u7684StopIteration\u5f02\u5e38\u3002\u4ee5\u524d\uff0c\u751f\u6210\u5668\u9047\u5230\u53e6\u4e00\u4e2a\u95ee\u9898\u65f6\u5f88\u5bb9\u6613\u5f15\u53d1StopIteration\uff0c\u800c\u4e0d\u662f\u7531\u4e8e\u5b83\u7528\u5b8c\u4e86\u9700\u8981\u8fed\u4ee3\u7684\u4e1c\u897f\u3002\u8fd9\u5e26\u6765\u4e86\u4e00\u6574\u6279\u5f88\u96be\u8ffd\u8e2a\u7684\u4ee3\u7801\u7f3a\u9677\u3002 \u5728Python 3.7\u4e2d\uff0c\u751f\u6210\u5668\u5f15\u53d1StopIteration\u5f02\u5e38\u540e\uff0cStopIteration\u5f02\u5e38\u5c06\u88ab\u8f6c\u6362\u6210RuntimeError\u5f02\u5e38\uff0c\u90a3\u6837\u5b83\u4e0d\u4f1a\u6084\u6084\u4e00\u8def\u5f71\u54cd\u5e94\u7528\u7a0b\u5e8f\u7684\u5806\u6808\u6846\u67b6\u3002\u8fd9\u610f\u5473\u7740\u5982\u4f55\u5904\u7406\u751f\u6210\u5668\u7684\u884c\u4e3a\u65b9\u9762\u4e0d\u592a\u654f\u9510\u7684\u4e00\u4e9b\u7a0b\u5e8f\u4f1a\u5728Python 3.7\u4e2d\u629b\u51faRuntimeError\u3002\u800c\u5728Python 3.6\u4e2d\uff0c\u8fd9\u79cd\u884c\u4e3a\u751f\u6210\u4e00\u4e2a\u5f03\u7528\u8b66\u544a\uff1b\u5728Python 3.7\u4e2d\uff0c\u5b83\u751f\u6210\u4e00\u4e2a\u5b8c\u6574\u7684\u9519\u8bef\u3002 \u4e00\u4e2a\u7b80\u6613\u7684\u65b9\u6cd5\u662f\u4f7f\u7528try/except\u4ee3\u7801\u6bb5\uff0c\u5728StopIteration\u4f20\u64ad\u5230\u751f\u6210\u5668\u7684\u5916\u9762\u6355\u83b7\u5b83\u3002\u66f4\u597d\u7684\u89e3\u51b3\u65b9\u6848\u662f\u91cd\u65b0\u8003\u8651\u5982\u4f55\u6784\u5efa\u751f\u6210\u5668\u2015\u2015\u6bd4\u5982\u8bf4\uff0c\u4f7f\u7528return\u8bed\u53e5\u6765\u7ec8\u6b62\u751f\u6210\u5668\uff0c\u800c\u4e0d\u662f\u624b\u52a8\u5f15\u53d1StopIteration\u3002\u60f3\u8fdb\u4e00\u6b65\u4e86\u89e3\u5982\u4f55\u5728\u73b0\u6709\u4ee3\u7801\u4e2d\u8865\u6551\u8fd9\u4e2a\u95ee\u9898\uff0c\u5982\u4f55\u5728\u65b0\u4ee3\u7801\u4e2d\u9632\u8303\u8be5\u95ee\u9898\uff0c\u8bf7\u53c2\u9605 PEP 469 \u3002","title":"Python\u751f\u6210\u5668\u5f02\u5e38\u5904\u7406"},{"location":"python/feature/#python_3","text":"Python\u89e3\u91ca\u5668\u65b0\u7684\u547d\u4ee4\u884c\u5f00\u5173\uff1a-X\u8ba9\u5f00\u53d1\u4eba\u5458\u53ef\u4ee5\u4e3a\u89e3\u91ca\u5668\u8bbe\u7f6e\u8bb8\u591a\u4f4e\u7ea7\u9009\u9879\u3002\u5728Python 3.7\u4e2d\uff0c\u9009\u9879-X dev\u542f\u7528\u201c\u5f00\u53d1\u6a21\u5f0f\u201d\uff0c\u8fd9\u79cd\u8fd0\u884c\u65f6\u68c0\u67e5\u673a\u5236\u901a\u5e38\u5bf9\u6027\u80fd\u6709\u91cd\u5927\u5f71\u54cd\uff0c\u4f46\u5728\u8c03\u8bd5\u8fc7\u7a0b\u4e2d\u5bf9\u5f00\u53d1\u4eba\u5458\u5f88\u6709\u7528\u3002 -X dev\u6fc0\u6d3b\u7684\u9009\u9879\u5305\u62ec\uff1a * asyncio\u6a21\u5757\u7684\u8c03\u8bd5\u6a21\u5f0f\u3002\u8fd9\u4e3a\u5f02\u6b65\u64cd\u4f5c\u63d0\u4f9b\u4e86\u66f4\u8be6\u7ec6\u7684\u65e5\u5fd7\u8bb0\u5f55\u548c\u5f02\u5e38\u5904\u7406\uff0c\u800c\u5f02\u5e38\u64cd\u4f5c\u53ef\u80fd\u5f88\u96be\u8c03\u8bd5\u6216\u63a8\u7406\u3002 * \u9762\u5411\u5185\u5b58\u5206\u914d\u5668\u7684\u8c03\u8bd5\u94a9\u5b50\u3002\u8fd9\u5bf9\u4e8e\u7f16\u5199CPython\u6269\u5c55\u4ef6\u7684\u90a3\u4e9b\u4eba\u5f88\u6709\u7528\u3002\u5b83\u80fd\u591f\u5b9e\u73b0\u66f4\u660e\u786e\u7684\u8fd0\u884c\u65f6\u68c0\u67e5\uff0c\u4e86\u89e3CPython\u5982\u4f55\u5728\u5185\u90e8\u5206\u914d\u5185\u5b58\u548c\u91ca\u653e\u5185\u5b58\u3002 * \u542f\u7528faulthandler\u6a21\u5757\uff0c\u90a3\u6837\u53d1\u751f\u5d29\u6e83\u540e\uff0ctraceback\u59cb\u7ec8\u8f6c\u50a8\u51fa\u53bb\u3002","title":"Python\u5f00\u53d1\u6a21\u5f0f"},{"location":"python/feature/#python_4","text":"Python 3.7\u4e2d\u4e00\u7c7b\u65b0\u7684\u65f6\u95f4\u51fd\u6570\u8fd4\u56de\u7eb3\u79d2\u7cbe\u5ea6\u7684\u65f6\u95f4\u503c\u3002\u5c3d\u7ba1Python\u662f\u4e00\u79cd\u89e3\u91ca\u578b\u8bed\u8a00\uff0c\u4f46\u662fPython\u7684\u6838\u5fc3\u5f00\u53d1\u4eba\u5458\u7ef4\u514b\u591a\u2022\u65af\u5ef7\u7eb3\uff08Victor Stinner\uff09\u4e3b\u5f20\u62a5\u544a\u7eb3\u79d2\u7cbe\u5ea6\u7684\u65f6\u95f4\u3002\u6700\u4e3b\u8981\u7684\u539f\u56e0\u662f\uff0c\u5728\u5904\u7406\u8f6c\u6362\u5176\u4ed6\u7a0b\u5e8f\uff08\u6bd4\u5982\u6570\u636e\u5e93\uff09\u8bb0\u5f55\u7684\u65f6\u95f4\u503c\u65f6\uff0c\u53ef\u4ee5\u907f\u514d\u4e22\u5931\u7cbe\u5ea6\u3002 \u65b0\u7684\u65f6\u95f4\u51fd\u6570\u4f7f\u7528\u540e\u7f00_ns\u3002\u6bd4\u5982\u8bf4\uff0ctime.process_time()\u7684\u7eb3\u79d2\u7248\u672c\u662ftime.process_time_ns()\u3002\u8bf7\u6ce8\u610f\uff0c\u5e76\u975e\u6240\u6709\u7684\u65f6\u95f4\u51fd\u6570\u90fd\u6709\u5bf9\u5e94\u7684\u7eb3\u79d2\u7248\u672c\uff0c\u56e0\u4e3a\u5176\u4e2d\u4e00\u4e9b\u65f6\u95f4\u51fd\u6570\u5e76\u4e0d\u5f97\u76ca\u4e8e\u6b64\u3002","title":"\u5177\u6709\u7eb3\u79d2\u5206\u8fa8\u7387\u7684Python\u65f6\u95f4\u51fd\u6570"},{"location":"python/feature/#python-utf-8","text":"Python\u4e00\u76f4\u652f\u6301UTF-8\uff0c\u4ee5\u4fbf\u8f7b\u677e\u5904\u7406\u5b57\u7b26\u4e32\u548c\u6587\u672c\u3002\u4f46\u662f\u5468\u56f4\u73af\u5883\u4e2d\u7684\u8bed\u8a00\u73af\u5883\uff08locale\uff09\u6709\u65f6\u4ecd\u662fASCII\uff0c\u800c\u4e0d\u662fUTF-8\uff0c\u68c0\u6d4b\u8bed\u8a00\u73af\u5883\u7684\u673a\u5236\u5e76\u4e0d\u603b\u662f\u5f88\u53ef\u9760\u3002 Python 3.7\u6dfb\u52a0\u4e86\u6240\u8c13\u7684\u201cUTF-8\u6a21\u5f0f\u201d\uff0c\u53ef\u901a\u8fc7-X\u547d\u4ee4\u884c\u5f00\u5173\u542f\u7528\u8be5\u6a21\u5f0f\uff0c\u8be5\u6a21\u5f0f\u5047\u8bbeUTF-8\u662f\u73af\u5883\u63d0\u4f9b\u7684\u8bed\u8a00\u73af\u5883\u3002\u5728POSIX\u8bed\u8a00\u73af\u5883\u4e2d\uff0cUTF-8\u6a21\u5f0f\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u5df2\u88ab\u542f\u7528\uff0c\u4f46\u5728\u5176\u4ed6\u4f4d\u7f6e\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u88ab\u7981\u7528\uff0c\u4ee5\u514d\u7834\u574f\u5411\u540e\u517c\u5bb9\u3002\u503c\u5f97\u8bd5\u4e00\u8bd5\u5728\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u5f00\u542fUTF-8\u6a21\u5f0f\uff0c\u4f46\u4e0d\u5e94\u8be5\u5728\u751f\u4ea7\u73af\u5883\u4e0b\u542f\u7528\u5b83\uff0c\u9664\u975e\u4f60\u786e\u4fe1Python\u4e0e\u5468\u56f4\u73af\u5883\u7684\u6240\u6709\u4ea4\u4e92\u90fd\u4f7f\u7528UTF-8\u3002","title":"Python UTF-8\u6a21\u5f0f"},{"location":"python/feature/#breakpoint","text":"Python\u968f\u5e26\u5185\u7f6e\u7684\u8c03\u8bd5\u5668\uff0c\u4e0d\u8fc7\u5b83\u4e5f\u53ef\u4ee5\u8fde\u5165\u5230\u7b2c\u4e09\u65b9\u8c03\u8bd5\u5de5\u5177\uff0c\u53ea\u8981\u5b83\u4eec\u80fd\u4e0ePython\u7684\u5185\u90e8\u8c03\u8bd5API\u8fdb\u884c\u5bf9\u8bdd\u3002\u4e0d\u8fc7\uff0cPython\u5230\u76ee\u524d\u4e3a\u6b62\u7f3a\u5c11\u4e00\u79cd\u4ecePython\u5e94\u7528\u7a0b\u5e8f\u91cc\u9762\u4ee5\u7f16\u7a0b\u65b9\u5f0f\u89e6\u53d1\u8c03\u8bd5\u5668\u7684\u6807\u51c6\u5316\u65b9\u6cd5\u3002 Python 3.7\u6dfb\u52a0\u4e86breakpoint()\uff0c\u8fd9\u4e2a\u5185\u7f6e\u51fd\u6570\u4f7f\u5f97\u51fd\u6570\u88ab\u8c03\u7528\u65f6\uff0c\u8ba9\u6267\u884c\u5207\u6362\u5230\u8c03\u8bd5\u5668\u3002\u76f8\u5e94\u7684\u8c03\u8bd5\u5668\u4e0d\u4e00\u5b9a\u662fPython\u81ea\u5df1\u7684pdb\uff0c\u53ef\u4ee5\u662f\u4e4b\u524d\u88ab\u8bbe\u4e3a\u9996\u9009\u8c03\u8bd5\u5668\u7684\u4efb\u4f55\u8c03\u8bd5\u5668\u3002\u4ee5\u524d\uff0c\u8c03\u8bd5\u5668\u4e0d\u5f97\u4e0d\u624b\u52a8\u8bbe\u7f6e\uff0c\u7136\u540e\u8c03\u7528\uff0c\u56e0\u800c\u4f7f\u4ee3\u7801\u66f4\u5197\u957f\u3002\u800c\u6709\u4e86breakpoint()\uff0c\u53ea\u9700\u4e00\u4e2a\u547d\u4ee4\u5373\u53ef\u8c03\u7528\u8c03\u8bd5\u5668\uff0c\u5e76\u4e14\u8ba9\u8bbe\u7f6e\u8c03\u8bd5\u5668\u548c\u8c03\u7528\u8c03\u8bd5\u5668\u6cfe\u6e2d\u5206\u660e\u3002","title":"\u5185\u7f6ebreakpoint()\u51fd\u6570"},{"location":"python/feature/#python-37","text":"Python 3.7\u6709\u53e6\u5916\u7684\u4f17\u591a\u53d8\u66f4\u3002\u4e0b\u9762\u662f\u4f60\u5728\u4f7f\u7528\u6700\u65b0\u7248\u672c\u7684Python\u65f6\u53ef\u80fd\u4f1a\u9047\u5230\u7684\u5176\u4ed6\u4e00\u4e9b\u529f\u80fd\uff1a \u9762\u5411\u7ebf\u7a0b\u672c\u5730\u5b58\u50a8\u652f\u6301\u7684C-API PEP 539 \u4e2d\u63cf\u8ff0\uff0c\u7ebf\u7a0b\u7279\u5b9a\u5b58\u50a8\uff08TSS\uff09API\u53d6\u4ee3\u4e86\u8001\u5f0f\u7684\u7ebf\u7a0b\u672c\u5730\u5b58\u50a8\uff08TLS\uff09API\u3002\u5982\u679c\u8c01\u5b9a\u5236CPython\u6216\u7f16\u5199\u4f7f\u7528\u89e3\u91ca\u5668\u7684\u5185\u90e8API\u7684CPython\u6269\u5c55\u4ef6\uff0c\u5c31\u8981\u660e\u767d\u8fd9\u4e00\u70b9\u3002 \u6a21\u5757\u5c5e\u6027\u8bbf\u95ee\u5b9a\u5236 \u4f60\u5728Python\u7a0b\u5e8f\u4e2d\u521b\u5efa\u6a21\u5757\u65f6\uff0c\u73b0\u5728\u53ef\u4ee5\u9488\u5bf9\u8be5\u6a21\u5757\u7684\u5b9e\u4f8b\u5b9a\u5236\u5c5e\u6027\u8bbf\u95ee\u7684\u884c\u4e3a\u3002\u4e3a\u6b64\uff0c\u53ea\u9700\u8981\u5728\u6a21\u5757\u91cc\u9762\u521b\u5efa\u4e00\u4e2a__getattr__\u65b9\u6cd5\uff0c\u5c31\u8ddf\u4e3a\u4e00\u4e2a\u7c7b\u521b\u5efa\u65b9\u6cd5\u90a3\u6837\u3002\u8fd9\u6837\u4e00\u6765\uff0c\u5c31\u53ef\u4ee5\u5bf9\u8bf8\u5982\u8bf7\u6c42\u6a21\u5757\u91cc\u9762\u4e0d\u5b58\u5728\u7684\u51fd\u6570\u6216\u65b9\u6cd5\u4e4b\u7c7b\u7684\u64cd\u4f5c\u8fdb\u884c\u62e6\u622a\u3001\u6807\u8bb0\u6216\u4ee3\u7406\u3002 Python importlib\u8d44\u6e90 importlib\u6a21\u5757\u73b0\u5728\u53ef\u7528\u6765\u8bfb\u53d6\u201c\u8d44\u6e90\u201d\uff0c\u5373\u968fPython\u5e94\u7528\u7a0b\u5e8f\u4e00\u5e76\u4ea4\u4ed8\u7684\u4e8c\u8fdb\u5236\u5de5\u4ef6\uff0c\u6bd4\u5982\u6570\u636e\u6587\u4ef6\u3002\u8fd9\u6837\u4e00\u6765\uff0c\u5f00\u53d1\u4eba\u5458\u53ef\u4ee5\u901a\u8fc7importlib\u7684\u62bd\u8c61\u6765\u8bbf\u95ee\u90a3\u4e9b\u6587\u4ef6\uff0c\u6240\u4ee5\u5b83\u4eec\u5b58\u50a8\u5728\u7cfb\u7edf\u4e0a\u67d0\u4e2a\u5730\u65b9\u7684.zip\u6587\u4ef6\u4e2d\u8fd8\u662f\u5b58\u50a8\u5728\u76ee\u5f55\u4e2d\u5e76\u4e0d\u91cd\u8981\u3002 \u5e95\u5c42\u4f18\u5316 \u73b0\u5728\u8bb8\u591a\u5355\u72ec\u7684\u64cd\u4f5c\u66f4\u5feb\u901f\u4e86\uff1a \u7531\u4e8e\u65b0\u7684\u64cd\u4f5c\u7801\uff0c\u65b9\u6cd5\u8c03\u7528\u8d77\u6765\u6700\u591a\u5feb20%\u3002\uff08\u9664\u975e\u4f60\u5728\u7f16\u5199\u76f4\u63a5\u5904\u7406Python\u64cd\u4f5c\u7801\u7684\u4ee3\u7801\uff0c\u5426\u5219\u4e0d\u9700\u8981\u62c5\u5fc3\u7531\u6b64\u5e26\u6765\u7684\u5f71\u54cd\u3002\uff09 \u6b63\u5219\u8868\u8fbe\u5f0f\u4e2d\u4e0d\u533a\u5206\u5927\u5c0f\u5199\u7684\u5339\u914d\u901f\u5ea6\u66f4\u5feb\u4e86\uff0c\u6709\u65f6\u8981\u5feb20\u500d\u3002 \u6e90\u4ee3\u7801\u4e2d\u7684\u4e00\u4e9b\u5e38\u91cf\u73b0\u5728\u53ef\u4ee5\u66f4\u9ad8\u6548\u5730\u4f18\u5316\u3002","title":"\u5176\u4ed6\u65b0\u7684Python 3.7\u529f\u80fd"},{"location":"python/str_joint/","text":"Python \u62fc\u63a5\u5b57\u7b26\u4e32\u7684 7 \u79cd\u65b9\u5f0f \u00b6 1\u3001\u6765\u81eaC\u8bed\u8a00\u7684%\u65b9\u5f0f \u00b6 print ( ' %s %s ' % ( 'Hello' , 'world' )) >>> Hello world %\u53f7\u683c\u5f0f\u5316\u5b57\u7b26\u4e32\u7684\u65b9\u5f0f\u7ee7\u627f\u81ea\u53e4\u8001\u7684C\u8bed\u8a00\uff0c\u8fd9\u5728\u5f88\u591a\u7f16\u7a0b\u8bed\u8a00\u90fd\u6709\u7c7b\u4f3c\u7684\u5b9e\u73b0\u3002\u4e0a\u4f8b\u7684%s\u662f\u4e00\u4e2a\u5360\u4f4d\u7b26\uff0c\u5b83\u4ec5\u4ee3\u8868\u4e00\u6bb5\u5b57\u7b26\u4e32\uff0c\u5e76\u4e0d\u662f\u62fc\u63a5\u7684\u5b9e\u9645\u5185\u5bb9\u3002\u5b9e\u9645\u7684\u62fc\u63a5\u5185\u5bb9\u5728\u4e00\u4e2a\u5355\u72ec\u7684%\u53f7\u540e\u9762\uff0c\u653e\u5728\u4e00\u4e2a\u5143\u7ec4\u91cc\u3002 \u7c7b\u4f3c\u7684\u5360\u4f4d\u7b26\u8fd8\u6709\uff1a%d\uff08\u4ee3\u8868\u4e00\u4e2a\u6574\u6570\uff09\u3001%f\uff08\u4ee3\u8868\u4e00\u4e2a\u6d6e\u70b9\u6570\uff09\u3001%x\uff08\u4ee3\u8868\u4e00\u4e2a16\u8fdb\u5236\u6570\uff09\uff0c\u7b49\u7b49\u3002%\u5360\u4f4d\u7b26\u65e2\u662f\u8fd9\u79cd\u62fc\u63a5\u65b9\u5f0f\u7684\u7279\u70b9\uff0c\u540c\u65f6\u4e5f\u662f\u5176\u9650\u5236\uff0c\u56e0\u4e3a\u6bcf\u79cd\u5360\u4f4d\u7b26\u90fd\u6709\u7279\u5b9a\u610f\u4e49\uff0c\u5b9e\u9645\u4f7f\u7528\u8d77\u6765\u592a\u9ebb\u70e6\u4e86\u3002 2\u3001format()\u62fc\u63a5\u65b9\u5f0f \u00b6 # \u7b80\u6d01\u7248 s1 = 'Hello {}! My name is {}.' . format ( 'World' , 'Python\u732b' ) print ( s1 ) >>> Hello World ! My name is Python\u732b . # \u5bf9\u53f7\u5165\u5ea7\u7248 s2 = 'Hello {0}! My name is {1}.' . format ( 'World' , 'Python\u732b' ) s3 = 'Hello {name1}! My name is {name2}.' . format ( name1 = 'World' , name2 = 'Python\u732b' ) print ( s2 ) >>> Hello World ! My name is Python\u732b . print ( s3 ) >>> Hello World ! My name is Python\u732b . \u8fd9\u79cd\u65b9\u5f0f\u4f7f\u7528\u82b1\u62ec\u53f7{}\u505a\u5360\u4f4d\u7b26\uff0c\u5728format\u65b9\u6cd5\u4e2d\u518d\u8f6c\u5165\u5b9e\u9645\u7684\u62fc\u63a5\u503c\u3002\u5bb9\u6613\u770b\u51fa\uff0c\u5b83\u5b9e\u9645\u4e0a\u662f\u5bf9%\u53f7\u62fc\u63a5\u65b9\u5f0f\u7684\u6539\u8fdb\u3002\u8fd9\u79cd\u65b9\u5f0f\u5728Python2.6\u4e2d\u5f00\u59cb\u5f15\u5165\u3002 \u4e0a\u4f8b\u4e2d\uff0c\u7b80\u6d01\u7248\u7684\u82b1\u62ec\u53f7\u4e2d\u65e0\u5185\u5bb9\uff0c\u7f3a\u70b9\u662f\u5bb9\u6613\u5f04\u9519\u6b21\u5e8f\u3002\u5bf9\u53f7\u5165\u5ea7\u7248\u4e3b\u8981\u6709\u4e24\u79cd\uff0c\u4e00\u79cd\u4f20\u5165\u5e8f\u5217\u53f7\uff0c\u4e00\u79cd\u5219\u4f7f\u7528key-value\u7684\u65b9\u5f0f\u3002\u5b9e\u6218\u4e2d\uff0c\u6211\u4eec\u66f4\u63a8\u8350\u540e\u4e00\u79cd\uff0c\u65e2\u4e0d\u4f1a\u6570\u9519\u6b21\u5e8f\uff0c\u53c8\u66f4\u76f4\u89c2\u53ef\u8bfb\u3002 3\u3001() \u7c7b\u4f3c\u5143\u7ec4\u65b9\u5f0f \u00b6 s_tuple = ( 'Hello' , ' ' , 'world' ) s_like_tuple = ( 'Hello' ' ' 'world' ) print ( s_tuple ) >>> ( 'Hello' , ' ' , 'world' ) print ( s_like_tuple ) >>> Hello world type ( s_like_tuple ) >>> str \u6ce8\u610f\uff0c\u4e0a\u4f8b\u4e2ds_like_tuple\u5e76\u4e0d\u662f\u4e00\u4e2a\u5143\u7ec4\uff0c\u56e0\u4e3a\u5143\u7d20\u95f4\u6ca1\u6709\u9017\u53f7\u5206\u9694\u7b26\uff0c\u8fd9\u4e9b\u5143\u7d20\u95f4\u53ef\u4ee5\u7528\u7a7a\u683c\u95f4\u9694\uff0c\u4e5f\u53ef\u4ee5\u4e0d\u8981\u7a7a\u683c\u3002\u4f7f\u7528type()\u67e5\u770b\uff0c\u53d1\u73b0\u5b83\u5c31\u662f\u4e00\u4e2astr\u7c7b\u578b\u3002\u6211\u6ca1\u67e5\u5230\u8fd9\u662f\u5565\u539f\u56e0\uff0c\u731c\u6d4b\u6216\u8bb8()\u62ec\u53f7\u4e2d\u7684\u5185\u5bb9\u662f\u88abPython\u4f18\u5316\u5904\u7406\u4e86\u3002 \u8fd9\u79cd\u65b9\u5f0f\u770b\u8d77\u6765\u5f88\u5feb\u6377\uff0c\u4f46\u662f\uff0c\u62ec\u53f7()\u5185\u8981\u6c42\u5143\u7d20\u662f\u771f\u5b9e\u5b57\u7b26\u4e32\uff0c\u4e0d\u80fd\u6df7\u7528\u53d8\u91cf\uff0c\u6240\u4ee5\u4e0d\u591f\u7075\u6d3b\u3002 # \u591a\u5143\u7d20\u65f6\uff0c\u4e0d\u652f\u6301\u6709\u53d8\u91cf str_1 = 'Hello' str_2 = ( str_1 'world' ) >>> SyntaxError : invalid syntax str_3 = ( str_1 str_1 ) >>> SyntaxError : invalid syntax # \u4f46\u662f\u4e0b\u9762\u5199\u6cd5\u4e0d\u4f1a\u62a5\u9519 str_4 = ( str_1 ) \u8bf4\u5b9e\u8bdd\uff0c\u6211\u4e0d\u559c\u6b22\u8fd9\u79cd\u5b9e\u73b0\u65b9\u5f0f\u3002\u6d53\u6d53\u7684\u4e00\u80a1\u88ab\u9762\u5411\u5bf9\u8c61\u601d\u60f3\u6bd2\u5bb3\u7684\u81ed\u5473\u3002 \u5c31\u4e0d\u591a\u8bf4\u4e86\u3002 5\u3001\u5e38\u7528\u7684+\u53f7\u65b9\u5f0f str_1 = 'Hello world\uff01 ' str_2 = 'My name is Python\u732b.' print ( str_1 + str_2 ) >>> Hello world \uff01 My name is Python\u732b . print ( str_1 ) >>> Hello world \uff01 \u8fd9\u79cd\u65b9\u5f0f\u6700\u5e38\u7528\u3001\u76f4\u89c2\u3001\u6613\u61c2\uff0c\u662f\u5165\u95e8\u7ea7\u7684\u5b9e\u73b0\u65b9\u5f0f\u3002\u4f46\u662f\uff0c\u5b83\u4e5f\u5b58\u5728\u4e24\u5904\u8ba9\u4eba\u5bb9\u6613\u72af\u9519\u7684\u5730\u65b9\u3002 \u9996\u5148\uff0c\u65b0\u5165\u95e8\u7f16\u7a0b\u7684\u540c\u5b66\u5bb9\u6613\u72af\u9519\uff0c\u4ed6\u4eec\u4e0d\u77e5\u9053\u5b57\u7b26\u4e32\u662f\u4e0d\u53ef\u53d8\u7c7b\u578b\uff0c\u65b0\u7684\u5b57\u7b26\u4e32\u4f1a\u72ec\u5360\u4e00\u5757\u65b0\u7684\u5185\u5b58\uff0c\u800c\u539f\u6765\u7684\u5b57\u7b26\u4e32\u4fdd\u6301\u4e0d\u53d8\u3002\u4e0a\u4f8b\u4e2d\uff0c\u62fc\u63a5\u524d\u6709\u4e24\u6bb5\u5b57\u7b26\u4e32\uff0c\u62fc\u63a5\u540e\u5b9e\u9645\u6709\u4e09\u6bb5\u5b57\u7b26\u4e32\u3002 \u5176\u6b21\uff0c\u4e00\u4e9b\u6709\u7ecf\u9a8c\u7684\u8001\u7a0b\u5e8f\u5458\u4e5f\u5bb9\u6613\u72af\u9519\uff0c\u4ed6\u4eec\u4ee5\u4e3a\u5f53\u62fc\u63a5\u6b21\u6570\u4e0d\u8d85\u8fc73\u65f6\uff0c\u4f7f\u7528+\u53f7\u8fde\u63a5\u7b26\u5c31\u4f1a\u6bd4\u5176\u5b83\u65b9\u5f0f\u5feb\uff08ps\uff1a\u4e0d\u5c11Python\u6559\u7a0b\u90fd\u662f\u5982\u6b64\u5efa\u8bae\uff09\uff0c\u4f46\u8fd9\u6ca1\u6709\u4efb\u4f55\u5408\u7406\u6839\u636e\u3002 \u4e8b\u5b9e\u4e0a\uff0c\u5728\u62fc\u63a5\u77ed\u7684\u5b57\u9762\u503c\u65f6\uff0c\u7531\u4e8eCPython\u4e2d\u7684 \u5e38\u6570\u6298\u53e0 \uff08constant folding\uff09\u529f\u80fd\uff0c\u8fd9\u4e9b\u5b57\u9762\u503c\u4f1a\u88ab\u8f6c\u6362\u6210\u66f4\u77ed\u7684\u5f62\u5f0f\uff0c\u4f8b\u5982'a'+'b'+'c' \u88ab\u8f6c\u6362\u6210'abc'\uff0c'hello'+'world'\u4e5f\u4f1a\u88ab\u8f6c\u6362\u6210'hello world'\u3002\u8fd9\u79cd\u8f6c\u6362\u662f\u5728\u7f16\u8bd1\u671f\u5b8c\u6210\u7684\uff0c\u800c\u5230\u4e86\u8fd0\u884c\u671f\u65f6\u5c31\u4e0d\u4f1a\u518d\u53d1\u751f\u4efb\u4f55\u62fc\u63a5\u64cd\u4f5c\uff0c\u56e0\u6b64\u4f1a\u52a0\u5feb\u6574\u4f53\u8ba1\u7b97\u7684\u901f\u5ea6\u3002 \u5e38\u6570\u6298\u53e0\u4f18\u5316\u6709\u4e00\u4e2a\u9650\u5ea6\uff0c\u5b83\u8981\u6c42\u62fc\u63a5\u7ed3\u679c\u7684\u957f\u5ea6\u4e0d\u8d85\u8fc720\u3002\u6240\u4ee5\uff0c\u5f53\u62fc\u63a5\u7684\u6700\u7ec8\u5b57\u7b26\u4e32\u957f\u5ea6\u4e0d\u8d85\u8fc720\u65f6\uff0c+\u53f7\u64cd\u4f5c\u7b26\u7684\u65b9\u5f0f\uff0c\u4f1a\u6bd4\u540e\u9762\u63d0\u5230\u7684join\u7b49\u65b9\u5f0f\u5feb\u5f97\u591a\uff0c\u8fd9\u4e0e+\u53f7\u7684\u4f7f\u7528\u6b21\u6570\u65e0\u5173\u3002 6\u3001join()\u62fc\u63a5\u65b9\u5f0f \u00b6 str_list = [ 'Hello' , 'world' ] str_join1 = ' ' . join ( str_list ) str_join2 = '-' . join ( str_list ) print ( str_join1 ) >>> Hello world print ( str_join2 ) >>> Hello - world str\u5bf9\u8c61\u81ea\u5e26\u7684join()\u65b9\u6cd5\uff0c\u63a5\u53d7\u4e00\u4e2a\u5e8f\u5217\u53c2\u6570\uff0c\u53ef\u4ee5\u5b9e\u73b0\u62fc\u63a5\u3002\u62fc\u63a5\u65f6\uff0c\u5143\u7d20\u82e5\u4e0d\u662f\u5b57\u7b26\u4e32\uff0c\u9700\u8981\u5148\u8f6c\u6362\u4e00\u4e0b\u3002\u53ef\u4ee5\u770b\u51fa\uff0c\u8fd9\u79cd\u65b9\u6cd5\u6bd4\u8f83\u9002\u7528\u4e8e\u8fde\u63a5\u5e8f\u5217\u5bf9\u8c61\u4e2d\uff08\u4f8b\u5982\u5217\u8868\uff09\u7684\u5143\u7d20\uff0c\u5e76\u8bbe\u7f6e\u7edf\u4e00\u7684\u95f4\u9694\u7b26\u3002 \u5f53\u62fc\u63a5\u957f\u5ea6\u8d85\u8fc720\u65f6\uff0c\u8fd9\u79cd\u65b9\u5f0f\u57fa\u672c\u4e0a\u662f\u9996\u9009\u3002\u4e0d\u8fc7\uff0c\u5b83\u7684\u7f3a\u70b9\u5c31\u662f\uff0c\u4e0d\u9002\u5408\u8fdb\u884c\u96f6\u6563\u7247\u6bb5\u7684\u3001\u4e0d\u5904\u4e8e\u5e8f\u5217\u96c6\u5408\u7684\u5143\u7d20\u62fc\u63a5\u3002 7\u3001f-string\u65b9\u5f0f \u00b6 name = 'world' myname = 'python_cat' words = f 'Hello {name}. My name is {myname}.' print ( words ) >>> Hello world . My name is python_cat . f-string\u65b9\u5f0f\u51fa\u81eaPEP 498\uff08Literal String Interpolation\uff0c\u5b57\u9762\u5b57\u7b26\u4e32\u63d2\u503c\uff09\uff0c\u4ecePython3.6\u7248\u672c\u5f15\u5165\u3002\u5176\u7279\u70b9\u662f\u5728\u5b57\u7b26\u4e32\u524d\u52a0 f \u6807\u8bc6\uff0c\u5b57\u7b26\u4e32\u4e2d\u95f4\u5219\u7528\u82b1\u62ec\u53f7{}\u5305\u88f9\u5176\u5b83\u5b57\u7b26\u4e32\u53d8\u91cf\u3002 \u8fd9\u79cd\u65b9\u5f0f\u5728\u53ef\u8bfb\u6027\u4e0a\u79d2\u6740format()\u65b9\u5f0f\uff0c\u5904\u7406\u957f\u5b57\u7b26\u4e32\u7684\u62fc\u63a5\u65f6\uff0c\u901f\u5ea6\u4e0ejoin()\u65b9\u6cd5\u76f8\u5f53\u3002 \u5c3d\u7ba1\u5982\u6b64\uff0c\u8fd9\u79cd\u65b9\u5f0f\u4e0e\u5176\u5b83\u67d0\u4e9b\u7f16\u7a0b\u8bed\u8a00\u76f8\u6bd4\uff0c\u8fd8\u662f\u6b20\u4f18\u96c5\uff0c\u56e0\u4e3a\u5b83\u5f15\u5165\u4e86\u4e00\u4e2a f \u6807\u8bc6\u3002\u800c\u5176\u5b83\u67d0\u4e9b\u7a0b\u5e8f\u8bed\u8a00\u53ef\u4ee5\u66f4\u7b80\u7ec3\uff0c\u6bd4\u5982shell\uff1a name = \"world\" myname = \"python_cat\" words = \"Hello ${ name } . My name is ${ myname } .\" echo $words >>>Hello world. My name is python_cat. \u603b\u7ed3\u4e00\u4e0b\uff0c\u6211\u4eec\u524d\u9762\u8bf4\u7684\u201c\u5b57\u7b26\u4e32\u62fc\u63a5\u201d\uff0c\u5176\u5b9e\u662f\u4ece\u7ed3\u679c\u4e0a\u7406\u89e3\u3002\u82e5\u4ece\u5b9e\u73b0\u539f\u7406\u4e0a\u5212\u5206\u7684\u8bdd\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u8fd9\u4e9b\u65b9\u6cd5\u5212\u5206\u51fa\u4e09\u79cd\u7c7b\u578b\uff1a \u683c\u5f0f\u5316\u7c7b\uff1a%\u3001format()\u3001template \u62fc\u63a5\u7c7b\uff1a+\u3001()\u3001join() \u63d2\u503c\u7c7b\uff1af-string \u5f53\u8981\u5904\u7406\u5b57\u7b26\u4e32\u5217\u8868\u7b49\u5e8f\u5217\u7ed3\u6784\u65f6\uff0c\u91c7\u7528join()\u65b9\u5f0f\uff1b\u62fc\u63a5\u957f\u5ea6\u4e0d\u8d85\u8fc720\u65f6\uff0c\u9009\u7528+\u53f7\u64cd\u4f5c\u7b26\u65b9\u5f0f\uff1b\u957f\u5ea6\u8d85\u8fc720\u7684\u60c5\u51b5\uff0c\u9ad8\u7248\u672c\u9009\u7528f-string\uff0c\u4f4e\u7248\u672c\u65f6\u770b\u60c5\u51b5\u4f7f\u7528format()\u6216join()\u65b9\u5f0f\u3002","title":"Python\u5b57\u7b26\u62fc\u63a5"},{"location":"python/str_joint/#python-7","text":"","title":"Python \u62fc\u63a5\u5b57\u7b26\u4e32\u7684 7 \u79cd\u65b9\u5f0f"},{"location":"python/str_joint/#1c","text":"print ( ' %s %s ' % ( 'Hello' , 'world' )) >>> Hello world %\u53f7\u683c\u5f0f\u5316\u5b57\u7b26\u4e32\u7684\u65b9\u5f0f\u7ee7\u627f\u81ea\u53e4\u8001\u7684C\u8bed\u8a00\uff0c\u8fd9\u5728\u5f88\u591a\u7f16\u7a0b\u8bed\u8a00\u90fd\u6709\u7c7b\u4f3c\u7684\u5b9e\u73b0\u3002\u4e0a\u4f8b\u7684%s\u662f\u4e00\u4e2a\u5360\u4f4d\u7b26\uff0c\u5b83\u4ec5\u4ee3\u8868\u4e00\u6bb5\u5b57\u7b26\u4e32\uff0c\u5e76\u4e0d\u662f\u62fc\u63a5\u7684\u5b9e\u9645\u5185\u5bb9\u3002\u5b9e\u9645\u7684\u62fc\u63a5\u5185\u5bb9\u5728\u4e00\u4e2a\u5355\u72ec\u7684%\u53f7\u540e\u9762\uff0c\u653e\u5728\u4e00\u4e2a\u5143\u7ec4\u91cc\u3002 \u7c7b\u4f3c\u7684\u5360\u4f4d\u7b26\u8fd8\u6709\uff1a%d\uff08\u4ee3\u8868\u4e00\u4e2a\u6574\u6570\uff09\u3001%f\uff08\u4ee3\u8868\u4e00\u4e2a\u6d6e\u70b9\u6570\uff09\u3001%x\uff08\u4ee3\u8868\u4e00\u4e2a16\u8fdb\u5236\u6570\uff09\uff0c\u7b49\u7b49\u3002%\u5360\u4f4d\u7b26\u65e2\u662f\u8fd9\u79cd\u62fc\u63a5\u65b9\u5f0f\u7684\u7279\u70b9\uff0c\u540c\u65f6\u4e5f\u662f\u5176\u9650\u5236\uff0c\u56e0\u4e3a\u6bcf\u79cd\u5360\u4f4d\u7b26\u90fd\u6709\u7279\u5b9a\u610f\u4e49\uff0c\u5b9e\u9645\u4f7f\u7528\u8d77\u6765\u592a\u9ebb\u70e6\u4e86\u3002","title":"1\u3001\u6765\u81eaC\u8bed\u8a00\u7684%\u65b9\u5f0f"},{"location":"python/str_joint/#2format","text":"# \u7b80\u6d01\u7248 s1 = 'Hello {}! My name is {}.' . format ( 'World' , 'Python\u732b' ) print ( s1 ) >>> Hello World ! My name is Python\u732b . # \u5bf9\u53f7\u5165\u5ea7\u7248 s2 = 'Hello {0}! My name is {1}.' . format ( 'World' , 'Python\u732b' ) s3 = 'Hello {name1}! My name is {name2}.' . format ( name1 = 'World' , name2 = 'Python\u732b' ) print ( s2 ) >>> Hello World ! My name is Python\u732b . print ( s3 ) >>> Hello World ! My name is Python\u732b . \u8fd9\u79cd\u65b9\u5f0f\u4f7f\u7528\u82b1\u62ec\u53f7{}\u505a\u5360\u4f4d\u7b26\uff0c\u5728format\u65b9\u6cd5\u4e2d\u518d\u8f6c\u5165\u5b9e\u9645\u7684\u62fc\u63a5\u503c\u3002\u5bb9\u6613\u770b\u51fa\uff0c\u5b83\u5b9e\u9645\u4e0a\u662f\u5bf9%\u53f7\u62fc\u63a5\u65b9\u5f0f\u7684\u6539\u8fdb\u3002\u8fd9\u79cd\u65b9\u5f0f\u5728Python2.6\u4e2d\u5f00\u59cb\u5f15\u5165\u3002 \u4e0a\u4f8b\u4e2d\uff0c\u7b80\u6d01\u7248\u7684\u82b1\u62ec\u53f7\u4e2d\u65e0\u5185\u5bb9\uff0c\u7f3a\u70b9\u662f\u5bb9\u6613\u5f04\u9519\u6b21\u5e8f\u3002\u5bf9\u53f7\u5165\u5ea7\u7248\u4e3b\u8981\u6709\u4e24\u79cd\uff0c\u4e00\u79cd\u4f20\u5165\u5e8f\u5217\u53f7\uff0c\u4e00\u79cd\u5219\u4f7f\u7528key-value\u7684\u65b9\u5f0f\u3002\u5b9e\u6218\u4e2d\uff0c\u6211\u4eec\u66f4\u63a8\u8350\u540e\u4e00\u79cd\uff0c\u65e2\u4e0d\u4f1a\u6570\u9519\u6b21\u5e8f\uff0c\u53c8\u66f4\u76f4\u89c2\u53ef\u8bfb\u3002","title":"2\u3001format()\u62fc\u63a5\u65b9\u5f0f"},{"location":"python/str_joint/#3","text":"s_tuple = ( 'Hello' , ' ' , 'world' ) s_like_tuple = ( 'Hello' ' ' 'world' ) print ( s_tuple ) >>> ( 'Hello' , ' ' , 'world' ) print ( s_like_tuple ) >>> Hello world type ( s_like_tuple ) >>> str \u6ce8\u610f\uff0c\u4e0a\u4f8b\u4e2ds_like_tuple\u5e76\u4e0d\u662f\u4e00\u4e2a\u5143\u7ec4\uff0c\u56e0\u4e3a\u5143\u7d20\u95f4\u6ca1\u6709\u9017\u53f7\u5206\u9694\u7b26\uff0c\u8fd9\u4e9b\u5143\u7d20\u95f4\u53ef\u4ee5\u7528\u7a7a\u683c\u95f4\u9694\uff0c\u4e5f\u53ef\u4ee5\u4e0d\u8981\u7a7a\u683c\u3002\u4f7f\u7528type()\u67e5\u770b\uff0c\u53d1\u73b0\u5b83\u5c31\u662f\u4e00\u4e2astr\u7c7b\u578b\u3002\u6211\u6ca1\u67e5\u5230\u8fd9\u662f\u5565\u539f\u56e0\uff0c\u731c\u6d4b\u6216\u8bb8()\u62ec\u53f7\u4e2d\u7684\u5185\u5bb9\u662f\u88abPython\u4f18\u5316\u5904\u7406\u4e86\u3002 \u8fd9\u79cd\u65b9\u5f0f\u770b\u8d77\u6765\u5f88\u5feb\u6377\uff0c\u4f46\u662f\uff0c\u62ec\u53f7()\u5185\u8981\u6c42\u5143\u7d20\u662f\u771f\u5b9e\u5b57\u7b26\u4e32\uff0c\u4e0d\u80fd\u6df7\u7528\u53d8\u91cf\uff0c\u6240\u4ee5\u4e0d\u591f\u7075\u6d3b\u3002 # \u591a\u5143\u7d20\u65f6\uff0c\u4e0d\u652f\u6301\u6709\u53d8\u91cf str_1 = 'Hello' str_2 = ( str_1 'world' ) >>> SyntaxError : invalid syntax str_3 = ( str_1 str_1 ) >>> SyntaxError : invalid syntax # \u4f46\u662f\u4e0b\u9762\u5199\u6cd5\u4e0d\u4f1a\u62a5\u9519 str_4 = ( str_1 ) \u8bf4\u5b9e\u8bdd\uff0c\u6211\u4e0d\u559c\u6b22\u8fd9\u79cd\u5b9e\u73b0\u65b9\u5f0f\u3002\u6d53\u6d53\u7684\u4e00\u80a1\u88ab\u9762\u5411\u5bf9\u8c61\u601d\u60f3\u6bd2\u5bb3\u7684\u81ed\u5473\u3002 \u5c31\u4e0d\u591a\u8bf4\u4e86\u3002 5\u3001\u5e38\u7528\u7684+\u53f7\u65b9\u5f0f str_1 = 'Hello world\uff01 ' str_2 = 'My name is Python\u732b.' print ( str_1 + str_2 ) >>> Hello world \uff01 My name is Python\u732b . print ( str_1 ) >>> Hello world \uff01 \u8fd9\u79cd\u65b9\u5f0f\u6700\u5e38\u7528\u3001\u76f4\u89c2\u3001\u6613\u61c2\uff0c\u662f\u5165\u95e8\u7ea7\u7684\u5b9e\u73b0\u65b9\u5f0f\u3002\u4f46\u662f\uff0c\u5b83\u4e5f\u5b58\u5728\u4e24\u5904\u8ba9\u4eba\u5bb9\u6613\u72af\u9519\u7684\u5730\u65b9\u3002 \u9996\u5148\uff0c\u65b0\u5165\u95e8\u7f16\u7a0b\u7684\u540c\u5b66\u5bb9\u6613\u72af\u9519\uff0c\u4ed6\u4eec\u4e0d\u77e5\u9053\u5b57\u7b26\u4e32\u662f\u4e0d\u53ef\u53d8\u7c7b\u578b\uff0c\u65b0\u7684\u5b57\u7b26\u4e32\u4f1a\u72ec\u5360\u4e00\u5757\u65b0\u7684\u5185\u5b58\uff0c\u800c\u539f\u6765\u7684\u5b57\u7b26\u4e32\u4fdd\u6301\u4e0d\u53d8\u3002\u4e0a\u4f8b\u4e2d\uff0c\u62fc\u63a5\u524d\u6709\u4e24\u6bb5\u5b57\u7b26\u4e32\uff0c\u62fc\u63a5\u540e\u5b9e\u9645\u6709\u4e09\u6bb5\u5b57\u7b26\u4e32\u3002 \u5176\u6b21\uff0c\u4e00\u4e9b\u6709\u7ecf\u9a8c\u7684\u8001\u7a0b\u5e8f\u5458\u4e5f\u5bb9\u6613\u72af\u9519\uff0c\u4ed6\u4eec\u4ee5\u4e3a\u5f53\u62fc\u63a5\u6b21\u6570\u4e0d\u8d85\u8fc73\u65f6\uff0c\u4f7f\u7528+\u53f7\u8fde\u63a5\u7b26\u5c31\u4f1a\u6bd4\u5176\u5b83\u65b9\u5f0f\u5feb\uff08ps\uff1a\u4e0d\u5c11Python\u6559\u7a0b\u90fd\u662f\u5982\u6b64\u5efa\u8bae\uff09\uff0c\u4f46\u8fd9\u6ca1\u6709\u4efb\u4f55\u5408\u7406\u6839\u636e\u3002 \u4e8b\u5b9e\u4e0a\uff0c\u5728\u62fc\u63a5\u77ed\u7684\u5b57\u9762\u503c\u65f6\uff0c\u7531\u4e8eCPython\u4e2d\u7684 \u5e38\u6570\u6298\u53e0 \uff08constant folding\uff09\u529f\u80fd\uff0c\u8fd9\u4e9b\u5b57\u9762\u503c\u4f1a\u88ab\u8f6c\u6362\u6210\u66f4\u77ed\u7684\u5f62\u5f0f\uff0c\u4f8b\u5982'a'+'b'+'c' \u88ab\u8f6c\u6362\u6210'abc'\uff0c'hello'+'world'\u4e5f\u4f1a\u88ab\u8f6c\u6362\u6210'hello world'\u3002\u8fd9\u79cd\u8f6c\u6362\u662f\u5728\u7f16\u8bd1\u671f\u5b8c\u6210\u7684\uff0c\u800c\u5230\u4e86\u8fd0\u884c\u671f\u65f6\u5c31\u4e0d\u4f1a\u518d\u53d1\u751f\u4efb\u4f55\u62fc\u63a5\u64cd\u4f5c\uff0c\u56e0\u6b64\u4f1a\u52a0\u5feb\u6574\u4f53\u8ba1\u7b97\u7684\u901f\u5ea6\u3002 \u5e38\u6570\u6298\u53e0\u4f18\u5316\u6709\u4e00\u4e2a\u9650\u5ea6\uff0c\u5b83\u8981\u6c42\u62fc\u63a5\u7ed3\u679c\u7684\u957f\u5ea6\u4e0d\u8d85\u8fc720\u3002\u6240\u4ee5\uff0c\u5f53\u62fc\u63a5\u7684\u6700\u7ec8\u5b57\u7b26\u4e32\u957f\u5ea6\u4e0d\u8d85\u8fc720\u65f6\uff0c+\u53f7\u64cd\u4f5c\u7b26\u7684\u65b9\u5f0f\uff0c\u4f1a\u6bd4\u540e\u9762\u63d0\u5230\u7684join\u7b49\u65b9\u5f0f\u5feb\u5f97\u591a\uff0c\u8fd9\u4e0e+\u53f7\u7684\u4f7f\u7528\u6b21\u6570\u65e0\u5173\u3002","title":"3\u3001() \u7c7b\u4f3c\u5143\u7ec4\u65b9\u5f0f"},{"location":"python/str_joint/#6join","text":"str_list = [ 'Hello' , 'world' ] str_join1 = ' ' . join ( str_list ) str_join2 = '-' . join ( str_list ) print ( str_join1 ) >>> Hello world print ( str_join2 ) >>> Hello - world str\u5bf9\u8c61\u81ea\u5e26\u7684join()\u65b9\u6cd5\uff0c\u63a5\u53d7\u4e00\u4e2a\u5e8f\u5217\u53c2\u6570\uff0c\u53ef\u4ee5\u5b9e\u73b0\u62fc\u63a5\u3002\u62fc\u63a5\u65f6\uff0c\u5143\u7d20\u82e5\u4e0d\u662f\u5b57\u7b26\u4e32\uff0c\u9700\u8981\u5148\u8f6c\u6362\u4e00\u4e0b\u3002\u53ef\u4ee5\u770b\u51fa\uff0c\u8fd9\u79cd\u65b9\u6cd5\u6bd4\u8f83\u9002\u7528\u4e8e\u8fde\u63a5\u5e8f\u5217\u5bf9\u8c61\u4e2d\uff08\u4f8b\u5982\u5217\u8868\uff09\u7684\u5143\u7d20\uff0c\u5e76\u8bbe\u7f6e\u7edf\u4e00\u7684\u95f4\u9694\u7b26\u3002 \u5f53\u62fc\u63a5\u957f\u5ea6\u8d85\u8fc720\u65f6\uff0c\u8fd9\u79cd\u65b9\u5f0f\u57fa\u672c\u4e0a\u662f\u9996\u9009\u3002\u4e0d\u8fc7\uff0c\u5b83\u7684\u7f3a\u70b9\u5c31\u662f\uff0c\u4e0d\u9002\u5408\u8fdb\u884c\u96f6\u6563\u7247\u6bb5\u7684\u3001\u4e0d\u5904\u4e8e\u5e8f\u5217\u96c6\u5408\u7684\u5143\u7d20\u62fc\u63a5\u3002","title":"6\u3001join()\u62fc\u63a5\u65b9\u5f0f"},{"location":"python/str_joint/#7f-string","text":"name = 'world' myname = 'python_cat' words = f 'Hello {name}. My name is {myname}.' print ( words ) >>> Hello world . My name is python_cat . f-string\u65b9\u5f0f\u51fa\u81eaPEP 498\uff08Literal String Interpolation\uff0c\u5b57\u9762\u5b57\u7b26\u4e32\u63d2\u503c\uff09\uff0c\u4ecePython3.6\u7248\u672c\u5f15\u5165\u3002\u5176\u7279\u70b9\u662f\u5728\u5b57\u7b26\u4e32\u524d\u52a0 f \u6807\u8bc6\uff0c\u5b57\u7b26\u4e32\u4e2d\u95f4\u5219\u7528\u82b1\u62ec\u53f7{}\u5305\u88f9\u5176\u5b83\u5b57\u7b26\u4e32\u53d8\u91cf\u3002 \u8fd9\u79cd\u65b9\u5f0f\u5728\u53ef\u8bfb\u6027\u4e0a\u79d2\u6740format()\u65b9\u5f0f\uff0c\u5904\u7406\u957f\u5b57\u7b26\u4e32\u7684\u62fc\u63a5\u65f6\uff0c\u901f\u5ea6\u4e0ejoin()\u65b9\u6cd5\u76f8\u5f53\u3002 \u5c3d\u7ba1\u5982\u6b64\uff0c\u8fd9\u79cd\u65b9\u5f0f\u4e0e\u5176\u5b83\u67d0\u4e9b\u7f16\u7a0b\u8bed\u8a00\u76f8\u6bd4\uff0c\u8fd8\u662f\u6b20\u4f18\u96c5\uff0c\u56e0\u4e3a\u5b83\u5f15\u5165\u4e86\u4e00\u4e2a f \u6807\u8bc6\u3002\u800c\u5176\u5b83\u67d0\u4e9b\u7a0b\u5e8f\u8bed\u8a00\u53ef\u4ee5\u66f4\u7b80\u7ec3\uff0c\u6bd4\u5982shell\uff1a name = \"world\" myname = \"python_cat\" words = \"Hello ${ name } . My name is ${ myname } .\" echo $words >>>Hello world. My name is python_cat. \u603b\u7ed3\u4e00\u4e0b\uff0c\u6211\u4eec\u524d\u9762\u8bf4\u7684\u201c\u5b57\u7b26\u4e32\u62fc\u63a5\u201d\uff0c\u5176\u5b9e\u662f\u4ece\u7ed3\u679c\u4e0a\u7406\u89e3\u3002\u82e5\u4ece\u5b9e\u73b0\u539f\u7406\u4e0a\u5212\u5206\u7684\u8bdd\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u8fd9\u4e9b\u65b9\u6cd5\u5212\u5206\u51fa\u4e09\u79cd\u7c7b\u578b\uff1a \u683c\u5f0f\u5316\u7c7b\uff1a%\u3001format()\u3001template \u62fc\u63a5\u7c7b\uff1a+\u3001()\u3001join() \u63d2\u503c\u7c7b\uff1af-string \u5f53\u8981\u5904\u7406\u5b57\u7b26\u4e32\u5217\u8868\u7b49\u5e8f\u5217\u7ed3\u6784\u65f6\uff0c\u91c7\u7528join()\u65b9\u5f0f\uff1b\u62fc\u63a5\u957f\u5ea6\u4e0d\u8d85\u8fc720\u65f6\uff0c\u9009\u7528+\u53f7\u64cd\u4f5c\u7b26\u65b9\u5f0f\uff1b\u957f\u5ea6\u8d85\u8fc720\u7684\u60c5\u51b5\uff0c\u9ad8\u7248\u672c\u9009\u7528f-string\uff0c\u4f4e\u7248\u672c\u65f6\u770b\u60c5\u51b5\u4f7f\u7528format()\u6216join()\u65b9\u5f0f\u3002","title":"7\u3001f-string\u65b9\u5f0f"},{"location":"sql/mysql_yh/","text":"MySQL \u4f18\u5316\u6307\u5357 \u00b6 \u6162\u67e5\u8be2\u65e5\u5fd7 \u5f00\u542f\u6492\u7f51\u6a21\u5f0f \u00b6 \u5f00\u542f\u4e86MySQL\u6162\u67e5\u8be2\u65e5\u5fd7\u4e4b\u540e\uff0cMySQL\u4f1a\u81ea\u52a8\u5c06\u6267\u884c\u65f6\u95f4\u8d85\u8fc7\u6307\u5b9a\u79d2\u6570\u7684SQL\u7edf\u7edf\u8bb0\u5f55\u4e0b\u6765\uff0c\u8fd9\u5bf9\u4e8e\u641c\u7f57\u7ebf\u4e0a\u6162SQL\u6709\u5f88\u5927\u7684\u5e2e\u52a9\u3002 SHOW VARIABLES LIKE 'slow%' \u4ee5\u6211\u521a\u5b89\u88c5\u7684mysql5.7\u4e3a\u4f8b \u67e5\u8be2\u7ed3\u679c\u662f\u8fd9\u6837\u5b50\u7684\uff1a slow_launch_time\uff1a\u8868\u793a\u5982\u679c\u5efa\u7acb\u7ebf\u7a0b\u82b1\u8d39\u4e86\u6bd4\u8fd9\u4e2a\u503c\u66f4\u957f\u7684\u65f6\u95f4,slow_launch_threads \u8ba1\u6570\u5668\u5c06\u589e\u52a0 slow_query_log\uff1a\u662f\u5426\u5f00\u542f\u6162\u67e5\u8be2\u65e5\u5fd7 ON\u5f00\u542f\uff0cOFF\u5173\u95ed \u9ed8\u8ba4\u6ca1\u6709\u5f00\u542f slow_query_log_file\uff1a\u65e5\u5fd7\u4fdd\u5b58\u8def\u5f84 SHOW VARIABLES LIKE 'long%' long_query_time\uff1a\u8fbe\u5230\u591a\u5c11\u79d2\u7684sql\u5c31\u8bb0\u5f55\u65e5\u5fd7 \u5ba2\u6237\u7aef\u53ef\u4ee5\u7528set\u8bbe\u7f6e\u53d8\u91cf\u7684\u65b9\u5f0f\u8ba9\u6162\u67e5\u8be2\u5f00\u542f\uff0c\u4f46\u662f\u4e2a\u4eba\u4e0d\u63a8\u8350\uff0c\u56e0\u4e3a\u771f\u5b9e\u64cd\u4f5c\u8d77\u6765\u4f1a\u6709\u4e00\u4e9b\u95ee\u9898\uff0c\u6bd4\u5982\u8bf4\uff0c\u91cd\u542fMySQL\u540e\u5c31\u5931\u6548\u4e86\uff0c\u6216\u8005\u662f\u5f00\u542f\u4e86\u6162\u67e5\u8be2\uff0c\u6211\u53c8\u53bb\u6539\u53d8\u91cf\u503c\uff0c\u5b83\u5c31\u4e0d\u751f\u6548\u4e86\u3002 \u7f16\u8f91MySQL\u7684\u914d\u7f6e\u6587\u4ef6\uff1a \u00b6 vim /etc/my.cnf \u52a0\u5165\u5982\u4e0b\u4e09\u884c\uff1a slow_query_log=ON slow_query_log_file=/var/lib/mysql/localhost-centos-slow.log long_query_time=3 \u6211\u8fd9\u91cc\u8bbe\u7f6e\u7684\u662f3\u79d2 \u91cd\u542fMySQL \u00b6 systemctl restart mysqld ; \u670d\u52a1\u5668\u5f00\u4e00\u4e2a\u76d1\u63a7\uff1a \u00b6 tail -f /var/lib/mysql/localhost-centos-slow.log \u5ba2\u6237\u7aef\u8d70\u4e00\u6761SQL\uff1a \u00b6 SELECT SLEEP ( 3 ) \u6b64\u65f6\u53d1\u73b0sql\u5df2\u7ecf\u88ab\u8bb0\u5f55\u5230\u65e5\u5fd7\u91cc\u4e86\u3002\uff08\u6709\u65f6\u5019\u4e0d\u4e00\u5b9a\uff0c\u6211\u770b\u5230\u5f88\u591a\u535a\u5ba2\u8bb2\u7684\u662f\u8d85\u8fc7\u6307\u5b9a\u79d2\u6570\uff0c\u4f46\u6211\u5b9e\u9a8c\u5f97\u51fa\u7684\u7ed3\u679c\u662f\u8fbe\u5230\u6307\u5b9a\u79d2\u6570\uff09 EXPLAIN \u70b9\u5bf9\u70b9\u5206\u6790 \u00b6 explain\u662f\u4e00\u4e2a\u795e\u5947\u7684\u547d\u4ee4\uff0c\u53ef\u4ee5\u67e5\u770bsql\u7684\u5177\u4f53\u7684\u6267\u884c\u8ba1\u5212\u3002 \u4ee5\u4e00\u6761\u8054\u67e5sql\u4e3a\u4f8b\uff1a SELECT a . id , a . cn_name , a . role_id , r . name FROM tb_usr_admins a INNER JOIN tb_base_roles r ON r . id = a . role_id WHERE a . cn_name = \"\u63a5\u5355\u4eba\u5458\" \u67e5\u8be2\u7ed3\u679c\u662f\uff1a \u52a0\u4e0aexplain\u547d\u4ee4\u6765\u6267\u884c\uff1a EXPLAIN SELECT a . id , a . cn_name , a . role_id , r . name FROM tb_usr_admins a INNER JOIN tb_base_roles r ON r . id = a . role_id WHERE a . cn_name = \"\u63a5\u5355\u4eba\u5458\" \u67e5\u8be2\u7ed3\u679c\u662f\uff1a \u8fd9\u5c31\u662f\u8fd9\u6761SQL\u7684\u6267\u884c\u8ba1\u5212\uff0c\u4e0b\u9762\u6765\u8bf4\u660e\u4e00\u4e0b\u8fd9\u4e2a\u6267\u884c\u8ba1\u5212\u600e\u4e48\u770b id\uff1a\u4ee3\u8868\u4f18\u5148\u7ea7 id\u503c\u8d8a\u5927\uff0c\u8d8a\u5148\u6267\u884c\uff0cid\u503c\u76f8\u540c\uff0c\u4ece\u4e0a\u5f80\u4e0b\u6267\u884c\u3002\uff08\u6bd4\u5982\u793a\u4f8b\u7684\u8fd9\u6761sql\u7684\u6267\u884c\u8ba1\u5212\uff0c\u5c31\u662f\u5148\u6267\u884c\u7b2c\u4e00\u884c\uff0c\u518d\u6267\u884c\u7b2c\u4e8c\u884c\uff09 select_type\uff1a\u8868\u793aselect\u7c7b\u578b \u53d6\u503c\u5982\u4e0b \u00b6 simple \u7b80\u5355\u8868 \u5373\u4e0d\u4f7f\u7528\u8868\u8fde\u63a5\u6216\u8005\u5b50\u67e5\u8be2 primary \u5305\u542bunion\u6216\u8005\u5b50\u67e5\u8be2\u7684\u4e3b\u67e5\u8be2 \u5373\u5916\u5c42\u7684\u67e5\u8be2 union UNION\u4e2d\u7684\u7b2c\u4e8c\u4e2a\u6216\u8005\u540e\u9762\u7684\u67e5\u8be2\u8bed\u53e5 subquery \u4e00\u822c\u5b50\u67e5\u8be2\u4e2d\u7684\u5b50\u67e5\u8be2\u88ab\u6807\u8bb0\u4e3asubquery\uff0c\u4e5f\u5c31\u662f\u4f4d\u4e8eselect\u5217\u8868\u4e2d\u7684\u67e5\u8be2 derived \u6d3e\u751f\u8868 \u8be5\u4e34\u65f6\u8868\u662f\u4ece\u5b50\u67e5\u8be2\u6d3e\u751f\u51fa\u6765\u7684 \u7b49\u7b49 type\uff1a\u8868\u793aMySQL\u5728\u8868\u4e2d\u67e5\u627e\u6570\u636e\u7684\u65b9\u5f0f\uff0c\u6216\u8005\u53eb\u8bbf\u95ee\u7c7b\u578b\uff0c\u4ee5\u4e0b\u5bf9\u4e8etype\u53d6\u503c\u7684\u8bf4\u660e \u4ece\u4e0a\u5f80\u4e0b\u6027\u80fd\u7531\u6700\u5dee\u5230\u6700\u597d \u00b6 all:\u5168\u8868\u626b\u63cf\uff0cMySQL\u904d\u5386\u5168\u8868\u6765\u627e\u5230\u5339\u914d\u7684\u884c index\uff1a\u7d22\u5f15\u5168\u626b\u63cf\uff0cMySQL\u904d\u5386\u6323\u4e2a\u7d22\u5f15\u6765\u67e5\u8be2\u5339\u914d\u7684\u884c range\uff1a\u7d22\u5f15\u8303\u56f4\u626b\u63cf\uff0c\u5e38\u89c1\u4e8e<\u3001<=\u3001>\u3001>=\u3001between\u7b49\u64cd\u4f5c\u7b26 ref\uff1a\u4f7f\u7528\u975e\u552f\u4e00\u7d22\u5f15\u6216\u552f\u4e00\u7d22\u5f15\u7684\u524d\u7f00\u626b\u63cf\uff0c\u8fd4\u56de\u5339\u914d\u7684\u5355\u884c\u6570\u636e eq_ref\uff1a\u7c7b\u4f3cref\uff0c\u533a\u522b\u5c31\u5728\u4e8e\u4f7f\u7528\u7684\u7d22\u5f15\u662f\u552f\u4e00\u7d22\u5f15\uff0c\u7b80\u5355\u6765\u8bf4\uff0c\u5c31\u662f\u591a\u8868\u8fde\u63a5\u4e2d\u4f7f\u7528primary key\u6216\u8005unique index\u4f5c\u4e3a\u5173\u8054\u6761\u4ef6\u3002 const/system\uff1a\u5355\u8868\u4e2d\u6700\u591a\u6709\u4e00\u4e2a\u5339\u914d\u884c\uff0c\u67e5\u8be2\u8d77\u6765\u975e\u5e38\u8fc5\u901f\uff0c\u5e38\u89c1\u4e8e\u6839\u636eprimary key\u6216\u8005\u552f\u4e00\u7d22\u5f15unique index\u8fdb\u884c\u7684\u5355\u8868\u67e5\u8be2 null\uff1amysql\u4e0d\u7528\u8bbf\u95ee\u8868\u6216\u8005\u7d22\u5f15\uff0c\u76f4\u63a5\u5c31\u80fd\u591f\u5f97\u5230\u67e5\u8be2\u7684\u7ed3\u679c\uff0c\u4f8b\u5982select 1+2 as result\u3002 possible_keys\uff1a\u8868\u793a\u67e5\u8be2\u65f6\u53ef\u80fd\u4f7f\u7528\u7684\u7d22\u5f15 \u00b6 key\uff1a\u8868\u793a\u5b9e\u9645\u4f7f\u7528\u7684\u7d22\u5f15 \u00b6 key_len\uff1a\u4f7f\u7528\u5230\u7d22\u5f15\u5b57\u6bb5\u7684\u957f\u5ea6 \u00b6 rows\uff1a\u626b\u63cf\u6570\u91cf \u00b6 Extra\uff1a\u6267\u884c\u60c5\u51b5\u7684\u8bf4\u660e\u548c\u63cf\u8ff0\uff0c\u5305\u542b\u4e0d\u9002\u5408\u5728\u5176\u4ed6\u5217\u4e2d\u663e\u793a\u4f46\u662f\u5bf9\u6267\u884c\u8ba1\u5212\u975e\u5e38\u91cd\u8981\u7684\u989d\u5916\u4fe1\u606f\uff0c\u5e38\u7528\u53d6\u503c\u5982\u4e0b\uff1a \u00b6 Using index\uff1a\u76f4\u63a5\u8bbf\u95ee\u7d22\u5f15\u5c31\u53d6\u5230\u4e86\u6570\u636e\uff0c\u9ad8\u6027\u80fd\u7684\u8868\u73b0\u3002 Using where\uff1a\u76f4\u63a5\u5728\u4e3b\u952e\u7d22\u5f15\u4e0a\u8fc7\u6ee4\u6570\u636e\uff0c\u5fc5\u5e26where\u5b50\u53e5\uff0c\u800c\u4e14\u7528\u4e0d\u4e0a\u7d22\u5f15 Using index condition\uff1a\u5148\u6761\u4ef6\u8fc7\u6ee4\u7d22\u5f15\uff0c\u518d\u67e5\u6570\u636e\uff0c Using filesort\uff1a\u4f7f\u7528\u4e86\u5916\u90e8\u6587\u4ef6\u6392\u5e8f \u53ea\u8981\u89c1\u5230\u8fd9\u4e2a \u5c31\u8981\u4f18\u5316\u6389 Using temporary\uff1a\u521b\u5efa\u4e86\u4e34\u65f6\u8868\u6765\u5904\u7406\u67e5\u8be2 \u53ea\u8981\u89c1\u5230\u8fd9\u4e2a \u4e5f\u8981\u5c3d\u91cf\u4f18\u5316\u6389 \u4f18\u5316\u4e89\u8bae\u65e0\u6570\u7684count() \u00b6 \u7edf\u8ba1\u5217\u4e0e\u7edf\u8ba1\u884c\uff1f \u00b6 COUNT()\u662f\u4e00\u4e2a\u7279\u6b8a\u7684\u51fd\u6570\uff0c\u6709\u4e24\u79cd\u4e0d\u540c\u7684\u4f5c\u7528\uff0c\u5b83\u53ef\u4ee5\u7edf\u8ba1\u67d0\u4e2a\u5217\u503c\u7684\u6570\u91cf\uff0c\u4e5f\u53ef\u4ee5\u7edf\u8ba1\u884c\u6570\u3002 \u5728\u7edf\u8ba1\u5217\u503c\u7684\u65f6\u5019\u8981\u6c42\u5217\u503c\u662f\u975e\u7a7a\u7684\uff0c\u4e5f\u5c31\u662f\u4e0d\u7edf\u8ba1null\u3002 \u5f53\u6211\u4eec\u7edf\u8ba1\u884c\u7684\u65f6\u5019\uff0c\u5e38\u89c1\u7684\u662fCOUNT(*)\uff0c\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u901a\u914d\u7b26*\u5e76\u4e0d\u4f1a\u50cf\u6211\u4eec\u731c\u60f3\u7684\u90a3\u6837\u6269\u5c55\u6210\u6240\u6709\u7684\u5217\uff0c\u5b9e\u9645\u4e0a\uff0c\u5b83\u4f1a\u5ffd\u7565\u6240\u6709\u7684\u5217\u800c\u76f4\u63a5\u7edf\u8ba1\u6240\u6709\u7684\u884c\u6570 \u89e3\u5bc6MyiSAM\u7684\u2018\u5feb\u2019 \u00b6 \u8fd9\u662f\u4e00\u4e2a\u5bb9\u6613\u4ea7\u751f\u8bef\u89e3\u7684\u4e8b\u60c5\uff1aMyiSAM\u7684count()\u51fd\u6570\u603b\u662f\u975e\u5e38\u5feb\u3002 \u4e0d\u8fc7\u5b83\u662f\u6709\u524d\u63d0\u6761\u4ef6\u7684\uff0c\u6761\u4ef6\u662f\u6ca1\u6709\u4efb\u4f55where\u6761\u4ef6\u7684count( )\u624d\u975e\u5e38\u5feb\uff0c\u56e0\u4e3a\u6b64\u65f6\u65e0\u987b\u5b9e\u9645\u7684\u53bb\u8ba1\u7b97\u8868\u7684\u884c\u6570\uff0cmysql\u53ef\u4ee5\u5229\u7528\u5b58\u50a8\u5f15\u64ce\u7684\u7279\u6027\u76f4\u63a5\u83b7\u5f97\u8fd9\u4e2a\u503c\uff0c\u5982\u679cmysql\u77e5\u9053\u67d0\u5217\u4e0d\u53ef\u80fd\u6709null\u503c\uff0c\u90a3\u4e48mysql\u5185\u90e8\u4f1a\u5c06count(\u5217)\u8868\u8fbe\u5f0f\u4f18\u5316\u4e3acount( )\u3002 \u5f53\u7edf\u8ba1\u5e26\u6709where\u6761\u4ef6\u7684\u67e5\u8be2\uff0c\u90a3\u4e48mysql\u7684count()\u548c\u5176\u4ed6\u5b58\u50a8\u5f15\u64ce\u5c31\u6ca1\u6709\u4ec0\u4e48\u4e0d\u540c\u4e86\u3002 COUNT(1)\u3001COUNT(*)\u3001COUNT(\u5217) \u00b6 \uff08\u5148\u63d0\u524d\u7533\u660e\uff0c\u672c\u4eba\u662f\u5728innodb\u5e93\u91cc\u505a\u7684\u5b9e\u9a8c\u3002\uff09 count(1)\u548ccount(*)\u76f4\u63a5\u5c31\u662f\u7edf\u8ba1\u4e3b\u952e\uff0c\u4ed6\u4eec\u4e24\u4e2a\u7684\u6548\u7387\u662f\u4e00\u6837\u7684\u3002\u5982\u679c\u5220\u9664\u4e3b\u952e\uff0c\u4ed6\u4eec\u90fd\u8d70\u5168\u8868\u626b\u63cf\u3002 \u5982\u679ccount(\u5217)\u4e2d\u7684\u5b57\u6bb5\u662f\u7d22\u5f15\u7684\u8bdd\uff0ccount(\u5217)\u548ccount(*)\u4e00\u6837\u5feb\uff0c\u5426\u5219count(\u5217)\u8d70\u5168\u8868\u626b\u63cf\u3002 \u4f18\u5316order by \u8bed\u53e5 \u00b6 MySQL\u7684\u6392\u5e8f\u65b9\u5f0f \u00b6 \u4f18\u5316order by\u8bed\u53e5\u5c31\u4e0d\u5f97\u4e0d\u4e86\u89e3mysql\u7684\u6392\u5e8f\u65b9\u5f0f\u3002 \u7b2c\u4e00\u79cd\u901a\u8fc7\u6709\u5e8f\u7d22\u5f15\u8fd4\u56de\u6570\u636e\uff0c\u8fd9\u79cd\u65b9\u5f0f\u7684extra\u663e\u793a\u4e3aUsing Index,\u4e0d\u9700\u8981\u989d\u5916\u7684\u6392\u5e8f\uff0c\u64cd\u4f5c\u6548\u7387\u8f83\u9ad8\u3002 \u7b2c\u4e8c\u79cd\u662f\u5bf9\u8fd4\u56de\u7684\u6570\u636e\u8fdb\u884c\u6392\u5e8f\uff0c\u4e5f\u5c31\u662f\u901a\u5e38\u770b\u5230\u7684Using filesort\uff0cfilesort\u662f\u901a\u8fc7\u76f8\u5e94\u7684\u6392\u5e8f\u7b97\u6cd5\uff0c\u5c06\u6570\u636e\u653e\u5728sort_buffer_size\u7cfb\u7edf\u53d8\u91cf\u8bbe\u7f6e\u7684\u5185\u5b58\u6392\u5e8f\u533a\u4e2d\u8fdb\u884c\u6392\u5e8f\uff0c\u5982\u679c\u5185\u5b58\u88c5\u8f7d\u4e0d\u4e0b\uff0c\u5b83\u5c31\u4f1a\u5c06\u78c1\u76d8\u4e0a\u7684\u6570\u636e\u8fdb\u884c\u5206\u5757\uff0c\u518d\u5bf9\u5404\u4e2a\u6570\u636e\u5757\u8fdb\u884c\u6392\u5e8f\uff0c\u7136\u540e\u5c06\u5404\u4e2a\u5757\u5408\u5e76\u6210\u6709\u5e8f\u7684\u7ed3\u679c\u96c6\u3002 filesort\u7684\u4f18\u5316 \u00b6 \u4e86\u89e3\u4e86MySQL\u6392\u5e8f\u7684\u65b9\u5f0f\uff0c\u4f18\u5316\u76ee\u6807\u5c31\u6e05\u6670\u4e86\uff1a\u5c3d\u91cf\u51cf\u5c11\u989d\u5916\u7684\u6392\u5e8f\uff0c\u901a\u8fc7\u7d22\u5f15\u76f4\u63a5\u8fd4\u56de\u6709\u5e8f\u6570\u636e\u3002where\u6761\u4ef6\u548corder by\u4f7f\u7528\u76f8\u540c\u7684\u7d22\u5f15\u3002 \u521b\u5efa\u5408\u9002\u7684\u7d22\u5f15\u51cf\u5c11filesort\u7684\u51fa\u73b0\u3002 \u67e5\u8be2\u65f6\u5c3d\u91cf\u53ea\u4f7f\u7528\u5fc5\u8981\u7684\u5b57\u6bb5\uff0cselect \u5177\u4f53\u5b57\u6bb5\u7684\u540d\u79f0\uff0c\u800c\u4e0d\u662fselect * \u9009\u62e9\u6240\u6709\u5b57\u6bb5\uff0c\u8fd9\u6837\u53ef\u4ee5\u51cf\u5c11\u6392\u5e8f\u533a\u7684\u4f7f\u7528\uff0c\u63d0\u9ad8SQL\u6027\u80fd\u3002 \u4f18\u5316group by \u8bed\u53e5 \u00b6 \u4e3a\u4ec0\u4e48order by\u540e\u9762\u4e0d\u80fd\u8ddfgroup by ? \u00b6 \u4e8b\u5b9e\u4e0a\uff0cMySQL\u5728\u6240\u6709\u7684group by \u540e\u9762\u9690\u5f0f\u7684\u52a0\u4e86order by \uff0c\u4e5f\u5c31\u662f\u8bf4group by\u8bed\u53e5\u7684\u7ed3\u679c\u4f1a\u9ed8\u8ba4\u8fdb\u884c\u6392\u5e8f\u3002 \u5982\u679c\u4f60\u8981\u5728order by\u540e\u9762\u52a0group by \uff0c\u90a3\u7ed3\u679c\u6267\u884c\u7684SQL\u662f\u4e0d\u662f\u8fd9\u6837\uff1aselect * from tb order by \u2026 group by \u2026 order by \u2026 \uff1f \u8fd9\u4e0d\u662f\u641e\u7b11\u5417\uff1f \u7981\u6b62\u6392\u5e8f \u00b6 \u65e2\u7136\u77e5\u9053\u95ee\u9898\u4e86\uff0c\u90a3\u4e48\u5c31\u5bb9\u6613\u4f18\u5316\u4e86\uff0c\u5982\u679c\u67e5\u8be2\u5305\u62ecgroup by\u4f46\u53c8\u4e0d\u5173\u5fc3\u7ed3\u679c\u96c6\u7684\u987a\u5e8f\uff0c\u800c\u8fd9\u79cd\u9ed8\u8ba4\u6392\u5e8f\u53c8\u5bfc\u81f4\u4e86\u9700\u8981\u6587\u4ef6\u6392\u5e8f\uff0c\u5219\u53ef\u4ee5\u6307\u5b9aorder by null \u7981\u6b62\u6392\u5e8f\u3002 \u4f8b\u5982\uff1a select * from tb group by name order by null ; \u4f18\u5316limit \u5206\u9875 \u00b6 \u4e00\u4e2a\u975e\u5e38\u5e38\u89c1\u53c8\u975e\u5e38\u5934\u75db\u7684\u573a\u666f\uff1a\u2018limit 1000,20\u2019\u3002 \u8fd9\u65f6MySQL\u9700\u8981\u67e5\u8be21020\u6761\u8bb0\u5f55\u7136\u540e\u53ea\u8fd4\u56de\u6700\u540e20\u6761\uff0c\u524d\u9762\u76841000\u6761\u90fd\u5c06\u88ab\u629b\u5f03\uff0c\u8fd9\u6837\u7684\u4ee3\u4ef7\u975e\u5e38\u9ad8\u3002\u5982\u679c\u6240\u6709\u9875\u9762\u7684\u8bbf\u95ee\u9891\u7387\u90fd\u76f8\u540c\uff0c\u90a3\u4e48\u8fd9\u6837\u7684\u67e5\u8be2\u5e73\u5747\u9700\u8981\u8bbf\u95ee\u534a\u4e2a\u8868\u7684\u6570\u636e\u3002 \u7b2c\u4e00\u79cd\u601d\u8def \u5728\u7d22\u5f15\u4e0a\u5206\u9875 \u00b6 \u5728\u7d22\u5f15\u4e0a\u5b8c\u6210\u5206\u9875\u64cd\u4f5c\uff0c\u6700\u540e\u6839\u636e\u4e3b\u952e\u5173\u8054\u56de\u539f\u8868\u67e5\u8be2\u6240\u9700\u8981\u7684\u5176\u4ed6\u5217\u7684\u5185\u5bb9\u3002 \u4f8b\u5982\uff1a SELECT * FROM tb_user LIMIT 1000 , 10 \u53ef\u4ee5\u4f18\u5316\u6210\u8fd9\u6837\uff1a SELECT * FROM tb_user u INNER JOIN ( SELECT id FROM tb_user LIMIT 1000 , 10 ) AS b ON b . id = u . id \u7b2c\u4e8c\u79cd\u601d\u8def \u5c06limit\u8f6c\u6362\u6210\u4f4d\u7f6e\u67e5\u8be2 \u00b6 \u8fd9\u79cd\u601d\u8def\u9700\u8981\u52a0\u4e00\u4e2a\u53c2\u6570\u6765\u8f85\u52a9\uff0c\u6807\u8bb0\u5206\u9875\u7684\u5f00\u59cb\u4f4d\u7f6e\uff1a SELECT * FROM tb_user WHERE id > 1000 LIMIT 10 \u4f18\u5316\u5b50\u67e5\u8be2 \u00b6 \u5b50\u67e5\u8be2\uff0c\u4e5f\u5c31\u662f\u67e5\u8be2\u4e2d\u6709\u67e5\u8be2\uff0c\u5e38\u89c1\u7684\u662fwhere\u540e\u9762\u8ddf\u4e00\u4e2a\u62ec\u53f7\u91cc\u9762\u53c8\u662f\u4e00\u6761\u67e5\u8be2sql \u5c3d\u53ef\u80fd\u7684\u4f7f\u7528join\u5173\u8054\u67e5\u8be2\u6765\u4ee3\u66ff\u5b50\u67e5\u8be2\u3002 \u5f53\u7136 \u8fd9\u4e0d\u662f\u7edd\u5bf9\u7684\uff0c\u6bd4\u5982\u67d0\u4e9b\u975e\u5e38\u7b80\u5355\u7684\u5b50\u67e5\u8be2\u5c31\u6bd4\u5173\u8054\u67e5\u8be2\u6548\u7387\u9ad8\uff0c\u4e8b\u5b9e\u6548\u679c\u5982\u4f55\u8fd8\u8981\u770b\u6267\u884c\u8ba1\u5212\u3002 \u53ea\u80fd\u8bf4\u5927\u90e8\u5206\u7684\u5b50\u67e5\u8be2\u90fd\u53ef\u4ee5\u4f18\u5316\u6210Join\u5173\u8054\u67e5\u8be2\u3002 \u6539\u53d8\u6267\u884c\u8ba1\u5212 \u00b6 \u63d0\u9ad8\u7d22\u5f15\u4f18\u5148\u7ea7 \u00b6 use index \u53ef\u4ee5\u8ba9MySQL\u53bb\u53c2\u8003\u6307\u5b9a\u7684\u7d22\u5f15\uff0c\u4f46\u662f\u65e0\u6cd5\u5f3a\u5236MySQL\u53bb\u4f7f\u7528\u8fd9\u4e2a\u7d22\u5f15\uff0c\u5f53MySQL\u89c9\u5f97\u8fd9\u4e2a\u7d22\u5f15\u6548\u7387\u592a\u5dee\uff0c\u5b83\u5b81\u613f\u53bb\u8d70\u5168\u8868\u626b\u63cf\u3002\u3002\u3002 SELECT * FROM tb_user USE INDEX ( user_name ) \u6ce8\u610f\uff1a\u5fc5\u987b\u662f\u7d22\u5f15\uff0c\u4e0d\u80fd\u662f\u666e\u901a\u5b57\u6bb5\uff0c\uff08\u4eb2\u6d4b\u4e3b\u952e\u4e5f\u4e0d\u884c\uff09\u3002 \u5ffd\u7565\u7d22\u5f15 \u00b6 ignore index \u53ef\u4ee5\u8ba9MySQL\u5ffd\u7565\u4e00\u4e2a\u7d22\u5f15 SELECT * FROM tb_user IGNORE INDEX (user_name) WHERE user_name=\"\u5f20\u5b66\u53cb\" \u5f3a\u5236\u4f7f\u7528\u7d22\u5f15 \u00b6 \u4f7f\u7528\u4e86force index \u4e4b\u540e \u5c3d\u7ba1\u6548\u7387\u975e\u5e38\u4f4e\uff0cMySQL\u4e5f\u4f1a\u7167\u4f60\u7684\u8bdd\u53bb\u6267\u884c SELECT * FROM tb_user FORCE INDEX ( user_name ) WHERE user_name = \"\u5f20\u5b66\u53cb\" \u4e2a\u4eba\u5206\u4eab \u00b6 \u67e5\u770b\u6267\u884c\u8ba1\u5212\u65f6\u5efa\u8bae\u4f9d\u6b21\u89c2\u5bdf\u4ee5\u4e0b\u51e0\u4e2a\u8981\u70b9\uff1a SQL\u5185\u90e8\u7684\u6267\u884c\u987a\u5e8f\u3002 \u67e5\u770bselect\u7684\u67e5\u8be2\u7c7b\u578b\u3002 \u5b9e\u9645\u6709\u6ca1\u6709\u4f7f\u7528\u7d22\u5f15\u3002 Extra\u63cf\u8ff0\u4fe1\u606f PS:\u4e00\u5b9a\u8981\u517b\u6210\u67e5\u770b\u6267\u884c\u8ba1\u5212\u7684\u4e60\u60ef\uff0c\u8fd9\u4e2a\u4e60\u60ef\u975e\u5e38\u91cd\u8981\u3002","title":"MySQL\u4f18\u5316"},{"location":"sql/mysql_yh/#mysql","text":"","title":"MySQL \u4f18\u5316\u6307\u5357"},{"location":"sql/mysql_yh/#_1","text":"\u5f00\u542f\u4e86MySQL\u6162\u67e5\u8be2\u65e5\u5fd7\u4e4b\u540e\uff0cMySQL\u4f1a\u81ea\u52a8\u5c06\u6267\u884c\u65f6\u95f4\u8d85\u8fc7\u6307\u5b9a\u79d2\u6570\u7684SQL\u7edf\u7edf\u8bb0\u5f55\u4e0b\u6765\uff0c\u8fd9\u5bf9\u4e8e\u641c\u7f57\u7ebf\u4e0a\u6162SQL\u6709\u5f88\u5927\u7684\u5e2e\u52a9\u3002 SHOW VARIABLES LIKE 'slow%' \u4ee5\u6211\u521a\u5b89\u88c5\u7684mysql5.7\u4e3a\u4f8b \u67e5\u8be2\u7ed3\u679c\u662f\u8fd9\u6837\u5b50\u7684\uff1a slow_launch_time\uff1a\u8868\u793a\u5982\u679c\u5efa\u7acb\u7ebf\u7a0b\u82b1\u8d39\u4e86\u6bd4\u8fd9\u4e2a\u503c\u66f4\u957f\u7684\u65f6\u95f4,slow_launch_threads \u8ba1\u6570\u5668\u5c06\u589e\u52a0 slow_query_log\uff1a\u662f\u5426\u5f00\u542f\u6162\u67e5\u8be2\u65e5\u5fd7 ON\u5f00\u542f\uff0cOFF\u5173\u95ed \u9ed8\u8ba4\u6ca1\u6709\u5f00\u542f slow_query_log_file\uff1a\u65e5\u5fd7\u4fdd\u5b58\u8def\u5f84 SHOW VARIABLES LIKE 'long%' long_query_time\uff1a\u8fbe\u5230\u591a\u5c11\u79d2\u7684sql\u5c31\u8bb0\u5f55\u65e5\u5fd7 \u5ba2\u6237\u7aef\u53ef\u4ee5\u7528set\u8bbe\u7f6e\u53d8\u91cf\u7684\u65b9\u5f0f\u8ba9\u6162\u67e5\u8be2\u5f00\u542f\uff0c\u4f46\u662f\u4e2a\u4eba\u4e0d\u63a8\u8350\uff0c\u56e0\u4e3a\u771f\u5b9e\u64cd\u4f5c\u8d77\u6765\u4f1a\u6709\u4e00\u4e9b\u95ee\u9898\uff0c\u6bd4\u5982\u8bf4\uff0c\u91cd\u542fMySQL\u540e\u5c31\u5931\u6548\u4e86\uff0c\u6216\u8005\u662f\u5f00\u542f\u4e86\u6162\u67e5\u8be2\uff0c\u6211\u53c8\u53bb\u6539\u53d8\u91cf\u503c\uff0c\u5b83\u5c31\u4e0d\u751f\u6548\u4e86\u3002","title":"\u6162\u67e5\u8be2\u65e5\u5fd7 \u5f00\u542f\u6492\u7f51\u6a21\u5f0f"},{"location":"sql/mysql_yh/#mysql_1","text":"vim /etc/my.cnf \u52a0\u5165\u5982\u4e0b\u4e09\u884c\uff1a slow_query_log=ON slow_query_log_file=/var/lib/mysql/localhost-centos-slow.log long_query_time=3 \u6211\u8fd9\u91cc\u8bbe\u7f6e\u7684\u662f3\u79d2","title":"\u7f16\u8f91MySQL\u7684\u914d\u7f6e\u6587\u4ef6\uff1a"},{"location":"sql/mysql_yh/#mysql_2","text":"systemctl restart mysqld ;","title":"\u91cd\u542fMySQL"},{"location":"sql/mysql_yh/#_2","text":"tail -f /var/lib/mysql/localhost-centos-slow.log","title":"\u670d\u52a1\u5668\u5f00\u4e00\u4e2a\u76d1\u63a7\uff1a"},{"location":"sql/mysql_yh/#sql","text":"SELECT SLEEP ( 3 ) \u6b64\u65f6\u53d1\u73b0sql\u5df2\u7ecf\u88ab\u8bb0\u5f55\u5230\u65e5\u5fd7\u91cc\u4e86\u3002\uff08\u6709\u65f6\u5019\u4e0d\u4e00\u5b9a\uff0c\u6211\u770b\u5230\u5f88\u591a\u535a\u5ba2\u8bb2\u7684\u662f\u8d85\u8fc7\u6307\u5b9a\u79d2\u6570\uff0c\u4f46\u6211\u5b9e\u9a8c\u5f97\u51fa\u7684\u7ed3\u679c\u662f\u8fbe\u5230\u6307\u5b9a\u79d2\u6570\uff09","title":"\u5ba2\u6237\u7aef\u8d70\u4e00\u6761SQL\uff1a"},{"location":"sql/mysql_yh/#explain","text":"explain\u662f\u4e00\u4e2a\u795e\u5947\u7684\u547d\u4ee4\uff0c\u53ef\u4ee5\u67e5\u770bsql\u7684\u5177\u4f53\u7684\u6267\u884c\u8ba1\u5212\u3002 \u4ee5\u4e00\u6761\u8054\u67e5sql\u4e3a\u4f8b\uff1a SELECT a . id , a . cn_name , a . role_id , r . name FROM tb_usr_admins a INNER JOIN tb_base_roles r ON r . id = a . role_id WHERE a . cn_name = \"\u63a5\u5355\u4eba\u5458\" \u67e5\u8be2\u7ed3\u679c\u662f\uff1a \u52a0\u4e0aexplain\u547d\u4ee4\u6765\u6267\u884c\uff1a EXPLAIN SELECT a . id , a . cn_name , a . role_id , r . name FROM tb_usr_admins a INNER JOIN tb_base_roles r ON r . id = a . role_id WHERE a . cn_name = \"\u63a5\u5355\u4eba\u5458\" \u67e5\u8be2\u7ed3\u679c\u662f\uff1a \u8fd9\u5c31\u662f\u8fd9\u6761SQL\u7684\u6267\u884c\u8ba1\u5212\uff0c\u4e0b\u9762\u6765\u8bf4\u660e\u4e00\u4e0b\u8fd9\u4e2a\u6267\u884c\u8ba1\u5212\u600e\u4e48\u770b id\uff1a\u4ee3\u8868\u4f18\u5148\u7ea7 id\u503c\u8d8a\u5927\uff0c\u8d8a\u5148\u6267\u884c\uff0cid\u503c\u76f8\u540c\uff0c\u4ece\u4e0a\u5f80\u4e0b\u6267\u884c\u3002\uff08\u6bd4\u5982\u793a\u4f8b\u7684\u8fd9\u6761sql\u7684\u6267\u884c\u8ba1\u5212\uff0c\u5c31\u662f\u5148\u6267\u884c\u7b2c\u4e00\u884c\uff0c\u518d\u6267\u884c\u7b2c\u4e8c\u884c\uff09","title":"EXPLAIN \u70b9\u5bf9\u70b9\u5206\u6790"},{"location":"sql/mysql_yh/#select_typeselect","text":"simple \u7b80\u5355\u8868 \u5373\u4e0d\u4f7f\u7528\u8868\u8fde\u63a5\u6216\u8005\u5b50\u67e5\u8be2 primary \u5305\u542bunion\u6216\u8005\u5b50\u67e5\u8be2\u7684\u4e3b\u67e5\u8be2 \u5373\u5916\u5c42\u7684\u67e5\u8be2 union UNION\u4e2d\u7684\u7b2c\u4e8c\u4e2a\u6216\u8005\u540e\u9762\u7684\u67e5\u8be2\u8bed\u53e5 subquery \u4e00\u822c\u5b50\u67e5\u8be2\u4e2d\u7684\u5b50\u67e5\u8be2\u88ab\u6807\u8bb0\u4e3asubquery\uff0c\u4e5f\u5c31\u662f\u4f4d\u4e8eselect\u5217\u8868\u4e2d\u7684\u67e5\u8be2 derived \u6d3e\u751f\u8868 \u8be5\u4e34\u65f6\u8868\u662f\u4ece\u5b50\u67e5\u8be2\u6d3e\u751f\u51fa\u6765\u7684 \u7b49\u7b49","title":"select_type\uff1a\u8868\u793aselect\u7c7b\u578b \u53d6\u503c\u5982\u4e0b"},{"location":"sql/mysql_yh/#typemysqltype","text":"all:\u5168\u8868\u626b\u63cf\uff0cMySQL\u904d\u5386\u5168\u8868\u6765\u627e\u5230\u5339\u914d\u7684\u884c index\uff1a\u7d22\u5f15\u5168\u626b\u63cf\uff0cMySQL\u904d\u5386\u6323\u4e2a\u7d22\u5f15\u6765\u67e5\u8be2\u5339\u914d\u7684\u884c range\uff1a\u7d22\u5f15\u8303\u56f4\u626b\u63cf\uff0c\u5e38\u89c1\u4e8e<\u3001<=\u3001>\u3001>=\u3001between\u7b49\u64cd\u4f5c\u7b26 ref\uff1a\u4f7f\u7528\u975e\u552f\u4e00\u7d22\u5f15\u6216\u552f\u4e00\u7d22\u5f15\u7684\u524d\u7f00\u626b\u63cf\uff0c\u8fd4\u56de\u5339\u914d\u7684\u5355\u884c\u6570\u636e eq_ref\uff1a\u7c7b\u4f3cref\uff0c\u533a\u522b\u5c31\u5728\u4e8e\u4f7f\u7528\u7684\u7d22\u5f15\u662f\u552f\u4e00\u7d22\u5f15\uff0c\u7b80\u5355\u6765\u8bf4\uff0c\u5c31\u662f\u591a\u8868\u8fde\u63a5\u4e2d\u4f7f\u7528primary key\u6216\u8005unique index\u4f5c\u4e3a\u5173\u8054\u6761\u4ef6\u3002 const/system\uff1a\u5355\u8868\u4e2d\u6700\u591a\u6709\u4e00\u4e2a\u5339\u914d\u884c\uff0c\u67e5\u8be2\u8d77\u6765\u975e\u5e38\u8fc5\u901f\uff0c\u5e38\u89c1\u4e8e\u6839\u636eprimary key\u6216\u8005\u552f\u4e00\u7d22\u5f15unique index\u8fdb\u884c\u7684\u5355\u8868\u67e5\u8be2 null\uff1amysql\u4e0d\u7528\u8bbf\u95ee\u8868\u6216\u8005\u7d22\u5f15\uff0c\u76f4\u63a5\u5c31\u80fd\u591f\u5f97\u5230\u67e5\u8be2\u7684\u7ed3\u679c\uff0c\u4f8b\u5982select 1+2 as result\u3002","title":"type\uff1a\u8868\u793aMySQL\u5728\u8868\u4e2d\u67e5\u627e\u6570\u636e\u7684\u65b9\u5f0f\uff0c\u6216\u8005\u53eb\u8bbf\u95ee\u7c7b\u578b\uff0c\u4ee5\u4e0b\u5bf9\u4e8etype\u53d6\u503c\u7684\u8bf4\u660e \u4ece\u4e0a\u5f80\u4e0b\u6027\u80fd\u7531\u6700\u5dee\u5230\u6700\u597d"},{"location":"sql/mysql_yh/#possible_keys","text":"","title":"possible_keys\uff1a\u8868\u793a\u67e5\u8be2\u65f6\u53ef\u80fd\u4f7f\u7528\u7684\u7d22\u5f15"},{"location":"sql/mysql_yh/#key","text":"","title":"key\uff1a\u8868\u793a\u5b9e\u9645\u4f7f\u7528\u7684\u7d22\u5f15"},{"location":"sql/mysql_yh/#key_len","text":"","title":"key_len\uff1a\u4f7f\u7528\u5230\u7d22\u5f15\u5b57\u6bb5\u7684\u957f\u5ea6"},{"location":"sql/mysql_yh/#rows","text":"","title":"rows\uff1a\u626b\u63cf\u6570\u91cf"},{"location":"sql/mysql_yh/#extra","text":"Using index\uff1a\u76f4\u63a5\u8bbf\u95ee\u7d22\u5f15\u5c31\u53d6\u5230\u4e86\u6570\u636e\uff0c\u9ad8\u6027\u80fd\u7684\u8868\u73b0\u3002 Using where\uff1a\u76f4\u63a5\u5728\u4e3b\u952e\u7d22\u5f15\u4e0a\u8fc7\u6ee4\u6570\u636e\uff0c\u5fc5\u5e26where\u5b50\u53e5\uff0c\u800c\u4e14\u7528\u4e0d\u4e0a\u7d22\u5f15 Using index condition\uff1a\u5148\u6761\u4ef6\u8fc7\u6ee4\u7d22\u5f15\uff0c\u518d\u67e5\u6570\u636e\uff0c Using filesort\uff1a\u4f7f\u7528\u4e86\u5916\u90e8\u6587\u4ef6\u6392\u5e8f \u53ea\u8981\u89c1\u5230\u8fd9\u4e2a \u5c31\u8981\u4f18\u5316\u6389 Using temporary\uff1a\u521b\u5efa\u4e86\u4e34\u65f6\u8868\u6765\u5904\u7406\u67e5\u8be2 \u53ea\u8981\u89c1\u5230\u8fd9\u4e2a \u4e5f\u8981\u5c3d\u91cf\u4f18\u5316\u6389","title":"Extra\uff1a\u6267\u884c\u60c5\u51b5\u7684\u8bf4\u660e\u548c\u63cf\u8ff0\uff0c\u5305\u542b\u4e0d\u9002\u5408\u5728\u5176\u4ed6\u5217\u4e2d\u663e\u793a\u4f46\u662f\u5bf9\u6267\u884c\u8ba1\u5212\u975e\u5e38\u91cd\u8981\u7684\u989d\u5916\u4fe1\u606f\uff0c\u5e38\u7528\u53d6\u503c\u5982\u4e0b\uff1a"},{"location":"sql/mysql_yh/#count","text":"","title":"\u4f18\u5316\u4e89\u8bae\u65e0\u6570\u7684count()"},{"location":"sql/mysql_yh/#_3","text":"COUNT()\u662f\u4e00\u4e2a\u7279\u6b8a\u7684\u51fd\u6570\uff0c\u6709\u4e24\u79cd\u4e0d\u540c\u7684\u4f5c\u7528\uff0c\u5b83\u53ef\u4ee5\u7edf\u8ba1\u67d0\u4e2a\u5217\u503c\u7684\u6570\u91cf\uff0c\u4e5f\u53ef\u4ee5\u7edf\u8ba1\u884c\u6570\u3002 \u5728\u7edf\u8ba1\u5217\u503c\u7684\u65f6\u5019\u8981\u6c42\u5217\u503c\u662f\u975e\u7a7a\u7684\uff0c\u4e5f\u5c31\u662f\u4e0d\u7edf\u8ba1null\u3002 \u5f53\u6211\u4eec\u7edf\u8ba1\u884c\u7684\u65f6\u5019\uff0c\u5e38\u89c1\u7684\u662fCOUNT(*)\uff0c\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u901a\u914d\u7b26*\u5e76\u4e0d\u4f1a\u50cf\u6211\u4eec\u731c\u60f3\u7684\u90a3\u6837\u6269\u5c55\u6210\u6240\u6709\u7684\u5217\uff0c\u5b9e\u9645\u4e0a\uff0c\u5b83\u4f1a\u5ffd\u7565\u6240\u6709\u7684\u5217\u800c\u76f4\u63a5\u7edf\u8ba1\u6240\u6709\u7684\u884c\u6570","title":"\u7edf\u8ba1\u5217\u4e0e\u7edf\u8ba1\u884c\uff1f"},{"location":"sql/mysql_yh/#myisam","text":"\u8fd9\u662f\u4e00\u4e2a\u5bb9\u6613\u4ea7\u751f\u8bef\u89e3\u7684\u4e8b\u60c5\uff1aMyiSAM\u7684count()\u51fd\u6570\u603b\u662f\u975e\u5e38\u5feb\u3002 \u4e0d\u8fc7\u5b83\u662f\u6709\u524d\u63d0\u6761\u4ef6\u7684\uff0c\u6761\u4ef6\u662f\u6ca1\u6709\u4efb\u4f55where\u6761\u4ef6\u7684count( )\u624d\u975e\u5e38\u5feb\uff0c\u56e0\u4e3a\u6b64\u65f6\u65e0\u987b\u5b9e\u9645\u7684\u53bb\u8ba1\u7b97\u8868\u7684\u884c\u6570\uff0cmysql\u53ef\u4ee5\u5229\u7528\u5b58\u50a8\u5f15\u64ce\u7684\u7279\u6027\u76f4\u63a5\u83b7\u5f97\u8fd9\u4e2a\u503c\uff0c\u5982\u679cmysql\u77e5\u9053\u67d0\u5217\u4e0d\u53ef\u80fd\u6709null\u503c\uff0c\u90a3\u4e48mysql\u5185\u90e8\u4f1a\u5c06count(\u5217)\u8868\u8fbe\u5f0f\u4f18\u5316\u4e3acount( )\u3002 \u5f53\u7edf\u8ba1\u5e26\u6709where\u6761\u4ef6\u7684\u67e5\u8be2\uff0c\u90a3\u4e48mysql\u7684count()\u548c\u5176\u4ed6\u5b58\u50a8\u5f15\u64ce\u5c31\u6ca1\u6709\u4ec0\u4e48\u4e0d\u540c\u4e86\u3002","title":"\u89e3\u5bc6MyiSAM\u7684\u2018\u5feb\u2019"},{"location":"sql/mysql_yh/#count1countcount","text":"\uff08\u5148\u63d0\u524d\u7533\u660e\uff0c\u672c\u4eba\u662f\u5728innodb\u5e93\u91cc\u505a\u7684\u5b9e\u9a8c\u3002\uff09 count(1)\u548ccount(*)\u76f4\u63a5\u5c31\u662f\u7edf\u8ba1\u4e3b\u952e\uff0c\u4ed6\u4eec\u4e24\u4e2a\u7684\u6548\u7387\u662f\u4e00\u6837\u7684\u3002\u5982\u679c\u5220\u9664\u4e3b\u952e\uff0c\u4ed6\u4eec\u90fd\u8d70\u5168\u8868\u626b\u63cf\u3002 \u5982\u679ccount(\u5217)\u4e2d\u7684\u5b57\u6bb5\u662f\u7d22\u5f15\u7684\u8bdd\uff0ccount(\u5217)\u548ccount(*)\u4e00\u6837\u5feb\uff0c\u5426\u5219count(\u5217)\u8d70\u5168\u8868\u626b\u63cf\u3002","title":"COUNT(1)\u3001COUNT(*)\u3001COUNT(\u5217)"},{"location":"sql/mysql_yh/#order-by","text":"","title":"\u4f18\u5316order by \u8bed\u53e5"},{"location":"sql/mysql_yh/#mysql_3","text":"\u4f18\u5316order by\u8bed\u53e5\u5c31\u4e0d\u5f97\u4e0d\u4e86\u89e3mysql\u7684\u6392\u5e8f\u65b9\u5f0f\u3002 \u7b2c\u4e00\u79cd\u901a\u8fc7\u6709\u5e8f\u7d22\u5f15\u8fd4\u56de\u6570\u636e\uff0c\u8fd9\u79cd\u65b9\u5f0f\u7684extra\u663e\u793a\u4e3aUsing Index,\u4e0d\u9700\u8981\u989d\u5916\u7684\u6392\u5e8f\uff0c\u64cd\u4f5c\u6548\u7387\u8f83\u9ad8\u3002 \u7b2c\u4e8c\u79cd\u662f\u5bf9\u8fd4\u56de\u7684\u6570\u636e\u8fdb\u884c\u6392\u5e8f\uff0c\u4e5f\u5c31\u662f\u901a\u5e38\u770b\u5230\u7684Using filesort\uff0cfilesort\u662f\u901a\u8fc7\u76f8\u5e94\u7684\u6392\u5e8f\u7b97\u6cd5\uff0c\u5c06\u6570\u636e\u653e\u5728sort_buffer_size\u7cfb\u7edf\u53d8\u91cf\u8bbe\u7f6e\u7684\u5185\u5b58\u6392\u5e8f\u533a\u4e2d\u8fdb\u884c\u6392\u5e8f\uff0c\u5982\u679c\u5185\u5b58\u88c5\u8f7d\u4e0d\u4e0b\uff0c\u5b83\u5c31\u4f1a\u5c06\u78c1\u76d8\u4e0a\u7684\u6570\u636e\u8fdb\u884c\u5206\u5757\uff0c\u518d\u5bf9\u5404\u4e2a\u6570\u636e\u5757\u8fdb\u884c\u6392\u5e8f\uff0c\u7136\u540e\u5c06\u5404\u4e2a\u5757\u5408\u5e76\u6210\u6709\u5e8f\u7684\u7ed3\u679c\u96c6\u3002","title":"MySQL\u7684\u6392\u5e8f\u65b9\u5f0f"},{"location":"sql/mysql_yh/#filesort","text":"\u4e86\u89e3\u4e86MySQL\u6392\u5e8f\u7684\u65b9\u5f0f\uff0c\u4f18\u5316\u76ee\u6807\u5c31\u6e05\u6670\u4e86\uff1a\u5c3d\u91cf\u51cf\u5c11\u989d\u5916\u7684\u6392\u5e8f\uff0c\u901a\u8fc7\u7d22\u5f15\u76f4\u63a5\u8fd4\u56de\u6709\u5e8f\u6570\u636e\u3002where\u6761\u4ef6\u548corder by\u4f7f\u7528\u76f8\u540c\u7684\u7d22\u5f15\u3002 \u521b\u5efa\u5408\u9002\u7684\u7d22\u5f15\u51cf\u5c11filesort\u7684\u51fa\u73b0\u3002 \u67e5\u8be2\u65f6\u5c3d\u91cf\u53ea\u4f7f\u7528\u5fc5\u8981\u7684\u5b57\u6bb5\uff0cselect \u5177\u4f53\u5b57\u6bb5\u7684\u540d\u79f0\uff0c\u800c\u4e0d\u662fselect * \u9009\u62e9\u6240\u6709\u5b57\u6bb5\uff0c\u8fd9\u6837\u53ef\u4ee5\u51cf\u5c11\u6392\u5e8f\u533a\u7684\u4f7f\u7528\uff0c\u63d0\u9ad8SQL\u6027\u80fd\u3002","title":"filesort\u7684\u4f18\u5316"},{"location":"sql/mysql_yh/#group-by","text":"","title":"\u4f18\u5316group by \u8bed\u53e5"},{"location":"sql/mysql_yh/#order-bygroup-by","text":"\u4e8b\u5b9e\u4e0a\uff0cMySQL\u5728\u6240\u6709\u7684group by \u540e\u9762\u9690\u5f0f\u7684\u52a0\u4e86order by \uff0c\u4e5f\u5c31\u662f\u8bf4group by\u8bed\u53e5\u7684\u7ed3\u679c\u4f1a\u9ed8\u8ba4\u8fdb\u884c\u6392\u5e8f\u3002 \u5982\u679c\u4f60\u8981\u5728order by\u540e\u9762\u52a0group by \uff0c\u90a3\u7ed3\u679c\u6267\u884c\u7684SQL\u662f\u4e0d\u662f\u8fd9\u6837\uff1aselect * from tb order by \u2026 group by \u2026 order by \u2026 \uff1f \u8fd9\u4e0d\u662f\u641e\u7b11\u5417\uff1f","title":"\u4e3a\u4ec0\u4e48order by\u540e\u9762\u4e0d\u80fd\u8ddfgroup by ?"},{"location":"sql/mysql_yh/#_4","text":"\u65e2\u7136\u77e5\u9053\u95ee\u9898\u4e86\uff0c\u90a3\u4e48\u5c31\u5bb9\u6613\u4f18\u5316\u4e86\uff0c\u5982\u679c\u67e5\u8be2\u5305\u62ecgroup by\u4f46\u53c8\u4e0d\u5173\u5fc3\u7ed3\u679c\u96c6\u7684\u987a\u5e8f\uff0c\u800c\u8fd9\u79cd\u9ed8\u8ba4\u6392\u5e8f\u53c8\u5bfc\u81f4\u4e86\u9700\u8981\u6587\u4ef6\u6392\u5e8f\uff0c\u5219\u53ef\u4ee5\u6307\u5b9aorder by null \u7981\u6b62\u6392\u5e8f\u3002 \u4f8b\u5982\uff1a select * from tb group by name order by null ;","title":"\u7981\u6b62\u6392\u5e8f"},{"location":"sql/mysql_yh/#limit","text":"\u4e00\u4e2a\u975e\u5e38\u5e38\u89c1\u53c8\u975e\u5e38\u5934\u75db\u7684\u573a\u666f\uff1a\u2018limit 1000,20\u2019\u3002 \u8fd9\u65f6MySQL\u9700\u8981\u67e5\u8be21020\u6761\u8bb0\u5f55\u7136\u540e\u53ea\u8fd4\u56de\u6700\u540e20\u6761\uff0c\u524d\u9762\u76841000\u6761\u90fd\u5c06\u88ab\u629b\u5f03\uff0c\u8fd9\u6837\u7684\u4ee3\u4ef7\u975e\u5e38\u9ad8\u3002\u5982\u679c\u6240\u6709\u9875\u9762\u7684\u8bbf\u95ee\u9891\u7387\u90fd\u76f8\u540c\uff0c\u90a3\u4e48\u8fd9\u6837\u7684\u67e5\u8be2\u5e73\u5747\u9700\u8981\u8bbf\u95ee\u534a\u4e2a\u8868\u7684\u6570\u636e\u3002","title":"\u4f18\u5316limit \u5206\u9875"},{"location":"sql/mysql_yh/#_5","text":"\u5728\u7d22\u5f15\u4e0a\u5b8c\u6210\u5206\u9875\u64cd\u4f5c\uff0c\u6700\u540e\u6839\u636e\u4e3b\u952e\u5173\u8054\u56de\u539f\u8868\u67e5\u8be2\u6240\u9700\u8981\u7684\u5176\u4ed6\u5217\u7684\u5185\u5bb9\u3002 \u4f8b\u5982\uff1a SELECT * FROM tb_user LIMIT 1000 , 10 \u53ef\u4ee5\u4f18\u5316\u6210\u8fd9\u6837\uff1a SELECT * FROM tb_user u INNER JOIN ( SELECT id FROM tb_user LIMIT 1000 , 10 ) AS b ON b . id = u . id","title":"\u7b2c\u4e00\u79cd\u601d\u8def \u5728\u7d22\u5f15\u4e0a\u5206\u9875"},{"location":"sql/mysql_yh/#limit_1","text":"\u8fd9\u79cd\u601d\u8def\u9700\u8981\u52a0\u4e00\u4e2a\u53c2\u6570\u6765\u8f85\u52a9\uff0c\u6807\u8bb0\u5206\u9875\u7684\u5f00\u59cb\u4f4d\u7f6e\uff1a SELECT * FROM tb_user WHERE id > 1000 LIMIT 10","title":"\u7b2c\u4e8c\u79cd\u601d\u8def \u5c06limit\u8f6c\u6362\u6210\u4f4d\u7f6e\u67e5\u8be2"},{"location":"sql/mysql_yh/#_6","text":"\u5b50\u67e5\u8be2\uff0c\u4e5f\u5c31\u662f\u67e5\u8be2\u4e2d\u6709\u67e5\u8be2\uff0c\u5e38\u89c1\u7684\u662fwhere\u540e\u9762\u8ddf\u4e00\u4e2a\u62ec\u53f7\u91cc\u9762\u53c8\u662f\u4e00\u6761\u67e5\u8be2sql \u5c3d\u53ef\u80fd\u7684\u4f7f\u7528join\u5173\u8054\u67e5\u8be2\u6765\u4ee3\u66ff\u5b50\u67e5\u8be2\u3002 \u5f53\u7136 \u8fd9\u4e0d\u662f\u7edd\u5bf9\u7684\uff0c\u6bd4\u5982\u67d0\u4e9b\u975e\u5e38\u7b80\u5355\u7684\u5b50\u67e5\u8be2\u5c31\u6bd4\u5173\u8054\u67e5\u8be2\u6548\u7387\u9ad8\uff0c\u4e8b\u5b9e\u6548\u679c\u5982\u4f55\u8fd8\u8981\u770b\u6267\u884c\u8ba1\u5212\u3002 \u53ea\u80fd\u8bf4\u5927\u90e8\u5206\u7684\u5b50\u67e5\u8be2\u90fd\u53ef\u4ee5\u4f18\u5316\u6210Join\u5173\u8054\u67e5\u8be2\u3002","title":"\u4f18\u5316\u5b50\u67e5\u8be2"},{"location":"sql/mysql_yh/#_7","text":"","title":"\u6539\u53d8\u6267\u884c\u8ba1\u5212"},{"location":"sql/mysql_yh/#_8","text":"use index \u53ef\u4ee5\u8ba9MySQL\u53bb\u53c2\u8003\u6307\u5b9a\u7684\u7d22\u5f15\uff0c\u4f46\u662f\u65e0\u6cd5\u5f3a\u5236MySQL\u53bb\u4f7f\u7528\u8fd9\u4e2a\u7d22\u5f15\uff0c\u5f53MySQL\u89c9\u5f97\u8fd9\u4e2a\u7d22\u5f15\u6548\u7387\u592a\u5dee\uff0c\u5b83\u5b81\u613f\u53bb\u8d70\u5168\u8868\u626b\u63cf\u3002\u3002\u3002 SELECT * FROM tb_user USE INDEX ( user_name ) \u6ce8\u610f\uff1a\u5fc5\u987b\u662f\u7d22\u5f15\uff0c\u4e0d\u80fd\u662f\u666e\u901a\u5b57\u6bb5\uff0c\uff08\u4eb2\u6d4b\u4e3b\u952e\u4e5f\u4e0d\u884c\uff09\u3002","title":"\u63d0\u9ad8\u7d22\u5f15\u4f18\u5148\u7ea7"},{"location":"sql/mysql_yh/#_9","text":"ignore index \u53ef\u4ee5\u8ba9MySQL\u5ffd\u7565\u4e00\u4e2a\u7d22\u5f15 SELECT * FROM tb_user IGNORE INDEX (user_name) WHERE user_name=\"\u5f20\u5b66\u53cb\"","title":"\u5ffd\u7565\u7d22\u5f15"},{"location":"sql/mysql_yh/#_10","text":"\u4f7f\u7528\u4e86force index \u4e4b\u540e \u5c3d\u7ba1\u6548\u7387\u975e\u5e38\u4f4e\uff0cMySQL\u4e5f\u4f1a\u7167\u4f60\u7684\u8bdd\u53bb\u6267\u884c SELECT * FROM tb_user FORCE INDEX ( user_name ) WHERE user_name = \"\u5f20\u5b66\u53cb\"","title":"\u5f3a\u5236\u4f7f\u7528\u7d22\u5f15"},{"location":"sql/mysql_yh/#_11","text":"\u67e5\u770b\u6267\u884c\u8ba1\u5212\u65f6\u5efa\u8bae\u4f9d\u6b21\u89c2\u5bdf\u4ee5\u4e0b\u51e0\u4e2a\u8981\u70b9\uff1a SQL\u5185\u90e8\u7684\u6267\u884c\u987a\u5e8f\u3002 \u67e5\u770bselect\u7684\u67e5\u8be2\u7c7b\u578b\u3002 \u5b9e\u9645\u6709\u6ca1\u6709\u4f7f\u7528\u7d22\u5f15\u3002 Extra\u63cf\u8ff0\u4fe1\u606f PS:\u4e00\u5b9a\u8981\u517b\u6210\u67e5\u770b\u6267\u884c\u8ba1\u5212\u7684\u4e60\u60ef\uff0c\u8fd9\u4e2a\u4e60\u60ef\u975e\u5e38\u91cd\u8981\u3002","title":"\u4e2a\u4eba\u5206\u4eab"},{"location":"tool/git/","text":"Git \u5e38\u7528\u547d\u4ee4\u901f\u67e5\u624b\u518c \u00b6 \u521d\u59cb\u5316\u4ed3\u5e93 \u00b6 git init \u8bbe\u7f6e\u8fdc\u7a0b\u4ed3\u5e93\u5730\u5740\u540e\u518d\u505apush \u00b6 ''' git remote add origin https://gitee.com/\u7528\u6237\u4e2a\u6027\u5730\u5740/HelloGitee.git ''' \u5c06\u6587\u4ef6\u6dfb\u52a0\u5230\u4ed3\u5e93 \u00b6 git add \u6587\u4ef6\u540d # \u5c06\u5de5\u4f5c\u533a\u7684\u67d0\u4e2a\u6587\u4ef6\u6dfb\u52a0\u5230\u6682\u5b58\u533a git add -u # \u6dfb\u52a0\u6240\u6709\u88abtracked\u6587\u4ef6\u4e2d\u88ab\u4fee\u6539\u6216\u5220\u9664\u7684\u6587\u4ef6\u4fe1\u606f\u5230\u6682\u5b58\u533a\uff0c\u4e0d\u5904\u7406untracked\u7684\u6587\u4ef6 git add -A # \u6dfb\u52a0\u6240\u6709\u88abtracked\u6587\u4ef6\u4e2d\u88ab\u4fee\u6539\u6216\u5220\u9664\u7684\u6587\u4ef6\u4fe1\u606f\u5230\u6682\u5b58\u533a\uff0c\u5305\u62ecuntracked\u7684\u6587\u4ef6 git add . # \u5c06\u5f53\u524d\u5de5\u4f5c\u533a\u7684\u6240\u6709\u6587\u4ef6\u90fd\u52a0\u5165\u6682\u5b58\u533a git add -i # \u8fdb\u5165\u4ea4\u4e92\u754c\u9762\u6a21\u5f0f\uff0c\u6309\u9700\u6dfb\u52a0\u6587\u4ef6\u5230\u7f13\u5b58\u533a \u5c06\u6682\u5b58\u533a\u6587\u4ef6\u63d0\u4ea4\u5230\u672c\u5730\u4ed3\u5e93 \u00b6 git commit -m \"\u63d0\u4ea4\u8bf4\u660e\" # \u5c06\u6682\u5b58\u533a\u5185\u5bb9\u63d0\u4ea4\u5230\u672c\u5730\u4ed3\u5e93 git commit -a -m \"\u63d0\u4ea4\u8bf4\u660e\" # \u8df3\u8fc7\u7f13\u5b58\u533a\u64cd\u4f5c\uff0c\u76f4\u63a5\u628a\u5de5\u4f5c\u533a\u5185\u5bb9\u63d0\u4ea4\u5230\u672c\u5730\u4ed3\u5e93 \u67e5\u770b\u4ed3\u5e93\u5f53\u524d\u72b6\u6001 \u00b6 git status \u6bd4\u8f83\u6587\u4ef6\u5f02\u540c \u00b6 git diff # \u5de5\u4f5c\u533a\u4e0e\u6682\u5b58\u533a\u7684\u5dee\u5f02 git diff \u5206\u652f\u540d #\u5de5\u4f5c\u533a\u4e0e\u67d0\u5206\u652f\u7684\u5dee\u5f02\uff0c\u8fdc\u7a0b\u5206\u652f\u8fd9\u6837\u5199\uff1aremotes/origin/\u5206\u652f\u540d git diff HEAD # \u5de5\u4f5c\u533a\u4e0eHEAD\u6307\u9488\u6307\u5411\u7684\u5185\u5bb9\u5dee\u5f02 git diff \u63d0\u4ea4id \u6587\u4ef6\u8def\u5f84 # \u5de5\u4f5c\u533a\u67d0\u6587\u4ef6\u5f53\u524d\u7248\u672c\u4e0e\u5386\u53f2\u7248\u672c\u7684\u5dee\u5f02 git diff --stage # \u5de5\u4f5c\u533a\u6587\u4ef6\u4e0e\u4e0a\u6b21\u63d0\u4ea4\u7684\u5dee\u5f02(1.6 \u7248\u672c\u524d\u7528 --cached) git diff \u7248\u672cTAG # \u67e5\u770b\u4ece\u67d0\u4e2a\u7248\u672c\u540e\u90fd\u6539\u52a8\u5185\u5bb9 git diff \u5206\u652fA \u5206\u652fB # \u6bd4\u8f83\u4ece\u5206\u652fA\u548c\u5206\u652fB\u7684\u5dee\u5f02(\u4e5f\u652f\u6301\u6bd4\u8f83\u4e24\u4e2aTAG) git diff \u5206\u652fA...\u5206\u652fB # \u6bd4\u8f83\u4e24\u5206\u652f\u5728\u5206\u5f00\u540e\u5404\u81ea\u7684\u6539\u52a8 # \u53e6\u5916\uff1a\u5982\u679c\u53ea\u60f3\u7edf\u8ba1\u54ea\u4e9b\u6587\u4ef6\u88ab\u6539\u52a8\uff0c\u591a\u5c11\u884c\u88ab\u6539\u52a8\uff0c\u53ef\u4ee5\u6dfb\u52a0 --stat \u53c2\u6570 \u67e5\u770b\u5386\u53f2\u8bb0\u5f55 \u00b6 git log # \u67e5\u770b\u6240\u6709commit\u8bb0\u5f55(SHA-A\u6821\u9a8c\u548c\uff0c\u4f5c\u8005\u540d\u79f0\uff0c\u90ae\u7bb1\uff0c\u63d0\u4ea4\u65f6\u95f4\uff0c\u63d0\u4ea4\u8bf4\u660e) git log -p -\u6b21\u6570 # \u67e5\u770b\u6700\u8fd1\u591a\u5c11\u6b21\u7684\u63d0\u4ea4\u8bb0\u5f55 git log --stat # \u7b80\u7565\u663e\u793a\u6bcf\u6b21\u63d0\u4ea4\u7684\u5185\u5bb9\u66f4\u6539 git log --name-only # \u4ec5\u663e\u793a\u5df2\u4fee\u6539\u7684\u6587\u4ef6\u6e05\u5355 git log --name-status # \u663e\u793a\u65b0\u589e\uff0c\u4fee\u6539\uff0c\u5220\u9664\u7684\u6587\u4ef6\u6e05\u5355 git log --oneline # \u8ba9\u63d0\u4ea4\u8bb0\u5f55\u4ee5\u7cbe\u7b80\u7684\u4e00\u884c\u8f93\u51fa git log \u2013graph \u2013all --online # \u56fe\u5f62\u5c55\u793a\u5206\u652f\u7684\u5408\u5e76\u5386\u53f2 git log --author=\u4f5c\u8005 # \u67e5\u8be2\u4f5c\u8005\u7684\u63d0\u4ea4\u8bb0\u5f55(\u548cgrep\u540c\u65f6\u4f7f\u7528\u8981\u52a0\u4e00\u4e2a--all--match\u53c2\u6570) git log --grep=\u8fc7\u6ee4\u4fe1\u606f # \u5217\u51fa\u63d0\u4ea4\u4fe1\u606f\u4e2d\u5305\u542b\u8fc7\u6ee4\u4fe1\u606f\u7684\u63d0\u4ea4\u8bb0\u5f55 git log -S\u67e5\u8be2\u5185\u5bb9 # \u548c--grep\u7c7b\u4f3c\uff0cS\u548c\u67e5\u8be2\u5185\u5bb9\u95f4\u6ca1\u6709\u7a7a\u683c git log fileName # \u67e5\u770b\u67d0\u6587\u4ef6\u7684\u4fee\u6539\u8bb0\u5f55\uff0c\u627e\u80cc\u9505\u4e13\u7528 \u4ee3\u7801\u56de\u6eda \u00b6 git reset HEAD^ # \u6062\u590d\u6210\u4e0a\u6b21\u63d0\u4ea4\u7684\u7248\u672c git reset HEAD^^ # \u6062\u590d\u6210\u4e0a\u4e0a\u6b21\u63d0\u4ea4\u7684\u7248\u672c\uff0c\u5c31\u662f\u591a\u4e2a^\uff0c\u4ee5\u6b64\u7c7b\u63a8\u6216\u7528~\u6b21\u6570 git reflog git reset --hard \u7248\u672c\u53f7 --soft\uff1a\u53ea\u662f\u6539\u53d8HEAD\u6307\u9488\u6307\u5411\uff0c\u7f13\u5b58\u533a\u548c\u5de5\u4f5c\u533a\u4e0d\u53d8\uff1b --mixed\uff1a\u4fee\u6539HEAD\u6307\u9488\u6307\u5411\uff0c\u6682\u5b58\u533a\u5185\u5bb9\u4e22\u5931\uff0c\u5de5\u4f5c\u533a\u4e0d\u53d8\uff1b --hard\uff1a\u4fee\u6539HEAD\u6307\u9488\u6307\u5411\uff0c\u6682\u5b58\u533a\u5185\u5bb9\u4e22\u5931\uff0c\u5de5\u4f5c\u533a\u6062\u590d\u4ee5\u524d\u72b6\u6001\uff1b \u540c\u6b65\u8fdc\u7a0b\u4ed3\u5e93 \u00b6 git push -u origin master \u5220\u9664\u7248\u672c\u5e93\u6587\u4ef6 \u00b6 git rm \u6587\u4ef6\u540d \u7248\u672c\u5e93\u91cc\u7684\u7248\u672c\u66ff\u6362\u5de5\u4f5c\u533a\u7684\u7248\u672c \u00b6 git checkout -- test.txt \u672c\u5730\u4ed3\u5e93\u5185\u5bb9\u63a8\u9001\u5230\u8fdc\u7a0b\u4ed3\u5e93 \u00b6 git remote add origin git@github.com:\u5e10\u53f7\u540d/\u4ed3\u5e93\u540d.git \u5c06\u672c\u5730\u4ed3\u5e93\u5185\u5bb9\u63a8\u9001\u5230\u8fdc\u7a0b\u4ed3\u5e93 \u00b6 '''git git add . #\u5c06\u5f53\u524d\u76ee\u5f55\u6240\u6709\u6587\u4ef6\u6dfb\u52a0\u5230git\u6682\u5b58\u533a git commit -m \"my first commit\" #\u63d0\u4ea4\u5e76\u5907\u6ce8\u63d0\u4ea4\u4fe1\u606f git push origin master #\u5c06\u672c\u5730\u63d0\u4ea4\u63a8\u9001\u5230\u8fdc\u7a0b\u4ed3\u5e93 ''' \u4ece\u8fdc\u7a0b\u4ed3\u5e93\u514b\u9686\u9879\u76ee\u5230\u672c\u5730 \u00b6 git clone git@github.com:git\u5e10\u53f7\u540d/\u4ed3\u5e93\u540d.git \u521b\u5efa\u5206\u652f \u00b6 git checkout -b dev -b\u8868\u793a\u521b\u5efa\u5e76\u5207\u6362\u5206\u652f \u4e0a\u9762\u4e00\u6761\u547d\u4ee4\u76f8\u5f53\u4e8e\u4e00\u9762\u7684\u4e8c\u6761\uff1a git branch dev //\u521b\u5efa\u5206\u652f git checkout dev //\u5207\u6362\u5206\u652f \u67e5\u770b\u5206\u652f \u00b6 git branch \u5408\u5e76\u5206\u652f \u00b6 git merge dev //\u7528\u4e8e\u5408\u5e76\u6307\u5b9a\u5206\u652f\u5230\u5f53\u524d\u5206\u652f git merge --no-ff -m \"merge with no-ff\" dev //\u52a0\u4e0a--no-ff\u53c2\u6570\u5c31\u53ef\u4ee5\u7528\u666e\u901a\u6a21\u5f0f\u5408\u5e76\uff0c\u5408\u5e76\u540e\u7684\u5386\u53f2\u6709\u5206\u652f\uff0c\u80fd\u770b\u51fa\u6765\u66fe\u7ecf\u505a\u8fc7\u5408\u5e76 \u5220\u9664\u5206\u652f \u00b6 git branch -d dev \u67e5\u770b\u5206\u652f\u5408\u5e76\u56fe \u00b6 git log --graph --pretty=oneline --abbrev-commit \u67e5\u770b\u8fdc\u7a0b\u5e93\u4fe1\u606f \u00b6 git remote // -v \u663e\u793a\u66f4\u8be6\u7ec6\u7684\u4fe1\u606f git\u76f8\u5173\u914d\u7f6e \u00b6 # \u5b89\u88c5\u5b8cGit\u540e\u7b2c\u4e00\u4ef6\u8981\u505a\u7684\u4e8b\uff0c\u8bbe\u7f6e\u7528\u6237\u4fe1\u606f(global\u53ef\u6362\u6210local\u5728\u5355\u72ec\u9879\u76ee\u751f\u6548)\uff1a git config --global user.name \"\u7528\u6237\u540d\" # \u8bbe\u7f6e\u7528\u6237\u540d git config --global user.email \"\u7528\u6237\u90ae\u7bb1\" #\u8bbe\u7f6e\u90ae\u7bb1 git config --global user.name # \u67e5\u770b\u7528\u6237\u540d\u662f\u5426\u914d\u7f6e\u6210\u529f git config --global user.email # \u67e5\u770b\u90ae\u7bb1\u662f\u5426\u914d\u7f6e # \u5176\u4ed6\u67e5\u770b\u914d\u7f6e\u76f8\u5173 git config --global --list # \u67e5\u770b\u5168\u5c40\u8bbe\u7f6e\u76f8\u5173\u53c2\u6570\u5217\u8868 git config --local --list # \u67e5\u770b\u672c\u5730\u8bbe\u7f6e\u76f8\u5173\u53c2\u6570\u5217\u8868 git config --system --list # \u67e5\u770b\u7cfb\u7edf\u914d\u7f6e\u53c2\u6570\u5217\u8868 git config --list # \u67e5\u770b\u6240\u6709Git\u7684\u914d\u7f6e(\u5168\u5c40+\u672c\u5730+\u7cfb\u7edf) git config --global color.ui true //\u663e\u793agit\u76f8\u5173\u989c\u8272 \u64a4\u6d88\u67d0\u6b21\u63d0\u4ea4 \u00b6 git revert HEAD # \u64a4\u9500\u6700\u8fd1\u7684\u4e00\u4e2a\u63d0\u4ea4 git revert \u7248\u672c\u53f7 # \u64a4\u9500\u67d0\u6b21commit \u62c9\u53d6\u8fdc\u7a0b\u5206\u652f\u5230\u672c\u5730\u4ed3\u5e93 \u00b6 git checkout -b \u672c\u5730\u5206\u652f \u8fdc\u7a0b\u5206\u652f # \u4f1a\u5728\u672c\u5730\u65b0\u5efa\u5206\u652f\uff0c\u5e76\u81ea\u52a8\u5207\u6362\u5230\u8be5\u5206\u652f git fetch origin \u8fdc\u7a0b\u5206\u652f:\u672c\u5730\u5206\u652f # \u4f1a\u5728\u672c\u5730\u65b0\u5efa\u5206\u652f\uff0c\u4f46\u4e0d\u4f1a\u81ea\u52a8\u5207\u6362\uff0c\u8fd8\u9700checkout git branch --set-upstream \u672c\u5730\u5206\u652f \u8fdc\u7a0b\u5206\u652f # \u5efa\u7acb\u672c\u5730\u5206\u652f\u4e0e\u8fdc\u7a0b\u5206\u652f\u7684\u94fe\u63a5 \u6807\u7b7e\u547d\u4ee4 \u00b6 git tag \u6807\u7b7e //\u6253\u6807\u7b7e\u547d\u4ee4\uff0c\u9ed8\u8ba4\u4e3aHEAD git tag //\u663e\u793a\u6240\u6709\u6807\u7b7e git tag \u6807\u7b7e \ufffd\u7248\u672c\u53f7 //\u7ed9\u67d0\u4e2acommit\u7248\u672c\u6dfb\u52a0\u6807\u7b7e git show \u6807\u7b7e //\u663e\u793a\u67d0\u4e2a\u6807\u7b7e\u7684\u8be6\u7ec6\u4fe1\u606f \u540c\u6b65\u8fdc\u7a0b\u4ed3\u5e93\u66f4\u65b0 \u00b6 git fetch origin master //\u4ece\u8fdc\u7a0b\u83b7\u53d6\u6700\u65b0\u7684\u5230\u672c\u5730\uff0c\u9996\u5148\u4ece\u8fdc\u7a0b\u7684origin\u7684master\u4e3b\u5206\u652f\u4e0b\u8f7d\u6700\u65b0\u7684\u7248\u672c\u5230origin/master\u5206\u652f\u4e0a\uff0c\u7136\u540e\u6bd4\u8f83\u672c\u5730\u7684master\u5206\u652f\u548corigin/master\u5206\u652f\u7684\u5dee\u522b\uff0c\u6700\u540e\u8fdb\u884c\u5408\u5e76\u3002 git fetch\u6bd4git pull\u66f4\u52a0\u5b89\u5168 git pull origin master \u63a8\u9001\u65f6\u9009\u62e9\u5f3a\u5236\u63a8\u9001 \u00b6 \u5f3a\u5236\u63a8\u9001\u9700\u8981\u6267\u884c\u4e0b\u9762\u7684\u547d\u4ee4(\u9ed8\u8ba4\u4e0d\u63a8\u8350\u8be5\u884c\u4e3a)\uff1a git push origin master -f git \u63d0\u793a\u6388\u6743\u5931\u8d25\u89e3\u51b3 \u00b6 git config --system --unset credential.helper # \u7ba1\u7406\u5458\u6743\u9650\u6267\u884c\u547d\u4ee4 git \u6388\u6743\u6c38\u4e45\u6709\u6548 \u00b6 git config --global credential.helper 'store'","title":"Git"},{"location":"tool/git/#git","text":"","title":"Git \u5e38\u7528\u547d\u4ee4\u901f\u67e5\u624b\u518c"},{"location":"tool/git/#_1","text":"git init","title":"\u521d\u59cb\u5316\u4ed3\u5e93"},{"location":"tool/git/#push","text":"''' git remote add origin https://gitee.com/\u7528\u6237\u4e2a\u6027\u5730\u5740/HelloGitee.git '''","title":"\u8bbe\u7f6e\u8fdc\u7a0b\u4ed3\u5e93\u5730\u5740\u540e\u518d\u505apush"},{"location":"tool/git/#_2","text":"git add \u6587\u4ef6\u540d # \u5c06\u5de5\u4f5c\u533a\u7684\u67d0\u4e2a\u6587\u4ef6\u6dfb\u52a0\u5230\u6682\u5b58\u533a git add -u # \u6dfb\u52a0\u6240\u6709\u88abtracked\u6587\u4ef6\u4e2d\u88ab\u4fee\u6539\u6216\u5220\u9664\u7684\u6587\u4ef6\u4fe1\u606f\u5230\u6682\u5b58\u533a\uff0c\u4e0d\u5904\u7406untracked\u7684\u6587\u4ef6 git add -A # \u6dfb\u52a0\u6240\u6709\u88abtracked\u6587\u4ef6\u4e2d\u88ab\u4fee\u6539\u6216\u5220\u9664\u7684\u6587\u4ef6\u4fe1\u606f\u5230\u6682\u5b58\u533a\uff0c\u5305\u62ecuntracked\u7684\u6587\u4ef6 git add . # \u5c06\u5f53\u524d\u5de5\u4f5c\u533a\u7684\u6240\u6709\u6587\u4ef6\u90fd\u52a0\u5165\u6682\u5b58\u533a git add -i # \u8fdb\u5165\u4ea4\u4e92\u754c\u9762\u6a21\u5f0f\uff0c\u6309\u9700\u6dfb\u52a0\u6587\u4ef6\u5230\u7f13\u5b58\u533a","title":"\u5c06\u6587\u4ef6\u6dfb\u52a0\u5230\u4ed3\u5e93"},{"location":"tool/git/#_3","text":"git commit -m \"\u63d0\u4ea4\u8bf4\u660e\" # \u5c06\u6682\u5b58\u533a\u5185\u5bb9\u63d0\u4ea4\u5230\u672c\u5730\u4ed3\u5e93 git commit -a -m \"\u63d0\u4ea4\u8bf4\u660e\" # \u8df3\u8fc7\u7f13\u5b58\u533a\u64cd\u4f5c\uff0c\u76f4\u63a5\u628a\u5de5\u4f5c\u533a\u5185\u5bb9\u63d0\u4ea4\u5230\u672c\u5730\u4ed3\u5e93","title":"\u5c06\u6682\u5b58\u533a\u6587\u4ef6\u63d0\u4ea4\u5230\u672c\u5730\u4ed3\u5e93"},{"location":"tool/git/#_4","text":"git status","title":"\u67e5\u770b\u4ed3\u5e93\u5f53\u524d\u72b6\u6001"},{"location":"tool/git/#_5","text":"git diff # \u5de5\u4f5c\u533a\u4e0e\u6682\u5b58\u533a\u7684\u5dee\u5f02 git diff \u5206\u652f\u540d #\u5de5\u4f5c\u533a\u4e0e\u67d0\u5206\u652f\u7684\u5dee\u5f02\uff0c\u8fdc\u7a0b\u5206\u652f\u8fd9\u6837\u5199\uff1aremotes/origin/\u5206\u652f\u540d git diff HEAD # \u5de5\u4f5c\u533a\u4e0eHEAD\u6307\u9488\u6307\u5411\u7684\u5185\u5bb9\u5dee\u5f02 git diff \u63d0\u4ea4id \u6587\u4ef6\u8def\u5f84 # \u5de5\u4f5c\u533a\u67d0\u6587\u4ef6\u5f53\u524d\u7248\u672c\u4e0e\u5386\u53f2\u7248\u672c\u7684\u5dee\u5f02 git diff --stage # \u5de5\u4f5c\u533a\u6587\u4ef6\u4e0e\u4e0a\u6b21\u63d0\u4ea4\u7684\u5dee\u5f02(1.6 \u7248\u672c\u524d\u7528 --cached) git diff \u7248\u672cTAG # \u67e5\u770b\u4ece\u67d0\u4e2a\u7248\u672c\u540e\u90fd\u6539\u52a8\u5185\u5bb9 git diff \u5206\u652fA \u5206\u652fB # \u6bd4\u8f83\u4ece\u5206\u652fA\u548c\u5206\u652fB\u7684\u5dee\u5f02(\u4e5f\u652f\u6301\u6bd4\u8f83\u4e24\u4e2aTAG) git diff \u5206\u652fA...\u5206\u652fB # \u6bd4\u8f83\u4e24\u5206\u652f\u5728\u5206\u5f00\u540e\u5404\u81ea\u7684\u6539\u52a8 # \u53e6\u5916\uff1a\u5982\u679c\u53ea\u60f3\u7edf\u8ba1\u54ea\u4e9b\u6587\u4ef6\u88ab\u6539\u52a8\uff0c\u591a\u5c11\u884c\u88ab\u6539\u52a8\uff0c\u53ef\u4ee5\u6dfb\u52a0 --stat \u53c2\u6570","title":"\u6bd4\u8f83\u6587\u4ef6\u5f02\u540c"},{"location":"tool/git/#_6","text":"git log # \u67e5\u770b\u6240\u6709commit\u8bb0\u5f55(SHA-A\u6821\u9a8c\u548c\uff0c\u4f5c\u8005\u540d\u79f0\uff0c\u90ae\u7bb1\uff0c\u63d0\u4ea4\u65f6\u95f4\uff0c\u63d0\u4ea4\u8bf4\u660e) git log -p -\u6b21\u6570 # \u67e5\u770b\u6700\u8fd1\u591a\u5c11\u6b21\u7684\u63d0\u4ea4\u8bb0\u5f55 git log --stat # \u7b80\u7565\u663e\u793a\u6bcf\u6b21\u63d0\u4ea4\u7684\u5185\u5bb9\u66f4\u6539 git log --name-only # \u4ec5\u663e\u793a\u5df2\u4fee\u6539\u7684\u6587\u4ef6\u6e05\u5355 git log --name-status # \u663e\u793a\u65b0\u589e\uff0c\u4fee\u6539\uff0c\u5220\u9664\u7684\u6587\u4ef6\u6e05\u5355 git log --oneline # \u8ba9\u63d0\u4ea4\u8bb0\u5f55\u4ee5\u7cbe\u7b80\u7684\u4e00\u884c\u8f93\u51fa git log \u2013graph \u2013all --online # \u56fe\u5f62\u5c55\u793a\u5206\u652f\u7684\u5408\u5e76\u5386\u53f2 git log --author=\u4f5c\u8005 # \u67e5\u8be2\u4f5c\u8005\u7684\u63d0\u4ea4\u8bb0\u5f55(\u548cgrep\u540c\u65f6\u4f7f\u7528\u8981\u52a0\u4e00\u4e2a--all--match\u53c2\u6570) git log --grep=\u8fc7\u6ee4\u4fe1\u606f # \u5217\u51fa\u63d0\u4ea4\u4fe1\u606f\u4e2d\u5305\u542b\u8fc7\u6ee4\u4fe1\u606f\u7684\u63d0\u4ea4\u8bb0\u5f55 git log -S\u67e5\u8be2\u5185\u5bb9 # \u548c--grep\u7c7b\u4f3c\uff0cS\u548c\u67e5\u8be2\u5185\u5bb9\u95f4\u6ca1\u6709\u7a7a\u683c git log fileName # \u67e5\u770b\u67d0\u6587\u4ef6\u7684\u4fee\u6539\u8bb0\u5f55\uff0c\u627e\u80cc\u9505\u4e13\u7528","title":"\u67e5\u770b\u5386\u53f2\u8bb0\u5f55"},{"location":"tool/git/#_7","text":"git reset HEAD^ # \u6062\u590d\u6210\u4e0a\u6b21\u63d0\u4ea4\u7684\u7248\u672c git reset HEAD^^ # \u6062\u590d\u6210\u4e0a\u4e0a\u6b21\u63d0\u4ea4\u7684\u7248\u672c\uff0c\u5c31\u662f\u591a\u4e2a^\uff0c\u4ee5\u6b64\u7c7b\u63a8\u6216\u7528~\u6b21\u6570 git reflog git reset --hard \u7248\u672c\u53f7 --soft\uff1a\u53ea\u662f\u6539\u53d8HEAD\u6307\u9488\u6307\u5411\uff0c\u7f13\u5b58\u533a\u548c\u5de5\u4f5c\u533a\u4e0d\u53d8\uff1b --mixed\uff1a\u4fee\u6539HEAD\u6307\u9488\u6307\u5411\uff0c\u6682\u5b58\u533a\u5185\u5bb9\u4e22\u5931\uff0c\u5de5\u4f5c\u533a\u4e0d\u53d8\uff1b --hard\uff1a\u4fee\u6539HEAD\u6307\u9488\u6307\u5411\uff0c\u6682\u5b58\u533a\u5185\u5bb9\u4e22\u5931\uff0c\u5de5\u4f5c\u533a\u6062\u590d\u4ee5\u524d\u72b6\u6001\uff1b","title":"\u4ee3\u7801\u56de\u6eda"},{"location":"tool/git/#_8","text":"git push -u origin master","title":"\u540c\u6b65\u8fdc\u7a0b\u4ed3\u5e93"},{"location":"tool/git/#_9","text":"git rm \u6587\u4ef6\u540d","title":"\u5220\u9664\u7248\u672c\u5e93\u6587\u4ef6"},{"location":"tool/git/#_10","text":"git checkout -- test.txt","title":"\u7248\u672c\u5e93\u91cc\u7684\u7248\u672c\u66ff\u6362\u5de5\u4f5c\u533a\u7684\u7248\u672c"},{"location":"tool/git/#_11","text":"git remote add origin git@github.com:\u5e10\u53f7\u540d/\u4ed3\u5e93\u540d.git","title":"\u672c\u5730\u4ed3\u5e93\u5185\u5bb9\u63a8\u9001\u5230\u8fdc\u7a0b\u4ed3\u5e93"},{"location":"tool/git/#_12","text":"'''git git add . #\u5c06\u5f53\u524d\u76ee\u5f55\u6240\u6709\u6587\u4ef6\u6dfb\u52a0\u5230git\u6682\u5b58\u533a git commit -m \"my first commit\" #\u63d0\u4ea4\u5e76\u5907\u6ce8\u63d0\u4ea4\u4fe1\u606f git push origin master #\u5c06\u672c\u5730\u63d0\u4ea4\u63a8\u9001\u5230\u8fdc\u7a0b\u4ed3\u5e93 '''","title":"\u5c06\u672c\u5730\u4ed3\u5e93\u5185\u5bb9\u63a8\u9001\u5230\u8fdc\u7a0b\u4ed3\u5e93"},{"location":"tool/git/#_13","text":"git clone git@github.com:git\u5e10\u53f7\u540d/\u4ed3\u5e93\u540d.git","title":"\u4ece\u8fdc\u7a0b\u4ed3\u5e93\u514b\u9686\u9879\u76ee\u5230\u672c\u5730"},{"location":"tool/git/#_14","text":"git checkout -b dev -b\u8868\u793a\u521b\u5efa\u5e76\u5207\u6362\u5206\u652f \u4e0a\u9762\u4e00\u6761\u547d\u4ee4\u76f8\u5f53\u4e8e\u4e00\u9762\u7684\u4e8c\u6761\uff1a git branch dev //\u521b\u5efa\u5206\u652f git checkout dev //\u5207\u6362\u5206\u652f","title":"\u521b\u5efa\u5206\u652f"},{"location":"tool/git/#_15","text":"git branch","title":"\u67e5\u770b\u5206\u652f"},{"location":"tool/git/#_16","text":"git merge dev //\u7528\u4e8e\u5408\u5e76\u6307\u5b9a\u5206\u652f\u5230\u5f53\u524d\u5206\u652f git merge --no-ff -m \"merge with no-ff\" dev //\u52a0\u4e0a--no-ff\u53c2\u6570\u5c31\u53ef\u4ee5\u7528\u666e\u901a\u6a21\u5f0f\u5408\u5e76\uff0c\u5408\u5e76\u540e\u7684\u5386\u53f2\u6709\u5206\u652f\uff0c\u80fd\u770b\u51fa\u6765\u66fe\u7ecf\u505a\u8fc7\u5408\u5e76","title":"\u5408\u5e76\u5206\u652f"},{"location":"tool/git/#_17","text":"git branch -d dev","title":"\u5220\u9664\u5206\u652f"},{"location":"tool/git/#_18","text":"git log --graph --pretty=oneline --abbrev-commit","title":"\u67e5\u770b\u5206\u652f\u5408\u5e76\u56fe"},{"location":"tool/git/#_19","text":"git remote // -v \u663e\u793a\u66f4\u8be6\u7ec6\u7684\u4fe1\u606f","title":"\u67e5\u770b\u8fdc\u7a0b\u5e93\u4fe1\u606f"},{"location":"tool/git/#git_1","text":"# \u5b89\u88c5\u5b8cGit\u540e\u7b2c\u4e00\u4ef6\u8981\u505a\u7684\u4e8b\uff0c\u8bbe\u7f6e\u7528\u6237\u4fe1\u606f(global\u53ef\u6362\u6210local\u5728\u5355\u72ec\u9879\u76ee\u751f\u6548)\uff1a git config --global user.name \"\u7528\u6237\u540d\" # \u8bbe\u7f6e\u7528\u6237\u540d git config --global user.email \"\u7528\u6237\u90ae\u7bb1\" #\u8bbe\u7f6e\u90ae\u7bb1 git config --global user.name # \u67e5\u770b\u7528\u6237\u540d\u662f\u5426\u914d\u7f6e\u6210\u529f git config --global user.email # \u67e5\u770b\u90ae\u7bb1\u662f\u5426\u914d\u7f6e # \u5176\u4ed6\u67e5\u770b\u914d\u7f6e\u76f8\u5173 git config --global --list # \u67e5\u770b\u5168\u5c40\u8bbe\u7f6e\u76f8\u5173\u53c2\u6570\u5217\u8868 git config --local --list # \u67e5\u770b\u672c\u5730\u8bbe\u7f6e\u76f8\u5173\u53c2\u6570\u5217\u8868 git config --system --list # \u67e5\u770b\u7cfb\u7edf\u914d\u7f6e\u53c2\u6570\u5217\u8868 git config --list # \u67e5\u770b\u6240\u6709Git\u7684\u914d\u7f6e(\u5168\u5c40+\u672c\u5730+\u7cfb\u7edf) git config --global color.ui true //\u663e\u793agit\u76f8\u5173\u989c\u8272","title":"git\u76f8\u5173\u914d\u7f6e"},{"location":"tool/git/#_20","text":"git revert HEAD # \u64a4\u9500\u6700\u8fd1\u7684\u4e00\u4e2a\u63d0\u4ea4 git revert \u7248\u672c\u53f7 # \u64a4\u9500\u67d0\u6b21commit","title":"\u64a4\u6d88\u67d0\u6b21\u63d0\u4ea4"},{"location":"tool/git/#_21","text":"git checkout -b \u672c\u5730\u5206\u652f \u8fdc\u7a0b\u5206\u652f # \u4f1a\u5728\u672c\u5730\u65b0\u5efa\u5206\u652f\uff0c\u5e76\u81ea\u52a8\u5207\u6362\u5230\u8be5\u5206\u652f git fetch origin \u8fdc\u7a0b\u5206\u652f:\u672c\u5730\u5206\u652f # \u4f1a\u5728\u672c\u5730\u65b0\u5efa\u5206\u652f\uff0c\u4f46\u4e0d\u4f1a\u81ea\u52a8\u5207\u6362\uff0c\u8fd8\u9700checkout git branch --set-upstream \u672c\u5730\u5206\u652f \u8fdc\u7a0b\u5206\u652f # \u5efa\u7acb\u672c\u5730\u5206\u652f\u4e0e\u8fdc\u7a0b\u5206\u652f\u7684\u94fe\u63a5","title":"\u62c9\u53d6\u8fdc\u7a0b\u5206\u652f\u5230\u672c\u5730\u4ed3\u5e93"},{"location":"tool/git/#_22","text":"git tag \u6807\u7b7e //\u6253\u6807\u7b7e\u547d\u4ee4\uff0c\u9ed8\u8ba4\u4e3aHEAD git tag //\u663e\u793a\u6240\u6709\u6807\u7b7e git tag \u6807\u7b7e \ufffd\u7248\u672c\u53f7 //\u7ed9\u67d0\u4e2acommit\u7248\u672c\u6dfb\u52a0\u6807\u7b7e git show \u6807\u7b7e //\u663e\u793a\u67d0\u4e2a\u6807\u7b7e\u7684\u8be6\u7ec6\u4fe1\u606f","title":"\u6807\u7b7e\u547d\u4ee4"},{"location":"tool/git/#_23","text":"git fetch origin master //\u4ece\u8fdc\u7a0b\u83b7\u53d6\u6700\u65b0\u7684\u5230\u672c\u5730\uff0c\u9996\u5148\u4ece\u8fdc\u7a0b\u7684origin\u7684master\u4e3b\u5206\u652f\u4e0b\u8f7d\u6700\u65b0\u7684\u7248\u672c\u5230origin/master\u5206\u652f\u4e0a\uff0c\u7136\u540e\u6bd4\u8f83\u672c\u5730\u7684master\u5206\u652f\u548corigin/master\u5206\u652f\u7684\u5dee\u522b\uff0c\u6700\u540e\u8fdb\u884c\u5408\u5e76\u3002 git fetch\u6bd4git pull\u66f4\u52a0\u5b89\u5168 git pull origin master","title":"\u540c\u6b65\u8fdc\u7a0b\u4ed3\u5e93\u66f4\u65b0"},{"location":"tool/git/#_24","text":"\u5f3a\u5236\u63a8\u9001\u9700\u8981\u6267\u884c\u4e0b\u9762\u7684\u547d\u4ee4(\u9ed8\u8ba4\u4e0d\u63a8\u8350\u8be5\u884c\u4e3a)\uff1a git push origin master -f","title":"\u63a8\u9001\u65f6\u9009\u62e9\u5f3a\u5236\u63a8\u9001"},{"location":"tool/git/#git_2","text":"git config --system --unset credential.helper # \u7ba1\u7406\u5458\u6743\u9650\u6267\u884c\u547d\u4ee4","title":"git \u63d0\u793a\u6388\u6743\u5931\u8d25\u89e3\u51b3"},{"location":"tool/git/#git_3","text":"git config --global credential.helper 'store'","title":"git \u6388\u6743\u6c38\u4e45\u6709\u6548"},{"location":"tool/gitbook/","text":"GitBook \u4f7f\u7528\u6559\u7a0b \u00b6 \u9996\u5148\u5148\u732e\u4e0a \u6211\u7684 blog \u5730\u5740\uff0c\u53ef\u4ee5\u5728\u6211\u7684\u535a\u5ba2\u5bfc\u822a\u680f\u5904\u627e\u5230\uff0c\u4e0b\u9762\u8fdb\u884c\u76f8\u5173\u7684\u4ecb\u7ecd\u3002 \u80cc\u666f \u00b6 \u7531\u4e8e\u4e4b\u524d\u90fd\u628a\u96f6\u6563\u7684\u77e5\u8bc6\u90fd\u5199\u5728\u535a\u5ba2\u56ed\u4e0a\uff0c\u8981\u67e5\u627e\u7684\u65f6\u5019\u4e0d\u662f\u5f88\u7cfb\u7edf\u5316\uff0c\u6240\u4ee5\u6253\u7b97\u632a\u5230 GitBook \u4e0a\u6765\u7edf\u4e00\u7ba1\u7406\uff0c\u800c\u4e14 GitBook \u5199\u5b8c\u7f16\u8bd1\u540e\u53ef\u4ee5\u751f\u6210\u9759\u6001\u9875\u9762\u53d1\u5e03\u5230\u535a\u5ba2\u4e0a\uff0c\u903c\u683c\u6ee1\u6ee1\u7684\u6837\u5b50\u3002 GitBook \u7b80\u4ecb \u00b6 GitBook \u5b98\u7f51 GitBook \u6587\u6863 GitBook GitHub GitBook \u51c6\u5907\u5de5\u4f5c \u00b6 \u4e0a\u9762\u6211\u63a8\u8350\u7684\u662f Node.js + GitBook + Typora + Git\uff0c\u6240\u4ee5\u4f60\u8fd8\u9700\u8981\u5b89\u88c5 Typora\uff08\u4e00\u4e2a\u5f88\u68d2\u7684\u652f\u6301 macOS\u3001Windows\u3001Linux \u7684 Markdown \u7f16\u8f91\u5de5\u5177\uff09\u548c Git \u7248\u672c\u7ba1\u7406\u5de5\u5177\u3002\u6233\u4e0b\u9762\uff1a * Node.js * Typora * Git \u5b89\u88c5 Node.js \u00b6 GitBook \u662f\u4e00\u4e2a\u57fa\u4e8e Node.js \u7684\u547d\u4ee4\u884c\u5de5\u5177\uff0c\u4e0b\u8f7d\u5b89\u88c5 Node.js\uff0c\u5b89\u88c5\u5b8c\u6210\u4e4b\u540e\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528\u4e0b\u9762\u7684\u547d\u4ee4\u6765\u68c0\u9a8c\u662f\u5426\u5b89\u88c5\u6210\u529f\u3002 $ node -v v10.5.0 \u5b89\u88c5 GitBook \u00b6 \u8f93\u5165\u4e0b\u9762\u7684\u547d\u4ee4\u6765\u5b89\u88c5 GitBook\u3002 $ npm install gitbook-cli -g \u5b89\u88c5\u5b8c\u6210\u4e4b\u540e\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528\u4e0b\u9762\u7684\u547d\u4ee4\u6765\u68c0\u9a8c\u662f\u5426\u5b89\u88c5\u6210\u529f $ gitbook -V CLI version: 2.3.2 Installing GitBook 3.2.3 \u66f4\u591a\u8be6\u60c5\u8bf7\u53c2\u7167 GitBook \u5b89\u88c5\u6587\u6863 \u6765\u5b89\u88c5 GitBook\u3002 \u5b89\u88c5 Typora \u00b6 Typora \u7684\u5b89\u88c5\u5f88\u7b80\u5355\uff0c\u96be\u70b9\u5728\u4e8e\u9700\u8981\u7ffb\u5899\u624d\u80fd\u4e0b\u8f7d\uff08\u5f53\u7136\u4f60\u4e5f\u53ef\u4ee5\u627e\u6211\u8981\uff09\u3002Git \u7684\u5b89\u88c5\u4e5f\u5f88\u7b80\u5355\uff0c\u4f46\u8981\u7528\u597d\u5b83\u9700\u8981\u4e0d\u5c11\u65f6\u95f4\uff0c\u8fd9\u91cc\u5c31\u4e0d\u5c55\u5f00\u4e86\uff08\u518d\u8bb2\u4e0b\u53bb\u4f60\u5c31\u8981\u8dd1\u5566\uff09\u3002 \u5b89\u88c5 GitBook \u7f16\u8f91\u5668 \u00b6 \u53bb GitBook \u5b98\u7f51 \u4e0b\u8f7d GitBook \u7f16\u8f91\u5668\uff1b\u5982\u679c\u662f Mac \u7528\u6237\u4e14\u5b89\u88c5\u8fc7 brew cask \u7684\u8bdd\u53ef\u4ee5\u4f7f\u7528 brew cask install gitbook-editor \u547d\u4ee4\u884c\u6765\u5b89\u88c5 GitBook \u7f16\u8f91\u5668\u3002 \u5148\u7779\u4e3a\u5feb \u00b6 GitBook \u51c6\u5907\u5de5\u4f5c\u505a\u597d\u4e4b\u540e\uff0c\u6211\u4eec\u8fdb\u5165\u4e00\u4e2a\u4f60\u8981\u5199\u4e66\u7684\u76ee\u5f55\uff0c\u8f93\u5165\u5982\u4e0b\u547d\u4ee4\u3002 $ gitbook init warn: no summary file in this book info: create README.md info: create SUMMARY.md info: initialization is finished \u53ef\u4ee5\u770b\u5230\u4ed6\u4f1a\u521b\u5efa README.md \u548c SUMMARY.md \u8fd9\u4e24\u4e2a\u6587\u4ef6\uff0cREADME.md \u5e94\u8be5\u4e0d\u964c\u751f\uff0c\u5c31\u662f\u8bf4\u660e\u6587\u6863\uff0c\u800c SUMMARY.md \u5176\u5b9e\u5c31\u662f\u4e66\u7684\u7ae0\u8282\u76ee\u5f55\uff0c\u5176\u9ed8\u8ba4\u5185\u5bb9\u5982\u4e0b\u6240\u793a\uff1a # Summary * [Introduction](README.md) \u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u8f93\u5165 $ gitbook serve \u547d\u4ee4\uff0c\u7136\u540e\u5728\u6d4f\u89c8\u5668\u5730\u5740\u680f\u4e2d\u8f93\u5165 http://localhost:4000 \u4fbf\u53ef\u9884\u89c8\u4e66\u7c4d\u3002 \u6548\u679c\u5982\u4e0b\u6240\u793a\uff1a \u8fd0\u884c\u8be5\u547d\u4ee4\u540e\u4f1a\u5728\u4e66\u7c4d\u7684\u6587\u4ef6\u5939\u4e2d\u751f\u6210\u4e00\u4e2a _book \u6587\u4ef6\u5939, \u91cc\u9762\u7684\u5185\u5bb9\u5373\u4e3a\u751f\u6210\u7684 html \u6587\u4ef6\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4e0b\u9762\u547d\u4ee4\u6765\u751f\u6210\u7f51\u9875\u800c\u4e0d\u5f00\u542f\u670d\u52a1\u5668\u3002 gitbook build \u4e0b\u9762\u6211\u4eec\u6765\u8be6\u7ec6\u4ecb\u7ecd\u4e0b GitBook \u76ee\u5f55\u7ed3\u6784\u53ca\u76f8\u5173\u6587\u4ef6\u3002 Typora \u6765\u7f16\u8f91\u8fd9\u4e24\u4e2a\u6587\u4ef6 \u00b6 \u7f16\u8f91 SUMMARY.md \u6587\u4ef6\uff0c\u5185\u5bb9\u4fee\u6539\u4e3a\uff1a # \u76ee\u5f55 * [\u524d\u8a00](README.md) * [\u7b2c\u4e00\u7ae0](Chapter1/README.md) * [\u7b2c1\u8282\uff1a\u8863](Chapter1/\u8863.md) * [\u7b2c2\u8282\uff1a\u98df](Chapter1/\u98df.md) * [\u7b2c3\u8282\uff1a\u4f4f](Chapter1/\u4f4f.md) * [\u7b2c4\u8282\uff1a\u884c](Chapter1/\u884c.md) * [\u7b2c\u4e8c\u7ae0](Chapter2/README.md) * [\u7b2c\u4e09\u7ae0](Chapter3/README.md) * [\u7b2c\u56db\u7ae0](Chapter4/README.md) \u7136\u540e\u6211\u4eec\u56de\u5230\u547d\u4ee4\u884c\uff0c\u5728 mybook \u6587\u4ef6\u5939\u4e2d\u518d\u6b21\u6267\u884c gitbook init \u547d\u4ee4\u3002GitBook \u4f1a\u67e5\u627e SUMMARY.md \u6587\u4ef6\u4e2d\u63cf\u8ff0\u7684\u76ee\u5f55\u548c\u6587\u4ef6\uff0c\u5982\u679c\u6ca1\u6709\u5219\u4f1a\u5c06\u5176\u521b\u5efa\u3002 Typora \u662f\u6240\u89c1\u5373\u6240\u5f97\uff08\u5b9e\u65f6\u6e32\u67d3\uff09\u7684 Markdown \u7f16\u8f91\u5668\uff0c\u8fd9\u65f6\u5019\u5b83\u662f\u8fd9\u6837\u7684\uff1a \u63a5\u7740\u6211\u4eec\u6267\u884c gitbook serve \u6765\u9884\u89c8\u8fd9\u672c\u4e66\u7c4d\uff0c\u6267\u884c\u547d\u4ee4\u540e\u4f1a\u5bf9 Markdown \u683c\u5f0f\u7684\u6587\u6863\u8fdb\u884c\u8f6c\u6362\uff0c\u9ed8\u8ba4\u8f6c\u6362\u4e3a html \u683c\u5f0f\uff0c\u6700\u540e\u63d0\u793a \u201cServing book on http://localhost:4000 \u201d\u3002\u55ef\uff0c\u6253\u5f00\u6d4f\u89c8\u5668\u770b\u4e00\u4e0b\u5427\uff1a gitbook \u5e38\u7528\u547d\u4ee4 \u00b6 \u5f53\u4f60\u5199\u5f97\u5dee\u4e0d\u591a\uff0c\u4f60\u53ef\u4ee5\u6267\u884c gitbook build \u547d\u4ee4\u6784\u5efa\u4e66\u7c4d\uff0c\u9ed8\u8ba4\u5c06\u751f\u6210\u7684\u9759\u6001\u7f51\u7ad9\u8f93\u51fa\u5230 _book \u76ee\u5f55\u3002\u5b9e\u9645\u4e0a\uff0c\u8fd9\u4e00\u6b65\u4e5f\u5305\u542b\u5728 gitbook serve \u91cc\u9762\uff0c\u56e0\u4e3a\u5b83\u4eec\u662f HTML\uff0c\u6240\u4ee5 GitBook \u901a\u8fc7 Node.js \u7ed9\u4f60\u63d0\u4f9b\u670d\u52a1\u4e86\u3002 1. \u5f53\u7136\uff0cbuild \u547d\u4ee4\u53ef\u4ee5\u6307\u5b9a\u8def\u5f84\uff1a gitbook build [\u4e66\u7c4d\u8def\u5f84] [\u8f93\u51fa\u8def\u5f84] 2. serve \u547d\u4ee4\u4e5f\u53ef\u4ee5\u6307\u5b9a\u7aef\u53e3\uff1a gitbook serve --port 2333 3. \u4f60\u8fd8\u53ef\u4ee5\u751f\u6210 PDF \u683c\u5f0f\u7684\u7535\u5b50\u4e66\uff1a gitbook pdf ./ ./mybook.pdf 4. \u751f\u6210 epub \u683c\u5f0f\u7684\u7535\u5b50\u4e66\uff1a gitbook epub ./ ./mybook.epub 5. \u751f\u6210 mobi \u683c\u5f0f\u7684\u7535\u5b50\u4e66\uff1a gitbook mobi ./ ./mybook.mobi \u57fa\u672c\u547d\u4ee4 gitbook init //\u521d\u59cb\u5316\u76ee\u5f55\u6587\u4ef6 gitbook help //\u5217\u51fagitbook\u6240\u6709\u7684\u547d\u4ee4 gitbook --help //\u8f93\u51fagitbook-cli\u7684\u5e2e\u52a9\u4fe1\u606f gitbook build //\u751f\u6210\u9759\u6001\u7f51\u9875 gitbook serve //\u751f\u6210\u9759\u6001\u7f51\u9875\u5e76\u8fd0\u884c\u670d\u52a1\u5668 gitbook build --gitbook=2.0.1 //\u751f\u6210\u65f6\u6307\u5b9agitbook\u7684\u7248\u672c, \u672c\u5730\u6ca1\u6709\u4f1a\u5148\u4e0b\u8f7d gitbook ls //\u5217\u51fa\u672c\u5730\u6240\u6709\u7684gitbook\u7248\u672c gitbook ls-remote //\u5217\u51fa\u8fdc\u7a0b\u53ef\u7528\u7684gitbook\u7248\u672c gitbook fetch \u6807\u7b7e/\u7248\u672c\u53f7 //\u5b89\u88c5\u5bf9\u5e94\u7684gitbook\u7248\u672c gitbook update //\u66f4\u65b0\u5230gitbook\u7684\u6700\u65b0\u7248\u672c gitbook uninstall 2.0.1 //\u5378\u8f7d\u5bf9\u5e94\u7684gitbook\u7248\u672c gitbook build --log=debug //\u6307\u5b9alog\u7684\u7ea7\u522b gitbook builid --debug //\u8f93\u51fa\u9519\u8bef\u4fe1\u606f \u5982\u679c\u751f\u6210\u4e0d\u4e86\uff0c\u4f60\u53ef\u80fd\u8fd8\u9700\u8981\u5b89\u88c5\u4e00\u4e9b\u5de5\u5177\uff0c\u6bd4\u5982 ebook-convert\u3002\u6216\u8005\u5728 Typora \u4e2d\u5b89\u88c5 Pandoc \u8fdb\u884c\u5bfc\u51fa\u3002 \u9664\u6b64\u4e4b\u5916\uff0c\u522b\u5fd8\u4e86\u8fd8\u53ef\u4ee5\u7528 Git \u505a\u7248\u672c\u7ba1\u7406\u5440\uff01\u5728 mybook \u76ee\u5f55\u4e0b\u6267\u884c git init \u521d\u59cb\u5316\u4ed3\u5e93\uff0c\u6267\u884c git remote add \u6dfb\u52a0\u8fdc\u7a0b\u4ed3\u5e93\uff08\u4f60\u5f97\u5148\u5728\u8fdc\u7aef\u5efa\u597d\uff09\u3002\u63a5\u7740\u5c31\u53ef\u4ee5\u6109\u5feb\u5730 commit\uff0cpush\uff0cpull \u2026 \u5566\uff01 \u4e0b\u9762\u6211\u4eec\u4e3b\u8981\u6765\u8bb2\u8bb2 book.json \u548c SUMMARY.md \u6587\u4ef6\u3002 book.json \u00b6 \u8be5\u6587\u4ef6\u4e3b\u8981\u7528\u6765\u5b58\u653e\u914d\u7f6e\u4fe1\u606f\uff0c\u6211\u5148\u653e\u51fa\u6211\u7684\u914d\u7f6e\u6587\u4ef6\u3002 { \"title\": \"Blankj's Glory\", \"author\": \"Blankj\", \"description\": \"select * from learn\", \"language\": \"zh-hans\", \"gitbook\": \"3.2.3\", \"styles\": { \"website\": \"./styles/website.css\" }, \"structure\": { \"readme\": \"README.md\" }, \"links\": { \"sidebar\": { \"\u6211\u7684\u72d7\u7a9d\": \"https://blankj.com\" } }, \"plugins\": [ \"-sharing\", \"splitter\", \"expandable-chapters-small\", \"anchors\", \"github\", \"github-buttons\", \"donate\", \"sharing-plus\", \"anchor-navigation-ex\", \"favicon\" ], \"pluginsConfig\": { \"github\": { \"url\": \"https://github.com/Blankj\" }, \"github-buttons\": { \"buttons\": [{ \"user\": \"Blankj\", \"repo\": \"glory\", \"type\": \"star\", \"size\": \"small\", \"count\": true } ] }, \"donate\": { \"alipay\": \"./source/images/donate.png\", \"title\": \"\", \"button\": \"\u8d5e\u8d4f\", \"alipayText\": \" \" }, \"sharing\": { \"douban\": false, \"facebook\": false, \"google\": false, \"hatenaBookmark\": false, \"instapaper\": false, \"line\": false, \"linkedin\": false, \"messenger\": false, \"pocket\": false, \"qq\": false, \"qzone\": false, \"stumbleupon\": false, \"twitter\": false, \"viber\": false, \"vk\": false, \"weibo\": false, \"whatsapp\": false, \"all\": [ \"google\", \"facebook\", \"weibo\", \"twitter\", \"qq\", \"qzone\", \"linkedin\", \"pocket\" ] }, \"anchor-navigation-ex\": { \"showLevel\": false }, \"favicon\":{ \"shortcut\": \"./source/images/favicon.jpg\", \"bookmark\": \"./source/images/favicon.jpg\", \"appleTouch\": \"./source/images/apple-touch-icon.jpg\", \"appleTouchMore\": { \"120x120\": \"./source/images/apple-touch-icon.jpg\", \"180x180\": \"./source/images/apple-touch-icon.jpg\" } } } } \u76f8\u4fe1\u5f88\u591a\u8282\u70b9\u81ea\u5df1\u4e5f\u80fd\u731c\u5230\u662f\u4ec0\u4e48\u610f\u601d\uff0c\u6211\u8fd8\u662f\u7b80\u5355\u4ecb\u7ecd\u4e0b\u5427\u3002 * title:\u672c\u4e66\u6807\u9898 * author:\u672c\u4e66\u4f5c\u8005 * description:\u672c\u4e66\u63cf\u8ff0 * language:\u672c\u4e66\u8bed\u8a00\uff0c\u4e2d\u6587\u8bbe\u7f6e \"zh-hans\" \u5373\u53ef * gitbook:\u6307\u5b9a\u4f7f\u7528\u7684 GitBook \u7248\u672c * styles:\u81ea\u5b9a\u4e49\u9875\u9762\u6837\u5f0f * structure:\u6307\u5b9a Readme\u3001Summary\u3001Glossary \u548c Languages \u5bf9\u5e94\u7684\u6587\u4ef6\u540d * links:\u5728\u5de6\u4fa7\u5bfc\u822a\u680f\u6dfb\u52a0\u94fe\u63a5\u4fe1\u606f * plugins:\u914d\u7f6e\u4f7f\u7528\u7684\u63d2\u4ef6 * pluginsConfig:\u914d\u7f6e\u63d2\u4ef6\u7684\u5c5e\u6027 * SUMMARY.md:\u8fd9\u4e2a\u6587\u4ef6\u4e3b\u8981\u51b3\u5b9a GitBook \u7684\u7ae0\u8282\u76ee\u5f55\uff0c\u5b83\u901a\u8fc7 Markdown \u4e2d\u7684\u5217\u8868\u8bed\u6cd5\u6765\u8868\u793a\u6587\u4ef6\u7684\u7236\u5b50\u5173\u7cfb\uff0c\u4e0b\u9762\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u793a\u4f8b\uff1a # Summary * [Introduction](README.md) * [Part I](part1/README.md) * [Writing is nice](part1/writing.md) * [GitBook is nice](part1/gitbook.md) * [Part II](part2/README.md) * [We love feedback](part2/feedback_please.md) * [Better tools for authors](part2/better_tools.md) \u8fd9\u4e2a\u914d\u7f6e\u5bf9\u5e94\u7684\u76ee\u5f55\u7ed3\u6784\u5982\u4e0b\u6240\u793a: \u6211\u4eec\u901a\u8fc7\u4f7f\u7528 \u6807\u9898 \u6216\u8005 \u6c34\u5e73\u5206\u5272\u7ebf \u5c06 GitBook \u5206\u4e3a\u51e0\u4e2a\u4e0d\u540c\u7684\u90e8\u5206\uff0c\u5982\u4e0b\u6240\u793a # Summary ### Part I * [Introduction](README.md) * [Writing is nice](part1/writing.md) * [GitBook is nice](part1/gitbook.md) ### Part II * [We love feedback](part2/feedback_please.md) * [Better tools for authors](part2/better_tools.md) --- * [Last part without title](part3/title.md) \u8fd9\u4e2a\u914d\u7f6e\u5bf9\u5e94\u7684\u76ee\u5f55\u7ed3\u6784\u5982\u4e0b\u6240\u793a: \u63d2\u4ef6 \u00b6 GitBook \u6709 \u63d2\u4ef6\u5b98\u7f51 \uff0c\u9ed8\u8ba4\u5e26\u6709 5 \u4e2a\u63d2\u4ef6\uff0chighlight\u3001search\u3001sharing\u3001font-settings\u3001livereload\uff0c\u5982\u679c\u8981\u53bb\u9664\u81ea\u5e26\u7684\u63d2\u4ef6\uff0c \u53ef\u4ee5\u5728\u63d2\u4ef6\u540d\u79f0\u524d\u9762\u52a0 -\uff0c\u6bd4\u5982\uff1a \"plugins\": [ \"-search\" ] \u5982\u679c\u8981\u914d\u7f6e\u4f7f\u7528\u7684\u63d2\u4ef6\u53ef\u4ee5\u5728 book.json \u6587\u4ef6\u4e2d\u52a0\u5165\u5373\u53ef\uff0c\u6bd4\u5982\u6211\u4eec\u6dfb\u52a0 plugin-github \uff0c\u6211\u4eec\u5728 book.json \u4e2d\u52a0\u5165\u914d\u7f6e\u5982\u4e0b\u5373\u53ef\uff1a { \"plugins\": [ \"github\" ], \"pluginsConfig\": { \"github\": { \"url\": \"https://github.com/your/repo\" } } } \u7136\u540e\u5728\u7ec8\u7aef\u8f93\u5165 gitbook install ./ \u5373\u53ef\u3002 \u5982\u679c\u8981\u6307\u5b9a\u63d2\u4ef6\u7684\u7248\u672c\u53ef\u4ee5\u4f7f\u7528 plugin@0.3.1\uff0c\u56e0\u4e3a\u4e00\u4e9b\u63d2\u4ef6\u53ef\u80fd\u4e0d\u4f1a\u968f\u7740 GitBook \u7248\u672c\u7684\u5347\u7ea7\u800c\u5347\u7ea7\u3002 \u7ed3\u8bed \u00b6 \u8fd9\u662f\u6211\u5bf9 GitBook \u4f7f\u7528\u7684\u603b\u7ed3\uff0c\u5e0c\u671b\u80fd\u5e2e\u5230\u4eca\u540e\u9700\u8981\u7684\u5c0f\u4f19\u4f34 \u76f8\u5173\u8d44\u6599","title":"GitBook"},{"location":"tool/gitbook/#gitbook","text":"\u9996\u5148\u5148\u732e\u4e0a \u6211\u7684 blog \u5730\u5740\uff0c\u53ef\u4ee5\u5728\u6211\u7684\u535a\u5ba2\u5bfc\u822a\u680f\u5904\u627e\u5230\uff0c\u4e0b\u9762\u8fdb\u884c\u76f8\u5173\u7684\u4ecb\u7ecd\u3002","title":"GitBook \u4f7f\u7528\u6559\u7a0b"},{"location":"tool/gitbook/#_1","text":"\u7531\u4e8e\u4e4b\u524d\u90fd\u628a\u96f6\u6563\u7684\u77e5\u8bc6\u90fd\u5199\u5728\u535a\u5ba2\u56ed\u4e0a\uff0c\u8981\u67e5\u627e\u7684\u65f6\u5019\u4e0d\u662f\u5f88\u7cfb\u7edf\u5316\uff0c\u6240\u4ee5\u6253\u7b97\u632a\u5230 GitBook \u4e0a\u6765\u7edf\u4e00\u7ba1\u7406\uff0c\u800c\u4e14 GitBook \u5199\u5b8c\u7f16\u8bd1\u540e\u53ef\u4ee5\u751f\u6210\u9759\u6001\u9875\u9762\u53d1\u5e03\u5230\u535a\u5ba2\u4e0a\uff0c\u903c\u683c\u6ee1\u6ee1\u7684\u6837\u5b50\u3002","title":"\u80cc\u666f"},{"location":"tool/gitbook/#gitbook_1","text":"GitBook \u5b98\u7f51 GitBook \u6587\u6863 GitBook GitHub","title":"GitBook \u7b80\u4ecb"},{"location":"tool/gitbook/#gitbook_2","text":"\u4e0a\u9762\u6211\u63a8\u8350\u7684\u662f Node.js + GitBook + Typora + Git\uff0c\u6240\u4ee5\u4f60\u8fd8\u9700\u8981\u5b89\u88c5 Typora\uff08\u4e00\u4e2a\u5f88\u68d2\u7684\u652f\u6301 macOS\u3001Windows\u3001Linux \u7684 Markdown \u7f16\u8f91\u5de5\u5177\uff09\u548c Git \u7248\u672c\u7ba1\u7406\u5de5\u5177\u3002\u6233\u4e0b\u9762\uff1a * Node.js * Typora * Git","title":"GitBook \u51c6\u5907\u5de5\u4f5c"},{"location":"tool/gitbook/#nodejs","text":"GitBook \u662f\u4e00\u4e2a\u57fa\u4e8e Node.js \u7684\u547d\u4ee4\u884c\u5de5\u5177\uff0c\u4e0b\u8f7d\u5b89\u88c5 Node.js\uff0c\u5b89\u88c5\u5b8c\u6210\u4e4b\u540e\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528\u4e0b\u9762\u7684\u547d\u4ee4\u6765\u68c0\u9a8c\u662f\u5426\u5b89\u88c5\u6210\u529f\u3002 $ node -v v10.5.0","title":"\u5b89\u88c5 Node.js"},{"location":"tool/gitbook/#gitbook_3","text":"\u8f93\u5165\u4e0b\u9762\u7684\u547d\u4ee4\u6765\u5b89\u88c5 GitBook\u3002 $ npm install gitbook-cli -g \u5b89\u88c5\u5b8c\u6210\u4e4b\u540e\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528\u4e0b\u9762\u7684\u547d\u4ee4\u6765\u68c0\u9a8c\u662f\u5426\u5b89\u88c5\u6210\u529f $ gitbook -V CLI version: 2.3.2 Installing GitBook 3.2.3 \u66f4\u591a\u8be6\u60c5\u8bf7\u53c2\u7167 GitBook \u5b89\u88c5\u6587\u6863 \u6765\u5b89\u88c5 GitBook\u3002","title":"\u5b89\u88c5 GitBook"},{"location":"tool/gitbook/#typora","text":"Typora \u7684\u5b89\u88c5\u5f88\u7b80\u5355\uff0c\u96be\u70b9\u5728\u4e8e\u9700\u8981\u7ffb\u5899\u624d\u80fd\u4e0b\u8f7d\uff08\u5f53\u7136\u4f60\u4e5f\u53ef\u4ee5\u627e\u6211\u8981\uff09\u3002Git \u7684\u5b89\u88c5\u4e5f\u5f88\u7b80\u5355\uff0c\u4f46\u8981\u7528\u597d\u5b83\u9700\u8981\u4e0d\u5c11\u65f6\u95f4\uff0c\u8fd9\u91cc\u5c31\u4e0d\u5c55\u5f00\u4e86\uff08\u518d\u8bb2\u4e0b\u53bb\u4f60\u5c31\u8981\u8dd1\u5566\uff09\u3002","title":"\u5b89\u88c5 Typora"},{"location":"tool/gitbook/#gitbook_4","text":"\u53bb GitBook \u5b98\u7f51 \u4e0b\u8f7d GitBook \u7f16\u8f91\u5668\uff1b\u5982\u679c\u662f Mac \u7528\u6237\u4e14\u5b89\u88c5\u8fc7 brew cask \u7684\u8bdd\u53ef\u4ee5\u4f7f\u7528 brew cask install gitbook-editor \u547d\u4ee4\u884c\u6765\u5b89\u88c5 GitBook \u7f16\u8f91\u5668\u3002","title":"\u5b89\u88c5 GitBook \u7f16\u8f91\u5668"},{"location":"tool/gitbook/#_2","text":"GitBook \u51c6\u5907\u5de5\u4f5c\u505a\u597d\u4e4b\u540e\uff0c\u6211\u4eec\u8fdb\u5165\u4e00\u4e2a\u4f60\u8981\u5199\u4e66\u7684\u76ee\u5f55\uff0c\u8f93\u5165\u5982\u4e0b\u547d\u4ee4\u3002 $ gitbook init warn: no summary file in this book info: create README.md info: create SUMMARY.md info: initialization is finished \u53ef\u4ee5\u770b\u5230\u4ed6\u4f1a\u521b\u5efa README.md \u548c SUMMARY.md \u8fd9\u4e24\u4e2a\u6587\u4ef6\uff0cREADME.md \u5e94\u8be5\u4e0d\u964c\u751f\uff0c\u5c31\u662f\u8bf4\u660e\u6587\u6863\uff0c\u800c SUMMARY.md \u5176\u5b9e\u5c31\u662f\u4e66\u7684\u7ae0\u8282\u76ee\u5f55\uff0c\u5176\u9ed8\u8ba4\u5185\u5bb9\u5982\u4e0b\u6240\u793a\uff1a # Summary * [Introduction](README.md) \u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u8f93\u5165 $ gitbook serve \u547d\u4ee4\uff0c\u7136\u540e\u5728\u6d4f\u89c8\u5668\u5730\u5740\u680f\u4e2d\u8f93\u5165 http://localhost:4000 \u4fbf\u53ef\u9884\u89c8\u4e66\u7c4d\u3002 \u6548\u679c\u5982\u4e0b\u6240\u793a\uff1a \u8fd0\u884c\u8be5\u547d\u4ee4\u540e\u4f1a\u5728\u4e66\u7c4d\u7684\u6587\u4ef6\u5939\u4e2d\u751f\u6210\u4e00\u4e2a _book \u6587\u4ef6\u5939, \u91cc\u9762\u7684\u5185\u5bb9\u5373\u4e3a\u751f\u6210\u7684 html \u6587\u4ef6\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4e0b\u9762\u547d\u4ee4\u6765\u751f\u6210\u7f51\u9875\u800c\u4e0d\u5f00\u542f\u670d\u52a1\u5668\u3002 gitbook build \u4e0b\u9762\u6211\u4eec\u6765\u8be6\u7ec6\u4ecb\u7ecd\u4e0b GitBook \u76ee\u5f55\u7ed3\u6784\u53ca\u76f8\u5173\u6587\u4ef6\u3002","title":"\u5148\u7779\u4e3a\u5feb"},{"location":"tool/gitbook/#typora_1","text":"\u7f16\u8f91 SUMMARY.md \u6587\u4ef6\uff0c\u5185\u5bb9\u4fee\u6539\u4e3a\uff1a # \u76ee\u5f55 * [\u524d\u8a00](README.md) * [\u7b2c\u4e00\u7ae0](Chapter1/README.md) * [\u7b2c1\u8282\uff1a\u8863](Chapter1/\u8863.md) * [\u7b2c2\u8282\uff1a\u98df](Chapter1/\u98df.md) * [\u7b2c3\u8282\uff1a\u4f4f](Chapter1/\u4f4f.md) * [\u7b2c4\u8282\uff1a\u884c](Chapter1/\u884c.md) * [\u7b2c\u4e8c\u7ae0](Chapter2/README.md) * [\u7b2c\u4e09\u7ae0](Chapter3/README.md) * [\u7b2c\u56db\u7ae0](Chapter4/README.md) \u7136\u540e\u6211\u4eec\u56de\u5230\u547d\u4ee4\u884c\uff0c\u5728 mybook \u6587\u4ef6\u5939\u4e2d\u518d\u6b21\u6267\u884c gitbook init \u547d\u4ee4\u3002GitBook \u4f1a\u67e5\u627e SUMMARY.md \u6587\u4ef6\u4e2d\u63cf\u8ff0\u7684\u76ee\u5f55\u548c\u6587\u4ef6\uff0c\u5982\u679c\u6ca1\u6709\u5219\u4f1a\u5c06\u5176\u521b\u5efa\u3002 Typora \u662f\u6240\u89c1\u5373\u6240\u5f97\uff08\u5b9e\u65f6\u6e32\u67d3\uff09\u7684 Markdown \u7f16\u8f91\u5668\uff0c\u8fd9\u65f6\u5019\u5b83\u662f\u8fd9\u6837\u7684\uff1a \u63a5\u7740\u6211\u4eec\u6267\u884c gitbook serve \u6765\u9884\u89c8\u8fd9\u672c\u4e66\u7c4d\uff0c\u6267\u884c\u547d\u4ee4\u540e\u4f1a\u5bf9 Markdown \u683c\u5f0f\u7684\u6587\u6863\u8fdb\u884c\u8f6c\u6362\uff0c\u9ed8\u8ba4\u8f6c\u6362\u4e3a html \u683c\u5f0f\uff0c\u6700\u540e\u63d0\u793a \u201cServing book on http://localhost:4000 \u201d\u3002\u55ef\uff0c\u6253\u5f00\u6d4f\u89c8\u5668\u770b\u4e00\u4e0b\u5427\uff1a","title":"Typora \u6765\u7f16\u8f91\u8fd9\u4e24\u4e2a\u6587\u4ef6"},{"location":"tool/gitbook/#gitbook_5","text":"\u5f53\u4f60\u5199\u5f97\u5dee\u4e0d\u591a\uff0c\u4f60\u53ef\u4ee5\u6267\u884c gitbook build \u547d\u4ee4\u6784\u5efa\u4e66\u7c4d\uff0c\u9ed8\u8ba4\u5c06\u751f\u6210\u7684\u9759\u6001\u7f51\u7ad9\u8f93\u51fa\u5230 _book \u76ee\u5f55\u3002\u5b9e\u9645\u4e0a\uff0c\u8fd9\u4e00\u6b65\u4e5f\u5305\u542b\u5728 gitbook serve \u91cc\u9762\uff0c\u56e0\u4e3a\u5b83\u4eec\u662f HTML\uff0c\u6240\u4ee5 GitBook \u901a\u8fc7 Node.js \u7ed9\u4f60\u63d0\u4f9b\u670d\u52a1\u4e86\u3002 1. \u5f53\u7136\uff0cbuild \u547d\u4ee4\u53ef\u4ee5\u6307\u5b9a\u8def\u5f84\uff1a gitbook build [\u4e66\u7c4d\u8def\u5f84] [\u8f93\u51fa\u8def\u5f84] 2. serve \u547d\u4ee4\u4e5f\u53ef\u4ee5\u6307\u5b9a\u7aef\u53e3\uff1a gitbook serve --port 2333 3. \u4f60\u8fd8\u53ef\u4ee5\u751f\u6210 PDF \u683c\u5f0f\u7684\u7535\u5b50\u4e66\uff1a gitbook pdf ./ ./mybook.pdf 4. \u751f\u6210 epub \u683c\u5f0f\u7684\u7535\u5b50\u4e66\uff1a gitbook epub ./ ./mybook.epub 5. \u751f\u6210 mobi \u683c\u5f0f\u7684\u7535\u5b50\u4e66\uff1a gitbook mobi ./ ./mybook.mobi \u57fa\u672c\u547d\u4ee4 gitbook init //\u521d\u59cb\u5316\u76ee\u5f55\u6587\u4ef6 gitbook help //\u5217\u51fagitbook\u6240\u6709\u7684\u547d\u4ee4 gitbook --help //\u8f93\u51fagitbook-cli\u7684\u5e2e\u52a9\u4fe1\u606f gitbook build //\u751f\u6210\u9759\u6001\u7f51\u9875 gitbook serve //\u751f\u6210\u9759\u6001\u7f51\u9875\u5e76\u8fd0\u884c\u670d\u52a1\u5668 gitbook build --gitbook=2.0.1 //\u751f\u6210\u65f6\u6307\u5b9agitbook\u7684\u7248\u672c, \u672c\u5730\u6ca1\u6709\u4f1a\u5148\u4e0b\u8f7d gitbook ls //\u5217\u51fa\u672c\u5730\u6240\u6709\u7684gitbook\u7248\u672c gitbook ls-remote //\u5217\u51fa\u8fdc\u7a0b\u53ef\u7528\u7684gitbook\u7248\u672c gitbook fetch \u6807\u7b7e/\u7248\u672c\u53f7 //\u5b89\u88c5\u5bf9\u5e94\u7684gitbook\u7248\u672c gitbook update //\u66f4\u65b0\u5230gitbook\u7684\u6700\u65b0\u7248\u672c gitbook uninstall 2.0.1 //\u5378\u8f7d\u5bf9\u5e94\u7684gitbook\u7248\u672c gitbook build --log=debug //\u6307\u5b9alog\u7684\u7ea7\u522b gitbook builid --debug //\u8f93\u51fa\u9519\u8bef\u4fe1\u606f \u5982\u679c\u751f\u6210\u4e0d\u4e86\uff0c\u4f60\u53ef\u80fd\u8fd8\u9700\u8981\u5b89\u88c5\u4e00\u4e9b\u5de5\u5177\uff0c\u6bd4\u5982 ebook-convert\u3002\u6216\u8005\u5728 Typora \u4e2d\u5b89\u88c5 Pandoc \u8fdb\u884c\u5bfc\u51fa\u3002 \u9664\u6b64\u4e4b\u5916\uff0c\u522b\u5fd8\u4e86\u8fd8\u53ef\u4ee5\u7528 Git \u505a\u7248\u672c\u7ba1\u7406\u5440\uff01\u5728 mybook \u76ee\u5f55\u4e0b\u6267\u884c git init \u521d\u59cb\u5316\u4ed3\u5e93\uff0c\u6267\u884c git remote add \u6dfb\u52a0\u8fdc\u7a0b\u4ed3\u5e93\uff08\u4f60\u5f97\u5148\u5728\u8fdc\u7aef\u5efa\u597d\uff09\u3002\u63a5\u7740\u5c31\u53ef\u4ee5\u6109\u5feb\u5730 commit\uff0cpush\uff0cpull \u2026 \u5566\uff01 \u4e0b\u9762\u6211\u4eec\u4e3b\u8981\u6765\u8bb2\u8bb2 book.json \u548c SUMMARY.md \u6587\u4ef6\u3002","title":"gitbook \u5e38\u7528\u547d\u4ee4"},{"location":"tool/gitbook/#bookjson","text":"\u8be5\u6587\u4ef6\u4e3b\u8981\u7528\u6765\u5b58\u653e\u914d\u7f6e\u4fe1\u606f\uff0c\u6211\u5148\u653e\u51fa\u6211\u7684\u914d\u7f6e\u6587\u4ef6\u3002 { \"title\": \"Blankj's Glory\", \"author\": \"Blankj\", \"description\": \"select * from learn\", \"language\": \"zh-hans\", \"gitbook\": \"3.2.3\", \"styles\": { \"website\": \"./styles/website.css\" }, \"structure\": { \"readme\": \"README.md\" }, \"links\": { \"sidebar\": { \"\u6211\u7684\u72d7\u7a9d\": \"https://blankj.com\" } }, \"plugins\": [ \"-sharing\", \"splitter\", \"expandable-chapters-small\", \"anchors\", \"github\", \"github-buttons\", \"donate\", \"sharing-plus\", \"anchor-navigation-ex\", \"favicon\" ], \"pluginsConfig\": { \"github\": { \"url\": \"https://github.com/Blankj\" }, \"github-buttons\": { \"buttons\": [{ \"user\": \"Blankj\", \"repo\": \"glory\", \"type\": \"star\", \"size\": \"small\", \"count\": true } ] }, \"donate\": { \"alipay\": \"./source/images/donate.png\", \"title\": \"\", \"button\": \"\u8d5e\u8d4f\", \"alipayText\": \" \" }, \"sharing\": { \"douban\": false, \"facebook\": false, \"google\": false, \"hatenaBookmark\": false, \"instapaper\": false, \"line\": false, \"linkedin\": false, \"messenger\": false, \"pocket\": false, \"qq\": false, \"qzone\": false, \"stumbleupon\": false, \"twitter\": false, \"viber\": false, \"vk\": false, \"weibo\": false, \"whatsapp\": false, \"all\": [ \"google\", \"facebook\", \"weibo\", \"twitter\", \"qq\", \"qzone\", \"linkedin\", \"pocket\" ] }, \"anchor-navigation-ex\": { \"showLevel\": false }, \"favicon\":{ \"shortcut\": \"./source/images/favicon.jpg\", \"bookmark\": \"./source/images/favicon.jpg\", \"appleTouch\": \"./source/images/apple-touch-icon.jpg\", \"appleTouchMore\": { \"120x120\": \"./source/images/apple-touch-icon.jpg\", \"180x180\": \"./source/images/apple-touch-icon.jpg\" } } } } \u76f8\u4fe1\u5f88\u591a\u8282\u70b9\u81ea\u5df1\u4e5f\u80fd\u731c\u5230\u662f\u4ec0\u4e48\u610f\u601d\uff0c\u6211\u8fd8\u662f\u7b80\u5355\u4ecb\u7ecd\u4e0b\u5427\u3002 * title:\u672c\u4e66\u6807\u9898 * author:\u672c\u4e66\u4f5c\u8005 * description:\u672c\u4e66\u63cf\u8ff0 * language:\u672c\u4e66\u8bed\u8a00\uff0c\u4e2d\u6587\u8bbe\u7f6e \"zh-hans\" \u5373\u53ef * gitbook:\u6307\u5b9a\u4f7f\u7528\u7684 GitBook \u7248\u672c * styles:\u81ea\u5b9a\u4e49\u9875\u9762\u6837\u5f0f * structure:\u6307\u5b9a Readme\u3001Summary\u3001Glossary \u548c Languages \u5bf9\u5e94\u7684\u6587\u4ef6\u540d * links:\u5728\u5de6\u4fa7\u5bfc\u822a\u680f\u6dfb\u52a0\u94fe\u63a5\u4fe1\u606f * plugins:\u914d\u7f6e\u4f7f\u7528\u7684\u63d2\u4ef6 * pluginsConfig:\u914d\u7f6e\u63d2\u4ef6\u7684\u5c5e\u6027 * SUMMARY.md:\u8fd9\u4e2a\u6587\u4ef6\u4e3b\u8981\u51b3\u5b9a GitBook \u7684\u7ae0\u8282\u76ee\u5f55\uff0c\u5b83\u901a\u8fc7 Markdown \u4e2d\u7684\u5217\u8868\u8bed\u6cd5\u6765\u8868\u793a\u6587\u4ef6\u7684\u7236\u5b50\u5173\u7cfb\uff0c\u4e0b\u9762\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u793a\u4f8b\uff1a # Summary * [Introduction](README.md) * [Part I](part1/README.md) * [Writing is nice](part1/writing.md) * [GitBook is nice](part1/gitbook.md) * [Part II](part2/README.md) * [We love feedback](part2/feedback_please.md) * [Better tools for authors](part2/better_tools.md) \u8fd9\u4e2a\u914d\u7f6e\u5bf9\u5e94\u7684\u76ee\u5f55\u7ed3\u6784\u5982\u4e0b\u6240\u793a: \u6211\u4eec\u901a\u8fc7\u4f7f\u7528 \u6807\u9898 \u6216\u8005 \u6c34\u5e73\u5206\u5272\u7ebf \u5c06 GitBook \u5206\u4e3a\u51e0\u4e2a\u4e0d\u540c\u7684\u90e8\u5206\uff0c\u5982\u4e0b\u6240\u793a # Summary ### Part I * [Introduction](README.md) * [Writing is nice](part1/writing.md) * [GitBook is nice](part1/gitbook.md) ### Part II * [We love feedback](part2/feedback_please.md) * [Better tools for authors](part2/better_tools.md) --- * [Last part without title](part3/title.md) \u8fd9\u4e2a\u914d\u7f6e\u5bf9\u5e94\u7684\u76ee\u5f55\u7ed3\u6784\u5982\u4e0b\u6240\u793a:","title":"book.json"},{"location":"tool/gitbook/#_3","text":"GitBook \u6709 \u63d2\u4ef6\u5b98\u7f51 \uff0c\u9ed8\u8ba4\u5e26\u6709 5 \u4e2a\u63d2\u4ef6\uff0chighlight\u3001search\u3001sharing\u3001font-settings\u3001livereload\uff0c\u5982\u679c\u8981\u53bb\u9664\u81ea\u5e26\u7684\u63d2\u4ef6\uff0c \u53ef\u4ee5\u5728\u63d2\u4ef6\u540d\u79f0\u524d\u9762\u52a0 -\uff0c\u6bd4\u5982\uff1a \"plugins\": [ \"-search\" ] \u5982\u679c\u8981\u914d\u7f6e\u4f7f\u7528\u7684\u63d2\u4ef6\u53ef\u4ee5\u5728 book.json \u6587\u4ef6\u4e2d\u52a0\u5165\u5373\u53ef\uff0c\u6bd4\u5982\u6211\u4eec\u6dfb\u52a0 plugin-github \uff0c\u6211\u4eec\u5728 book.json \u4e2d\u52a0\u5165\u914d\u7f6e\u5982\u4e0b\u5373\u53ef\uff1a { \"plugins\": [ \"github\" ], \"pluginsConfig\": { \"github\": { \"url\": \"https://github.com/your/repo\" } } } \u7136\u540e\u5728\u7ec8\u7aef\u8f93\u5165 gitbook install ./ \u5373\u53ef\u3002 \u5982\u679c\u8981\u6307\u5b9a\u63d2\u4ef6\u7684\u7248\u672c\u53ef\u4ee5\u4f7f\u7528 plugin@0.3.1\uff0c\u56e0\u4e3a\u4e00\u4e9b\u63d2\u4ef6\u53ef\u80fd\u4e0d\u4f1a\u968f\u7740 GitBook \u7248\u672c\u7684\u5347\u7ea7\u800c\u5347\u7ea7\u3002","title":"\u63d2\u4ef6"},{"location":"tool/gitbook/#_4","text":"\u8fd9\u662f\u6211\u5bf9 GitBook \u4f7f\u7528\u7684\u603b\u7ed3\uff0c\u5e0c\u671b\u80fd\u5e2e\u5230\u4eca\u540e\u9700\u8981\u7684\u5c0f\u4f19\u4f34 \u76f8\u5173\u8d44\u6599","title":"\u7ed3\u8bed"},{"location":"tool/gitquestion/","text":"Git \u4f7f\u7528\u8fc7\u7a0b\u4e2d\u9047\u5230\u7684\u95ee\u9898\u4ee5\u53ca\u89e3\u51b3\u529e\u6cd5 \u00b6 git \u662f\u9879\u76ee\u5f53\u4e2d\u6700\u5e38\u7528\u7684\u4ee3\u7801\u7ba1\u7406\u5e93\uff0c\u719f\u7ec3\u7684\u4f7f\u7528git\u4e0d\u662f\u4e07\u80fd\u7684\uff0c\u4f46\u4e0d\u80fd\u719f\u7ec3\u7684\u4f7f\u7528git\u662f\u4e07\u4e07\u4e0d\u80fd\u7684\uff0c\u5f52\u7eb3\u4e86\u4e00\u4e0b\u771f\u6b63\u5f00\u59cb\u5728\u591a\u4eba\u534f\u4f5c\u7684\u4ee3\u7801\u5e93\u4e2d\u63d0\u4ea4\u81ea\u5df1\u7684\u4ee3\u7801\u65f6\u9047\u5230\u7684\u95ee\u9898\u3002 git fetch \u5931\u6548\u7684\u95ee\u9898 \u00b6 \u5728\u9879\u76ee\u5de5\u7a0b\u4e2d\uff0c\u4e3b\u8981\u4f7f\u7528\u7684\u662f\u4e24\u4e2a\u5206\u652f\uff0c\u4e00\u4e2a\u662f\u4e3b\u5206\u652fmaster\uff0c\u4e00\u4e2a\u662f\u5f00\u53d1\u5206\u652fdevelop\uff0c\u6211\u4eec\u4e00\u822c\u5728develop\u4e2d\u8fdb\u884c\u5f00\u53d1\uff0cmaster\u5206\u652f\u4e2d\u7528\u6765\u5b58\u91cd\u5927\u7248\u672c\u7684\u4ee3\u7801\u3002\u5f53\u9700\u8981\u83b7\u53d6\u6700\u65b0\u7684\u4ee3\u7801\u65f6\uff0c\u4f7f\u7528git fetch \u6216\u8005 $ git fetch origin develop:develop \u547d\u4ee4\u4ece\u8fdc\u7a0bdevelop\u5206\u652f\u4e0a\u62c9\u53d6\u6700\u65b0\u7684\u4ee3\u7801\u3002 \u4f46\u6709\u65f6\u5019\u8fd9\u4e2a\u547d\u4ee4\u4f1a\u5931\u6548\uff0c\u62c9\u53d6\u4e0d\u5230\u6700\u65b0\u7684\u4ee3\u7801\uff0c\u51fa\u73b0\u8fd9\u6837\u7684\u9519\u8bef\u63d0\u793a fatal: Refusing to fetch into current branch refs/heads/develop of non-bare repository fatal: The remote end hung up unexpectedly \u8fd9\u79cd\u65f6\u5019\uff0c\u5148\u5207\u6362\u5230master\u5206\u652f\uff0c\u7136\u540e\u518d\u4ecemaster\u5206\u652ffetch\u5206\u652fdevelop\u4e0a\u7684\u4ee3\u7801\uff0c\u5c31\u80fd\u591f\u6210\u529f\u4e86\u3002 $ git fetch origin develop:develop fatal: Refusing to fetch into current branch refs/heads/develop of non-bare repository fatal: The remote end hung up unexpectedly $ git checkout master Switched to branch 'master' Your branch is up-to-date with 'origin/master'. $ git fetch origin develop:develop From 172.20.10.91:developers/android_do_as 5ee9941..ff421cf develop -> develop \u7a76\u5176\u539f\u56e0\uff0c\u5c31\u548cfatal\u7684\u63d0\u793a\u4e00\u6837\uff0c\u5728\u975ebare\u7684git\u4ed3\u5e93\u4e2d\uff0c\u5982\u679c\u4f60\u8981\u540c\u6b65\u7684\u672c\u5730\u8ddf\u8e2a\u5206\u652f\u662f\u5f53\u524d\u5206\u652f\uff0c\u5c31\u4f1a\u51fa\u73b0\u62d2\u7eddfetch\u7684\u60c5\u51b5\u3002\u4e5f\u5c31\u662f\u8bf4\u4e0d\u53ef\u4ee5\u5728\u975ebare\u7684git\u4ed3\u5e93\u4e2d\u901a\u8fc7fetch\u5feb\u8fdb\u4f60\u7684\u5f53\u524d\u5206\u652f\u4e0e\u8fdc\u7a0b\u540c\u6b65\u3002 git \u9519\u8bef\u63d0\u4ea4\u6216\u8005\u9519\u8bef\u7684\u5408\u5e76\u4e86\u89e3\u51b3\u65b9\u6848 \u00b6 \u7b2c\u4e00\u6b21\u5728\u4ee3\u7801\u5e93\u4e2d\u63d0\u4ea4\u4ee3\u7801\uff0c\u5fc3\u60c5\u6bd4\u8f83\u6fc0\u52a8\uff0c\u76f4\u63a5\u672c\u5730\u591a\u6b21\u63d0\u4ea4\u4e4b\u540e\uff0c\u5c31\u548c\u8fdc\u7a0b\u5206\u652f\u7ed9merge\u4e86\u3002\u547d\u4ee4\u770b\u8d77\u6765\u662f\u8fd9\u4e48\u7528\u7684\uff0c\u4f46\u8fd9\u6837\u5c31\u4f1a\u5728\u4ee3\u7801\u7ebf\u4e0a\u5f04\u51fa\u4e00\u6761\u65b0\u7ebf\uff0c\u800c\u4e0d\u662f\u4e00\u6761\u7ebf\uff0c\u591a\u4e48\u4e11\u554a\u3002\u8fd8\u597d\u6ca1\u6709push\u5230\u8fdc\u7a0b\u53bb\uff0c\u6240\u4ee5\u5c31\u8981\u770b\u770b\u5982\u4f55\u89e3\u51b3\uff0c\u628a\u5b83\u5f04\u6210\u4e00\u6761\u7ebf\u4e86\u3002 \u5f53\u5df2\u7ecf\u9519\u8bef\u7684\u63d0\u4ea4\uff0c\u6216\u8005\u662f\u9519\u8bef\u7684\u5408\u5e76\u5df2\u7ecf\u4ea7\u751f\u4e86\uff0c\u9996\u5148\uff0c\u8981\u60f3\u529e\u6cd5\u56de\u5230\u8fc7\u53bb\uff0c\u6211\u591a\u60f3\u56de\u5230\u8fc7\u53bb\uff0c\u518d\u56de\u5230\u4f60\u7684\u8eab\u8fb9\u3002 $ git reflog ff421cf HEAD@{0}: checkout: moving from master to develop efaaa61 HEAD@{1}: checkout: moving from develop to master \u9996\u5148\u7528git reflog \u547d\u4ee4\uff0c\u770b\u770b\u6700\u8fd1\u81ea\u5df1\u505a\u8fc7\u4ec0\u4e48\uff0c\u54ea\u91cc\u662f\u81ea\u5df1\u60f3\u56de\u53bb\u7684\u5730\u65b9\u3002 $ git reset --hard 72b075e $ git clean --f \u7136\u540e\u518d\u4f7f\u7528 reset\u547d\u4ee4\uff0c\u590d\u5236\u81ea\u5df1\u60f3\u8981\u53bb\u7684\u5730\u65b9\u7684\u54c8\u5e0c\u7801\uff0c\u7a7f\u8d8a\u65f6\u5149\u56de\u5230\u8fc7\u53bb\u3002\u987a\u4fbf clean \u4e00\u4e0b\uff0c\u4fdd\u6301\u6e05\u6d01\u3002 \u8fd9\u6837\u4f60\u5c31\u80fd\u53bb\u5230\u4efb\u4f55\u4f60\u60f3\u53bb\u7684\u5730\u65b9\uff0cso happy\u3002 \u4f46\u5982\u4f55\u628a\u591a\u4e2a\u63d0\u4ea4\u5408\u5e76\u6210\u4e00\u4e2a\u63d0\u4ea4\u5462\uff1f\u4e3a\u4e86\u4fdd\u6301\u4ee3\u7801\u6811\u7684\u5e72\u51c0\u6f02\u4eae\uff0c\u5728\u672c\u5730\u7684\u591a\u6b21\u63d0\u4ea4\u4fdd\u5b58\uff0c\u5f04\u6210\u4e00\u6b21\u63d0\u4ea4\u518d\u63a8\u5230\u8fdc\u7a0b\u53bb\u53ef\u80fd\u4f1a\u66f4\u52a0\u597d\u4e00\u70b9\uff0c\u6240\u4ee5\u53ef\u4ee5\u662f\u7528 rebase \u547d\u4ee4\u8fdb\u884c\u884d\u5408\u3002 \u5728\u81ea\u5df1\u591a\u6b21\u63d0\u4ea4\u7684\u672c\u5730\u5206\u652f\u4e0a\u8fdb\u884c\u884d\u5408\u4e00\u822c\u4e0d\u4f1a\u51fa\u73b0\u51b2\u7a81\uff0c\u627e\u51c6\u672c\u5730\u5206\u652f\u7684\u7b2c\u4e00\u6b21\u63d0\u4ea4\u7684\u54c8\u5e0c\u7801\u503c\uff0c\u6216\u8005\u6570\u6e05\u695a\u81ea\u5df1\u63d0\u4ea4\u4e86\u51e0\u6b21\u7528rebase\u547d\u4ee4\u5c31\u53ef\u4ee5\u5c06\u591a\u6b21\u63d0\u4ea4\u5408\u5e76\u6210\u4e00\u6b21\u63d0\u4ea4 $ git rebase -i head~11 \u4f7f\u7528\u8fd9\u4e2a\u547d\u4ee4\u4e4b\u540e\uff0c\u4f1a\u8fdb\u5165\u5230vim\u6a21\u5f0f\uff0c\u5c06\u81ea\u5df1\u9700\u8981\u7684\u63d0\u4ea4\u4fe1\u606f\u8bbe\u7f6e\u4e3ap\uff0c\u5176\u4ed6\u7684\u8bbe\u7f6e\u4e3as\uff0c\u6700\u540e\u4f7f\u7528\uff1awq\u9000\u51fa\u4fdd\u5b58\u5373\u53ef\u3002 # Rebase 6a2eb6d..f7d0bd7 onto 6a2eb6d # # Commands: # p, pick = use commit # r, reword = use commit, but edit the commit message # e, edit = use commit, but stop for amending # s, squash = use commit, but meld into previous commit # f, fixup = like \"squash\", but discard this commit's log message # x, exec = run command (the rest of the line) using shell # # These lines can be re-ordered; they are executed from top to bottom. # # If you remove a line here THAT COMMIT WILL BE LOST. # # However, if you remove everything, the rebase will be aborted. # # Note that empty commits are commented out \u8fd9\u662f\u5bf9\u547d\u4ee4\u7684\u63d0\u793a\u3002 \u4f46\u6700\u597d\u8fd8\u662f\u4e0d\u8981\u9762\u5bf9\u9700\u8981\u8fd9\u6837\u4f7f\u7528rebase\u7684\u60c5\u666f\uff0c\u5e94\u8be5\u597d\u597d\u4f7f\u7528commit \u547d\u4ee4\u7684\u53c2\u6570\u3002\u6bd4\u5982\uff1a git commit --amend \u4f7f\u7528\u8fd9\u4e2a\u547d\u4ee4\uff0c\u4f1a\u5c06\u672c\u6b21\u63d0\u4ea4\u5199\u5230\u4e0a\u6b21\u7684\u63d0\u4ea4\u4e2d\u53bb\uff0c\u5c31\u4e0d\u4f1a\u4ea7\u751f\u591a\u6761\u7684\u63d0\u4ea4\u4fe1\u606f\u3002 git rebase \u4e2d\u7684\u51b2\u7a81\u5904\u7406 \u00b6 \u5728\u5408\u5e76\u4ee3\u7801\u7684\u8fc7\u7a0b\u4e2d\uff0c\u53ef\u4ee5\u4f7f\u7528merge\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528rebase\uff0c\u5982\u679c\u4f7f\u7528merge\uff0c\u5408\u5e76\u4e4b\u540e\u63a8\u4e0a\u8fdc\u7a0b\u5c31\u4f1a\u6709\u4e24\u6761\u7ebf\uff0c\u4f46\u4f7f\u7528rebase\u5c31\u53ea\u4f1a\u4ea7\u751f\u4e00\u6761\u7ebf\uff0c\u53d8\u5f97\u7b80\u6d01\u800c\u4f18\u96c5\uff0c\u6240\u4ee5\u5728\u5408\u5e76\u4ee3\u7801\u7684\u8fc7\u7a0b\u4e2d\u5efa\u8bae\u5c3d\u91cf\u4f7f\u7528rebase\u547d\u4ee4\u3002 \u5728\u5408\u5e76\u4ee3\u7801\u4e2d\u53ef\u80fd\u4f1a\u9047\u5230\u51b2\u7a81\uff0c\u5f53\u63d0\u793a\u6709\u51b2\u7a81\u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u5916\u90e8\u7684\u56fe\u5f62\u5316\u51b2\u7a81\u5904\u7406\u5de5\u5177\u6765\u5904\u7406\u51b2\u7a81\u3002\u8fd9\u91cc\u4f7f\u7528\u7684\u662fKDiff3\u6765\u5904\u7406\u51b2\u7a81\u3002 \u5b89\u88c5Kdiff3 \u8f6f\u4ef6\u3002\uff08\u6700\u597d\u4f7f\u7528\u9ed8\u8ba4\u8def\u5f84\uff09 \u6dfb\u52a0kdiff3\u5230git mergetool\u91cc\u3002 git config --global merge.tool kdiff3 \u6dfb\u52a0kdiff3\u8def\u5f84\u5230 git global config\u91cc\u3002git config --global mergetool.kdiff3.path \"C:\\Program Files\\KDiff3\\kdiff3.exe\" \u4ee5\u540emerge\u53d1\u751f\u51b2\u7a81\u65f6\uff1agit mergetool \u6765\u505a\u56fe\u5f62\u5316merge\u3002\u8fdb\u5165\u7f16\u8f91\u51b2\u7a81\u3002 \u5e26\u95ee\u53f7\u7684\u624d\u662f\u51b2\u7a81\u3002\u5f53\u4e24\u8005\u90fd\u9700\u8981\u4fdd\u5b58\u65f6\uff0c\u53f3\u51fb\u6807\u8bb0\u5904\uff0c\u9009\u5b8cB\u540e\uff0c\u518d\u6b21\u53f3\u51fb\uff0c\u9009\u62e9C\u3002A\u662f\u6700\u539f\u59cb\u7684\u4ee3\u7801\uff0cB\u662f\u81ea\u5df1\u7684\uff0cC\u662f\u522b\u4eba\u7684\u3002 \u5728\u8fd9\u91cc\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u9996\u5148\u8981\u8bbe\u7f6e\u597dkDiff3\u7684\u9ed8\u8ba4\u7f16\u7801\uff0c\u548c\u81ea\u5df1\u7684\u5de5\u7a0b\u7f16\u7801\u4e00\u6837\uff0c\u8981\u4e0d\u89e3\u51b3\u5b8c\u51b2\u7a81\u4e4b\u540e\u8fd8\u8981\u89e3\u51b3\u4e71\u7801\u95ee\u9898\u3002\u3002\u3002\u3002","title":"Git\u95ee\u9898\u5904\u7406"},{"location":"tool/gitquestion/#git","text":"git \u662f\u9879\u76ee\u5f53\u4e2d\u6700\u5e38\u7528\u7684\u4ee3\u7801\u7ba1\u7406\u5e93\uff0c\u719f\u7ec3\u7684\u4f7f\u7528git\u4e0d\u662f\u4e07\u80fd\u7684\uff0c\u4f46\u4e0d\u80fd\u719f\u7ec3\u7684\u4f7f\u7528git\u662f\u4e07\u4e07\u4e0d\u80fd\u7684\uff0c\u5f52\u7eb3\u4e86\u4e00\u4e0b\u771f\u6b63\u5f00\u59cb\u5728\u591a\u4eba\u534f\u4f5c\u7684\u4ee3\u7801\u5e93\u4e2d\u63d0\u4ea4\u81ea\u5df1\u7684\u4ee3\u7801\u65f6\u9047\u5230\u7684\u95ee\u9898\u3002","title":"Git \u4f7f\u7528\u8fc7\u7a0b\u4e2d\u9047\u5230\u7684\u95ee\u9898\u4ee5\u53ca\u89e3\u51b3\u529e\u6cd5"},{"location":"tool/gitquestion/#git-fetch","text":"\u5728\u9879\u76ee\u5de5\u7a0b\u4e2d\uff0c\u4e3b\u8981\u4f7f\u7528\u7684\u662f\u4e24\u4e2a\u5206\u652f\uff0c\u4e00\u4e2a\u662f\u4e3b\u5206\u652fmaster\uff0c\u4e00\u4e2a\u662f\u5f00\u53d1\u5206\u652fdevelop\uff0c\u6211\u4eec\u4e00\u822c\u5728develop\u4e2d\u8fdb\u884c\u5f00\u53d1\uff0cmaster\u5206\u652f\u4e2d\u7528\u6765\u5b58\u91cd\u5927\u7248\u672c\u7684\u4ee3\u7801\u3002\u5f53\u9700\u8981\u83b7\u53d6\u6700\u65b0\u7684\u4ee3\u7801\u65f6\uff0c\u4f7f\u7528git fetch \u6216\u8005 $ git fetch origin develop:develop \u547d\u4ee4\u4ece\u8fdc\u7a0bdevelop\u5206\u652f\u4e0a\u62c9\u53d6\u6700\u65b0\u7684\u4ee3\u7801\u3002 \u4f46\u6709\u65f6\u5019\u8fd9\u4e2a\u547d\u4ee4\u4f1a\u5931\u6548\uff0c\u62c9\u53d6\u4e0d\u5230\u6700\u65b0\u7684\u4ee3\u7801\uff0c\u51fa\u73b0\u8fd9\u6837\u7684\u9519\u8bef\u63d0\u793a fatal: Refusing to fetch into current branch refs/heads/develop of non-bare repository fatal: The remote end hung up unexpectedly \u8fd9\u79cd\u65f6\u5019\uff0c\u5148\u5207\u6362\u5230master\u5206\u652f\uff0c\u7136\u540e\u518d\u4ecemaster\u5206\u652ffetch\u5206\u652fdevelop\u4e0a\u7684\u4ee3\u7801\uff0c\u5c31\u80fd\u591f\u6210\u529f\u4e86\u3002 $ git fetch origin develop:develop fatal: Refusing to fetch into current branch refs/heads/develop of non-bare repository fatal: The remote end hung up unexpectedly $ git checkout master Switched to branch 'master' Your branch is up-to-date with 'origin/master'. $ git fetch origin develop:develop From 172.20.10.91:developers/android_do_as 5ee9941..ff421cf develop -> develop \u7a76\u5176\u539f\u56e0\uff0c\u5c31\u548cfatal\u7684\u63d0\u793a\u4e00\u6837\uff0c\u5728\u975ebare\u7684git\u4ed3\u5e93\u4e2d\uff0c\u5982\u679c\u4f60\u8981\u540c\u6b65\u7684\u672c\u5730\u8ddf\u8e2a\u5206\u652f\u662f\u5f53\u524d\u5206\u652f\uff0c\u5c31\u4f1a\u51fa\u73b0\u62d2\u7eddfetch\u7684\u60c5\u51b5\u3002\u4e5f\u5c31\u662f\u8bf4\u4e0d\u53ef\u4ee5\u5728\u975ebare\u7684git\u4ed3\u5e93\u4e2d\u901a\u8fc7fetch\u5feb\u8fdb\u4f60\u7684\u5f53\u524d\u5206\u652f\u4e0e\u8fdc\u7a0b\u540c\u6b65\u3002","title":"git fetch \u5931\u6548\u7684\u95ee\u9898"},{"location":"tool/gitquestion/#git_1","text":"\u7b2c\u4e00\u6b21\u5728\u4ee3\u7801\u5e93\u4e2d\u63d0\u4ea4\u4ee3\u7801\uff0c\u5fc3\u60c5\u6bd4\u8f83\u6fc0\u52a8\uff0c\u76f4\u63a5\u672c\u5730\u591a\u6b21\u63d0\u4ea4\u4e4b\u540e\uff0c\u5c31\u548c\u8fdc\u7a0b\u5206\u652f\u7ed9merge\u4e86\u3002\u547d\u4ee4\u770b\u8d77\u6765\u662f\u8fd9\u4e48\u7528\u7684\uff0c\u4f46\u8fd9\u6837\u5c31\u4f1a\u5728\u4ee3\u7801\u7ebf\u4e0a\u5f04\u51fa\u4e00\u6761\u65b0\u7ebf\uff0c\u800c\u4e0d\u662f\u4e00\u6761\u7ebf\uff0c\u591a\u4e48\u4e11\u554a\u3002\u8fd8\u597d\u6ca1\u6709push\u5230\u8fdc\u7a0b\u53bb\uff0c\u6240\u4ee5\u5c31\u8981\u770b\u770b\u5982\u4f55\u89e3\u51b3\uff0c\u628a\u5b83\u5f04\u6210\u4e00\u6761\u7ebf\u4e86\u3002 \u5f53\u5df2\u7ecf\u9519\u8bef\u7684\u63d0\u4ea4\uff0c\u6216\u8005\u662f\u9519\u8bef\u7684\u5408\u5e76\u5df2\u7ecf\u4ea7\u751f\u4e86\uff0c\u9996\u5148\uff0c\u8981\u60f3\u529e\u6cd5\u56de\u5230\u8fc7\u53bb\uff0c\u6211\u591a\u60f3\u56de\u5230\u8fc7\u53bb\uff0c\u518d\u56de\u5230\u4f60\u7684\u8eab\u8fb9\u3002 $ git reflog ff421cf HEAD@{0}: checkout: moving from master to develop efaaa61 HEAD@{1}: checkout: moving from develop to master \u9996\u5148\u7528git reflog \u547d\u4ee4\uff0c\u770b\u770b\u6700\u8fd1\u81ea\u5df1\u505a\u8fc7\u4ec0\u4e48\uff0c\u54ea\u91cc\u662f\u81ea\u5df1\u60f3\u56de\u53bb\u7684\u5730\u65b9\u3002 $ git reset --hard 72b075e $ git clean --f \u7136\u540e\u518d\u4f7f\u7528 reset\u547d\u4ee4\uff0c\u590d\u5236\u81ea\u5df1\u60f3\u8981\u53bb\u7684\u5730\u65b9\u7684\u54c8\u5e0c\u7801\uff0c\u7a7f\u8d8a\u65f6\u5149\u56de\u5230\u8fc7\u53bb\u3002\u987a\u4fbf clean \u4e00\u4e0b\uff0c\u4fdd\u6301\u6e05\u6d01\u3002 \u8fd9\u6837\u4f60\u5c31\u80fd\u53bb\u5230\u4efb\u4f55\u4f60\u60f3\u53bb\u7684\u5730\u65b9\uff0cso happy\u3002 \u4f46\u5982\u4f55\u628a\u591a\u4e2a\u63d0\u4ea4\u5408\u5e76\u6210\u4e00\u4e2a\u63d0\u4ea4\u5462\uff1f\u4e3a\u4e86\u4fdd\u6301\u4ee3\u7801\u6811\u7684\u5e72\u51c0\u6f02\u4eae\uff0c\u5728\u672c\u5730\u7684\u591a\u6b21\u63d0\u4ea4\u4fdd\u5b58\uff0c\u5f04\u6210\u4e00\u6b21\u63d0\u4ea4\u518d\u63a8\u5230\u8fdc\u7a0b\u53bb\u53ef\u80fd\u4f1a\u66f4\u52a0\u597d\u4e00\u70b9\uff0c\u6240\u4ee5\u53ef\u4ee5\u662f\u7528 rebase \u547d\u4ee4\u8fdb\u884c\u884d\u5408\u3002 \u5728\u81ea\u5df1\u591a\u6b21\u63d0\u4ea4\u7684\u672c\u5730\u5206\u652f\u4e0a\u8fdb\u884c\u884d\u5408\u4e00\u822c\u4e0d\u4f1a\u51fa\u73b0\u51b2\u7a81\uff0c\u627e\u51c6\u672c\u5730\u5206\u652f\u7684\u7b2c\u4e00\u6b21\u63d0\u4ea4\u7684\u54c8\u5e0c\u7801\u503c\uff0c\u6216\u8005\u6570\u6e05\u695a\u81ea\u5df1\u63d0\u4ea4\u4e86\u51e0\u6b21\u7528rebase\u547d\u4ee4\u5c31\u53ef\u4ee5\u5c06\u591a\u6b21\u63d0\u4ea4\u5408\u5e76\u6210\u4e00\u6b21\u63d0\u4ea4 $ git rebase -i head~11 \u4f7f\u7528\u8fd9\u4e2a\u547d\u4ee4\u4e4b\u540e\uff0c\u4f1a\u8fdb\u5165\u5230vim\u6a21\u5f0f\uff0c\u5c06\u81ea\u5df1\u9700\u8981\u7684\u63d0\u4ea4\u4fe1\u606f\u8bbe\u7f6e\u4e3ap\uff0c\u5176\u4ed6\u7684\u8bbe\u7f6e\u4e3as\uff0c\u6700\u540e\u4f7f\u7528\uff1awq\u9000\u51fa\u4fdd\u5b58\u5373\u53ef\u3002 # Rebase 6a2eb6d..f7d0bd7 onto 6a2eb6d # # Commands: # p, pick = use commit # r, reword = use commit, but edit the commit message # e, edit = use commit, but stop for amending # s, squash = use commit, but meld into previous commit # f, fixup = like \"squash\", but discard this commit's log message # x, exec = run command (the rest of the line) using shell # # These lines can be re-ordered; they are executed from top to bottom. # # If you remove a line here THAT COMMIT WILL BE LOST. # # However, if you remove everything, the rebase will be aborted. # # Note that empty commits are commented out \u8fd9\u662f\u5bf9\u547d\u4ee4\u7684\u63d0\u793a\u3002 \u4f46\u6700\u597d\u8fd8\u662f\u4e0d\u8981\u9762\u5bf9\u9700\u8981\u8fd9\u6837\u4f7f\u7528rebase\u7684\u60c5\u666f\uff0c\u5e94\u8be5\u597d\u597d\u4f7f\u7528commit \u547d\u4ee4\u7684\u53c2\u6570\u3002\u6bd4\u5982\uff1a git commit --amend \u4f7f\u7528\u8fd9\u4e2a\u547d\u4ee4\uff0c\u4f1a\u5c06\u672c\u6b21\u63d0\u4ea4\u5199\u5230\u4e0a\u6b21\u7684\u63d0\u4ea4\u4e2d\u53bb\uff0c\u5c31\u4e0d\u4f1a\u4ea7\u751f\u591a\u6761\u7684\u63d0\u4ea4\u4fe1\u606f\u3002","title":"git \u9519\u8bef\u63d0\u4ea4\u6216\u8005\u9519\u8bef\u7684\u5408\u5e76\u4e86\u89e3\u51b3\u65b9\u6848"},{"location":"tool/gitquestion/#git-rebase","text":"\u5728\u5408\u5e76\u4ee3\u7801\u7684\u8fc7\u7a0b\u4e2d\uff0c\u53ef\u4ee5\u4f7f\u7528merge\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528rebase\uff0c\u5982\u679c\u4f7f\u7528merge\uff0c\u5408\u5e76\u4e4b\u540e\u63a8\u4e0a\u8fdc\u7a0b\u5c31\u4f1a\u6709\u4e24\u6761\u7ebf\uff0c\u4f46\u4f7f\u7528rebase\u5c31\u53ea\u4f1a\u4ea7\u751f\u4e00\u6761\u7ebf\uff0c\u53d8\u5f97\u7b80\u6d01\u800c\u4f18\u96c5\uff0c\u6240\u4ee5\u5728\u5408\u5e76\u4ee3\u7801\u7684\u8fc7\u7a0b\u4e2d\u5efa\u8bae\u5c3d\u91cf\u4f7f\u7528rebase\u547d\u4ee4\u3002 \u5728\u5408\u5e76\u4ee3\u7801\u4e2d\u53ef\u80fd\u4f1a\u9047\u5230\u51b2\u7a81\uff0c\u5f53\u63d0\u793a\u6709\u51b2\u7a81\u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u5916\u90e8\u7684\u56fe\u5f62\u5316\u51b2\u7a81\u5904\u7406\u5de5\u5177\u6765\u5904\u7406\u51b2\u7a81\u3002\u8fd9\u91cc\u4f7f\u7528\u7684\u662fKDiff3\u6765\u5904\u7406\u51b2\u7a81\u3002 \u5b89\u88c5Kdiff3 \u8f6f\u4ef6\u3002\uff08\u6700\u597d\u4f7f\u7528\u9ed8\u8ba4\u8def\u5f84\uff09 \u6dfb\u52a0kdiff3\u5230git mergetool\u91cc\u3002 git config --global merge.tool kdiff3 \u6dfb\u52a0kdiff3\u8def\u5f84\u5230 git global config\u91cc\u3002git config --global mergetool.kdiff3.path \"C:\\Program Files\\KDiff3\\kdiff3.exe\" \u4ee5\u540emerge\u53d1\u751f\u51b2\u7a81\u65f6\uff1agit mergetool \u6765\u505a\u56fe\u5f62\u5316merge\u3002\u8fdb\u5165\u7f16\u8f91\u51b2\u7a81\u3002 \u5e26\u95ee\u53f7\u7684\u624d\u662f\u51b2\u7a81\u3002\u5f53\u4e24\u8005\u90fd\u9700\u8981\u4fdd\u5b58\u65f6\uff0c\u53f3\u51fb\u6807\u8bb0\u5904\uff0c\u9009\u5b8cB\u540e\uff0c\u518d\u6b21\u53f3\u51fb\uff0c\u9009\u62e9C\u3002A\u662f\u6700\u539f\u59cb\u7684\u4ee3\u7801\uff0cB\u662f\u81ea\u5df1\u7684\uff0cC\u662f\u522b\u4eba\u7684\u3002 \u5728\u8fd9\u91cc\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u9996\u5148\u8981\u8bbe\u7f6e\u597dkDiff3\u7684\u9ed8\u8ba4\u7f16\u7801\uff0c\u548c\u81ea\u5df1\u7684\u5de5\u7a0b\u7f16\u7801\u4e00\u6837\uff0c\u8981\u4e0d\u89e3\u51b3\u5b8c\u51b2\u7a81\u4e4b\u540e\u8fd8\u8981\u89e3\u51b3\u4e71\u7801\u95ee\u9898\u3002\u3002\u3002\u3002","title":"git rebase \u4e2d\u7684\u51b2\u7a81\u5904\u7406"},{"location":"tool/markdown/","text":"\u57fa\u4e8emkdocs-material\u642d\u5efa\u4e2a\u4eba\u9759\u6001\u535a\u5ba2(\u542b\u652f\u6301\u7684markdown\u8bed\u6cd5) \u00b6 \u70b9\u51fb\u9605\u8bfb","title":"Markdown"},{"location":"tool/markdown/#mkdocs-materialmarkdown","text":"\u70b9\u51fb\u9605\u8bfb","title":"\u57fa\u4e8emkdocs-material\u642d\u5efa\u4e2a\u4eba\u9759\u6001\u535a\u5ba2(\u542b\u652f\u6301\u7684markdown\u8bed\u6cd5)"},{"location":"web/ali_js_style/","text":"Airbnb JavaScript Style Guide() { \u00b6 \u7528\u66f4\u5408\u7406\u7684\u65b9\u5f0f\u5199 JavaScript ES5 \u7684\u7f16\u7801\u89c4\u8303\u8bf7\u67e5\u770b \u7248\u672c\u4e00 \uff0c \u7248\u672c\u4e8c \u3002 \u7ffb\u8bd1\u81ea Airbnb JavaScript Style Guide \u3002 \u76ee\u5f55 \u00b6 \u7c7b\u578b \u5f15\u7528 \u5bf9\u8c61 \u6570\u7ec4 \u89e3\u6784 \u5b57\u7b26\u4e32 \u51fd\u6570 \u7bad\u5934\u51fd\u6570 \u6784\u9020\u51fd\u6570 \u6a21\u5757 \u8fed\u4ee3\u5668\u548c\u751f\u6210\u5668 \u5c5e\u6027 \u53d8\u91cf \u63d0\u5347 \u6bd4\u8f83\u8fd0\u7b97\u7b26\u548c\u7b49\u53f7 \u4ee3\u7801\u5757 \u6ce8\u91ca \u7a7a\u767d \u9017\u53f7 \u5206\u53f7 \u7c7b\u578b\u8f6c\u6362 \u547d\u540d\u89c4\u5219 \u5b58\u53d6\u5668 \u4e8b\u4ef6 jQuery ECMAScript 5 \u517c\u5bb9\u6027 ECMAScript 6 \u7f16\u7801\u89c4\u8303 \u6d4b\u8bd5 \u6027\u80fd \u76f8\u5173\u8d44\u6e90 \u4f7f\u7528\u60c5\u51b5 \u5176\u4ed6\u7ffb\u8bd1 JavaScript \u7f16\u7801\u89c4\u8303\u8bf4\u660e \u8ba8\u8bba JavaScript \u8d21\u732e\u8005 \u8bb8\u53ef\u534f\u8bae \u7c7b\u578b \u00b6 1.1 \u57fa\u672c\u7c7b\u578b : \u76f4\u63a5\u5b58\u53d6\u57fa\u672c\u7c7b\u578b\u3002 \u5b57\u7b26\u4e32 \u6570\u503c \u5e03\u5c14\u7c7b\u578b null undefined const foo = 1 ; let bar = foo ; bar = 9 ; console . log ( foo , bar ); // => 1, 9 1.2 \u590d\u6742\u7c7b\u578b : \u901a\u8fc7\u5f15\u7528\u7684\u65b9\u5f0f\u5b58\u53d6\u590d\u6742\u7c7b\u578b\u3002 \u5bf9\u8c61 \u6570\u7ec4 \u51fd\u6570 const foo = [ 1 , 2 ]; const bar = foo ; bar [ 0 ] = 9 ; console . log ( foo [ 0 ], bar [ 0 ]); // => 9, 9 \u2b06 \u8fd4\u56de\u76ee\u5f55 \u5f15\u7528 \u00b6 2.1 \u5bf9\u6240\u6709\u7684\u5f15\u7528\u4f7f\u7528 const \uff1b\u4e0d\u8981\u4f7f\u7528 var \u3002 \u4e3a\u4ec0\u4e48\uff1f\u8fd9\u80fd\u786e\u4fdd\u4f60\u65e0\u6cd5\u5bf9\u5f15\u7528\u91cd\u65b0\u8d4b\u503c\uff0c\u4e5f\u4e0d\u4f1a\u5bfc\u81f4\u51fa\u73b0 bug \u6216\u96be\u4ee5\u7406\u89e3\u3002 // bad var a = 1 ; var b = 2 ; // good const a = 1 ; const b = 2 ; 2.2 \u5982\u679c\u4f60\u4e00\u5b9a\u9700\u8981\u53ef\u53d8\u52a8\u7684\u5f15\u7528\uff0c\u4f7f\u7528 let \u4ee3\u66ff var \u3002 \u4e3a\u4ec0\u4e48\uff1f\u56e0\u4e3a let \u662f\u5757\u7ea7\u4f5c\u7528\u57df\uff0c\u800c var \u662f\u51fd\u6570\u4f5c\u7528\u57df\u3002 // bad var count = 1 ; if ( true ) { count += 1 ; } // good, use the let. let count = 1 ; if ( true ) { count += 1 ; } 2.3 \u6ce8\u610f let \u548c const \u90fd\u662f\u5757\u7ea7\u4f5c\u7528\u57df\u3002 // const \u548c let \u53ea\u5b58\u5728\u4e8e\u5b83\u4eec\u88ab\u5b9a\u4e49\u7684\u533a\u5757\u5185\u3002 { let a = 1 ; const b = 1 ; } console . log ( a ); // ReferenceError console . log ( b ); // ReferenceError \u2b06 \u8fd4\u56de\u76ee\u5f55 \u5bf9\u8c61 \u00b6 3.1 \u4f7f\u7528\u5b57\u9762\u503c\u521b\u5efa\u5bf9\u8c61\u3002 // bad const item = new Object (); // good const item = {}; 3.2 \u5982\u679c\u4f60\u7684\u4ee3\u7801\u5728\u6d4f\u89c8\u5668\u73af\u5883\u4e0b\u6267\u884c\uff0c\u522b\u4f7f\u7528 \u4fdd\u7559\u5b57 \u4f5c\u4e3a\u952e\u503c\u3002\u8fd9\u6837\u7684\u8bdd\u5728 IE8 \u4e0d\u4f1a\u8fd0\u884c\u3002 \u66f4\u591a\u4fe1\u606f \u3002 \u4f46\u5728 ES6 \u6a21\u5757\u548c\u670d\u52a1\u5668\u7aef\u4e2d\u4f7f\u7528\u6ca1\u6709\u95ee\u9898\u3002 // bad const superman = { default : { clark : 'kent' }, private : true , }; // good const superman = { defaults : { clark : 'kent' }, hidden : true , }; 3.3 \u4f7f\u7528\u540c\u4e49\u8bcd\u66ff\u6362\u9700\u8981\u4f7f\u7528\u7684\u4fdd\u7559\u5b57\u3002 // bad const superman = { class : 'alien' , }; // bad const superman = { klass : 'alien' , }; // good const superman = { type : 'alien' , }; - 3.4 \u521b\u5efa\u6709\u52a8\u6001\u5c5e\u6027\u540d\u7684\u5bf9\u8c61\u65f6\uff0c\u4f7f\u7528\u53ef\u88ab\u8ba1\u7b97\u7684\u5c5e\u6027\u540d\u79f0\u3002 &gt; \u4e3a\u4ec0\u4e48\uff1f\u56e0\u4e3a\u8fd9\u6837\u53ef\u4ee5\u8ba9\u4f60\u5728\u4e00\u4e2a\u5730\u65b9\u5b9a\u4e49\u6240\u6709\u7684\u5bf9\u8c61\u5c5e\u6027\u3002 ```javascript function getKey(k) { return `a key named ${k}`; } // bad const obj = { id: 5, name: 'San Francisco', }; obj[getKey('enabled')] = true; // good const obj = { id: 5, name: 'San Francisco', [getKey('enabled')]: true, }; ``` - 3.5 \u4f7f\u7528\u5bf9\u8c61\u65b9\u6cd5\u7684\u7b80\u5199\u3002 ```javascript // bad const atom = { value: 1, addValue: function (value) { return atom.value + value; }, }; // good const atom = { value: 1, addValue(value) { return atom.value + value; }, }; ``` - 3.6 \u4f7f\u7528\u5bf9\u8c61\u5c5e\u6027\u503c\u7684\u7b80\u5199\u3002 &gt; \u4e3a\u4ec0\u4e48\uff1f\u56e0\u4e3a\u8fd9\u6837\u66f4\u77ed\u66f4\u6709\u63cf\u8ff0\u6027\u3002 ```javascript const lukeSkywalker = 'Luke Skywalker'; // bad const obj = { lukeSkywalker: lukeSkywalker, }; // good const obj = { lukeSkywalker, }; ``` 3.7 \u5728\u5bf9\u8c61\u5c5e\u6027\u58f0\u660e\u524d\u628a\u7b80\u5199\u7684\u5c5e\u6027\u5206\u7ec4\u3002 \u4e3a\u4ec0\u4e48\uff1f\u56e0\u4e3a\u8fd9\u6837\u80fd\u6e05\u695a\u5730\u770b\u51fa\u54ea\u4e9b\u5c5e\u6027\u4f7f\u7528\u4e86\u7b80\u5199\u3002 const anakinSkywalker = 'Anakin Skywalker' ; const lukeSkywalker = 'Luke Skywalker' ; // bad const obj = { episodeOne : 1 , twoJedisWalkIntoACantina : 2 , lukeSkywalker , episodeThree : 3 , mayTheFourth : 4 , anakinSkywalker , }; // good const obj = { lukeSkywalker , anakinSkywalker , episodeOne : 1 , twoJedisWalkIntoACantina : 2 , episodeThree : 3 , mayTheFourth : 4 , }; \u2b06 \u8fd4\u56de\u76ee\u5f55 \u6570\u7ec4 \u00b6 4.1 \u4f7f\u7528\u5b57\u9762\u503c\u521b\u5efa\u6570\u7ec4\u3002 // bad const items = new Array (); // good const items = []; 4.2 \u5411\u6570\u7ec4\u6dfb\u52a0\u5143\u7d20\u65f6\u4f7f\u7528 Arrary#push \u66ff\u4ee3\u76f4\u63a5\u8d4b\u503c\u3002 const someStack = []; // bad someStack [ someStack . length ] = 'abracadabra' ; // good someStack . push ( 'abracadabra' ); - 4.3 \u4f7f\u7528\u62d3\u5c55\u8fd0\u7b97\u7b26 ... \u590d\u5236\u6570\u7ec4\u3002 ```javascript // bad const len = items.length; const itemsCopy = []; let i; for (i = 0; i &lt; len; i++) { itemsCopy[i] = items[i]; } // good const itemsCopy = [...items]; ``` 4.4 \u4f7f\u7528 Array#from \u628a\u4e00\u4e2a\u7c7b\u6570\u7ec4\u5bf9\u8c61\u8f6c\u6362\u6210\u6570\u7ec4\u3002 const foo = document . querySelectorAll ( '.foo' ); const nodes = Array . from ( foo ); \u2b06 \u8fd4\u56de\u76ee\u5f55 \u89e3\u6784 \u00b6 5.1 \u4f7f\u7528\u89e3\u6784\u5b58\u53d6\u548c\u4f7f\u7528\u591a\u5c5e\u6027\u5bf9\u8c61\u3002 \u4e3a\u4ec0\u4e48\uff1f\u56e0\u4e3a\u89e3\u6784\u80fd\u51cf\u5c11\u4e34\u65f6\u5f15\u7528\u5c5e\u6027\u3002 // bad function getFullName ( user ) { const firstName = user . firstName ; const lastName = user . lastName ; return ` ${ firstName } ${ lastName } ` ; } // good function getFullName ( obj ) { const { firstName , lastName } = obj ; return ` ${ firstName } ${ lastName } ` ; } // best function getFullName ({ firstName , lastName }) { return ` ${ firstName } ${ lastName } ` ; } 5.2 \u5bf9\u6570\u7ec4\u4f7f\u7528\u89e3\u6784\u8d4b\u503c\u3002 const arr = [ 1 , 2 , 3 , 4 ]; // bad const first = arr [ 0 ]; const second = arr [ 1 ]; // good const [ first , second ] = arr ; 5.3 \u9700\u8981\u56de\u4f20\u591a\u4e2a\u503c\u65f6\uff0c\u4f7f\u7528\u5bf9\u8c61\u89e3\u6784\uff0c\u800c\u4e0d\u662f\u6570\u7ec4\u89e3\u6784\u3002 > \u4e3a\u4ec0\u4e48\uff1f\u589e\u52a0\u5c5e\u6027\u6216\u8005\u6539\u53d8\u6392\u5e8f\u4e0d\u4f1a\u6539\u53d8\u8c03\u7528\u65f6\u7684\u4f4d\u7f6e\u3002 // bad function processInput ( input ) { // then a miracle occurs return [ left , right , top , bottom ]; } // \u8c03\u7528\u65f6\u9700\u8981\u8003\u8651\u56de\u8c03\u6570\u636e\u7684\u987a\u5e8f\u3002 const [ left , __ , top ] = processInput ( input ); // good function processInput ( input ) { // then a miracle occurs return { left , right , top , bottom }; } // \u8c03\u7528\u65f6\u53ea\u9009\u62e9\u9700\u8981\u7684\u6570\u636e const { left , right } = processInput ( input ); \u2b06 \u8fd4\u56de\u76ee\u5f55 Strings \u00b6 6.1 \u5b57\u7b26\u4e32\u4f7f\u7528\u5355\u5f15\u53f7 '' \u3002 // bad const name = \"Capt. Janeway\" ; // good const name = 'Capt. Janeway' ; 6.2 \u5b57\u7b26\u4e32\u8d85\u8fc7 80 \u4e2a\u5b57\u8282\u5e94\u8be5\u4f7f\u7528\u5b57\u7b26\u4e32\u8fde\u63a5\u53f7\u6362\u884c\u3002 6.3 \u6ce8\uff1a\u8fc7\u5ea6\u4f7f\u7528\u5b57\u4e32\u8fde\u63a5\u7b26\u53f7\u53ef\u80fd\u4f1a\u5bf9\u6027\u80fd\u9020\u6210\u5f71\u54cd\u3002 jsPerf \u548c \u8ba8\u8bba . // bad const errorMessage = 'This is a super long error that was thrown because of Batman. When you stop to think about how Batman had anything to do with this, you would get nowhere fast.' ; // bad const errorMessage = 'This is a super long error that was thrown because \\ of Batman. When you stop to think about how Batman had anything to do \\ with this, you would get nowhere \\ fast.' ; // good const errorMessage = 'This is a super long error that was thrown because ' + 'of Batman. When you stop to think about how Batman had anything to do ' + 'with this, you would get nowhere fast.' ; - 6.4 \u7a0b\u5e8f\u5316\u751f\u6210\u5b57\u7b26\u4e32\u65f6\uff0c\u4f7f\u7528\u6a21\u677f\u5b57\u7b26\u4e32\u4ee3\u66ff\u5b57\u7b26\u4e32\u8fde\u63a5\u3002 &gt; \u4e3a\u4ec0\u4e48\uff1f\u6a21\u677f\u5b57\u7b26\u4e32\u66f4\u4e3a\u7b80\u6d01\uff0c\u66f4\u5177\u53ef\u8bfb\u6027\u3002 ```javascript // bad function sayHi(name) { return 'How are you, ' + name + '?'; } // bad function sayHi(name) { return ['How are you, ', name, '?'].join(); } // good function sayHi(name) { return `How are you, ${name}?`; } ``` \u2b06 \u8fd4\u56de\u76ee\u5f55 \u51fd\u6570 \u00b6 7.1 \u4f7f\u7528\u51fd\u6570\u58f0\u660e\u4ee3\u66ff\u51fd\u6570\u8868\u8fbe\u5f0f\u3002 \u4e3a\u4ec0\u4e48\uff1f\u56e0\u4e3a\u51fd\u6570\u58f0\u660e\u662f\u53ef\u547d\u540d\u7684\uff0c\u6240\u4ee5\u4ed6\u4eec\u5728\u8c03\u7528\u6808\u4e2d\u66f4\u5bb9\u6613\u88ab\u8bc6\u522b\u3002\u6b64\u5916\uff0c\u51fd\u6570\u58f0\u660e\u4f1a\u628a\u6574\u4e2a\u51fd\u6570\u63d0\u5347\uff08hoisted\uff09\uff0c\u800c\u51fd\u6570\u8868\u8fbe\u5f0f\u53ea\u4f1a\u628a\u51fd\u6570\u7684\u5f15\u7528\u53d8\u91cf\u540d\u63d0\u5347\u3002\u8fd9\u6761\u89c4\u5219\u4f7f\u5f97 \u7bad\u5934\u51fd\u6570 \u53ef\u4ee5\u53d6\u4ee3\u51fd\u6570\u8868\u8fbe\u5f0f\u3002 // bad const foo = function () { }; // good function foo () { } 7.2 \u51fd\u6570\u8868\u8fbe\u5f0f: // \u7acb\u5373\u8c03\u7528\u7684\u51fd\u6570\u8868\u8fbe\u5f0f (IIFE) (() => { console . log ( 'Welcome to the Internet. Please follow me.' ); })(); 7.3 \u6c38\u8fdc\u4e0d\u8981\u5728\u4e00\u4e2a\u975e\u51fd\u6570\u4ee3\u7801\u5757\uff08 if \u3001 while \u7b49\uff09\u4e2d\u58f0\u660e\u4e00\u4e2a\u51fd\u6570\uff0c\u628a\u90a3\u4e2a\u51fd\u6570\u8d4b\u7ed9\u4e00\u4e2a\u53d8\u91cf\u3002\u6d4f\u89c8\u5668\u5141\u8bb8\u4f60\u8fd9\u4e48\u505a\uff0c\u4f46\u5b83\u4eec\u7684\u89e3\u6790\u8868\u73b0\u4e0d\u4e00\u81f4\u3002 7.4 \u6ce8\u610f: ECMA-262 \u628a block \u5b9a\u4e49\u4e3a\u4e00\u7ec4\u8bed\u53e5\u3002\u51fd\u6570\u58f0\u660e\u4e0d\u662f\u8bed\u53e5\u3002 \u9605\u8bfb ECMA-262 \u5173\u4e8e\u8fd9\u4e2a\u95ee\u9898\u7684\u8bf4\u660e \u3002 // bad if ( currentUser ) { function test () { console . log ( 'Nope.' ); } } // good let test ; if ( currentUser ) { test = () => { console . log ( 'Yup.' ); }; } 7.5 \u6c38\u8fdc\u4e0d\u8981\u628a\u53c2\u6570\u547d\u540d\u4e3a arguments \u3002\u8fd9\u5c06\u53d6\u4ee3\u539f\u6765\u51fd\u6570\u4f5c\u7528\u57df\u5185\u7684 arguments \u5bf9\u8c61\u3002 // bad function nope ( name , options , arguments ) { // ...stuff... } // good function yup ( name , options , args ) { // ...stuff... } - 7.6 \u4e0d\u8981\u4f7f\u7528 arguments \u3002\u53ef\u4ee5\u9009\u62e9 rest \u8bed\u6cd5 ... \u66ff\u4ee3\u3002 &gt; \u4e3a\u4ec0\u4e48\uff1f\u4f7f\u7528 `...` \u80fd\u660e\u786e\u4f60\u8981\u4f20\u5165\u7684\u53c2\u6570\u3002\u53e6\u5916 rest \u53c2\u6570\u662f\u4e00\u4e2a\u771f\u6b63\u7684\u6570\u7ec4\uff0c\u800c `arguments` \u662f\u4e00\u4e2a\u7c7b\u6570\u7ec4\u3002 ```javascript // bad function concatenateAll() { const args = Array.prototype.slice.call(arguments); return args.join(''); } // good function concatenateAll(...args) { return args.join(''); } ``` - 7.7 \u76f4\u63a5\u7ed9\u51fd\u6570\u7684\u53c2\u6570\u6307\u5b9a\u9ed8\u8ba4\u503c\uff0c\u4e0d\u8981\u4f7f\u7528\u4e00\u4e2a\u53d8\u5316\u7684\u51fd\u6570\u53c2\u6570\u3002 ```javascript // really bad function handleThings(opts) { // \u4e0d\uff01\u6211\u4eec\u4e0d\u5e94\u8be5\u6539\u53d8\u51fd\u6570\u53c2\u6570\u3002 // \u66f4\u52a0\u7cdf\u7cd5: \u5982\u679c\u53c2\u6570 opts \u662f false \u7684\u8bdd\uff0c\u5b83\u5c31\u4f1a\u88ab\u8bbe\u5b9a\u4e3a\u4e00\u4e2a\u5bf9\u8c61\u3002 // \u4f46\u8fd9\u6837\u7684\u5199\u6cd5\u4f1a\u9020\u6210\u4e00\u4e9b Bugs\u3002 //\uff08\u8bd1\u6ce8\uff1a\u4f8b\u5982\u5f53 opts \u88ab\u8d4b\u503c\u4e3a\u7a7a\u5b57\u7b26\u4e32\uff0copts \u4ecd\u7136\u4f1a\u88ab\u4e0b\u4e00\u884c\u4ee3\u7801\u8bbe\u5b9a\u4e3a\u4e00\u4e2a\u7a7a\u5bf9\u8c61\u3002\uff09 opts = opts || {}; // ... } // still bad function handleThings(opts) { if (opts === void 0) { opts = {}; } // ... } // good function handleThings(opts = {}) { // ... } ``` 7.8 \u76f4\u63a5\u7ed9\u51fd\u6570\u53c2\u6570\u8d4b\u503c\u65f6\u9700\u8981\u907f\u514d\u526f\u4f5c\u7528\u3002 \u4e3a\u4ec0\u4e48\uff1f\u56e0\u4e3a\u8fd9\u6837\u7684\u5199\u6cd5\u8ba9\u4eba\u611f\u5230\u5f88\u56f0\u60d1\u3002 var b = 1 ; // bad function count ( a = b ++ ) { console . log ( a ); } count (); // 1 count (); // 2 count ( 3 ); // 3 count (); // 3 \u2b06 \u8fd4\u56de\u76ee\u5f55 \u7bad\u5934\u51fd\u6570 \u00b6 8.1 \u5f53\u4f60\u5fc5\u987b\u4f7f\u7528\u51fd\u6570\u8868\u8fbe\u5f0f\uff08\u6216\u4f20\u9012\u4e00\u4e2a\u533f\u540d\u51fd\u6570\uff09\u65f6\uff0c\u4f7f\u7528\u7bad\u5934\u51fd\u6570\u7b26\u53f7\u3002 \u4e3a\u4ec0\u4e48\uff1f\u56e0\u4e3a\u7bad\u5934\u51fd\u6570\u521b\u9020\u4e86\u65b0\u7684\u4e00\u4e2a this \u6267\u884c\u73af\u5883\uff08\u8bd1\u6ce8\uff1a\u53c2\u8003 Arrow functions - JavaScript | MDN \u548c ES6 arrow functions, syntax and lexical scoping \uff09\uff0c\u901a\u5e38\u60c5\u51b5\u4e0b\u90fd\u80fd\u6ee1\u8db3\u4f60\u7684\u9700\u6c42\uff0c\u800c\u4e14\u8fd9\u6837\u7684\u5199\u6cd5\u66f4\u4e3a\u7b80\u6d01\u3002 \u4e3a\u4ec0\u4e48\u4e0d\uff1f\u5982\u679c\u4f60\u6709\u4e00\u4e2a\u76f8\u5f53\u590d\u6742\u7684\u51fd\u6570\uff0c\u4f60\u6216\u8bb8\u53ef\u4ee5\u628a\u903b\u8f91\u90e8\u5206\u8f6c\u79fb\u5230\u4e00\u4e2a\u51fd\u6570\u58f0\u660e\u4e0a\u3002 // bad [ 1 , 2 , 3 ]. map ( function ( x ) { const y = x + 1 ; return x * y ; }); // good [ 1 , 2 , 3 ]. map (( x ) => { const y = x + 1 ; return x * y ; }); 8.2 \u5982\u679c\u4e00\u4e2a\u51fd\u6570\u9002\u5408\u7528\u4e00\u884c\u5199\u51fa\u5e76\u4e14\u53ea\u6709\u4e00\u4e2a\u53c2\u6570\uff0c\u90a3\u5c31\u628a\u82b1\u62ec\u53f7\u3001\u5706\u62ec\u53f7\u548c return \u90fd\u7701\u7565\u6389\u3002\u5982\u679c\u4e0d\u662f\uff0c\u90a3\u5c31\u4e0d\u8981\u7701\u7565\u3002 \u4e3a\u4ec0\u4e48\uff1f\u8bed\u6cd5\u7cd6\u3002\u5728\u94fe\u5f0f\u8c03\u7528\u4e2d\u53ef\u8bfb\u6027\u5f88\u9ad8\u3002 \u4e3a\u4ec0\u4e48\u4e0d\uff1f\u5f53\u4f60\u6253\u7b97\u56de\u4f20\u4e00\u4e2a\u5bf9\u8c61\u7684\u65f6\u5019\u3002 // good [ 1 , 2 , 3 ]. map ( x => x * x ); // good [ 1 , 2 , 3 ]. reduce (( total , n ) => { return total + n ; }, 0 ); \u2b06 \u8fd4\u56de\u76ee\u5f55 \u6784\u9020\u5668 \u00b6 9.1 \u603b\u662f\u4f7f\u7528 class \u3002\u907f\u514d\u76f4\u63a5\u64cd\u4f5c prototype \u3002 \u4e3a\u4ec0\u4e48? \u56e0\u4e3a class \u8bed\u6cd5\u66f4\u4e3a\u7b80\u6d01\u66f4\u6613\u8bfb\u3002 // bad function Queue ( contents = []) { this . _queue = [... contents ]; } Queue . prototype . pop = function () { const value = this . _queue [ 0 ]; this . _queue . splice ( 0 , 1 ); return value ; } // good class Queue { constructor ( contents = []) { this . _queue = [... contents ]; } pop () { const value = this . _queue [ 0 ]; this . _queue . splice ( 0 , 1 ); return value ; } } 9.2 \u4f7f\u7528 extends \u7ee7\u627f\u3002 \u4e3a\u4ec0\u4e48\uff1f\u56e0\u4e3a extends \u662f\u4e00\u4e2a\u5185\u5efa\u7684\u539f\u578b\u7ee7\u627f\u65b9\u6cd5\u5e76\u4e14\u4e0d\u4f1a\u7834\u574f instanceof \u3002 // bad const inherits = require ( 'inherits' ); function PeekableQueue ( contents ) { Queue . apply ( this , contents ); } inherits ( PeekableQueue , Queue ); PeekableQueue . prototype . peek = function () { return this . _queue [ 0 ]; } // good class PeekableQueue extends Queue { peek () { return this . _queue [ 0 ]; } } 9.3 \u65b9\u6cd5\u53ef\u4ee5\u8fd4\u56de this \u6765\u5e2e\u52a9\u94fe\u5f0f\u8c03\u7528\u3002 // bad Jedi . prototype . jump = function () { this . jumping = true ; return true ; }; Jedi . prototype . setHeight = function ( height ) { this . height = height ; }; const luke = new Jedi (); luke . jump (); // => true luke . setHeight ( 20 ); // => undefined // good class Jedi { jump () { this . jumping = true ; return this ; } setHeight ( height ) { this . height = height ; return this ; } } const luke = new Jedi (); luke . jump () . setHeight ( 20 ); 9.4 \u53ef\u4ee5\u5199\u4e00\u4e2a\u81ea\u5b9a\u4e49\u7684 toString() \u65b9\u6cd5\uff0c\u4f46\u8981\u786e\u4fdd\u5b83\u80fd\u6b63\u5e38\u8fd0\u884c\u5e76\u4e14\u4e0d\u4f1a\u5f15\u8d77\u526f\u4f5c\u7528\u3002 class Jedi { constructor ( options = {}) { this . name = options . name || 'no name' ; } getName () { return this . name ; } toString () { return `Jedi - ${ this . getName () } ` ; } } \u2b06 \u8fd4\u56de\u76ee\u5f55 \u6a21\u5757 \u00b6 10.1 \u603b\u662f\u4f7f\u7528\u6a21\u7ec4 ( import / export ) \u800c\u4e0d\u662f\u5176\u4ed6\u975e\u6807\u51c6\u6a21\u5757\u7cfb\u7edf\u3002\u4f60\u53ef\u4ee5\u7f16\u8bd1\u4e3a\u4f60\u559c\u6b22\u7684\u6a21\u5757\u7cfb\u7edf\u3002 \u4e3a\u4ec0\u4e48\uff1f\u6a21\u5757\u5c31\u662f\u672a\u6765\uff0c\u8ba9\u6211\u4eec\u5f00\u59cb\u8fc8\u5411\u672a\u6765\u5427\u3002 // bad const AirbnbStyleGuide = require ( './AirbnbStyleGuide' ); module . exports = AirbnbStyleGuide . es6 ; // ok import AirbnbStyleGuide from './AirbnbStyleGuide' ; export default AirbnbStyleGuide . es6 ; // best import { es6 } from './AirbnbStyleGuide' ; export default es6 ; 10.2 \u4e0d\u8981\u4f7f\u7528\u901a\u914d\u7b26 import\u3002 \u4e3a\u4ec0\u4e48\uff1f\u8fd9\u6837\u80fd\u786e\u4fdd\u4f60\u53ea\u6709\u4e00\u4e2a\u9ed8\u8ba4 export\u3002 // bad import * as AirbnbStyleGuide from './AirbnbStyleGuide' ; // good import AirbnbStyleGuide from './AirbnbStyleGuide' ; 10.3 \u4e0d\u8981\u4ece import \u4e2d\u76f4\u63a5 export\u3002 \u4e3a\u4ec0\u4e48\uff1f\u867d\u7136\u4e00\u884c\u4ee3\u7801\u7b80\u6d01\u660e\u4e86\uff0c\u4f46\u8ba9 import \u548c export \u5404\u53f8\u5176\u804c\u8ba9\u4e8b\u60c5\u80fd\u4fdd\u6301\u4e00\u81f4\u3002 // bad // filename es6.js export { es6 as default } from './airbnbStyleGuide' ; // good // filename es6.js import { es6 } from './AirbnbStyleGuide' ; export default es6 ; \u2b06 \u8fd4\u56de\u76ee\u5f55 Iterators and Generators \u00b6 11.1 \u4e0d\u8981\u4f7f\u7528 iterators\u3002\u4f7f\u7528\u9ad8\u9636\u51fd\u6570\u4f8b\u5982 map() \u548c reduce() \u66ff\u4ee3 for-of \u3002 \u4e3a\u4ec0\u4e48\uff1f\u8fd9\u52a0\u5f3a\u4e86\u6211\u4eec\u4e0d\u53d8\u7684\u89c4\u5219\u3002\u5904\u7406\u7eaf\u51fd\u6570\u7684\u56de\u8c03\u503c\u66f4\u6613\u8bfb\uff0c\u8fd9\u6bd4\u5b83\u5e26\u6765\u7684\u526f\u4f5c\u7528\u66f4\u91cd\u8981\u3002 const numbers = [ 1 , 2 , 3 , 4 , 5 ]; // bad let sum = 0 ; for ( let num of numbers ) { sum += num ; } sum === 15 ; // good let sum = 0 ; numbers . forEach (( num ) => sum += num ); sum === 15 ; // best (use the functional force) const sum = numbers . reduce (( total , num ) => total + num , 0 ); sum === 15 ; 11.2 \u73b0\u5728\u8fd8\u4e0d\u8981\u4f7f\u7528 generators\u3002 \u4e3a\u4ec0\u4e48\uff1f\u56e0\u4e3a\u5b83\u4eec\u73b0\u5728\u8fd8\u6ca1\u6cd5\u5f88\u597d\u5730\u7f16\u8bd1\u5230 ES5\u3002 (\u8bd1\u8005\u6ce8\uff1a\u76ee\u524d(2016/03) Chrome \u548c Node.js \u7684\u7a33\u5b9a\u7248\u672c\u90fd\u5df2\u652f\u6301 generators) \u2b06 \u8fd4\u56de\u76ee\u5f55 \u5c5e\u6027 \u00b6 12.1 \u4f7f\u7528 . \u6765\u8bbf\u95ee\u5bf9\u8c61\u7684\u5c5e\u6027\u3002 const luke = { jedi : true , age : 28 , }; // bad const isJedi = luke [ 'jedi' ]; // good const isJedi = luke . jedi ; 12.2 \u5f53\u901a\u8fc7\u53d8\u91cf\u8bbf\u95ee\u5c5e\u6027\u65f6\u4f7f\u7528\u4e2d\u62ec\u53f7 [] \u3002 const luke = { jedi : true , age : 28 , }; function getProp ( prop ) { return luke [ prop ]; } const isJedi = getProp ( 'jedi' ); \u2b06 \u8fd4\u56de\u76ee\u5f55 \u53d8\u91cf \u00b6 13.1 \u4e00\u76f4\u4f7f\u7528 const \u6765\u58f0\u660e\u53d8\u91cf\uff0c\u5982\u679c\u4e0d\u8fd9\u6837\u505a\u5c31\u4f1a\u4ea7\u751f\u5168\u5c40\u53d8\u91cf\u3002\u6211\u4eec\u9700\u8981\u907f\u514d\u5168\u5c40\u547d\u540d\u7a7a\u95f4\u7684\u6c61\u67d3\u3002 \u5730\u7403\u961f\u957f \u5df2\u7ecf\u8b66\u544a\u8fc7\u6211\u4eec\u4e86\u3002\uff08\u8bd1\u6ce8\uff1a\u5168\u5c40\uff0cglobal \u4ea6\u6709\u5168\u7403\u7684\u610f\u601d\u3002\u5730\u7403\u961f\u957f\u7684\u8d23\u4efb\u662f\u4fdd\u536b\u5730\u7403\u73af\u5883\uff0c\u6240\u4ee5\u4ed6\u8b66\u544a\u6211\u4eec\u4e0d\u8981\u9020\u6210\u300c\u5168\u7403\u300d\u6c61\u67d3\u3002\uff09 // bad superPower = new SuperPower (); // good const superPower = new SuperPower (); 13.2 \u4f7f\u7528 const \u58f0\u660e\u6bcf\u4e00\u4e2a\u53d8\u91cf\u3002 \u4e3a\u4ec0\u4e48\uff1f\u589e\u52a0\u65b0\u53d8\u91cf\u5c06\u53d8\u7684\u66f4\u52a0\u5bb9\u6613\uff0c\u800c\u4e14\u4f60\u6c38\u8fdc\u4e0d\u7528\u518d\u62c5\u5fc3\u8c03\u6362\u9519 ; \u8ddf , \u3002 // bad const items = getItems (), goSportsTeam = true , dragonball = 'z' ; // bad // (compare to above, and try to spot the mistake) const items = getItems (), goSportsTeam = true ; dragonball = 'z' ; // good const items = getItems (); const goSportsTeam = true ; const dragonball = 'z' ; 13.3 \u5c06\u6240\u6709\u7684 const \u548c let \u5206\u7ec4 \u4e3a\u4ec0\u4e48\uff1f\u5f53\u4f60\u9700\u8981\u628a\u5df2\u8d4b\u503c\u53d8\u91cf\u8d4b\u503c\u7ed9\u672a\u8d4b\u503c\u53d8\u91cf\u65f6\u975e\u5e38\u6709\u7528\u3002 // bad let i , len , dragonball , items = getItems (), goSportsTeam = true ; // bad let i ; const items = getItems (); let dragonball ; const goSportsTeam = true ; let len ; // good const goSportsTeam = true ; const items = getItems (); let dragonball ; let i ; let length ; 13.4 \u5728\u4f60\u9700\u8981\u7684\u5730\u65b9\u7ed9\u53d8\u91cf\u8d4b\u503c\uff0c\u4f46\u8bf7\u628a\u5b83\u4eec\u653e\u5728\u4e00\u4e2a\u5408\u7406\u7684\u4f4d\u7f6e\u3002 \u4e3a\u4ec0\u4e48\uff1f let \u548c const \u662f\u5757\u7ea7\u4f5c\u7528\u57df\u800c\u4e0d\u662f\u51fd\u6570\u4f5c\u7528\u57df\u3002 // good function () { test (); console . log ( 'doing stuff..' ); //..other stuff.. const name = getName (); if ( name === 'test' ) { return false ; } return name ; } // bad - unnecessary function call function ( hasName ) { const name = getName (); if ( ! hasName ) { return false ; } this . setFirstName ( name ); return true ; } // good function ( hasName ) { if ( ! hasName ) { return false ; } const name = getName (); this . setFirstName ( name ); return true ; } \u2b06 \u8fd4\u56de\u76ee\u5f55 Hoisting \u00b6 14.1 var \u58f0\u660e\u4f1a\u88ab\u63d0\u5347\u81f3\u8be5\u4f5c\u7528\u57df\u7684\u9876\u90e8\uff0c\u4f46\u5b83\u4eec\u8d4b\u503c\u4e0d\u4f1a\u63d0\u5347\u3002 let \u548c const \u88ab\u8d4b\u4e88\u4e86\u4e00\u79cd\u79f0\u4e3a\u300c \u6682\u65f6\u6027\u6b7b\u533a\uff08Temporal Dead Zones, TDZ\uff09 \u300d\u7684\u6982\u5ff5\u3002\u8fd9\u5bf9\u4e8e\u4e86\u89e3\u4e3a\u4ec0\u4e48 type of \u4e0d\u518d\u5b89\u5168 \u76f8\u5f53\u91cd\u8981\u3002 // \u6211\u4eec\u77e5\u9053\u8fd9\u6837\u8fd0\u884c\u4e0d\u4e86 // \uff08\u5047\u8bbe notDefined \u4e0d\u662f\u5168\u5c40\u53d8\u91cf\uff09 function example () { console . log ( notDefined ); // => throws a ReferenceError } // \u7531\u4e8e\u53d8\u91cf\u63d0\u5347\u7684\u539f\u56e0\uff0c // \u5728\u5f15\u7528\u53d8\u91cf\u540e\u518d\u58f0\u660e\u53d8\u91cf\u662f\u53ef\u4ee5\u8fd0\u884c\u7684\u3002 // \u6ce8\uff1a\u53d8\u91cf\u7684\u8d4b\u503c `true` \u4e0d\u4f1a\u88ab\u63d0\u5347\u3002 function example () { console . log ( declaredButNotAssigned ); // => undefined var declaredButNotAssigned = true ; } // \u7f16\u8bd1\u5668\u4f1a\u628a\u51fd\u6570\u58f0\u660e\u63d0\u5347\u5230\u4f5c\u7528\u57df\u7684\u9876\u5c42\uff0c // \u8fd9\u610f\u5473\u7740\u6211\u4eec\u7684\u4f8b\u5b50\u53ef\u4ee5\u6539\u5199\u6210\u8fd9\u6837\uff1a function example () { let declaredButNotAssigned ; console . log ( declaredButNotAssigned ); // => undefined declaredButNotAssigned = true ; } // \u4f7f\u7528 const \u548c let function example () { console . log ( declaredButNotAssigned ); // => throws a ReferenceError console . log ( typeof declaredButNotAssigned ); // => throws a ReferenceError const declaredButNotAssigned = true ; } 14.2 \u533f\u540d\u51fd\u6570\u8868\u8fbe\u5f0f\u7684\u53d8\u91cf\u540d\u4f1a\u88ab\u63d0\u5347\uff0c\u4f46\u51fd\u6570\u5185\u5bb9\u5e76\u4e0d\u4f1a\u3002 function example () { console . log ( anonymous ); // => undefined anonymous (); // => TypeError anonymous is not a function var anonymous = function () { console . log ( 'anonymous function expression' ); }; } 14.3 \u547d\u540d\u7684\u51fd\u6570\u8868\u8fbe\u5f0f\u7684\u53d8\u91cf\u540d\u4f1a\u88ab\u63d0\u5347\uff0c\u4f46\u51fd\u6570\u540d\u548c\u51fd\u6570\u51fd\u6570\u5185\u5bb9\u5e76\u4e0d\u4f1a\u3002 function example () { console . log ( named ); // => undefined named (); // => TypeError named is not a function superPower (); // => ReferenceError superPower is not defined var named = function superPower () { console . log ( 'Flying' ); }; } // the same is true when the function name // is the same as the variable name. function example () { console . log ( named ); // => undefined named (); // => TypeError named is not a function var named = function named () { console . log ( 'named' ); } } 14.4 \u51fd\u6570\u58f0\u660e\u7684\u540d\u79f0\u548c\u51fd\u6570\u4f53\u90fd\u4f1a\u88ab\u63d0\u5347\u3002 function example () { superPower (); // => Flying function superPower () { console . log ( 'Flying' ); } } \u60f3\u4e86\u89e3\u66f4\u591a\u4fe1\u606f\uff0c\u53c2\u8003 Ben Cherry \u7684 JavaScript Scoping & Hoisting \u3002 \u2b06 \u8fd4\u56de\u76ee\u5f55 \u6bd4\u8f83\u8fd0\u7b97\u7b26\u548c\u7b49\u53f7 \u00b6 15.1 \u4f18\u5148\u4f7f\u7528 === \u548c !== \u800c\u4e0d\u662f == \u548c != . 15.2 \u6761\u4ef6\u8868\u8fbe\u5f0f\u4f8b\u5982 if \u8bed\u53e5\u901a\u8fc7\u62bd\u8c61\u65b9\u6cd5 ToBoolean \u5f3a\u5236\u8ba1\u7b97\u5b83\u4eec\u7684\u8868\u8fbe\u5f0f\u5e76\u4e14\u603b\u662f\u9075\u5b88\u4e0b\u9762\u7684\u89c4\u5219\uff1a \u5bf9\u8c61 \u88ab\u8ba1\u7b97\u4e3a true Undefined \u88ab\u8ba1\u7b97\u4e3a false Null \u88ab\u8ba1\u7b97\u4e3a false \u5e03\u5c14\u503c \u88ab\u8ba1\u7b97\u4e3a \u5e03\u5c14\u7684\u503c \u6570\u5b57 \u5982\u679c\u662f +0\u3001-0\u3001\u6216 NaN \u88ab\u8ba1\u7b97\u4e3a false , \u5426\u5219\u4e3a true \u5b57\u7b26\u4e32 \u5982\u679c\u662f\u7a7a\u5b57\u7b26\u4e32 '' \u88ab\u8ba1\u7b97\u4e3a false \uff0c\u5426\u5219\u4e3a true if ([ 0 ]) { // true // An array is an object, objects evaluate to true } 15.3 \u4f7f\u7528\u7b80\u5199\u3002 // bad if ( name !== '' ) { // ...stuff... } // good if ( name ) { // ...stuff... } // bad if ( collection . length > 0 ) { // ...stuff... } // good if ( collection . length ) { // ...stuff... } 15.4 \u60f3\u4e86\u89e3\u66f4\u591a\u4fe1\u606f\uff0c\u53c2\u8003 Angus Croll \u7684 Truth Equality and JavaScript \u3002 \u2b06 \u8fd4\u56de\u76ee\u5f55 \u4ee3\u7801\u5757 \u00b6 16.1 \u4f7f\u7528\u5927\u62ec\u53f7\u5305\u88f9\u6240\u6709\u7684\u591a\u884c\u4ee3\u7801\u5757\u3002 // bad if ( test ) return false ; // good if ( test ) return false ; // good if ( test ) { return false ; } // bad function () { return false ; } // good function () { return false ; } 16.2 \u5982\u679c\u901a\u8fc7 if \u548c else \u4f7f\u7528\u591a\u884c\u4ee3\u7801\u5757\uff0c\u628a else \u653e\u5728 if \u4ee3\u7801\u5757\u5173\u95ed\u62ec\u53f7\u7684\u540c\u4e00\u884c\u3002 // bad if ( test ) { thing1 (); thing2 (); } else { thing3 (); } // good if ( test ) { thing1 (); thing2 (); } else { thing3 (); } \u2b06 \u8fd4\u56de\u76ee\u5f55 \u6ce8\u91ca \u00b6 17.1 \u4f7f\u7528 /** ... */ \u4f5c\u4e3a\u591a\u884c\u6ce8\u91ca\u3002\u5305\u542b\u63cf\u8ff0\u3001\u6307\u5b9a\u6240\u6709\u53c2\u6570\u548c\u8fd4\u56de\u503c\u7684\u7c7b\u578b\u548c\u503c\u3002 // bad // make() returns a new element // based on the passed in tag name // // @param {String} tag // @return {Element} element function make ( tag ) { // ...stuff... return element ; } // good /** * make() returns a new element * based on the passed in tag name * * @param {String} tag * @return {Element} element */ function make ( tag ) { // ...stuff... return element ; } 17.2 \u4f7f\u7528 // \u4f5c\u4e3a\u5355\u884c\u6ce8\u91ca\u3002\u5728\u8bc4\u8bba\u5bf9\u8c61\u4e0a\u9762\u53e6\u8d77\u4e00\u884c\u4f7f\u7528\u5355\u884c\u6ce8\u91ca\u3002\u5728\u6ce8\u91ca\u524d\u63d2\u5165\u7a7a\u884c\u3002 // bad const active = true ; // is current tab // good // is current tab const active = true ; // bad function getType () { console . log ( 'fetching type...' ); // set the default type to 'no type' const type = this . _type || 'no type' ; return type ; } // good function getType () { console . log ( 'fetching type...' ); // set the default type to 'no type' const type = this . _type || 'no type' ; return type ; } 17.3 \u7ed9\u6ce8\u91ca\u589e\u52a0 FIXME \u6216 TODO \u7684\u524d\u7f00\u53ef\u4ee5\u5e2e\u52a9\u5176\u4ed6\u5f00\u53d1\u8005\u5feb\u901f\u4e86\u89e3\u8fd9\u662f\u4e00\u4e2a\u9700\u8981\u590d\u67e5\u7684\u95ee\u9898\uff0c\u6216\u662f\u7ed9\u9700\u8981\u5b9e\u73b0\u7684\u529f\u80fd\u63d0\u4f9b\u4e00\u4e2a\u89e3\u51b3\u65b9\u5f0f\u3002\u8fd9\u5c06\u6709\u522b\u4e8e\u5e38\u89c1\u7684\u6ce8\u91ca\uff0c\u56e0\u4e3a\u5b83\u4eec\u662f\u53ef\u64cd\u4f5c\u7684\u3002\u4f7f\u7528 FIXME -- need to figure this out \u6216\u8005 TODO -- need to implement \u3002 17.4 \u4f7f\u7528 // FIXME : \u6807\u6ce8\u95ee\u9898\u3002 class Calculator { constructor () { // FIXME: shouldn't use a global here total = 0 ; } } 17.5 \u4f7f\u7528 // TODO : \u6807\u6ce8\u95ee\u9898\u7684\u89e3\u51b3\u65b9\u5f0f\u3002 class Calculator { constructor () { // TODO: total should be configurable by an options param this . total = 0 ; } } \u2b06 \u8fd4\u56de\u76ee\u5f55 \u7a7a\u767d \u00b6 18.1 \u4f7f\u7528 2 \u4e2a\u7a7a\u683c\u4f5c\u4e3a\u7f29\u8fdb\u3002 // bad function () { \u2219\u2219\u2219\u2219 const name ; } // bad function () { \u2219 const name ; } // good function () { \u2219\u2219 const name ; } 18.2 \u5728\u82b1\u62ec\u53f7\u524d\u653e\u4e00\u4e2a\u7a7a\u683c\u3002 // bad function test (){ console . log ( 'test' ); } // good function test () { console . log ( 'test' ); } // bad dog . set ( 'attr' ,{ age : '1 year' , breed : 'Bernese Mountain Dog' , }); // good dog . set ( 'attr' , { age : '1 year' , breed : 'Bernese Mountain Dog' , }); 18.3 \u5728\u63a7\u5236\u8bed\u53e5\uff08 if \u3001 while \u7b49\uff09\u7684\u5c0f\u62ec\u53f7\u524d\u653e\u4e00\u4e2a\u7a7a\u683c\u3002\u5728\u51fd\u6570\u8c03\u7528\u53ca\u58f0\u660e\u4e2d\uff0c\u4e0d\u5728\u51fd\u6570\u7684\u53c2\u6570\u5217\u8868\u524d\u52a0\u7a7a\u683c\u3002 // bad if ( isJedi ) { fight (); } // good if ( isJedi ) { fight (); } // bad function fight () { console . log ( 'Swooosh!' ); } // good function fight () { console . log ( 'Swooosh!' ); } 18.4 \u4f7f\u7528\u7a7a\u683c\u628a\u8fd0\u7b97\u7b26\u9694\u5f00\u3002 // bad const x = y + 5 ; // good const x = y + 5 ; 18.5 \u5728\u6587\u4ef6\u672b\u5c3e\u63d2\u5165\u4e00\u4e2a\u7a7a\u884c\u3002 // bad ( function ( global ) { // ...stuff... })( this ); // bad ( function ( global ) { // ...stuff... })( this ); \u21b5 \u21b5 // good ( function ( global ) { // ...stuff... })( this ); \u21b5 18.5 \u5728\u4f7f\u7528\u957f\u65b9\u6cd5\u94fe\u65f6\u8fdb\u884c\u7f29\u8fdb\u3002\u4f7f\u7528\u524d\u9762\u7684\u70b9 . \u5f3a\u8c03\u8fd9\u662f\u65b9\u6cd5\u8c03\u7528\u800c\u4e0d\u662f\u65b0\u8bed\u53e5\u3002 // bad $ ( '#items' ). find ( '.selected' ). highlight (). end (). find ( '.open' ). updateCount (); // bad $ ( '#items' ). find ( '.selected' ). highlight (). end (). find ( '.open' ). updateCount (); // good $ ( '#items' ) . find ( '.selected' ) . highlight () . end () . find ( '.open' ) . updateCount (); // bad const leds = stage . selectAll ( '.led' ). data ( data ). enter (). append ( 'svg:svg' ). class ( 'led' , true ) . attr ( 'width' , ( radius + margin ) * 2 ). append ( 'svg:g' ) . attr ( 'transform' , 'translate(' + ( radius + margin ) + ',' + ( radius + margin ) + ')' ) . call ( tron . led ); // good const leds = stage . selectAll ( '.led' ) . data ( data ) . enter (). append ( 'svg:svg' ) . classed ( 'led' , true ) . attr ( 'width' , ( radius + margin ) * 2 ) . append ( 'svg:g' ) . attr ( 'transform' , 'translate(' + ( radius + margin ) + ',' + ( radius + margin ) + ')' ) . call ( tron . led ); 18.6 \u5728\u5757\u672b\u548c\u65b0\u8bed\u53e5\u524d\u63d2\u5165\u7a7a\u884c\u3002 // bad if ( foo ) { return bar ; } return baz ; // good if ( foo ) { return bar ; } return baz ; // bad const obj = { foo () { }, bar () { }, }; return obj ; // good const obj = { foo () { }, bar () { }, }; return obj ; \u2b06 \u8fd4\u56de\u76ee\u5f55 \u9017\u53f7 \u00b6 19.1 \u884c\u9996\u9017\u53f7\uff1a \u4e0d\u9700\u8981 \u3002 // bad const story = [ once , upon , aTime ]; // good const story = [ once , upon , aTime , ]; // bad const hero = { firstName : 'Ada' , lastName : 'Lovelace' , birthYear : 1815 , superPower : 'computers' }; // good const hero = { firstName : 'Ada' , lastName : 'Lovelace' , birthYear : 1815 , superPower : 'computers' , }; 19.2 \u589e\u52a0\u7ed3\u5c3e\u7684\u9017\u53f7: \u9700\u8981 \u3002 \u4e3a\u4ec0\u4e48? \u8fd9\u4f1a\u8ba9 git diffs \u66f4\u5e72\u51c0\u3002\u53e6\u5916\uff0c\u50cf babel \u8fd9\u6837\u7684\u8f6c\u8bd1\u5668\u4f1a\u79fb\u9664\u7ed3\u5c3e\u591a\u4f59\u7684\u9017\u53f7\uff0c\u4e5f\u5c31\u662f\u8bf4\u4f60\u4e0d\u5fc5\u62c5\u5fc3\u8001\u65e7\u6d4f\u89c8\u5668\u7684 \u5c3e\u9017\u53f7\u95ee\u9898 \u3002 // bad - git diff without trailing comma const hero = { firstName : 'Florence' , - lastName : 'Nightingale' + lastName : 'Nightingale' , + inventorOf : [ 'coxcomb graph' , 'modern nursing' ] } // good - git diff with trailing comma const hero = { firstName : 'Florence' , lastName : 'Nightingale' , + inventorOf : [ 'coxcomb chart' , 'modern nursing' ], } // bad const hero = { firstName : 'Dana' , lastName : 'Scully' }; const heroes = [ 'Batman' , 'Superman' ]; // good const hero = { firstName : 'Dana' , lastName : 'Scully' , }; const heroes = [ 'Batman' , 'Superman' , ]; \u2b06 \u8fd4\u56de\u76ee\u5f55 \u5206\u53f7 \u00b6 20.1 \u4f7f\u7528\u5206\u53f7 // bad ( function () { const name = 'Skywalker' return name })() // good (() => { const name = 'Skywalker' ; return name ; })(); // good (\u9632\u6b62\u51fd\u6570\u5728\u4e24\u4e2a IIFE \u5408\u5e76\u65f6\u88ab\u5f53\u6210\u4e00\u4e2a\u53c2\u6570) ;(() => { const name = 'Skywalker' ; return name ; })(); Read more . \u2b06 \u8fd4\u56de\u76ee\u5f55 \u7c7b\u578b\u8f6c\u6362 \u00b6 21.1 \u5728\u8bed\u53e5\u5f00\u59cb\u65f6\u6267\u884c\u7c7b\u578b\u8f6c\u6362\u3002 21.2 \u5b57\u7b26\u4e32\uff1a // => this.reviewScore = 9; // bad const totalScore = this . reviewScore + '' ; // good const totalScore = String ( this . reviewScore ); 21.3 \u5bf9\u6570\u5b57\u4f7f\u7528 parseInt \u8f6c\u6362\uff0c\u5e76\u5e26\u4e0a\u7c7b\u578b\u8f6c\u6362\u7684\u57fa\u6570\u3002 const inputValue = '4' ; // bad const val = new Number ( inputValue ); // bad const val = + inputValue ; // bad const val = inputValue >> 0 ; // bad const val = parseInt ( inputValue ); // good const val = Number ( inputValue ); // good const val = parseInt ( inputValue , 10 ); 21.4 \u5982\u679c\u56e0\u4e3a\u67d0\u4e9b\u539f\u56e0 parseInt \u6210\u4e3a\u4f60\u6240\u505a\u7684\u4e8b\u7684\u74f6\u9888\u800c\u9700\u8981\u4f7f\u7528\u4f4d\u64cd\u4f5c\u89e3\u51b3 \u6027\u80fd\u95ee\u9898 \u65f6\uff0c\u7559\u4e2a\u6ce8\u91ca\u8bf4\u6e05\u695a\u539f\u56e0\u548c\u4f60\u7684\u76ee\u7684\u3002 // good /** * \u4f7f\u7528 parseInt \u5bfc\u81f4\u6211\u7684\u7a0b\u5e8f\u53d8\u6162\uff0c * \u6539\u6210\u4f7f\u7528\u4f4d\u64cd\u4f5c\u8f6c\u6362\u6570\u5b57\u5feb\u591a\u4e86\u3002 */ const val = inputValue >> 0 ; 21.5 \u6ce8: \u5c0f\u5fc3\u4f7f\u7528\u4f4d\u64cd\u4f5c\u8fd0\u7b97\u7b26\u3002\u6570\u5b57\u4f1a\u88ab\u5f53\u6210 64 \u4f4d\u503c \uff0c\u4f46\u662f\u4f4d\u64cd\u4f5c\u8fd0\u7b97\u7b26\u603b\u662f\u8fd4\u56de 32 \u4f4d\u7684\u6574\u6570\uff08 \u53c2\u8003 \uff09\u3002\u4f4d\u64cd\u4f5c\u5904\u7406\u5927\u4e8e 32 \u4f4d\u7684\u6574\u6570\u503c\u65f6\u8fd8\u4f1a\u5bfc\u81f4\u610f\u6599\u4e4b\u5916\u7684\u884c\u4e3a\u3002 \u5173\u4e8e\u8fd9\u4e2a\u95ee\u9898\u7684\u8ba8\u8bba \u3002\u6700\u5927\u7684 32 \u4f4d\u6574\u6570\u662f 2,147,483,647\uff1a 2147483647 >> 0 //=> 2147483647 2147483648 >> 0 //=> -2147483648 2147483649 >> 0 //=> -2147483647 21.6 \u5e03\u5c14: const age = 0 ; // bad const hasAge = new Boolean ( age ); // good const hasAge = Boolean ( age ); // good const hasAge = !! age ; \u2b06 \u8fd4\u56de\u76ee\u5f55 \u547d\u540d\u89c4\u5219 \u00b6 22.1 \u907f\u514d\u5355\u5b57\u6bcd\u547d\u540d\u3002\u547d\u540d\u5e94\u5177\u5907\u63cf\u8ff0\u6027\u3002 // bad function q () { // ...stuff... } // good function query () { // ..stuff.. } 22.2 \u4f7f\u7528\u9a7c\u5cf0\u5f0f\u547d\u540d\u5bf9\u8c61\u3001\u51fd\u6570\u548c\u5b9e\u4f8b\u3002 // bad const OBJEcttsssss = {}; const this_is_my_object = {}; function c () {} // good const thisIsMyObject = {}; function thisIsMyFunction () {} 22.3 \u4f7f\u7528\u5e15\u65af\u5361\u5f0f\u547d\u540d\u6784\u9020\u51fd\u6570\u6216\u7c7b\u3002 // bad function user ( options ) { this . name = options . name ; } const bad = new user ({ name : 'nope' , }); // good class User { constructor ( options ) { this . name = options . name ; } } const good = new User ({ name : 'yup' , }); 22.4 \u4e0d\u8981\u4f7f\u7528\u4e0b\u5212\u7ebf _ \u7ed3\u5c3e\u6216\u5f00\u5934\u6765\u547d\u540d\u5c5e\u6027\u548c\u65b9\u6cd5\u3002 // bad this . __firstName__ = 'Panda' ; this . firstName_ = 'Panda' ; this . _firstName = 'Panda' ; // good this . firstName = 'Panda' ; 22.5 \u522b\u4fdd\u5b58 this \u7684\u5f15\u7528\u3002\u4f7f\u7528\u7bad\u5934\u51fd\u6570\u6216 Function#bind\u3002 // bad function foo () { const self = this ; return function () { console . log ( self ); }; } // bad function foo () { const that = this ; return function () { console . log ( that ); }; } // good function foo () { return () => { console . log ( this ); }; } 22.6 \u5982\u679c\u4f60\u7684\u6587\u4ef6\u53ea\u8f93\u51fa\u4e00\u4e2a\u7c7b\uff0c\u90a3\u4f60\u7684\u6587\u4ef6\u540d\u5fc5\u987b\u548c\u7c7b\u540d\u5b8c\u5168\u4fdd\u6301\u4e00\u81f4\u3002 // file contents class CheckBox { // ... } export default CheckBox ; // in some other file // bad import CheckBox from './checkBox' ; // bad import CheckBox from './check_box' ; // good import CheckBox from './CheckBox' ; 22.7 \u5f53\u4f60\u5bfc\u51fa\u9ed8\u8ba4\u7684\u51fd\u6570\u65f6\u4f7f\u7528\u9a7c\u5cf0\u5f0f\u547d\u540d\u3002\u4f60\u7684\u6587\u4ef6\u540d\u5fc5\u987b\u548c\u51fd\u6570\u540d\u5b8c\u5168\u4fdd\u6301\u4e00\u81f4\u3002 function makeStyleGuide () { } export default makeStyleGuide ; 22.8 \u5f53\u4f60\u5bfc\u51fa\u5355\u4f8b\u3001\u51fd\u6570\u5e93\u3001\u7a7a\u5bf9\u8c61\u65f6\u4f7f\u7528\u5e15\u65af\u5361\u5f0f\u547d\u540d\u3002 const AirbnbStyleGuide = { es6 : { } }; export default AirbnbStyleGuide ; \u2b06 \u8fd4\u56de\u76ee\u5f55 \u5b58\u53d6\u5668 \u00b6 23.1 \u5c5e\u6027\u7684\u5b58\u53d6\u51fd\u6570\u4e0d\u662f\u5fc5\u987b\u7684\u3002 23.2 \u5982\u679c\u4f60\u9700\u8981\u5b58\u53d6\u51fd\u6570\u65f6\u4f7f\u7528 getVal() \u548c setVal('hello') \u3002 // bad dragon . age (); // good dragon . getAge (); // bad dragon . age ( 25 ); // good dragon . setAge ( 25 ); 23.3 \u5982\u679c\u5c5e\u6027\u662f\u5e03\u5c14\u503c\uff0c\u4f7f\u7528 isVal() \u6216 hasVal() \u3002 // bad if ( ! dragon . age ()) { return false ; } // good if ( ! dragon . hasAge ()) { return false ; } 23.4 \u521b\u5efa get() \u548c set() \u51fd\u6570\u662f\u53ef\u4ee5\u7684\uff0c\u4f46\u8981\u4fdd\u6301\u4e00\u81f4\u3002 class Jedi { constructor ( options = {}) { const lightsaber = options . lightsaber || 'blue' ; this . set ( 'lightsaber' , lightsaber ); } set ( key , val ) { this [ key ] = val ; } get ( key ) { return this [ key ]; } } \u2b06 \u8fd4\u56de\u76ee\u5f55 \u4e8b\u4ef6 \u00b6 24.1 \u5f53\u7ed9\u4e8b\u4ef6\u9644\u52a0\u6570\u636e\u65f6\uff08\u65e0\u8bba\u662f DOM \u4e8b\u4ef6\u8fd8\u662f\u79c1\u6709\u4e8b\u4ef6\uff09\uff0c\u4f20\u5165\u4e00\u4e2a\u54c8\u5e0c\u800c\u4e0d\u662f\u539f\u59cb\u503c\u3002\u8fd9\u6837\u53ef\u4ee5\u8ba9\u540e\u9762\u7684\u8d21\u732e\u8005\u589e\u52a0\u66f4\u591a\u6570\u636e\u5230\u4e8b\u4ef6\u6570\u636e\u800c\u65e0\u9700\u627e\u51fa\u5e76\u66f4\u65b0\u4e8b\u4ef6\u7684\u6bcf\u4e00\u4e2a\u5904\u7406\u5668\u3002\u4f8b\u5982\uff0c\u4e0d\u597d\u7684\u5199\u6cd5\uff1a // bad $ ( this ). trigger ( 'listingUpdated' , listing . id ); ... $ ( this ). on ( 'listingUpdated' , function ( e , listingId ) { // do something with listingId }); \u66f4\u597d\u7684\u5199\u6cd5\uff1a // good $ ( this ). trigger ( 'listingUpdated' , { listingId : listing . id }); ... $ ( this ). on ( 'listingUpdated' , function ( e , data ) { // do something with data.listingId }); \u2b06 \u8fd4\u56de\u76ee\u5f55 jQuery \u00b6 25.1 \u4f7f\u7528 $ \u4f5c\u4e3a\u5b58\u50a8 jQuery \u5bf9\u8c61\u7684\u53d8\u91cf\u540d\u524d\u7f00\u3002 // bad const sidebar = $ ( '.sidebar' ); // good const $sidebar = $ ( '.sidebar' ); 25.2 \u7f13\u5b58 jQuery \u67e5\u8be2\u3002 // bad function setSidebar () { $ ( '.sidebar' ). hide (); // ...stuff... $ ( '.sidebar' ). css ({ 'background-color' : 'pink' }); } // good function setSidebar () { const $sidebar = $ ( '.sidebar' ); $sidebar . hide (); // ...stuff... $sidebar . css ({ 'background-color' : 'pink' }); } 25.3 \u5bf9 DOM \u67e5\u8be2\u4f7f\u7528\u5c42\u53e0 $('.sidebar ul') \u6216 \u7236\u5143\u7d20 > \u5b50\u5143\u7d20 $('.sidebar > ul') \u3002 jsPerf 25.4 \u5bf9\u6709\u4f5c\u7528\u57df\u7684 jQuery \u5bf9\u8c61\u67e5\u8be2\u4f7f\u7528 find \u3002 // bad $ ( 'ul' , '.sidebar' ). hide (); // bad $ ( '.sidebar' ). find ( 'ul' ). hide (); // good $ ( '.sidebar ul' ). hide (); // good $ ( '.sidebar > ul' ). hide (); // good $sidebar . find ( 'ul' ). hide (); \u2b06 \u8fd4\u56de\u76ee\u5f55 ECMAScript 5 \u517c\u5bb9\u6027 \u00b6 26.1 \u53c2\u8003 Kangax \u7684 ES5 \u517c\u5bb9\u6027 \u3002 \u2b06 \u8fd4\u56de\u76ee\u5f55 ECMAScript 6 \u89c4\u8303 \u00b6 27.1 \u4ee5\u4e0b\u662f\u94fe\u63a5\u5230 ES6 \u5404\u4e2a\u7279\u6027\u7684\u5217\u8868\u3002 \u7bad\u5934\u51fd\u6570 \u7c7b \u5bf9\u8c61\u65b9\u6cd5\u7b80\u5199 \u5bf9\u8c61\u5c5e\u6027\u7b80\u5199 \u5bf9\u8c61\u4e2d\u7684\u53ef\u8ba1\u7b97\u5c5e\u6027 \u6a21\u677f\u5b57\u7b26\u4e32 \u89e3\u6784 \u9ed8\u8ba4\u53c2\u6570 Rest \u6570\u7ec4 Spreads Let \u53ca Const \u8fed\u4ee3\u5668\u548c\u751f\u6210\u5668 \u6a21\u5757 \u2b06 \u8fd4\u56de\u76ee\u5f55 \u6d4b\u8bd5 \u00b6 28.1 Yup. function () { return true ; } \u2b06 \u8fd4\u56de\u76ee\u5f55 \u6027\u80fd \u00b6 On Layout & Web Performance String vs Array Concat Try/Catch Cost In a Loop Bang Function jQuery Find vs Context, Selector innerHTML vs textContent for script text Long String Concatenation Are Javascript functions like map() , reduce() , and filter() optimized for traversing arrays? \u7b49\u7b49... \u2b06 \u8fd4\u56de\u76ee\u5f55 \u76f8\u5173\u8d44\u6e90\uff08\u82f1\u6587\uff09 \u00b6 \u4e86\u89e3 ES6 ECMA 2015 (ES6) \u89c4\u8303\u8349\u6848 ExploringJS ES6 \u517c\u5bb9\u6027\u8868 ES6 \u7279\u6027\u5168\u9762\u6982\u51b5 \u770b\u770b\u8fd9\u4e2a Annotated ECMAScript 5.1 \u5de5\u5177 \u4ee3\u7801\u98ce\u683c\u68c0\u67e5\u5668\uff08Lint\uff09 ESlint - Airbnb Style .eslintrc JSHint - Airbnb Style .jshintrc JSCS - Airbnb Style Preset \u5176\u4ed6\u98ce\u683c\u6307\u5357 Google JavaScript Style Guide jQuery Core Style Guidelines Principles of Writing Consistent, Idiomatic JavaScript \u5176\u4ed6\u98ce\u683c Naming this in nested functions - Christian Johansen Conditional Callbacks - Ross Allen Popular JavaScript Coding Conventions on Github - JeongHoon Byun Multiple var statements in JavaScript, not superfluous - Ben Alman \u62d3\u5c55\u9605\u8bfb Understanding JavaScript Closures - Angus Croll Basic JavaScript for the impatient programmer - Dr. Axel Rauschmayer You Might Not Need jQuery - Zack Bloom & Adam Schwartz ES6 Features - Luke Hoban Frontend Guidelines - Benjamin De Cock \u4e66\u7c4d JavaScript: The Good Parts - Douglas Crockford JavaScript Patterns - Stoyan Stefanov Pro JavaScript Design Patterns - Ross Harmes and Dustin Diaz High Performance Web Sites: Essential Knowledge for Front-End Engineers - Steve Souders Maintainable JavaScript - Nicholas C. Zakas JavaScript Web Applications - Alex MacCaw Pro JavaScript Techniques - John Resig Smashing Node.js: JavaScript Everywhere - Guillermo Rauch Secrets of the JavaScript Ninja - John Resig and Bear Bibeault Human JavaScript - Henrik Joreteg Superhero.js - Kim Joar Bekkelund, Mads Mob\u00e6k, & Olav Bjorkoy JSBooks - Julien Bouquillon Third Party JavaScript - Ben Vinegar and Anton Kovalyov Effective JavaScript: 68 Specific Ways to Harness the Power of JavaScript - David Herman Eloquent JavaScript - Marijn Haverbeke \u535a\u5ba2 DailyJS JavaScript Weekly JavaScript, JavaScript... Bocoup Weblog Adequately Good NCZOnline Perfection Kills Ben Alman Dmitry Baranovskiy Dustin Diaz nettuts \u64ad\u5ba2 JavaScript Jabber \u2b06 \u8fd4\u56de\u76ee\u5f55 \u4f7f\u7528\u60c5\u51b5 \u00b6 \u4e0b\u5217\u7ec4\u7ec7\u5e94\u7528\u8fd9\u4efd\u98ce\u683c\u6307\u5357\u3002 3blades : 3Blades/javascript 4Catalyzer : 4Catalyzer/javascript Aan Zee : AanZee/javascript Adult Swim : adult-swim/javascript Airbnb : airbnb/javascript AltSchool : AltSchool/javascript Apartmint : apartmint/javascript Ascribe : ascribe/javascript Avalara : avalara/javascript Avant : avantcredit/javascript Axept : axept/javascript BashPros : BashPros/javascript Billabong : billabong/javascript Bisk : bisk/javascript Bonhomme : bonhommeparis/javascript Brainshark : brainshark/javascript CaseNine : CaseNine/javascript Chartboost : ChartBoost/javascript-style-guide ComparaOnline : comparaonline/javascript Compass Learning : compasslearning/javascript-style-guide DailyMotion : dailymotion/javascript DoSomething : DoSomething/eslint-config Digitpaint digitpaint/javascript Ecosia : ecosia/javascript Evernote : evernote/javascript-style-guide Evolution Gaming : evolution-gaming/javascript EvozonJs : evozonjs/javascript ExactTarget : ExactTarget/javascript Expensify Expensify/Style-Guide Flexberry : Flexberry/javascript-style-guide Gawker Media : gawkermedia/javascript General Electric : GeneralElectric/javascript Generation Tux : GenerationTux/javascript GoodData : gooddata/gdc-js-style Grooveshark : grooveshark/javascript Honey : honeyscience/javascript How About We : howaboutwe/javascript Huballin : huballin/javascript HubSpot : HubSpot/javascript Hyper : hyperoslo/javascript-playbook InterCity Group : intercitygroup/javascript-style-guide Jam3 : Jam3/Javascript-Code-Conventions JeopardyBot : kesne/jeopardy-bot JSSolutions : JSSolutions/javascript KickorStick : kickorstick/javascript Kinetica Solutions : kinetica/javascript Lonely Planet : lonelyplanet/javascript M2GEN : M2GEN/javascript Mighty Spring : mightyspring/javascript MinnPost : MinnPost/javascript MitocGroup : MitocGroup/javascript ModCloth : modcloth/javascript Money Advice Service : moneyadviceservice/javascript Muber : muber/javascript National Geographic : natgeo/javascript Nimbl3 : nimbl3/javascript Nulogy : nulogy/javascript Orange Hill Development : orangehill/javascript Orion Health : orionhealth/javascript OutBoxSoft : OutBoxSoft/javascript Peerby : Peerby/javascript Razorfish : razorfish/javascript-style-guide reddit : reddit/styleguide/javascript React : facebook.github.io/react/contributing/how-to-contribute.html#style-guide REI : reidev/js-style-guide Ripple : ripple/javascript-style-guide SeekingAlpha : seekingalpha/javascript-style-guide Shutterfly : shutterfly/javascript Sourcetoad : sourcetoad/javascript Springload : springload/javascript StratoDem Analytics : stratodem/javascript SteelKiwi Development : steelkiwi/javascript StudentSphere : studentsphere/javascript SwoopApp : swoopapp/javascript SysGarage : sysgarage/javascript-style-guide Syzygy Warsaw : syzygypl/javascript Target : target/javascript TheLadders : TheLadders/javascript The Nerdery : thenerdery/javascript-standards T4R Technology : T4R-Technology/javascript VoxFeed : VoxFeed/javascript-style-guide WeBox Studio : weboxstudio/javascript Weggo : Weggo/javascript Zillow : zillow/javascript ZocDoc : ZocDoc/javascript \u2b06 \u8fd4\u56de\u76ee\u5f55 \u7ffb\u8bd1 \u00b6 \u8fd9\u4efd\u98ce\u683c\u6307\u5357\u4e5f\u6709\u5176\u4ed6\u8bed\u8a00\u7684\u8bd1\u672c\uff1a Brazilian Portuguese : armoucar/javascript-style-guide Bulgarian : borislavvv/javascript Catalan : fpmweb/javascript-style-guide Chinese(Traditional) : jigsawye/javascript Chinese(Simplified) : yuche/javascript French : nmussy/javascript-style-guide German : timofurrer/javascript-style-guide Italian : sinkswim/javascript-style-guide Japanese : mitsuruog/javacript-style-guide Korean : tipjs/javascript-style-guide Polish : mjurczyk/javascript Russian : uprock/javascript Spanish : paolocarrasco/javascript-style-guide Thai : lvarayut/javascript-style-guide JavaScript \u7f16\u7801\u89c4\u8303\u8bf4\u660e \u00b6 Reference \u8ba8\u8bba JavaScript \u00b6 \u6b22\u8fce\u5230 gitter \u4e0e\u6211\u4eec\u804a\u5929\uff08\u82f1\u6587\uff09\u3002 \u8d21\u732e\u8005 \u00b6 \u67e5\u770b\u539f\u59cb\u9879\u76ee\u8d21\u732e\u8005 \u67e5\u770b\u7b80\u4e2d\u7ffb\u8bd1\u8d21\u732e\u8005 \u8bb8\u53ef\u534f\u8bae \u00b6 (The MIT License) Copyright \u00a9 2014 Airbnb Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the 'Software'), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. \u2b06 \u8fd4\u56de\u76ee\u5f55 \u4fee\u8ba2 \u00b6 \u6211\u4eec\u9f13\u52b1\u60a8\u6d3e\u751f\u672c\u6307\u5357\u548c\u66f4\u6539\u89c4\u5219\u4ee5\u9002\u5e94\u60a8\u7684\u56e2\u961f\u9700\u6c42\u3002\u60a8\u53ef\u4ee5\u5728\u4e0b\u65b9\u5217\u51fa\u5bf9\u672c\u98ce\u683c\u6307\u5357\u7684\u4fee\u6539\uff0c\u4ee5\u4fbf\u5b9a\u671f\u66f4\u65b0\u672c\u6307\u5357\u800c\u65e0\u9700\u5904\u7406\u5408\u5e76\u51b2\u7a81\u3002 }; \u00b6","title":"\u963f\u91ccjs\u6837\u5f0f\u89c4\u8303"},{"location":"web/ali_js_style/#airbnb-javascript-style-guide","text":"\u7528\u66f4\u5408\u7406\u7684\u65b9\u5f0f\u5199 JavaScript ES5 \u7684\u7f16\u7801\u89c4\u8303\u8bf7\u67e5\u770b \u7248\u672c\u4e00 \uff0c \u7248\u672c\u4e8c \u3002 \u7ffb\u8bd1\u81ea Airbnb JavaScript Style Guide \u3002","title":"Airbnb JavaScript Style Guide() {"},{"location":"web/ali_js_style/#_1","text":"\u7c7b\u578b \u5f15\u7528 \u5bf9\u8c61 \u6570\u7ec4 \u89e3\u6784 \u5b57\u7b26\u4e32 \u51fd\u6570 \u7bad\u5934\u51fd\u6570 \u6784\u9020\u51fd\u6570 \u6a21\u5757 \u8fed\u4ee3\u5668\u548c\u751f\u6210\u5668 \u5c5e\u6027 \u53d8\u91cf \u63d0\u5347 \u6bd4\u8f83\u8fd0\u7b97\u7b26\u548c\u7b49\u53f7 \u4ee3\u7801\u5757 \u6ce8\u91ca \u7a7a\u767d \u9017\u53f7 \u5206\u53f7 \u7c7b\u578b\u8f6c\u6362 \u547d\u540d\u89c4\u5219 \u5b58\u53d6\u5668 \u4e8b\u4ef6 jQuery ECMAScript 5 \u517c\u5bb9\u6027 ECMAScript 6 \u7f16\u7801\u89c4\u8303 \u6d4b\u8bd5 \u6027\u80fd \u76f8\u5173\u8d44\u6e90 \u4f7f\u7528\u60c5\u51b5 \u5176\u4ed6\u7ffb\u8bd1 JavaScript \u7f16\u7801\u89c4\u8303\u8bf4\u660e \u8ba8\u8bba JavaScript \u8d21\u732e\u8005 \u8bb8\u53ef\u534f\u8bae","title":"\u76ee\u5f55"},{"location":"web/ali_js_style/#_2","text":"1.1 \u57fa\u672c\u7c7b\u578b : \u76f4\u63a5\u5b58\u53d6\u57fa\u672c\u7c7b\u578b\u3002 \u5b57\u7b26\u4e32 \u6570\u503c \u5e03\u5c14\u7c7b\u578b null undefined const foo = 1 ; let bar = foo ; bar = 9 ; console . log ( foo , bar ); // => 1, 9 1.2 \u590d\u6742\u7c7b\u578b : \u901a\u8fc7\u5f15\u7528\u7684\u65b9\u5f0f\u5b58\u53d6\u590d\u6742\u7c7b\u578b\u3002 \u5bf9\u8c61 \u6570\u7ec4 \u51fd\u6570 const foo = [ 1 , 2 ]; const bar = foo ; bar [ 0 ] = 9 ; console . log ( foo [ 0 ], bar [ 0 ]); // => 9, 9 \u2b06 \u8fd4\u56de\u76ee\u5f55","title":"\u7c7b\u578b"},{"location":"web/ali_js_style/#_3","text":"2.1 \u5bf9\u6240\u6709\u7684\u5f15\u7528\u4f7f\u7528 const \uff1b\u4e0d\u8981\u4f7f\u7528 var \u3002 \u4e3a\u4ec0\u4e48\uff1f\u8fd9\u80fd\u786e\u4fdd\u4f60\u65e0\u6cd5\u5bf9\u5f15\u7528\u91cd\u65b0\u8d4b\u503c\uff0c\u4e5f\u4e0d\u4f1a\u5bfc\u81f4\u51fa\u73b0 bug \u6216\u96be\u4ee5\u7406\u89e3\u3002 // bad var a = 1 ; var b = 2 ; // good const a = 1 ; const b = 2 ; 2.2 \u5982\u679c\u4f60\u4e00\u5b9a\u9700\u8981\u53ef\u53d8\u52a8\u7684\u5f15\u7528\uff0c\u4f7f\u7528 let \u4ee3\u66ff var \u3002 \u4e3a\u4ec0\u4e48\uff1f\u56e0\u4e3a let \u662f\u5757\u7ea7\u4f5c\u7528\u57df\uff0c\u800c var \u662f\u51fd\u6570\u4f5c\u7528\u57df\u3002 // bad var count = 1 ; if ( true ) { count += 1 ; } // good, use the let. let count = 1 ; if ( true ) { count += 1 ; } 2.3 \u6ce8\u610f let \u548c const \u90fd\u662f\u5757\u7ea7\u4f5c\u7528\u57df\u3002 // const \u548c let \u53ea\u5b58\u5728\u4e8e\u5b83\u4eec\u88ab\u5b9a\u4e49\u7684\u533a\u5757\u5185\u3002 { let a = 1 ; const b = 1 ; } console . log ( a ); // ReferenceError console . log ( b ); // ReferenceError \u2b06 \u8fd4\u56de\u76ee\u5f55","title":"\u5f15\u7528"},{"location":"web/ali_js_style/#_4","text":"3.1 \u4f7f\u7528\u5b57\u9762\u503c\u521b\u5efa\u5bf9\u8c61\u3002 // bad const item = new Object (); // good const item = {}; 3.2 \u5982\u679c\u4f60\u7684\u4ee3\u7801\u5728\u6d4f\u89c8\u5668\u73af\u5883\u4e0b\u6267\u884c\uff0c\u522b\u4f7f\u7528 \u4fdd\u7559\u5b57 \u4f5c\u4e3a\u952e\u503c\u3002\u8fd9\u6837\u7684\u8bdd\u5728 IE8 \u4e0d\u4f1a\u8fd0\u884c\u3002 \u66f4\u591a\u4fe1\u606f \u3002 \u4f46\u5728 ES6 \u6a21\u5757\u548c\u670d\u52a1\u5668\u7aef\u4e2d\u4f7f\u7528\u6ca1\u6709\u95ee\u9898\u3002 // bad const superman = { default : { clark : 'kent' }, private : true , }; // good const superman = { defaults : { clark : 'kent' }, hidden : true , }; 3.3 \u4f7f\u7528\u540c\u4e49\u8bcd\u66ff\u6362\u9700\u8981\u4f7f\u7528\u7684\u4fdd\u7559\u5b57\u3002 // bad const superman = { class : 'alien' , }; // bad const superman = { klass : 'alien' , }; // good const superman = { type : 'alien' , }; - 3.4 \u521b\u5efa\u6709\u52a8\u6001\u5c5e\u6027\u540d\u7684\u5bf9\u8c61\u65f6\uff0c\u4f7f\u7528\u53ef\u88ab\u8ba1\u7b97\u7684\u5c5e\u6027\u540d\u79f0\u3002 &gt; \u4e3a\u4ec0\u4e48\uff1f\u56e0\u4e3a\u8fd9\u6837\u53ef\u4ee5\u8ba9\u4f60\u5728\u4e00\u4e2a\u5730\u65b9\u5b9a\u4e49\u6240\u6709\u7684\u5bf9\u8c61\u5c5e\u6027\u3002 ```javascript function getKey(k) { return `a key named ${k}`; } // bad const obj = { id: 5, name: 'San Francisco', }; obj[getKey('enabled')] = true; // good const obj = { id: 5, name: 'San Francisco', [getKey('enabled')]: true, }; ``` - 3.5 \u4f7f\u7528\u5bf9\u8c61\u65b9\u6cd5\u7684\u7b80\u5199\u3002 ```javascript // bad const atom = { value: 1, addValue: function (value) { return atom.value + value; }, }; // good const atom = { value: 1, addValue(value) { return atom.value + value; }, }; ``` - 3.6 \u4f7f\u7528\u5bf9\u8c61\u5c5e\u6027\u503c\u7684\u7b80\u5199\u3002 &gt; \u4e3a\u4ec0\u4e48\uff1f\u56e0\u4e3a\u8fd9\u6837\u66f4\u77ed\u66f4\u6709\u63cf\u8ff0\u6027\u3002 ```javascript const lukeSkywalker = 'Luke Skywalker'; // bad const obj = { lukeSkywalker: lukeSkywalker, }; // good const obj = { lukeSkywalker, }; ``` 3.7 \u5728\u5bf9\u8c61\u5c5e\u6027\u58f0\u660e\u524d\u628a\u7b80\u5199\u7684\u5c5e\u6027\u5206\u7ec4\u3002 \u4e3a\u4ec0\u4e48\uff1f\u56e0\u4e3a\u8fd9\u6837\u80fd\u6e05\u695a\u5730\u770b\u51fa\u54ea\u4e9b\u5c5e\u6027\u4f7f\u7528\u4e86\u7b80\u5199\u3002 const anakinSkywalker = 'Anakin Skywalker' ; const lukeSkywalker = 'Luke Skywalker' ; // bad const obj = { episodeOne : 1 , twoJedisWalkIntoACantina : 2 , lukeSkywalker , episodeThree : 3 , mayTheFourth : 4 , anakinSkywalker , }; // good const obj = { lukeSkywalker , anakinSkywalker , episodeOne : 1 , twoJedisWalkIntoACantina : 2 , episodeThree : 3 , mayTheFourth : 4 , }; \u2b06 \u8fd4\u56de\u76ee\u5f55","title":"\u5bf9\u8c61"},{"location":"web/ali_js_style/#_5","text":"4.1 \u4f7f\u7528\u5b57\u9762\u503c\u521b\u5efa\u6570\u7ec4\u3002 // bad const items = new Array (); // good const items = []; 4.2 \u5411\u6570\u7ec4\u6dfb\u52a0\u5143\u7d20\u65f6\u4f7f\u7528 Arrary#push \u66ff\u4ee3\u76f4\u63a5\u8d4b\u503c\u3002 const someStack = []; // bad someStack [ someStack . length ] = 'abracadabra' ; // good someStack . push ( 'abracadabra' ); - 4.3 \u4f7f\u7528\u62d3\u5c55\u8fd0\u7b97\u7b26 ... \u590d\u5236\u6570\u7ec4\u3002 ```javascript // bad const len = items.length; const itemsCopy = []; let i; for (i = 0; i &lt; len; i++) { itemsCopy[i] = items[i]; } // good const itemsCopy = [...items]; ``` 4.4 \u4f7f\u7528 Array#from \u628a\u4e00\u4e2a\u7c7b\u6570\u7ec4\u5bf9\u8c61\u8f6c\u6362\u6210\u6570\u7ec4\u3002 const foo = document . querySelectorAll ( '.foo' ); const nodes = Array . from ( foo ); \u2b06 \u8fd4\u56de\u76ee\u5f55","title":"\u6570\u7ec4"},{"location":"web/ali_js_style/#_6","text":"5.1 \u4f7f\u7528\u89e3\u6784\u5b58\u53d6\u548c\u4f7f\u7528\u591a\u5c5e\u6027\u5bf9\u8c61\u3002 \u4e3a\u4ec0\u4e48\uff1f\u56e0\u4e3a\u89e3\u6784\u80fd\u51cf\u5c11\u4e34\u65f6\u5f15\u7528\u5c5e\u6027\u3002 // bad function getFullName ( user ) { const firstName = user . firstName ; const lastName = user . lastName ; return ` ${ firstName } ${ lastName } ` ; } // good function getFullName ( obj ) { const { firstName , lastName } = obj ; return ` ${ firstName } ${ lastName } ` ; } // best function getFullName ({ firstName , lastName }) { return ` ${ firstName } ${ lastName } ` ; } 5.2 \u5bf9\u6570\u7ec4\u4f7f\u7528\u89e3\u6784\u8d4b\u503c\u3002 const arr = [ 1 , 2 , 3 , 4 ]; // bad const first = arr [ 0 ]; const second = arr [ 1 ]; // good const [ first , second ] = arr ; 5.3 \u9700\u8981\u56de\u4f20\u591a\u4e2a\u503c\u65f6\uff0c\u4f7f\u7528\u5bf9\u8c61\u89e3\u6784\uff0c\u800c\u4e0d\u662f\u6570\u7ec4\u89e3\u6784\u3002 > \u4e3a\u4ec0\u4e48\uff1f\u589e\u52a0\u5c5e\u6027\u6216\u8005\u6539\u53d8\u6392\u5e8f\u4e0d\u4f1a\u6539\u53d8\u8c03\u7528\u65f6\u7684\u4f4d\u7f6e\u3002 // bad function processInput ( input ) { // then a miracle occurs return [ left , right , top , bottom ]; } // \u8c03\u7528\u65f6\u9700\u8981\u8003\u8651\u56de\u8c03\u6570\u636e\u7684\u987a\u5e8f\u3002 const [ left , __ , top ] = processInput ( input ); // good function processInput ( input ) { // then a miracle occurs return { left , right , top , bottom }; } // \u8c03\u7528\u65f6\u53ea\u9009\u62e9\u9700\u8981\u7684\u6570\u636e const { left , right } = processInput ( input ); \u2b06 \u8fd4\u56de\u76ee\u5f55","title":"\u89e3\u6784"},{"location":"web/ali_js_style/#strings","text":"6.1 \u5b57\u7b26\u4e32\u4f7f\u7528\u5355\u5f15\u53f7 '' \u3002 // bad const name = \"Capt. Janeway\" ; // good const name = 'Capt. Janeway' ; 6.2 \u5b57\u7b26\u4e32\u8d85\u8fc7 80 \u4e2a\u5b57\u8282\u5e94\u8be5\u4f7f\u7528\u5b57\u7b26\u4e32\u8fde\u63a5\u53f7\u6362\u884c\u3002 6.3 \u6ce8\uff1a\u8fc7\u5ea6\u4f7f\u7528\u5b57\u4e32\u8fde\u63a5\u7b26\u53f7\u53ef\u80fd\u4f1a\u5bf9\u6027\u80fd\u9020\u6210\u5f71\u54cd\u3002 jsPerf \u548c \u8ba8\u8bba . // bad const errorMessage = 'This is a super long error that was thrown because of Batman. When you stop to think about how Batman had anything to do with this, you would get nowhere fast.' ; // bad const errorMessage = 'This is a super long error that was thrown because \\ of Batman. When you stop to think about how Batman had anything to do \\ with this, you would get nowhere \\ fast.' ; // good const errorMessage = 'This is a super long error that was thrown because ' + 'of Batman. When you stop to think about how Batman had anything to do ' + 'with this, you would get nowhere fast.' ; - 6.4 \u7a0b\u5e8f\u5316\u751f\u6210\u5b57\u7b26\u4e32\u65f6\uff0c\u4f7f\u7528\u6a21\u677f\u5b57\u7b26\u4e32\u4ee3\u66ff\u5b57\u7b26\u4e32\u8fde\u63a5\u3002 &gt; \u4e3a\u4ec0\u4e48\uff1f\u6a21\u677f\u5b57\u7b26\u4e32\u66f4\u4e3a\u7b80\u6d01\uff0c\u66f4\u5177\u53ef\u8bfb\u6027\u3002 ```javascript // bad function sayHi(name) { return 'How are you, ' + name + '?'; } // bad function sayHi(name) { return ['How are you, ', name, '?'].join(); } // good function sayHi(name) { return `How are you, ${name}?`; } ``` \u2b06 \u8fd4\u56de\u76ee\u5f55","title":"Strings"},{"location":"web/ali_js_style/#_7","text":"7.1 \u4f7f\u7528\u51fd\u6570\u58f0\u660e\u4ee3\u66ff\u51fd\u6570\u8868\u8fbe\u5f0f\u3002 \u4e3a\u4ec0\u4e48\uff1f\u56e0\u4e3a\u51fd\u6570\u58f0\u660e\u662f\u53ef\u547d\u540d\u7684\uff0c\u6240\u4ee5\u4ed6\u4eec\u5728\u8c03\u7528\u6808\u4e2d\u66f4\u5bb9\u6613\u88ab\u8bc6\u522b\u3002\u6b64\u5916\uff0c\u51fd\u6570\u58f0\u660e\u4f1a\u628a\u6574\u4e2a\u51fd\u6570\u63d0\u5347\uff08hoisted\uff09\uff0c\u800c\u51fd\u6570\u8868\u8fbe\u5f0f\u53ea\u4f1a\u628a\u51fd\u6570\u7684\u5f15\u7528\u53d8\u91cf\u540d\u63d0\u5347\u3002\u8fd9\u6761\u89c4\u5219\u4f7f\u5f97 \u7bad\u5934\u51fd\u6570 \u53ef\u4ee5\u53d6\u4ee3\u51fd\u6570\u8868\u8fbe\u5f0f\u3002 // bad const foo = function () { }; // good function foo () { } 7.2 \u51fd\u6570\u8868\u8fbe\u5f0f: // \u7acb\u5373\u8c03\u7528\u7684\u51fd\u6570\u8868\u8fbe\u5f0f (IIFE) (() => { console . log ( 'Welcome to the Internet. Please follow me.' ); })(); 7.3 \u6c38\u8fdc\u4e0d\u8981\u5728\u4e00\u4e2a\u975e\u51fd\u6570\u4ee3\u7801\u5757\uff08 if \u3001 while \u7b49\uff09\u4e2d\u58f0\u660e\u4e00\u4e2a\u51fd\u6570\uff0c\u628a\u90a3\u4e2a\u51fd\u6570\u8d4b\u7ed9\u4e00\u4e2a\u53d8\u91cf\u3002\u6d4f\u89c8\u5668\u5141\u8bb8\u4f60\u8fd9\u4e48\u505a\uff0c\u4f46\u5b83\u4eec\u7684\u89e3\u6790\u8868\u73b0\u4e0d\u4e00\u81f4\u3002 7.4 \u6ce8\u610f: ECMA-262 \u628a block \u5b9a\u4e49\u4e3a\u4e00\u7ec4\u8bed\u53e5\u3002\u51fd\u6570\u58f0\u660e\u4e0d\u662f\u8bed\u53e5\u3002 \u9605\u8bfb ECMA-262 \u5173\u4e8e\u8fd9\u4e2a\u95ee\u9898\u7684\u8bf4\u660e \u3002 // bad if ( currentUser ) { function test () { console . log ( 'Nope.' ); } } // good let test ; if ( currentUser ) { test = () => { console . log ( 'Yup.' ); }; } 7.5 \u6c38\u8fdc\u4e0d\u8981\u628a\u53c2\u6570\u547d\u540d\u4e3a arguments \u3002\u8fd9\u5c06\u53d6\u4ee3\u539f\u6765\u51fd\u6570\u4f5c\u7528\u57df\u5185\u7684 arguments \u5bf9\u8c61\u3002 // bad function nope ( name , options , arguments ) { // ...stuff... } // good function yup ( name , options , args ) { // ...stuff... } - 7.6 \u4e0d\u8981\u4f7f\u7528 arguments \u3002\u53ef\u4ee5\u9009\u62e9 rest \u8bed\u6cd5 ... \u66ff\u4ee3\u3002 &gt; \u4e3a\u4ec0\u4e48\uff1f\u4f7f\u7528 `...` \u80fd\u660e\u786e\u4f60\u8981\u4f20\u5165\u7684\u53c2\u6570\u3002\u53e6\u5916 rest \u53c2\u6570\u662f\u4e00\u4e2a\u771f\u6b63\u7684\u6570\u7ec4\uff0c\u800c `arguments` \u662f\u4e00\u4e2a\u7c7b\u6570\u7ec4\u3002 ```javascript // bad function concatenateAll() { const args = Array.prototype.slice.call(arguments); return args.join(''); } // good function concatenateAll(...args) { return args.join(''); } ``` - 7.7 \u76f4\u63a5\u7ed9\u51fd\u6570\u7684\u53c2\u6570\u6307\u5b9a\u9ed8\u8ba4\u503c\uff0c\u4e0d\u8981\u4f7f\u7528\u4e00\u4e2a\u53d8\u5316\u7684\u51fd\u6570\u53c2\u6570\u3002 ```javascript // really bad function handleThings(opts) { // \u4e0d\uff01\u6211\u4eec\u4e0d\u5e94\u8be5\u6539\u53d8\u51fd\u6570\u53c2\u6570\u3002 // \u66f4\u52a0\u7cdf\u7cd5: \u5982\u679c\u53c2\u6570 opts \u662f false \u7684\u8bdd\uff0c\u5b83\u5c31\u4f1a\u88ab\u8bbe\u5b9a\u4e3a\u4e00\u4e2a\u5bf9\u8c61\u3002 // \u4f46\u8fd9\u6837\u7684\u5199\u6cd5\u4f1a\u9020\u6210\u4e00\u4e9b Bugs\u3002 //\uff08\u8bd1\u6ce8\uff1a\u4f8b\u5982\u5f53 opts \u88ab\u8d4b\u503c\u4e3a\u7a7a\u5b57\u7b26\u4e32\uff0copts \u4ecd\u7136\u4f1a\u88ab\u4e0b\u4e00\u884c\u4ee3\u7801\u8bbe\u5b9a\u4e3a\u4e00\u4e2a\u7a7a\u5bf9\u8c61\u3002\uff09 opts = opts || {}; // ... } // still bad function handleThings(opts) { if (opts === void 0) { opts = {}; } // ... } // good function handleThings(opts = {}) { // ... } ``` 7.8 \u76f4\u63a5\u7ed9\u51fd\u6570\u53c2\u6570\u8d4b\u503c\u65f6\u9700\u8981\u907f\u514d\u526f\u4f5c\u7528\u3002 \u4e3a\u4ec0\u4e48\uff1f\u56e0\u4e3a\u8fd9\u6837\u7684\u5199\u6cd5\u8ba9\u4eba\u611f\u5230\u5f88\u56f0\u60d1\u3002 var b = 1 ; // bad function count ( a = b ++ ) { console . log ( a ); } count (); // 1 count (); // 2 count ( 3 ); // 3 count (); // 3 \u2b06 \u8fd4\u56de\u76ee\u5f55","title":"\u51fd\u6570"},{"location":"web/ali_js_style/#_8","text":"8.1 \u5f53\u4f60\u5fc5\u987b\u4f7f\u7528\u51fd\u6570\u8868\u8fbe\u5f0f\uff08\u6216\u4f20\u9012\u4e00\u4e2a\u533f\u540d\u51fd\u6570\uff09\u65f6\uff0c\u4f7f\u7528\u7bad\u5934\u51fd\u6570\u7b26\u53f7\u3002 \u4e3a\u4ec0\u4e48\uff1f\u56e0\u4e3a\u7bad\u5934\u51fd\u6570\u521b\u9020\u4e86\u65b0\u7684\u4e00\u4e2a this \u6267\u884c\u73af\u5883\uff08\u8bd1\u6ce8\uff1a\u53c2\u8003 Arrow functions - JavaScript | MDN \u548c ES6 arrow functions, syntax and lexical scoping \uff09\uff0c\u901a\u5e38\u60c5\u51b5\u4e0b\u90fd\u80fd\u6ee1\u8db3\u4f60\u7684\u9700\u6c42\uff0c\u800c\u4e14\u8fd9\u6837\u7684\u5199\u6cd5\u66f4\u4e3a\u7b80\u6d01\u3002 \u4e3a\u4ec0\u4e48\u4e0d\uff1f\u5982\u679c\u4f60\u6709\u4e00\u4e2a\u76f8\u5f53\u590d\u6742\u7684\u51fd\u6570\uff0c\u4f60\u6216\u8bb8\u53ef\u4ee5\u628a\u903b\u8f91\u90e8\u5206\u8f6c\u79fb\u5230\u4e00\u4e2a\u51fd\u6570\u58f0\u660e\u4e0a\u3002 // bad [ 1 , 2 , 3 ]. map ( function ( x ) { const y = x + 1 ; return x * y ; }); // good [ 1 , 2 , 3 ]. map (( x ) => { const y = x + 1 ; return x * y ; }); 8.2 \u5982\u679c\u4e00\u4e2a\u51fd\u6570\u9002\u5408\u7528\u4e00\u884c\u5199\u51fa\u5e76\u4e14\u53ea\u6709\u4e00\u4e2a\u53c2\u6570\uff0c\u90a3\u5c31\u628a\u82b1\u62ec\u53f7\u3001\u5706\u62ec\u53f7\u548c return \u90fd\u7701\u7565\u6389\u3002\u5982\u679c\u4e0d\u662f\uff0c\u90a3\u5c31\u4e0d\u8981\u7701\u7565\u3002 \u4e3a\u4ec0\u4e48\uff1f\u8bed\u6cd5\u7cd6\u3002\u5728\u94fe\u5f0f\u8c03\u7528\u4e2d\u53ef\u8bfb\u6027\u5f88\u9ad8\u3002 \u4e3a\u4ec0\u4e48\u4e0d\uff1f\u5f53\u4f60\u6253\u7b97\u56de\u4f20\u4e00\u4e2a\u5bf9\u8c61\u7684\u65f6\u5019\u3002 // good [ 1 , 2 , 3 ]. map ( x => x * x ); // good [ 1 , 2 , 3 ]. reduce (( total , n ) => { return total + n ; }, 0 ); \u2b06 \u8fd4\u56de\u76ee\u5f55","title":"\u7bad\u5934\u51fd\u6570"},{"location":"web/ali_js_style/#_9","text":"9.1 \u603b\u662f\u4f7f\u7528 class \u3002\u907f\u514d\u76f4\u63a5\u64cd\u4f5c prototype \u3002 \u4e3a\u4ec0\u4e48? \u56e0\u4e3a class \u8bed\u6cd5\u66f4\u4e3a\u7b80\u6d01\u66f4\u6613\u8bfb\u3002 // bad function Queue ( contents = []) { this . _queue = [... contents ]; } Queue . prototype . pop = function () { const value = this . _queue [ 0 ]; this . _queue . splice ( 0 , 1 ); return value ; } // good class Queue { constructor ( contents = []) { this . _queue = [... contents ]; } pop () { const value = this . _queue [ 0 ]; this . _queue . splice ( 0 , 1 ); return value ; } } 9.2 \u4f7f\u7528 extends \u7ee7\u627f\u3002 \u4e3a\u4ec0\u4e48\uff1f\u56e0\u4e3a extends \u662f\u4e00\u4e2a\u5185\u5efa\u7684\u539f\u578b\u7ee7\u627f\u65b9\u6cd5\u5e76\u4e14\u4e0d\u4f1a\u7834\u574f instanceof \u3002 // bad const inherits = require ( 'inherits' ); function PeekableQueue ( contents ) { Queue . apply ( this , contents ); } inherits ( PeekableQueue , Queue ); PeekableQueue . prototype . peek = function () { return this . _queue [ 0 ]; } // good class PeekableQueue extends Queue { peek () { return this . _queue [ 0 ]; } } 9.3 \u65b9\u6cd5\u53ef\u4ee5\u8fd4\u56de this \u6765\u5e2e\u52a9\u94fe\u5f0f\u8c03\u7528\u3002 // bad Jedi . prototype . jump = function () { this . jumping = true ; return true ; }; Jedi . prototype . setHeight = function ( height ) { this . height = height ; }; const luke = new Jedi (); luke . jump (); // => true luke . setHeight ( 20 ); // => undefined // good class Jedi { jump () { this . jumping = true ; return this ; } setHeight ( height ) { this . height = height ; return this ; } } const luke = new Jedi (); luke . jump () . setHeight ( 20 ); 9.4 \u53ef\u4ee5\u5199\u4e00\u4e2a\u81ea\u5b9a\u4e49\u7684 toString() \u65b9\u6cd5\uff0c\u4f46\u8981\u786e\u4fdd\u5b83\u80fd\u6b63\u5e38\u8fd0\u884c\u5e76\u4e14\u4e0d\u4f1a\u5f15\u8d77\u526f\u4f5c\u7528\u3002 class Jedi { constructor ( options = {}) { this . name = options . name || 'no name' ; } getName () { return this . name ; } toString () { return `Jedi - ${ this . getName () } ` ; } } \u2b06 \u8fd4\u56de\u76ee\u5f55","title":"\u6784\u9020\u5668"},{"location":"web/ali_js_style/#_10","text":"10.1 \u603b\u662f\u4f7f\u7528\u6a21\u7ec4 ( import / export ) \u800c\u4e0d\u662f\u5176\u4ed6\u975e\u6807\u51c6\u6a21\u5757\u7cfb\u7edf\u3002\u4f60\u53ef\u4ee5\u7f16\u8bd1\u4e3a\u4f60\u559c\u6b22\u7684\u6a21\u5757\u7cfb\u7edf\u3002 \u4e3a\u4ec0\u4e48\uff1f\u6a21\u5757\u5c31\u662f\u672a\u6765\uff0c\u8ba9\u6211\u4eec\u5f00\u59cb\u8fc8\u5411\u672a\u6765\u5427\u3002 // bad const AirbnbStyleGuide = require ( './AirbnbStyleGuide' ); module . exports = AirbnbStyleGuide . es6 ; // ok import AirbnbStyleGuide from './AirbnbStyleGuide' ; export default AirbnbStyleGuide . es6 ; // best import { es6 } from './AirbnbStyleGuide' ; export default es6 ; 10.2 \u4e0d\u8981\u4f7f\u7528\u901a\u914d\u7b26 import\u3002 \u4e3a\u4ec0\u4e48\uff1f\u8fd9\u6837\u80fd\u786e\u4fdd\u4f60\u53ea\u6709\u4e00\u4e2a\u9ed8\u8ba4 export\u3002 // bad import * as AirbnbStyleGuide from './AirbnbStyleGuide' ; // good import AirbnbStyleGuide from './AirbnbStyleGuide' ; 10.3 \u4e0d\u8981\u4ece import \u4e2d\u76f4\u63a5 export\u3002 \u4e3a\u4ec0\u4e48\uff1f\u867d\u7136\u4e00\u884c\u4ee3\u7801\u7b80\u6d01\u660e\u4e86\uff0c\u4f46\u8ba9 import \u548c export \u5404\u53f8\u5176\u804c\u8ba9\u4e8b\u60c5\u80fd\u4fdd\u6301\u4e00\u81f4\u3002 // bad // filename es6.js export { es6 as default } from './airbnbStyleGuide' ; // good // filename es6.js import { es6 } from './AirbnbStyleGuide' ; export default es6 ; \u2b06 \u8fd4\u56de\u76ee\u5f55","title":"\u6a21\u5757"},{"location":"web/ali_js_style/#iterators-and-generators","text":"11.1 \u4e0d\u8981\u4f7f\u7528 iterators\u3002\u4f7f\u7528\u9ad8\u9636\u51fd\u6570\u4f8b\u5982 map() \u548c reduce() \u66ff\u4ee3 for-of \u3002 \u4e3a\u4ec0\u4e48\uff1f\u8fd9\u52a0\u5f3a\u4e86\u6211\u4eec\u4e0d\u53d8\u7684\u89c4\u5219\u3002\u5904\u7406\u7eaf\u51fd\u6570\u7684\u56de\u8c03\u503c\u66f4\u6613\u8bfb\uff0c\u8fd9\u6bd4\u5b83\u5e26\u6765\u7684\u526f\u4f5c\u7528\u66f4\u91cd\u8981\u3002 const numbers = [ 1 , 2 , 3 , 4 , 5 ]; // bad let sum = 0 ; for ( let num of numbers ) { sum += num ; } sum === 15 ; // good let sum = 0 ; numbers . forEach (( num ) => sum += num ); sum === 15 ; // best (use the functional force) const sum = numbers . reduce (( total , num ) => total + num , 0 ); sum === 15 ; 11.2 \u73b0\u5728\u8fd8\u4e0d\u8981\u4f7f\u7528 generators\u3002 \u4e3a\u4ec0\u4e48\uff1f\u56e0\u4e3a\u5b83\u4eec\u73b0\u5728\u8fd8\u6ca1\u6cd5\u5f88\u597d\u5730\u7f16\u8bd1\u5230 ES5\u3002 (\u8bd1\u8005\u6ce8\uff1a\u76ee\u524d(2016/03) Chrome \u548c Node.js \u7684\u7a33\u5b9a\u7248\u672c\u90fd\u5df2\u652f\u6301 generators) \u2b06 \u8fd4\u56de\u76ee\u5f55","title":"Iterators and Generators"},{"location":"web/ali_js_style/#_11","text":"12.1 \u4f7f\u7528 . \u6765\u8bbf\u95ee\u5bf9\u8c61\u7684\u5c5e\u6027\u3002 const luke = { jedi : true , age : 28 , }; // bad const isJedi = luke [ 'jedi' ]; // good const isJedi = luke . jedi ; 12.2 \u5f53\u901a\u8fc7\u53d8\u91cf\u8bbf\u95ee\u5c5e\u6027\u65f6\u4f7f\u7528\u4e2d\u62ec\u53f7 [] \u3002 const luke = { jedi : true , age : 28 , }; function getProp ( prop ) { return luke [ prop ]; } const isJedi = getProp ( 'jedi' ); \u2b06 \u8fd4\u56de\u76ee\u5f55","title":"\u5c5e\u6027"},{"location":"web/ali_js_style/#_12","text":"13.1 \u4e00\u76f4\u4f7f\u7528 const \u6765\u58f0\u660e\u53d8\u91cf\uff0c\u5982\u679c\u4e0d\u8fd9\u6837\u505a\u5c31\u4f1a\u4ea7\u751f\u5168\u5c40\u53d8\u91cf\u3002\u6211\u4eec\u9700\u8981\u907f\u514d\u5168\u5c40\u547d\u540d\u7a7a\u95f4\u7684\u6c61\u67d3\u3002 \u5730\u7403\u961f\u957f \u5df2\u7ecf\u8b66\u544a\u8fc7\u6211\u4eec\u4e86\u3002\uff08\u8bd1\u6ce8\uff1a\u5168\u5c40\uff0cglobal \u4ea6\u6709\u5168\u7403\u7684\u610f\u601d\u3002\u5730\u7403\u961f\u957f\u7684\u8d23\u4efb\u662f\u4fdd\u536b\u5730\u7403\u73af\u5883\uff0c\u6240\u4ee5\u4ed6\u8b66\u544a\u6211\u4eec\u4e0d\u8981\u9020\u6210\u300c\u5168\u7403\u300d\u6c61\u67d3\u3002\uff09 // bad superPower = new SuperPower (); // good const superPower = new SuperPower (); 13.2 \u4f7f\u7528 const \u58f0\u660e\u6bcf\u4e00\u4e2a\u53d8\u91cf\u3002 \u4e3a\u4ec0\u4e48\uff1f\u589e\u52a0\u65b0\u53d8\u91cf\u5c06\u53d8\u7684\u66f4\u52a0\u5bb9\u6613\uff0c\u800c\u4e14\u4f60\u6c38\u8fdc\u4e0d\u7528\u518d\u62c5\u5fc3\u8c03\u6362\u9519 ; \u8ddf , \u3002 // bad const items = getItems (), goSportsTeam = true , dragonball = 'z' ; // bad // (compare to above, and try to spot the mistake) const items = getItems (), goSportsTeam = true ; dragonball = 'z' ; // good const items = getItems (); const goSportsTeam = true ; const dragonball = 'z' ; 13.3 \u5c06\u6240\u6709\u7684 const \u548c let \u5206\u7ec4 \u4e3a\u4ec0\u4e48\uff1f\u5f53\u4f60\u9700\u8981\u628a\u5df2\u8d4b\u503c\u53d8\u91cf\u8d4b\u503c\u7ed9\u672a\u8d4b\u503c\u53d8\u91cf\u65f6\u975e\u5e38\u6709\u7528\u3002 // bad let i , len , dragonball , items = getItems (), goSportsTeam = true ; // bad let i ; const items = getItems (); let dragonball ; const goSportsTeam = true ; let len ; // good const goSportsTeam = true ; const items = getItems (); let dragonball ; let i ; let length ; 13.4 \u5728\u4f60\u9700\u8981\u7684\u5730\u65b9\u7ed9\u53d8\u91cf\u8d4b\u503c\uff0c\u4f46\u8bf7\u628a\u5b83\u4eec\u653e\u5728\u4e00\u4e2a\u5408\u7406\u7684\u4f4d\u7f6e\u3002 \u4e3a\u4ec0\u4e48\uff1f let \u548c const \u662f\u5757\u7ea7\u4f5c\u7528\u57df\u800c\u4e0d\u662f\u51fd\u6570\u4f5c\u7528\u57df\u3002 // good function () { test (); console . log ( 'doing stuff..' ); //..other stuff.. const name = getName (); if ( name === 'test' ) { return false ; } return name ; } // bad - unnecessary function call function ( hasName ) { const name = getName (); if ( ! hasName ) { return false ; } this . setFirstName ( name ); return true ; } // good function ( hasName ) { if ( ! hasName ) { return false ; } const name = getName (); this . setFirstName ( name ); return true ; } \u2b06 \u8fd4\u56de\u76ee\u5f55","title":"\u53d8\u91cf"},{"location":"web/ali_js_style/#hoisting","text":"14.1 var \u58f0\u660e\u4f1a\u88ab\u63d0\u5347\u81f3\u8be5\u4f5c\u7528\u57df\u7684\u9876\u90e8\uff0c\u4f46\u5b83\u4eec\u8d4b\u503c\u4e0d\u4f1a\u63d0\u5347\u3002 let \u548c const \u88ab\u8d4b\u4e88\u4e86\u4e00\u79cd\u79f0\u4e3a\u300c \u6682\u65f6\u6027\u6b7b\u533a\uff08Temporal Dead Zones, TDZ\uff09 \u300d\u7684\u6982\u5ff5\u3002\u8fd9\u5bf9\u4e8e\u4e86\u89e3\u4e3a\u4ec0\u4e48 type of \u4e0d\u518d\u5b89\u5168 \u76f8\u5f53\u91cd\u8981\u3002 // \u6211\u4eec\u77e5\u9053\u8fd9\u6837\u8fd0\u884c\u4e0d\u4e86 // \uff08\u5047\u8bbe notDefined \u4e0d\u662f\u5168\u5c40\u53d8\u91cf\uff09 function example () { console . log ( notDefined ); // => throws a ReferenceError } // \u7531\u4e8e\u53d8\u91cf\u63d0\u5347\u7684\u539f\u56e0\uff0c // \u5728\u5f15\u7528\u53d8\u91cf\u540e\u518d\u58f0\u660e\u53d8\u91cf\u662f\u53ef\u4ee5\u8fd0\u884c\u7684\u3002 // \u6ce8\uff1a\u53d8\u91cf\u7684\u8d4b\u503c `true` \u4e0d\u4f1a\u88ab\u63d0\u5347\u3002 function example () { console . log ( declaredButNotAssigned ); // => undefined var declaredButNotAssigned = true ; } // \u7f16\u8bd1\u5668\u4f1a\u628a\u51fd\u6570\u58f0\u660e\u63d0\u5347\u5230\u4f5c\u7528\u57df\u7684\u9876\u5c42\uff0c // \u8fd9\u610f\u5473\u7740\u6211\u4eec\u7684\u4f8b\u5b50\u53ef\u4ee5\u6539\u5199\u6210\u8fd9\u6837\uff1a function example () { let declaredButNotAssigned ; console . log ( declaredButNotAssigned ); // => undefined declaredButNotAssigned = true ; } // \u4f7f\u7528 const \u548c let function example () { console . log ( declaredButNotAssigned ); // => throws a ReferenceError console . log ( typeof declaredButNotAssigned ); // => throws a ReferenceError const declaredButNotAssigned = true ; } 14.2 \u533f\u540d\u51fd\u6570\u8868\u8fbe\u5f0f\u7684\u53d8\u91cf\u540d\u4f1a\u88ab\u63d0\u5347\uff0c\u4f46\u51fd\u6570\u5185\u5bb9\u5e76\u4e0d\u4f1a\u3002 function example () { console . log ( anonymous ); // => undefined anonymous (); // => TypeError anonymous is not a function var anonymous = function () { console . log ( 'anonymous function expression' ); }; } 14.3 \u547d\u540d\u7684\u51fd\u6570\u8868\u8fbe\u5f0f\u7684\u53d8\u91cf\u540d\u4f1a\u88ab\u63d0\u5347\uff0c\u4f46\u51fd\u6570\u540d\u548c\u51fd\u6570\u51fd\u6570\u5185\u5bb9\u5e76\u4e0d\u4f1a\u3002 function example () { console . log ( named ); // => undefined named (); // => TypeError named is not a function superPower (); // => ReferenceError superPower is not defined var named = function superPower () { console . log ( 'Flying' ); }; } // the same is true when the function name // is the same as the variable name. function example () { console . log ( named ); // => undefined named (); // => TypeError named is not a function var named = function named () { console . log ( 'named' ); } } 14.4 \u51fd\u6570\u58f0\u660e\u7684\u540d\u79f0\u548c\u51fd\u6570\u4f53\u90fd\u4f1a\u88ab\u63d0\u5347\u3002 function example () { superPower (); // => Flying function superPower () { console . log ( 'Flying' ); } } \u60f3\u4e86\u89e3\u66f4\u591a\u4fe1\u606f\uff0c\u53c2\u8003 Ben Cherry \u7684 JavaScript Scoping & Hoisting \u3002 \u2b06 \u8fd4\u56de\u76ee\u5f55","title":"Hoisting"},{"location":"web/ali_js_style/#_13","text":"15.1 \u4f18\u5148\u4f7f\u7528 === \u548c !== \u800c\u4e0d\u662f == \u548c != . 15.2 \u6761\u4ef6\u8868\u8fbe\u5f0f\u4f8b\u5982 if \u8bed\u53e5\u901a\u8fc7\u62bd\u8c61\u65b9\u6cd5 ToBoolean \u5f3a\u5236\u8ba1\u7b97\u5b83\u4eec\u7684\u8868\u8fbe\u5f0f\u5e76\u4e14\u603b\u662f\u9075\u5b88\u4e0b\u9762\u7684\u89c4\u5219\uff1a \u5bf9\u8c61 \u88ab\u8ba1\u7b97\u4e3a true Undefined \u88ab\u8ba1\u7b97\u4e3a false Null \u88ab\u8ba1\u7b97\u4e3a false \u5e03\u5c14\u503c \u88ab\u8ba1\u7b97\u4e3a \u5e03\u5c14\u7684\u503c \u6570\u5b57 \u5982\u679c\u662f +0\u3001-0\u3001\u6216 NaN \u88ab\u8ba1\u7b97\u4e3a false , \u5426\u5219\u4e3a true \u5b57\u7b26\u4e32 \u5982\u679c\u662f\u7a7a\u5b57\u7b26\u4e32 '' \u88ab\u8ba1\u7b97\u4e3a false \uff0c\u5426\u5219\u4e3a true if ([ 0 ]) { // true // An array is an object, objects evaluate to true } 15.3 \u4f7f\u7528\u7b80\u5199\u3002 // bad if ( name !== '' ) { // ...stuff... } // good if ( name ) { // ...stuff... } // bad if ( collection . length > 0 ) { // ...stuff... } // good if ( collection . length ) { // ...stuff... } 15.4 \u60f3\u4e86\u89e3\u66f4\u591a\u4fe1\u606f\uff0c\u53c2\u8003 Angus Croll \u7684 Truth Equality and JavaScript \u3002 \u2b06 \u8fd4\u56de\u76ee\u5f55","title":"\u6bd4\u8f83\u8fd0\u7b97\u7b26\u548c\u7b49\u53f7"},{"location":"web/ali_js_style/#_14","text":"16.1 \u4f7f\u7528\u5927\u62ec\u53f7\u5305\u88f9\u6240\u6709\u7684\u591a\u884c\u4ee3\u7801\u5757\u3002 // bad if ( test ) return false ; // good if ( test ) return false ; // good if ( test ) { return false ; } // bad function () { return false ; } // good function () { return false ; } 16.2 \u5982\u679c\u901a\u8fc7 if \u548c else \u4f7f\u7528\u591a\u884c\u4ee3\u7801\u5757\uff0c\u628a else \u653e\u5728 if \u4ee3\u7801\u5757\u5173\u95ed\u62ec\u53f7\u7684\u540c\u4e00\u884c\u3002 // bad if ( test ) { thing1 (); thing2 (); } else { thing3 (); } // good if ( test ) { thing1 (); thing2 (); } else { thing3 (); } \u2b06 \u8fd4\u56de\u76ee\u5f55","title":"\u4ee3\u7801\u5757"},{"location":"web/ali_js_style/#_15","text":"17.1 \u4f7f\u7528 /** ... */ \u4f5c\u4e3a\u591a\u884c\u6ce8\u91ca\u3002\u5305\u542b\u63cf\u8ff0\u3001\u6307\u5b9a\u6240\u6709\u53c2\u6570\u548c\u8fd4\u56de\u503c\u7684\u7c7b\u578b\u548c\u503c\u3002 // bad // make() returns a new element // based on the passed in tag name // // @param {String} tag // @return {Element} element function make ( tag ) { // ...stuff... return element ; } // good /** * make() returns a new element * based on the passed in tag name * * @param {String} tag * @return {Element} element */ function make ( tag ) { // ...stuff... return element ; } 17.2 \u4f7f\u7528 // \u4f5c\u4e3a\u5355\u884c\u6ce8\u91ca\u3002\u5728\u8bc4\u8bba\u5bf9\u8c61\u4e0a\u9762\u53e6\u8d77\u4e00\u884c\u4f7f\u7528\u5355\u884c\u6ce8\u91ca\u3002\u5728\u6ce8\u91ca\u524d\u63d2\u5165\u7a7a\u884c\u3002 // bad const active = true ; // is current tab // good // is current tab const active = true ; // bad function getType () { console . log ( 'fetching type...' ); // set the default type to 'no type' const type = this . _type || 'no type' ; return type ; } // good function getType () { console . log ( 'fetching type...' ); // set the default type to 'no type' const type = this . _type || 'no type' ; return type ; } 17.3 \u7ed9\u6ce8\u91ca\u589e\u52a0 FIXME \u6216 TODO \u7684\u524d\u7f00\u53ef\u4ee5\u5e2e\u52a9\u5176\u4ed6\u5f00\u53d1\u8005\u5feb\u901f\u4e86\u89e3\u8fd9\u662f\u4e00\u4e2a\u9700\u8981\u590d\u67e5\u7684\u95ee\u9898\uff0c\u6216\u662f\u7ed9\u9700\u8981\u5b9e\u73b0\u7684\u529f\u80fd\u63d0\u4f9b\u4e00\u4e2a\u89e3\u51b3\u65b9\u5f0f\u3002\u8fd9\u5c06\u6709\u522b\u4e8e\u5e38\u89c1\u7684\u6ce8\u91ca\uff0c\u56e0\u4e3a\u5b83\u4eec\u662f\u53ef\u64cd\u4f5c\u7684\u3002\u4f7f\u7528 FIXME -- need to figure this out \u6216\u8005 TODO -- need to implement \u3002 17.4 \u4f7f\u7528 // FIXME : \u6807\u6ce8\u95ee\u9898\u3002 class Calculator { constructor () { // FIXME: shouldn't use a global here total = 0 ; } } 17.5 \u4f7f\u7528 // TODO : \u6807\u6ce8\u95ee\u9898\u7684\u89e3\u51b3\u65b9\u5f0f\u3002 class Calculator { constructor () { // TODO: total should be configurable by an options param this . total = 0 ; } } \u2b06 \u8fd4\u56de\u76ee\u5f55","title":"\u6ce8\u91ca"},{"location":"web/ali_js_style/#_16","text":"18.1 \u4f7f\u7528 2 \u4e2a\u7a7a\u683c\u4f5c\u4e3a\u7f29\u8fdb\u3002 // bad function () { \u2219\u2219\u2219\u2219 const name ; } // bad function () { \u2219 const name ; } // good function () { \u2219\u2219 const name ; } 18.2 \u5728\u82b1\u62ec\u53f7\u524d\u653e\u4e00\u4e2a\u7a7a\u683c\u3002 // bad function test (){ console . log ( 'test' ); } // good function test () { console . log ( 'test' ); } // bad dog . set ( 'attr' ,{ age : '1 year' , breed : 'Bernese Mountain Dog' , }); // good dog . set ( 'attr' , { age : '1 year' , breed : 'Bernese Mountain Dog' , }); 18.3 \u5728\u63a7\u5236\u8bed\u53e5\uff08 if \u3001 while \u7b49\uff09\u7684\u5c0f\u62ec\u53f7\u524d\u653e\u4e00\u4e2a\u7a7a\u683c\u3002\u5728\u51fd\u6570\u8c03\u7528\u53ca\u58f0\u660e\u4e2d\uff0c\u4e0d\u5728\u51fd\u6570\u7684\u53c2\u6570\u5217\u8868\u524d\u52a0\u7a7a\u683c\u3002 // bad if ( isJedi ) { fight (); } // good if ( isJedi ) { fight (); } // bad function fight () { console . log ( 'Swooosh!' ); } // good function fight () { console . log ( 'Swooosh!' ); } 18.4 \u4f7f\u7528\u7a7a\u683c\u628a\u8fd0\u7b97\u7b26\u9694\u5f00\u3002 // bad const x = y + 5 ; // good const x = y + 5 ; 18.5 \u5728\u6587\u4ef6\u672b\u5c3e\u63d2\u5165\u4e00\u4e2a\u7a7a\u884c\u3002 // bad ( function ( global ) { // ...stuff... })( this ); // bad ( function ( global ) { // ...stuff... })( this ); \u21b5 \u21b5 // good ( function ( global ) { // ...stuff... })( this ); \u21b5 18.5 \u5728\u4f7f\u7528\u957f\u65b9\u6cd5\u94fe\u65f6\u8fdb\u884c\u7f29\u8fdb\u3002\u4f7f\u7528\u524d\u9762\u7684\u70b9 . \u5f3a\u8c03\u8fd9\u662f\u65b9\u6cd5\u8c03\u7528\u800c\u4e0d\u662f\u65b0\u8bed\u53e5\u3002 // bad $ ( '#items' ). find ( '.selected' ). highlight (). end (). find ( '.open' ). updateCount (); // bad $ ( '#items' ). find ( '.selected' ). highlight (). end (). find ( '.open' ). updateCount (); // good $ ( '#items' ) . find ( '.selected' ) . highlight () . end () . find ( '.open' ) . updateCount (); // bad const leds = stage . selectAll ( '.led' ). data ( data ). enter (). append ( 'svg:svg' ). class ( 'led' , true ) . attr ( 'width' , ( radius + margin ) * 2 ). append ( 'svg:g' ) . attr ( 'transform' , 'translate(' + ( radius + margin ) + ',' + ( radius + margin ) + ')' ) . call ( tron . led ); // good const leds = stage . selectAll ( '.led' ) . data ( data ) . enter (). append ( 'svg:svg' ) . classed ( 'led' , true ) . attr ( 'width' , ( radius + margin ) * 2 ) . append ( 'svg:g' ) . attr ( 'transform' , 'translate(' + ( radius + margin ) + ',' + ( radius + margin ) + ')' ) . call ( tron . led ); 18.6 \u5728\u5757\u672b\u548c\u65b0\u8bed\u53e5\u524d\u63d2\u5165\u7a7a\u884c\u3002 // bad if ( foo ) { return bar ; } return baz ; // good if ( foo ) { return bar ; } return baz ; // bad const obj = { foo () { }, bar () { }, }; return obj ; // good const obj = { foo () { }, bar () { }, }; return obj ; \u2b06 \u8fd4\u56de\u76ee\u5f55","title":"\u7a7a\u767d"},{"location":"web/ali_js_style/#_17","text":"19.1 \u884c\u9996\u9017\u53f7\uff1a \u4e0d\u9700\u8981 \u3002 // bad const story = [ once , upon , aTime ]; // good const story = [ once , upon , aTime , ]; // bad const hero = { firstName : 'Ada' , lastName : 'Lovelace' , birthYear : 1815 , superPower : 'computers' }; // good const hero = { firstName : 'Ada' , lastName : 'Lovelace' , birthYear : 1815 , superPower : 'computers' , }; 19.2 \u589e\u52a0\u7ed3\u5c3e\u7684\u9017\u53f7: \u9700\u8981 \u3002 \u4e3a\u4ec0\u4e48? \u8fd9\u4f1a\u8ba9 git diffs \u66f4\u5e72\u51c0\u3002\u53e6\u5916\uff0c\u50cf babel \u8fd9\u6837\u7684\u8f6c\u8bd1\u5668\u4f1a\u79fb\u9664\u7ed3\u5c3e\u591a\u4f59\u7684\u9017\u53f7\uff0c\u4e5f\u5c31\u662f\u8bf4\u4f60\u4e0d\u5fc5\u62c5\u5fc3\u8001\u65e7\u6d4f\u89c8\u5668\u7684 \u5c3e\u9017\u53f7\u95ee\u9898 \u3002 // bad - git diff without trailing comma const hero = { firstName : 'Florence' , - lastName : 'Nightingale' + lastName : 'Nightingale' , + inventorOf : [ 'coxcomb graph' , 'modern nursing' ] } // good - git diff with trailing comma const hero = { firstName : 'Florence' , lastName : 'Nightingale' , + inventorOf : [ 'coxcomb chart' , 'modern nursing' ], } // bad const hero = { firstName : 'Dana' , lastName : 'Scully' }; const heroes = [ 'Batman' , 'Superman' ]; // good const hero = { firstName : 'Dana' , lastName : 'Scully' , }; const heroes = [ 'Batman' , 'Superman' , ]; \u2b06 \u8fd4\u56de\u76ee\u5f55","title":"\u9017\u53f7"},{"location":"web/ali_js_style/#_18","text":"20.1 \u4f7f\u7528\u5206\u53f7 // bad ( function () { const name = 'Skywalker' return name })() // good (() => { const name = 'Skywalker' ; return name ; })(); // good (\u9632\u6b62\u51fd\u6570\u5728\u4e24\u4e2a IIFE \u5408\u5e76\u65f6\u88ab\u5f53\u6210\u4e00\u4e2a\u53c2\u6570) ;(() => { const name = 'Skywalker' ; return name ; })(); Read more . \u2b06 \u8fd4\u56de\u76ee\u5f55","title":"\u5206\u53f7"},{"location":"web/ali_js_style/#_19","text":"21.1 \u5728\u8bed\u53e5\u5f00\u59cb\u65f6\u6267\u884c\u7c7b\u578b\u8f6c\u6362\u3002 21.2 \u5b57\u7b26\u4e32\uff1a // => this.reviewScore = 9; // bad const totalScore = this . reviewScore + '' ; // good const totalScore = String ( this . reviewScore ); 21.3 \u5bf9\u6570\u5b57\u4f7f\u7528 parseInt \u8f6c\u6362\uff0c\u5e76\u5e26\u4e0a\u7c7b\u578b\u8f6c\u6362\u7684\u57fa\u6570\u3002 const inputValue = '4' ; // bad const val = new Number ( inputValue ); // bad const val = + inputValue ; // bad const val = inputValue >> 0 ; // bad const val = parseInt ( inputValue ); // good const val = Number ( inputValue ); // good const val = parseInt ( inputValue , 10 ); 21.4 \u5982\u679c\u56e0\u4e3a\u67d0\u4e9b\u539f\u56e0 parseInt \u6210\u4e3a\u4f60\u6240\u505a\u7684\u4e8b\u7684\u74f6\u9888\u800c\u9700\u8981\u4f7f\u7528\u4f4d\u64cd\u4f5c\u89e3\u51b3 \u6027\u80fd\u95ee\u9898 \u65f6\uff0c\u7559\u4e2a\u6ce8\u91ca\u8bf4\u6e05\u695a\u539f\u56e0\u548c\u4f60\u7684\u76ee\u7684\u3002 // good /** * \u4f7f\u7528 parseInt \u5bfc\u81f4\u6211\u7684\u7a0b\u5e8f\u53d8\u6162\uff0c * \u6539\u6210\u4f7f\u7528\u4f4d\u64cd\u4f5c\u8f6c\u6362\u6570\u5b57\u5feb\u591a\u4e86\u3002 */ const val = inputValue >> 0 ; 21.5 \u6ce8: \u5c0f\u5fc3\u4f7f\u7528\u4f4d\u64cd\u4f5c\u8fd0\u7b97\u7b26\u3002\u6570\u5b57\u4f1a\u88ab\u5f53\u6210 64 \u4f4d\u503c \uff0c\u4f46\u662f\u4f4d\u64cd\u4f5c\u8fd0\u7b97\u7b26\u603b\u662f\u8fd4\u56de 32 \u4f4d\u7684\u6574\u6570\uff08 \u53c2\u8003 \uff09\u3002\u4f4d\u64cd\u4f5c\u5904\u7406\u5927\u4e8e 32 \u4f4d\u7684\u6574\u6570\u503c\u65f6\u8fd8\u4f1a\u5bfc\u81f4\u610f\u6599\u4e4b\u5916\u7684\u884c\u4e3a\u3002 \u5173\u4e8e\u8fd9\u4e2a\u95ee\u9898\u7684\u8ba8\u8bba \u3002\u6700\u5927\u7684 32 \u4f4d\u6574\u6570\u662f 2,147,483,647\uff1a 2147483647 >> 0 //=> 2147483647 2147483648 >> 0 //=> -2147483648 2147483649 >> 0 //=> -2147483647 21.6 \u5e03\u5c14: const age = 0 ; // bad const hasAge = new Boolean ( age ); // good const hasAge = Boolean ( age ); // good const hasAge = !! age ; \u2b06 \u8fd4\u56de\u76ee\u5f55","title":"\u7c7b\u578b\u8f6c\u6362"},{"location":"web/ali_js_style/#_20","text":"22.1 \u907f\u514d\u5355\u5b57\u6bcd\u547d\u540d\u3002\u547d\u540d\u5e94\u5177\u5907\u63cf\u8ff0\u6027\u3002 // bad function q () { // ...stuff... } // good function query () { // ..stuff.. } 22.2 \u4f7f\u7528\u9a7c\u5cf0\u5f0f\u547d\u540d\u5bf9\u8c61\u3001\u51fd\u6570\u548c\u5b9e\u4f8b\u3002 // bad const OBJEcttsssss = {}; const this_is_my_object = {}; function c () {} // good const thisIsMyObject = {}; function thisIsMyFunction () {} 22.3 \u4f7f\u7528\u5e15\u65af\u5361\u5f0f\u547d\u540d\u6784\u9020\u51fd\u6570\u6216\u7c7b\u3002 // bad function user ( options ) { this . name = options . name ; } const bad = new user ({ name : 'nope' , }); // good class User { constructor ( options ) { this . name = options . name ; } } const good = new User ({ name : 'yup' , }); 22.4 \u4e0d\u8981\u4f7f\u7528\u4e0b\u5212\u7ebf _ \u7ed3\u5c3e\u6216\u5f00\u5934\u6765\u547d\u540d\u5c5e\u6027\u548c\u65b9\u6cd5\u3002 // bad this . __firstName__ = 'Panda' ; this . firstName_ = 'Panda' ; this . _firstName = 'Panda' ; // good this . firstName = 'Panda' ; 22.5 \u522b\u4fdd\u5b58 this \u7684\u5f15\u7528\u3002\u4f7f\u7528\u7bad\u5934\u51fd\u6570\u6216 Function#bind\u3002 // bad function foo () { const self = this ; return function () { console . log ( self ); }; } // bad function foo () { const that = this ; return function () { console . log ( that ); }; } // good function foo () { return () => { console . log ( this ); }; } 22.6 \u5982\u679c\u4f60\u7684\u6587\u4ef6\u53ea\u8f93\u51fa\u4e00\u4e2a\u7c7b\uff0c\u90a3\u4f60\u7684\u6587\u4ef6\u540d\u5fc5\u987b\u548c\u7c7b\u540d\u5b8c\u5168\u4fdd\u6301\u4e00\u81f4\u3002 // file contents class CheckBox { // ... } export default CheckBox ; // in some other file // bad import CheckBox from './checkBox' ; // bad import CheckBox from './check_box' ; // good import CheckBox from './CheckBox' ; 22.7 \u5f53\u4f60\u5bfc\u51fa\u9ed8\u8ba4\u7684\u51fd\u6570\u65f6\u4f7f\u7528\u9a7c\u5cf0\u5f0f\u547d\u540d\u3002\u4f60\u7684\u6587\u4ef6\u540d\u5fc5\u987b\u548c\u51fd\u6570\u540d\u5b8c\u5168\u4fdd\u6301\u4e00\u81f4\u3002 function makeStyleGuide () { } export default makeStyleGuide ; 22.8 \u5f53\u4f60\u5bfc\u51fa\u5355\u4f8b\u3001\u51fd\u6570\u5e93\u3001\u7a7a\u5bf9\u8c61\u65f6\u4f7f\u7528\u5e15\u65af\u5361\u5f0f\u547d\u540d\u3002 const AirbnbStyleGuide = { es6 : { } }; export default AirbnbStyleGuide ; \u2b06 \u8fd4\u56de\u76ee\u5f55","title":"\u547d\u540d\u89c4\u5219"},{"location":"web/ali_js_style/#_21","text":"23.1 \u5c5e\u6027\u7684\u5b58\u53d6\u51fd\u6570\u4e0d\u662f\u5fc5\u987b\u7684\u3002 23.2 \u5982\u679c\u4f60\u9700\u8981\u5b58\u53d6\u51fd\u6570\u65f6\u4f7f\u7528 getVal() \u548c setVal('hello') \u3002 // bad dragon . age (); // good dragon . getAge (); // bad dragon . age ( 25 ); // good dragon . setAge ( 25 ); 23.3 \u5982\u679c\u5c5e\u6027\u662f\u5e03\u5c14\u503c\uff0c\u4f7f\u7528 isVal() \u6216 hasVal() \u3002 // bad if ( ! dragon . age ()) { return false ; } // good if ( ! dragon . hasAge ()) { return false ; } 23.4 \u521b\u5efa get() \u548c set() \u51fd\u6570\u662f\u53ef\u4ee5\u7684\uff0c\u4f46\u8981\u4fdd\u6301\u4e00\u81f4\u3002 class Jedi { constructor ( options = {}) { const lightsaber = options . lightsaber || 'blue' ; this . set ( 'lightsaber' , lightsaber ); } set ( key , val ) { this [ key ] = val ; } get ( key ) { return this [ key ]; } } \u2b06 \u8fd4\u56de\u76ee\u5f55","title":"\u5b58\u53d6\u5668"},{"location":"web/ali_js_style/#_22","text":"24.1 \u5f53\u7ed9\u4e8b\u4ef6\u9644\u52a0\u6570\u636e\u65f6\uff08\u65e0\u8bba\u662f DOM \u4e8b\u4ef6\u8fd8\u662f\u79c1\u6709\u4e8b\u4ef6\uff09\uff0c\u4f20\u5165\u4e00\u4e2a\u54c8\u5e0c\u800c\u4e0d\u662f\u539f\u59cb\u503c\u3002\u8fd9\u6837\u53ef\u4ee5\u8ba9\u540e\u9762\u7684\u8d21\u732e\u8005\u589e\u52a0\u66f4\u591a\u6570\u636e\u5230\u4e8b\u4ef6\u6570\u636e\u800c\u65e0\u9700\u627e\u51fa\u5e76\u66f4\u65b0\u4e8b\u4ef6\u7684\u6bcf\u4e00\u4e2a\u5904\u7406\u5668\u3002\u4f8b\u5982\uff0c\u4e0d\u597d\u7684\u5199\u6cd5\uff1a // bad $ ( this ). trigger ( 'listingUpdated' , listing . id ); ... $ ( this ). on ( 'listingUpdated' , function ( e , listingId ) { // do something with listingId }); \u66f4\u597d\u7684\u5199\u6cd5\uff1a // good $ ( this ). trigger ( 'listingUpdated' , { listingId : listing . id }); ... $ ( this ). on ( 'listingUpdated' , function ( e , data ) { // do something with data.listingId }); \u2b06 \u8fd4\u56de\u76ee\u5f55","title":"\u4e8b\u4ef6"},{"location":"web/ali_js_style/#jquery","text":"25.1 \u4f7f\u7528 $ \u4f5c\u4e3a\u5b58\u50a8 jQuery \u5bf9\u8c61\u7684\u53d8\u91cf\u540d\u524d\u7f00\u3002 // bad const sidebar = $ ( '.sidebar' ); // good const $sidebar = $ ( '.sidebar' ); 25.2 \u7f13\u5b58 jQuery \u67e5\u8be2\u3002 // bad function setSidebar () { $ ( '.sidebar' ). hide (); // ...stuff... $ ( '.sidebar' ). css ({ 'background-color' : 'pink' }); } // good function setSidebar () { const $sidebar = $ ( '.sidebar' ); $sidebar . hide (); // ...stuff... $sidebar . css ({ 'background-color' : 'pink' }); } 25.3 \u5bf9 DOM \u67e5\u8be2\u4f7f\u7528\u5c42\u53e0 $('.sidebar ul') \u6216 \u7236\u5143\u7d20 > \u5b50\u5143\u7d20 $('.sidebar > ul') \u3002 jsPerf 25.4 \u5bf9\u6709\u4f5c\u7528\u57df\u7684 jQuery \u5bf9\u8c61\u67e5\u8be2\u4f7f\u7528 find \u3002 // bad $ ( 'ul' , '.sidebar' ). hide (); // bad $ ( '.sidebar' ). find ( 'ul' ). hide (); // good $ ( '.sidebar ul' ). hide (); // good $ ( '.sidebar > ul' ). hide (); // good $sidebar . find ( 'ul' ). hide (); \u2b06 \u8fd4\u56de\u76ee\u5f55","title":"jQuery"},{"location":"web/ali_js_style/#ecmascript-5","text":"26.1 \u53c2\u8003 Kangax \u7684 ES5 \u517c\u5bb9\u6027 \u3002 \u2b06 \u8fd4\u56de\u76ee\u5f55","title":"ECMAScript 5 \u517c\u5bb9\u6027"},{"location":"web/ali_js_style/#ecmascript-6","text":"27.1 \u4ee5\u4e0b\u662f\u94fe\u63a5\u5230 ES6 \u5404\u4e2a\u7279\u6027\u7684\u5217\u8868\u3002 \u7bad\u5934\u51fd\u6570 \u7c7b \u5bf9\u8c61\u65b9\u6cd5\u7b80\u5199 \u5bf9\u8c61\u5c5e\u6027\u7b80\u5199 \u5bf9\u8c61\u4e2d\u7684\u53ef\u8ba1\u7b97\u5c5e\u6027 \u6a21\u677f\u5b57\u7b26\u4e32 \u89e3\u6784 \u9ed8\u8ba4\u53c2\u6570 Rest \u6570\u7ec4 Spreads Let \u53ca Const \u8fed\u4ee3\u5668\u548c\u751f\u6210\u5668 \u6a21\u5757 \u2b06 \u8fd4\u56de\u76ee\u5f55","title":"ECMAScript 6 \u89c4\u8303"},{"location":"web/ali_js_style/#_23","text":"28.1 Yup. function () { return true ; } \u2b06 \u8fd4\u56de\u76ee\u5f55","title":"\u6d4b\u8bd5"},{"location":"web/ali_js_style/#_24","text":"On Layout & Web Performance String vs Array Concat Try/Catch Cost In a Loop Bang Function jQuery Find vs Context, Selector innerHTML vs textContent for script text Long String Concatenation Are Javascript functions like map() , reduce() , and filter() optimized for traversing arrays? \u7b49\u7b49... \u2b06 \u8fd4\u56de\u76ee\u5f55","title":"\u6027\u80fd"},{"location":"web/ali_js_style/#_25","text":"\u4e86\u89e3 ES6 ECMA 2015 (ES6) \u89c4\u8303\u8349\u6848 ExploringJS ES6 \u517c\u5bb9\u6027\u8868 ES6 \u7279\u6027\u5168\u9762\u6982\u51b5 \u770b\u770b\u8fd9\u4e2a Annotated ECMAScript 5.1 \u5de5\u5177 \u4ee3\u7801\u98ce\u683c\u68c0\u67e5\u5668\uff08Lint\uff09 ESlint - Airbnb Style .eslintrc JSHint - Airbnb Style .jshintrc JSCS - Airbnb Style Preset \u5176\u4ed6\u98ce\u683c\u6307\u5357 Google JavaScript Style Guide jQuery Core Style Guidelines Principles of Writing Consistent, Idiomatic JavaScript \u5176\u4ed6\u98ce\u683c Naming this in nested functions - Christian Johansen Conditional Callbacks - Ross Allen Popular JavaScript Coding Conventions on Github - JeongHoon Byun Multiple var statements in JavaScript, not superfluous - Ben Alman \u62d3\u5c55\u9605\u8bfb Understanding JavaScript Closures - Angus Croll Basic JavaScript for the impatient programmer - Dr. Axel Rauschmayer You Might Not Need jQuery - Zack Bloom & Adam Schwartz ES6 Features - Luke Hoban Frontend Guidelines - Benjamin De Cock \u4e66\u7c4d JavaScript: The Good Parts - Douglas Crockford JavaScript Patterns - Stoyan Stefanov Pro JavaScript Design Patterns - Ross Harmes and Dustin Diaz High Performance Web Sites: Essential Knowledge for Front-End Engineers - Steve Souders Maintainable JavaScript - Nicholas C. Zakas JavaScript Web Applications - Alex MacCaw Pro JavaScript Techniques - John Resig Smashing Node.js: JavaScript Everywhere - Guillermo Rauch Secrets of the JavaScript Ninja - John Resig and Bear Bibeault Human JavaScript - Henrik Joreteg Superhero.js - Kim Joar Bekkelund, Mads Mob\u00e6k, & Olav Bjorkoy JSBooks - Julien Bouquillon Third Party JavaScript - Ben Vinegar and Anton Kovalyov Effective JavaScript: 68 Specific Ways to Harness the Power of JavaScript - David Herman Eloquent JavaScript - Marijn Haverbeke \u535a\u5ba2 DailyJS JavaScript Weekly JavaScript, JavaScript... Bocoup Weblog Adequately Good NCZOnline Perfection Kills Ben Alman Dmitry Baranovskiy Dustin Diaz nettuts \u64ad\u5ba2 JavaScript Jabber \u2b06 \u8fd4\u56de\u76ee\u5f55","title":"\u76f8\u5173\u8d44\u6e90\uff08\u82f1\u6587\uff09"},{"location":"web/ali_js_style/#_26","text":"\u4e0b\u5217\u7ec4\u7ec7\u5e94\u7528\u8fd9\u4efd\u98ce\u683c\u6307\u5357\u3002 3blades : 3Blades/javascript 4Catalyzer : 4Catalyzer/javascript Aan Zee : AanZee/javascript Adult Swim : adult-swim/javascript Airbnb : airbnb/javascript AltSchool : AltSchool/javascript Apartmint : apartmint/javascript Ascribe : ascribe/javascript Avalara : avalara/javascript Avant : avantcredit/javascript Axept : axept/javascript BashPros : BashPros/javascript Billabong : billabong/javascript Bisk : bisk/javascript Bonhomme : bonhommeparis/javascript Brainshark : brainshark/javascript CaseNine : CaseNine/javascript Chartboost : ChartBoost/javascript-style-guide ComparaOnline : comparaonline/javascript Compass Learning : compasslearning/javascript-style-guide DailyMotion : dailymotion/javascript DoSomething : DoSomething/eslint-config Digitpaint digitpaint/javascript Ecosia : ecosia/javascript Evernote : evernote/javascript-style-guide Evolution Gaming : evolution-gaming/javascript EvozonJs : evozonjs/javascript ExactTarget : ExactTarget/javascript Expensify Expensify/Style-Guide Flexberry : Flexberry/javascript-style-guide Gawker Media : gawkermedia/javascript General Electric : GeneralElectric/javascript Generation Tux : GenerationTux/javascript GoodData : gooddata/gdc-js-style Grooveshark : grooveshark/javascript Honey : honeyscience/javascript How About We : howaboutwe/javascript Huballin : huballin/javascript HubSpot : HubSpot/javascript Hyper : hyperoslo/javascript-playbook InterCity Group : intercitygroup/javascript-style-guide Jam3 : Jam3/Javascript-Code-Conventions JeopardyBot : kesne/jeopardy-bot JSSolutions : JSSolutions/javascript KickorStick : kickorstick/javascript Kinetica Solutions : kinetica/javascript Lonely Planet : lonelyplanet/javascript M2GEN : M2GEN/javascript Mighty Spring : mightyspring/javascript MinnPost : MinnPost/javascript MitocGroup : MitocGroup/javascript ModCloth : modcloth/javascript Money Advice Service : moneyadviceservice/javascript Muber : muber/javascript National Geographic : natgeo/javascript Nimbl3 : nimbl3/javascript Nulogy : nulogy/javascript Orange Hill Development : orangehill/javascript Orion Health : orionhealth/javascript OutBoxSoft : OutBoxSoft/javascript Peerby : Peerby/javascript Razorfish : razorfish/javascript-style-guide reddit : reddit/styleguide/javascript React : facebook.github.io/react/contributing/how-to-contribute.html#style-guide REI : reidev/js-style-guide Ripple : ripple/javascript-style-guide SeekingAlpha : seekingalpha/javascript-style-guide Shutterfly : shutterfly/javascript Sourcetoad : sourcetoad/javascript Springload : springload/javascript StratoDem Analytics : stratodem/javascript SteelKiwi Development : steelkiwi/javascript StudentSphere : studentsphere/javascript SwoopApp : swoopapp/javascript SysGarage : sysgarage/javascript-style-guide Syzygy Warsaw : syzygypl/javascript Target : target/javascript TheLadders : TheLadders/javascript The Nerdery : thenerdery/javascript-standards T4R Technology : T4R-Technology/javascript VoxFeed : VoxFeed/javascript-style-guide WeBox Studio : weboxstudio/javascript Weggo : Weggo/javascript Zillow : zillow/javascript ZocDoc : ZocDoc/javascript \u2b06 \u8fd4\u56de\u76ee\u5f55","title":"\u4f7f\u7528\u60c5\u51b5"},{"location":"web/ali_js_style/#_27","text":"\u8fd9\u4efd\u98ce\u683c\u6307\u5357\u4e5f\u6709\u5176\u4ed6\u8bed\u8a00\u7684\u8bd1\u672c\uff1a Brazilian Portuguese : armoucar/javascript-style-guide Bulgarian : borislavvv/javascript Catalan : fpmweb/javascript-style-guide Chinese(Traditional) : jigsawye/javascript Chinese(Simplified) : yuche/javascript French : nmussy/javascript-style-guide German : timofurrer/javascript-style-guide Italian : sinkswim/javascript-style-guide Japanese : mitsuruog/javacript-style-guide Korean : tipjs/javascript-style-guide Polish : mjurczyk/javascript Russian : uprock/javascript Spanish : paolocarrasco/javascript-style-guide Thai : lvarayut/javascript-style-guide","title":"\u7ffb\u8bd1"},{"location":"web/ali_js_style/#javascript","text":"Reference","title":"JavaScript \u7f16\u7801\u89c4\u8303\u8bf4\u660e"},{"location":"web/ali_js_style/#javascript_1","text":"\u6b22\u8fce\u5230 gitter \u4e0e\u6211\u4eec\u804a\u5929\uff08\u82f1\u6587\uff09\u3002","title":"\u8ba8\u8bba JavaScript"},{"location":"web/ali_js_style/#_28","text":"\u67e5\u770b\u539f\u59cb\u9879\u76ee\u8d21\u732e\u8005 \u67e5\u770b\u7b80\u4e2d\u7ffb\u8bd1\u8d21\u732e\u8005","title":"\u8d21\u732e\u8005"},{"location":"web/ali_js_style/#_29","text":"(The MIT License) Copyright \u00a9 2014 Airbnb Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the 'Software'), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. \u2b06 \u8fd4\u56de\u76ee\u5f55","title":"\u8bb8\u53ef\u534f\u8bae"},{"location":"web/ali_js_style/#_30","text":"\u6211\u4eec\u9f13\u52b1\u60a8\u6d3e\u751f\u672c\u6307\u5357\u548c\u66f4\u6539\u89c4\u5219\u4ee5\u9002\u5e94\u60a8\u7684\u56e2\u961f\u9700\u6c42\u3002\u60a8\u53ef\u4ee5\u5728\u4e0b\u65b9\u5217\u51fa\u5bf9\u672c\u98ce\u683c\u6307\u5357\u7684\u4fee\u6539\uff0c\u4ee5\u4fbf\u5b9a\u671f\u66f4\u65b0\u672c\u6307\u5357\u800c\u65e0\u9700\u5904\u7406\u5408\u5e76\u51b2\u7a81\u3002","title":"\u4fee\u8ba2"},{"location":"web/ali_js_style/#_31","text":"","title":"};"},{"location":"web/es6/","text":"JavaScript ES6 \u89c4\u8303 \u00b6 ES6 \u7b80\u4ecb \u00b6 ECMAScript 6 \u7b80\u79f0 ES6\uff0c\u662f JavaScript \u8bed\u8a00\u7684\u4e0b\u4e00\u4ee3\u6807\u51c6\uff0c\u5df2\u7ecf\u57282015\u5e746\u6708\u6b63\u5f0f\u53d1\u5e03\u4e86\u3002\u5b83\u7684\u76ee\u6807\u662f\u4f7f\u5f97 JavaScript \u8bed\u8a00\u53ef\u4ee5\u7528\u6765\u7f16\u5199\u590d\u6742\u7684\u5927\u578b\u5e94\u7528\u7a0b\u5e8f\uff0c\u6210\u4e3a\u4f01\u4e1a\u7ea7\u5f00\u53d1\u8bed\u8a00\u3002 ECMAScript \u548c JavaScript \u7684\u5173\u7cfb\uff1a\u524d\u8005\u662f\u540e\u8005\u7684\u8bed\u6cd5\u89c4\u683c\uff0c\u540e\u8005\u662f\u524d\u8005\u7684\u4e00\u79cd\u5b9e\u73b0 Babel \uff1a\u5c06ES6\u4ee3\u7801\u8f6c\u4e3aES5\u4ee3\u7801 \u65b0\u7279\u6027 \u00b6 let\u3001const \u00b6 let \u5b9a\u4e49\u7684\u53d8\u91cf\u4e0d\u4f1a\u88ab\u53d8\u91cf\u63d0\u5347\uff0cconst \u5b9a\u4e49\u7684\u5e38\u91cf\u4e0d\u80fd\u88ab\u4fee\u6539\uff0clet \u548c const \u90fd\u662f\u5757\u7ea7\u4f5c\u7528\u57df ES6\u524d\uff0cjs \u662f\u6ca1\u6709\u5757\u7ea7\u4f5c\u7528\u57df {} \u7684\u6982\u5ff5\u7684\u3002\uff08\u6709\u51fd\u6570\u4f5c\u7528\u57df\u3001\u5168\u5c40\u4f5c\u7528\u57df\u3001eval\u4f5c\u7528\u57df\uff09 ES6\u540e\uff0clet \u548c const \u7684\u51fa\u73b0\uff0cjs \u4e5f\u6709\u4e86\u5757\u7ea7\u4f5c\u7528\u57df\u7684\u6982\u5ff5\uff0c\u524d\u7aef\u7684\u77e5\u8bc6\u662f\u65e5\u65b0\u6708\u5f02\u7684~ \u53d8\u91cf\u63d0\u5347\uff1a\u5728ES6\u4ee5\u524d\uff0cvar\u5173\u952e\u5b57\u58f0\u660e\u53d8\u91cf\u3002\u65e0\u8bba\u58f0\u660e\u5728\u4f55\u5904\uff0c\u90fd\u4f1a\u88ab\u89c6\u4e3a\u58f0\u660e\u5728\u51fd\u6570\u7684\u6700\u9876\u90e8\uff1b\u4e0d\u5728\u51fd\u6570\u5185\u5373\u5728\u5168\u5c40\u4f5c\u7528\u57df\u7684\u6700\u9876\u90e8\u3002\u8fd9\u6837\u5c31\u4f1a\u5f15\u8d77\u4e00\u4e9b\u8bef\u89e3\u3002\u4f8b\u5982\uff1a console . log ( a ); // undefined var a = 'hello' ; # \u4e0a\u9762\u7684\u4ee3\u7801\u76f8\u5f53\u4e8e var a ; console . log ( a ); a = 'hello' ; # \u800c let \u5c31\u4e0d\u4f1a\u88ab\u53d8\u91cf\u63d0\u5347 console . log ( a ); // a is not defined let a = 'hello' ; const \u5b9a\u4e49\u7684\u5e38\u91cf\u4e0d\u80fd\u88ab\u4fee\u6539 var name = \"bai\" ; name = \"ming\" ; console . log ( name ); // ming const name = \"bai\" ; name = \"ming\" ; // Assignment to constant variable. console . log ( name ); import\u3001export \u00b6 import\u5bfc\u5165\u6a21\u5757\u3001export\u5bfc\u51fa\u6a21\u5757 // \u5168\u90e8\u5bfc\u5165 import people from './example' // \u5c06\u6574\u4e2a\u6a21\u5757\u5f53\u4f5c\u5355\u4e00\u5bf9\u8c61\u8fdb\u884c\u5bfc\u5165\uff0c\u8be5\u6a21\u5757\u7684\u6240\u6709\u5bfc\u51fa\u90fd\u4f1a\u4f5c\u4e3a\u5bf9\u8c61\u7684\u5c5e\u6027\u5b58\u5728 import * as example from \"./example.js\" console . log ( example . name ) console . log ( example . getName ()) // \u5bfc\u5165\u90e8\u5206\uff0c\u5f15\u5165\u975e default \u65f6\uff0c\u4f7f\u7528\u82b1\u62ec\u53f7 import { name , age } from './example' // \u5bfc\u51fa\u9ed8\u8ba4, \u6709\u4e14\u53ea\u6709\u4e00\u4e2a\u9ed8\u8ba4 export default App // \u90e8\u5206\u5bfc\u51fa export class App extend Component {}; class\u3001extends\u3001super \u00b6 ES5\u4e2d\u6700\u4ee4\u4eba\u5934\u75bc\u7684\u7684\u51e0\u4e2a\u90e8\u5206\uff1a\u539f\u578b\u3001\u6784\u9020\u51fd\u6570\uff0c\u7ee7\u627f\uff0c\u6709\u4e86ES6\u6211\u4eec\u4e0d\u518d\u70e6\u607c\uff01 ES6\u5f15\u5165\u4e86Class\uff08\u7c7b\uff09\u8fd9\u4e2a\u6982\u5ff5\u3002 class Animal { constructor () { this . type = 'animal' ; } says ( say ) { console . log ( this . type + ' says ' + say ); } } let animal = new Animal (); animal . says ( 'hello' ); //animal says hello class Cat extends Animal { constructor () { super (); this . type = 'cat' ; } } let cat = new Cat (); cat . says ( 'hello' ); //cat says hello \u4e0a\u9762\u4ee3\u7801\u9996\u5148\u7528class\u5b9a\u4e49\u4e86\u4e00\u4e2a\u201c\u7c7b\u201d\uff0c\u53ef\u4ee5\u770b\u5230\u91cc\u9762\u6709\u4e00\u4e2aconstructor\u65b9\u6cd5\uff0c\u8fd9\u5c31\u662f\u6784\u9020\u65b9\u6cd5\uff0c\u800cthis\u5173\u952e\u5b57\u5219\u4ee3\u8868\u5b9e\u4f8b\u5bf9\u8c61\u3002\u7b80\u5355\u5730\u8bf4\uff0cconstructor\u5185\u5b9a\u4e49\u7684\u65b9\u6cd5\u548c\u5c5e\u6027\u662f\u5b9e\u4f8b\u5bf9\u8c61\u81ea\u5df1\u7684\uff0c\u800cconstructor\u5916\u5b9a\u4e49\u7684\u65b9\u6cd5\u548c\u5c5e\u6027\u5219\u662f\u6240\u6709\u5b9e\u529b\u5bf9\u8c61\u53ef\u4ee5\u5171\u4eab\u7684\u3002 Class\u4e4b\u95f4\u53ef\u4ee5\u901a\u8fc7extends\u5173\u952e\u5b57\u5b9e\u73b0\u7ee7\u627f\uff0c\u8fd9\u6bd4ES5\u7684\u901a\u8fc7\u4fee\u6539\u539f\u578b\u94fe\u5b9e\u73b0\u7ee7\u627f\uff0c\u8981\u6e05\u6670\u548c\u65b9\u4fbf\u5f88\u591a\u3002\u4e0a\u9762\u5b9a\u4e49\u4e86\u4e00\u4e2aCat\u7c7b\uff0c\u8be5\u7c7b\u901a\u8fc7extends\u5173\u952e\u5b57\uff0c\u7ee7\u627f\u4e86Animal\u7c7b\u7684\u6240\u6709\u5c5e\u6027\u548c\u65b9\u6cd5\u3002 super\u5173\u952e\u5b57\uff0c\u5b83\u6307\u4ee3\u7236\u7c7b\u7684\u5b9e\u4f8b\uff08\u5373\u7236\u7c7b\u7684this\u5bf9\u8c61\uff09\u3002\u5b50\u7c7b\u5fc5\u987b\u5728constructor\u65b9\u6cd5\u4e2d\u8c03\u7528super\u65b9\u6cd5\uff0c\u5426\u5219\u65b0\u5efa\u5b9e\u4f8b\u65f6\u4f1a\u62a5\u9519\u3002\u8fd9\u662f\u56e0\u4e3a\u5b50\u7c7b\u6ca1\u6709\u81ea\u5df1\u7684this\u5bf9\u8c61\uff0c\u800c\u662f\u7ee7\u627f\u7236\u7c7b\u7684this\u5bf9\u8c61\uff0c\u7136\u540e\u5bf9\u5176\u8fdb\u884c\u52a0\u5de5\u3002\u5982\u679c\u4e0d\u8c03\u7528super\u65b9\u6cd5\uff0c\u5b50\u7c7b\u5c31\u5f97\u4e0d\u5230this\u5bf9\u8c61\u3002 ES6\u7684\u7ee7\u627f\u673a\u5236\uff0c\u5b9e\u8d28\u662f\u5148\u521b\u9020\u7236\u7c7b\u7684\u5b9e\u4f8b\u5bf9\u8c61this\uff08\u6240\u4ee5\u5fc5\u987b\u5148\u8c03\u7528super\u65b9\u6cd5\uff09\uff0c\u7136\u540e\u518d\u7528\u5b50\u7c7b\u7684\u6784\u9020\u51fd\u6570\u4fee\u6539this\u3002 // ES5 var Shape = function ( id , x , y ) { this . id = id , this . move ( x , y ); }; Shape . prototype . move = function ( x , y ) { this . x = x ; this . y = y ; }; var Rectangle = function id ( ix , x , y , width , height ) { Shape . call ( this , id , x , y ); this . width = width ; this . height = height ; }; Rectangle . prototype = Object . create ( Shape . prototype ); Rectangle . prototype . constructor = Rectangle ; var Circle = function ( id , x , y , radius ) { Shape . call ( this , id , x , y ); this . radius = radius ; }; Circle . prototype = Object . create ( Shape . prototype ); Circle . prototype . constructor = Circle ; // ES6 class Shape { constructor ( id , x , y ) { this . id = id this . move ( x , y ); } move ( x , y ) { this . x = x this . y = y ; } } class Rectangle extends Shape { constructor ( id , x , y , width , height ) { super ( id , x , y ) this . width = width this . height = height ; } } class Circle extends Shape { constructor ( id , x , y , radius ) { super ( id , x , y ) this . radius = radius ; } } arrow functions \uff08\u7bad\u5934\u51fd\u6570\uff09 \u00b6 \u51fd\u6570\u7684\u5feb\u6377\u5199\u6cd5\u3002\u4e0d\u9700\u8981 function \u5173\u952e\u5b57\u6765\u521b\u5efa\u51fd\u6570\uff0c\u7701\u7565 return \u5173\u952e\u5b57\uff0c\u7ee7\u627f\u5f53\u524d\u4e0a\u4e0b\u6587\u7684 this \u5173\u952e\u5b57 // ES5 var arr1 = [ 1 , 2 , 3 ]; var newArr1 = arr1 . map ( function ( x ) { return x + 1 ; }); // ES6 let arr2 = [ 1 , 2 , 3 ]; let newArr2 = arr2 . map (( x ) => { x + 1 }); \u7bad\u5934\u51fd\u6570\u5c0f\u7ec6\u8282\uff1a\u5f53\u4f60\u7684\u51fd\u6570\u6709\u4e14\u4ec5\u6709\u4e00\u4e2a\u53c2\u6570\u7684\u65f6\u5019\uff0c\u662f\u53ef\u4ee5\u7701\u7565\u6389\u62ec\u53f7\u7684\uff1b\u5f53\u4f60\u51fd\u6570\u4e2d\u6709\u4e14\u4ec5\u6709\u4e00\u4e2a\u8868\u8fbe\u5f0f\u7684\u65f6\u5019\u53ef\u4ee5\u7701\u7565{} let arr2 = [ 1 , 2 , 3 ]; let newArr2 = arr2 . map ( x => x + 1 ); JavaScript\u8bed\u8a00\u7684this\u5bf9\u8c61\u4e00\u76f4\u662f\u4e00\u4e2a\u4ee4\u4eba\u5934\u75db\u7684\u95ee\u9898\uff0c\u8fd0\u884c\u4e0a\u9762\u7684\u4ee3\u7801\u4f1a\u62a5\u9519\uff0c\u8fd9\u662f\u56e0\u4e3asetTimeout\u4e2d\u7684this\u6307\u5411\u7684\u662f\u5168\u5c40\u5bf9\u8c61\u3002 class Animal { constructor () { this . type = 'animal' ; } says ( say ) { setTimeout ( function () { console . log ( this . type + ' says ' + say ); }, 1000 ); } } var animal = new Animal (); animal . says ( 'hi' ); //undefined says hi \u89e3\u51b3\u529e\u6cd5\uff1a // \u4f20\u7edf\u65b9\u6cd51: \u5c06this\u4f20\u7ed9self,\u518d\u7528self\u6765\u6307\u4ee3this says ( say ) { var self = this ; setTimeout ( function () { console . log ( self . type + ' says ' + say ); }, 1000 ); } // \u4f20\u7edf\u65b9\u6cd52: \u7528bind(this),\u5373 says ( say ) { setTimeout ( function () { console . log ( this . type + ' says ' + say ); }. bind ( this ), 1000 ); } // ES6: \u7bad\u5934\u51fd\u6570 // \u5f53\u6211\u4eec\u4f7f\u7528\u7bad\u5934\u51fd\u6570\u65f6\uff0c\u51fd\u6570\u4f53\u5185\u7684this\u5bf9\u8c61\uff0c\u5c31\u662f\u5b9a\u4e49\u65f6\u6240\u5728\u7684\u5bf9\u8c61 says ( say ) { setTimeout (() => { console . log ( this . type + ' says ' + say ); }, 1000 ); } template string \uff08\u6a21\u677f\u5b57\u7b26\u4e32\uff09 \u00b6 \u89e3\u51b3\u4e86 ES5 \u5728\u5b57\u7b26\u4e32\u529f\u80fd\u4e0a\u7684\u75db\u70b9\u3002 \u7b2c\u4e00\u4e2a\u7528\u9014\uff1a\u5b57\u7b26\u4e32\u62fc\u63a5\u3002\u5c06\u8868\u8fbe\u5f0f\u5d4c\u5165\u5b57\u7b26\u4e32\u4e2d\u8fdb\u884c\u62fc\u63a5\uff0c\u7528 \u548c${} \u6765\u754c\u5b9a\u3002 // es5 var name1 = \"bai\" ; console . log ( 'hello' + name1 ); // es6 const name2 = \"ming\" ; console . log ( `hello ${ name2 } ` ); \u7b2c\u4e8c\u4e2a\u7528\u9014\uff1a\u5728ES5\u65f6\u6211\u4eec\u901a\u8fc7\u53cd\u659c\u6760\u6765\u505a\u591a\u884c\u5b57\u7b26\u4e32\u62fc\u63a5\u3002ES6\u53cd\u5f15\u53f7 `` \u76f4\u63a5\u641e\u5b9a\u3002 // es5 var msg = \"Hi \\ man!\" ; // es6 const template = `<div> <span>hello world</span> </div>` ; \u53e6\u5916\uff1aincludes repeat // includes\uff1a\u5224\u65ad\u662f\u5426\u5305\u542b\u7136\u540e\u76f4\u63a5\u8fd4\u56de\u5e03\u5c14\u503c let str = 'hahah' ; console . log ( str . includes ( 'y' )); // false // repeat: \u83b7\u53d6\u5b57\u7b26\u4e32\u91cd\u590dn\u6b21 let s = 'he' ; console . log ( s . repeat ( 3 )); // 'hehehe' destructuring \uff08\u89e3\u6784\uff09 \u00b6 \u7b80\u5316\u6570\u7ec4\u548c\u5bf9\u8c61\u4e2d\u4fe1\u606f\u7684\u63d0\u53d6\u3002 ES6\u524d\uff0c\u6211\u4eec\u4e00\u4e2a\u4e00\u4e2a\u83b7\u53d6\u5bf9\u8c61\u4fe1\u606f\uff1b ES6\u540e\uff0c\u89e3\u6784\u80fd\u8ba9\u6211\u4eec\u4ece\u5bf9\u8c61\u6216\u8005\u6570\u7ec4\u91cc\u53d6\u51fa\u6570\u636e\u5b58\u4e3a\u53d8\u91cf // ES5 var people1 = { name : 'bai' , age : 20 , color : [ 'red' , 'blue' ] }; var myName = people1 . name ; var myAge = people1 . age ; var myColor = people1 . color [ 0 ]; console . log ( myName + '----' + myAge + '----' + myColor ); // ES6 let people2 = { name : 'ming' , age : 20 , color : [ 'red' , 'blue' ] } let { name , age } = people2 ; let [ first , second ] = people2 . color ; console . log ( ` ${ name } ---- ${ age } ---- ${ first } ` ); default \u51fd\u6570\u9ed8\u8ba4\u53c2\u6570 \u00b6 // ES5 \u7ed9\u51fd\u6570\u5b9a\u4e49\u53c2\u6570\u9ed8\u8ba4\u503c function foo ( num ) { num = num || 200 ; return num ; } // ES6 function foo ( num = 200 ) { return num ; } rest arguments \uff08rest\u53c2\u6570\uff09 \u00b6 \u89e3\u51b3\u4e86 es5 \u590d\u6742\u7684 arguments \u95ee\u9898 function foo ( x , y , ... rest ) { return (( x + y ) * rest . length ); } foo ( 1 , 2 , 'hello' , true , 7 ); // 9 Spread Operator \uff08\u5c55\u5f00\u8fd0\u7b97\u7b26\uff09 \u00b6 \u7b2c\u4e00\u4e2a\u7528\u9014\uff1a\u7ec4\u88c5\u6570\u7ec4 let color = [ 'red' , 'yellow' ]; let colorful = [... color , 'green' , 'blue' ]; console . log ( colorful ); // [\"red\", \"yellow\", \"green\", \"blue\"] \u7b2c\u4e8c\u4e2a\u7528\u9014\uff1a\u83b7\u53d6\u6570\u7ec4\u9664\u4e86\u67d0\u51e0\u9879\u7684\u5176\u4ed6\u9879 let num = [ 1 , 3 , 5 , 7 , 9 ]; let [ first , second , ... rest ] = num ; console . log ( rest ); // [5, 7, 9] \u5bf9\u8c61 \u00b6 \u5bf9\u8c61\u521d\u59cb\u5316\u7b80\u5199 // ES5 function people ( name , age ) { return { name : name , age : age }; } // ES6 function people ( name , age ) { return { name , age }; } \u5bf9\u8c61\u5b57\u9762\u91cf\u7b80\u5199\uff08\u7701\u7565\u5192\u53f7\u4e0e function \u5173\u952e\u5b57\uff09 // ES5 var people1 = { name : 'bai' , getName : function () { console . log ( this . name ); } }; // ES6 let people2 = { name : 'bai' , getName () { console . log ( this . name ); } }; \u53e6\u5916\uff1aObject.assign() ES6 \u5bf9\u8c61\u63d0\u4f9b\u4e86Object.assign()\u8fd9\u4e2a\u65b9\u6cd5\u6765\u5b9e\u73b0\u6d45\u590d\u5236\u3002Object.assign()\u53ef\u4ee5\u628a\u4efb\u610f\u591a\u4e2a\u6e90\u5bf9\u8c61\u81ea\u8eab\u53ef\u679a\u4e3e\u7684\u5c5e\u6027\u62f7\u8d1d\u7ed9\u76ee\u6807\u5bf9\u8c61\uff0c\u7136\u540e\u8fd4\u56de\u76ee\u6807\u5bf9\u8c61\u3002\u7b2c\u4e00\u53c2\u6570\u5373\u4e3a\u76ee\u6807\u5bf9\u8c61\u3002\u5728\u5b9e\u9645\u9879\u76ee\u4e2d\uff0c\u6211\u4eec\u4e3a\u4e86\u4e0d\u6539\u53d8\u6e90\u5bf9\u8c61\u3002\u4e00\u822c\u4f1a\u628a\u76ee\u6807\u5bf9\u8c61\u4f20\u4e3a{} const obj = Object . assign ({}, objA , objB ) // \u7ed9\u5bf9\u8c61\u6dfb\u52a0\u5c5e\u6027 this . seller = Object . assign ({}, this . seller , response . data ) Promise \u00b6 \u7528\u540c\u6b65\u7684\u65b9\u5f0f\u53bb\u5199\u5f02\u6b65\u4ee3\u7801 // \u53d1\u8d77\u5f02\u6b65\u8bf7\u6c42 fetch ( '/api/todos' ) . then ( res => res . json ()) . then ( data => ({ data })) . catch ( err => ({ err })); Generators \u00b6 \u751f\u6210\u5668\uff08 generator\uff09\u662f\u80fd\u8fd4\u56de\u4e00\u4e2a\u8fed\u4ee3\u5668\u7684\u51fd\u6570\u3002 \u751f\u6210\u5668\u51fd\u6570\u4e5f\u662f\u4e00\u79cd\u51fd\u6570\uff0c\u6700\u76f4\u89c2\u7684\u8868\u73b0\u5c31\u662f\u6bd4\u666e\u901a\u7684function\u591a\u4e86\u4e2a\u661f\u53f7*\uff0c\u5728\u5176\u51fd\u6570\u4f53\u5185\u53ef\u4ee5\u4f7f\u7528yield\u5173\u952e\u5b57,\u6709\u610f\u601d\u7684\u662f\u51fd\u6570\u4f1a\u5728\u6bcf\u4e2ayield\u540e\u6682\u505c\u3002 \u8fd9\u91cc\u751f\u6d3b\u4e2d\u6709\u4e00\u4e2a\u6bd4\u8f83\u5f62\u8c61\u7684\u4f8b\u5b50\u3002\u54b1\u4eec\u5230\u94f6\u884c\u529e\u7406\u4e1a\u52a1\u65f6\u5019\u90fd\u5f97\u5411\u5927\u5385\u7684\u673a\u5668\u53d6\u4e00\u5f20\u6392\u961f\u53f7\u3002\u4f60\u62ff\u5230\u4f60\u7684\u6392\u961f\u53f7\uff0c\u673a\u5668\u5e76\u4e0d\u4f1a\u81ea\u52a8\u4e3a\u4f60\u518d\u51fa\u4e0b\u4e00\u5f20\u7968\u3002\u4e5f\u5c31\u662f\u8bf4\u53d6\u7968\u673a\u201c\u6682\u505c\u201d\u4f4f\u4e86\uff0c\u76f4\u5230\u4e0b\u4e00\u4e2a\u4eba\u518d\u6b21\u5524\u8d77\u624d\u4f1a\u7ee7\u7eed\u5410\u7968\u3002 \u8fed\u4ee3\u5668\uff1a\u5f53\u4f60\u8c03\u7528\u4e00\u4e2agenerator\u65f6\uff0c\u5b83\u5c06\u8fd4\u56de\u4e00\u4e2a\u8fed\u4ee3\u5668\u5bf9\u8c61\u3002\u8fd9\u4e2a\u8fed\u4ee3\u5668\u5bf9\u8c61\u62e5\u6709\u4e00\u4e2a\u53eb\u505anext\u7684\u65b9\u6cd5\u6765\u5e2e\u52a9\u4f60\u91cd\u542fgenerator\u51fd\u6570\u5e76\u5f97\u5230\u4e0b\u4e00\u4e2a\u503c\u3002next\u65b9\u6cd5\u4e0d\u4ec5\u8fd4\u56de\u503c\uff0c\u5b83\u8fd4\u56de\u7684\u5bf9\u8c61\u5177\u6709\u4e24\u4e2a\u5c5e\u6027\uff1adone\u548cvalue\u3002value\u662f\u4f60\u83b7\u5f97\u7684\u503c\uff0cdone\u7528\u6765\u8868\u660e\u4f60\u7684generator\u662f\u5426\u5df2\u7ecf\u505c\u6b62\u63d0\u4f9b\u503c\u3002\u7ee7\u7eed\u7528\u521a\u521a\u53d6\u7968\u7684\u4f8b\u5b50\uff0c\u6bcf\u5f20\u6392\u961f\u53f7\u5c31\u662f\u8fd9\u91cc\u7684value\uff0c\u6253\u5370\u7968\u7684\u7eb8\u662f\u5426\u7528\u5b8c\u5c31\u8fd9\u662f\u8fd9\u91cc\u7684done\u3002 // \u751f\u6210\u5668 function * createIterator () { yield 1 ; yield 2 ; yield 3 ; } // \u751f\u6210\u5668\u80fd\u50cf\u6b63\u89c4\u51fd\u6570\u90a3\u6837\u88ab\u8c03\u7528\uff0c\u4f46\u4f1a\u8fd4\u56de\u4e00\u4e2a\u8fed\u4ee3\u5668 let iterator = createIterator (); console . log ( iterator . next (). value ); // 1 console . log ( iterator . next (). value ); // 2 console . log ( iterator . next (). value ); // 3 \u8fed\u4ee3\u5668\u5bf9\u5f02\u6b65\u7f16\u7a0b\u4f5c\u7528\u5f88\u5927\uff0c\u5f02\u6b65\u8c03\u7528\u5bf9\u4e8e\u6211\u4eec\u6765\u8bf4\u662f\u5f88\u56f0\u96be\u7684\u4e8b\uff0c\u6211\u4eec\u7684\u51fd\u6570\u5e76\u4e0d\u4f1a\u7b49\u5f85\u5f02\u6b65\u8c03\u7528\u5b8c\u518d\u6267\u884c\uff0c\u4f60\u53ef\u80fd\u4f1a\u60f3\u5230\u7528\u56de\u8c03\u51fd\u6570\uff0c\uff08\u5f53\u7136\u8fd8\u6709\u5176\u4ed6\u65b9\u6848\u6bd4\u5982Promise\u6bd4\u5982Async/await\uff09\u3002 \u751f\u6210\u5668\u53ef\u4ee5\u8ba9\u6211\u4eec\u7684\u4ee3\u7801\u8fdb\u884c\u7b49\u5f85\u3002\u5c31\u4e0d\u7528\u5d4c\u5957\u7684\u56de\u8c03\u51fd\u6570\u3002\u4f7f\u7528generator\u53ef\u4ee5\u786e\u4fdd\u5f53\u5f02\u6b65\u8c03\u7528\u5728\u6211\u4eec\u7684generator\u51fd\u6570\u8fd0\u884c\u4e00\u4e0b\u884c\u4ee3\u7801\u4e4b\u524d\u5b8c\u6210\u65f6\u6682\u505c\u51fd\u6570\u7684\u6267\u884c\u3002 \u90a3\u4e48\u95ee\u9898\u6765\u4e86\uff0c\u54b1\u4eec\u4e5f\u4e0d\u80fd\u624b\u52a8\u4e00\u76f4\u8c03\u7528next()\u65b9\u6cd5\uff0c\u4f60\u9700\u8981\u4e00\u4e2a\u80fd\u591f\u8c03\u7528\u751f\u6210\u5668\u5e76\u542f\u52a8\u8fed\u4ee3\u5668\u7684\u65b9\u6cd5\u3002\u5c31\u50cf\u8fd9\u6837\u5b50\u7684\uff1a function run ( taskDef ) { // taskDef \u5373\u4e00\u4e2a\u751f\u6210\u5668\u51fd\u6570 // \u521b\u5efa\u8fed\u4ee3\u5668\uff0c\u8ba9\u5b83\u5728\u522b\u5904\u53ef\u7528 let task = taskDef (); // \u542f\u52a8\u4efb\u52a1 let result = task . next (); // \u9012\u5f52\u4f7f\u7528\u51fd\u6570\u6765\u4fdd\u6301\u5bf9 next() \u7684\u8c03\u7528 function step () { // \u5982\u679c\u8fd8\u6709\u66f4\u591a\u8981\u505a\u7684 if ( ! result . done ) { result = task . next (); step (); } } // \u5f00\u59cb\u5904\u7406\u8fc7\u7a0b step (); } \u603b\u7ed3 \u00b6 \u4ee5\u4e0a\u5c31\u662f ES6 \u6700\u5e38\u7528\u7684\u4e00\u4e9b\u8bed\u6cd5\uff0c\u53ef\u4ee5\u8bf4\u8fd920%\u7684\u8bed\u6cd5\uff0c\u5728ES6\u7684\u65e5\u5e38\u4f7f\u7528\u4e2d\u5360\u4e8680% \u66f4\u591aES6\u8bed\u6cd5\u70b9\u51fb\u8fd9\u91cc","title":"es6\u8bed\u6cd5"},{"location":"web/es6/#javascript-es6","text":"","title":"JavaScript ES6 \u89c4\u8303"},{"location":"web/es6/#es6","text":"ECMAScript 6 \u7b80\u79f0 ES6\uff0c\u662f JavaScript \u8bed\u8a00\u7684\u4e0b\u4e00\u4ee3\u6807\u51c6\uff0c\u5df2\u7ecf\u57282015\u5e746\u6708\u6b63\u5f0f\u53d1\u5e03\u4e86\u3002\u5b83\u7684\u76ee\u6807\u662f\u4f7f\u5f97 JavaScript \u8bed\u8a00\u53ef\u4ee5\u7528\u6765\u7f16\u5199\u590d\u6742\u7684\u5927\u578b\u5e94\u7528\u7a0b\u5e8f\uff0c\u6210\u4e3a\u4f01\u4e1a\u7ea7\u5f00\u53d1\u8bed\u8a00\u3002 ECMAScript \u548c JavaScript \u7684\u5173\u7cfb\uff1a\u524d\u8005\u662f\u540e\u8005\u7684\u8bed\u6cd5\u89c4\u683c\uff0c\u540e\u8005\u662f\u524d\u8005\u7684\u4e00\u79cd\u5b9e\u73b0 Babel \uff1a\u5c06ES6\u4ee3\u7801\u8f6c\u4e3aES5\u4ee3\u7801","title":"ES6 \u7b80\u4ecb"},{"location":"web/es6/#_1","text":"","title":"\u65b0\u7279\u6027"},{"location":"web/es6/#letconst","text":"let \u5b9a\u4e49\u7684\u53d8\u91cf\u4e0d\u4f1a\u88ab\u53d8\u91cf\u63d0\u5347\uff0cconst \u5b9a\u4e49\u7684\u5e38\u91cf\u4e0d\u80fd\u88ab\u4fee\u6539\uff0clet \u548c const \u90fd\u662f\u5757\u7ea7\u4f5c\u7528\u57df ES6\u524d\uff0cjs \u662f\u6ca1\u6709\u5757\u7ea7\u4f5c\u7528\u57df {} \u7684\u6982\u5ff5\u7684\u3002\uff08\u6709\u51fd\u6570\u4f5c\u7528\u57df\u3001\u5168\u5c40\u4f5c\u7528\u57df\u3001eval\u4f5c\u7528\u57df\uff09 ES6\u540e\uff0clet \u548c const \u7684\u51fa\u73b0\uff0cjs \u4e5f\u6709\u4e86\u5757\u7ea7\u4f5c\u7528\u57df\u7684\u6982\u5ff5\uff0c\u524d\u7aef\u7684\u77e5\u8bc6\u662f\u65e5\u65b0\u6708\u5f02\u7684~ \u53d8\u91cf\u63d0\u5347\uff1a\u5728ES6\u4ee5\u524d\uff0cvar\u5173\u952e\u5b57\u58f0\u660e\u53d8\u91cf\u3002\u65e0\u8bba\u58f0\u660e\u5728\u4f55\u5904\uff0c\u90fd\u4f1a\u88ab\u89c6\u4e3a\u58f0\u660e\u5728\u51fd\u6570\u7684\u6700\u9876\u90e8\uff1b\u4e0d\u5728\u51fd\u6570\u5185\u5373\u5728\u5168\u5c40\u4f5c\u7528\u57df\u7684\u6700\u9876\u90e8\u3002\u8fd9\u6837\u5c31\u4f1a\u5f15\u8d77\u4e00\u4e9b\u8bef\u89e3\u3002\u4f8b\u5982\uff1a console . log ( a ); // undefined var a = 'hello' ; # \u4e0a\u9762\u7684\u4ee3\u7801\u76f8\u5f53\u4e8e var a ; console . log ( a ); a = 'hello' ; # \u800c let \u5c31\u4e0d\u4f1a\u88ab\u53d8\u91cf\u63d0\u5347 console . log ( a ); // a is not defined let a = 'hello' ; const \u5b9a\u4e49\u7684\u5e38\u91cf\u4e0d\u80fd\u88ab\u4fee\u6539 var name = \"bai\" ; name = \"ming\" ; console . log ( name ); // ming const name = \"bai\" ; name = \"ming\" ; // Assignment to constant variable. console . log ( name );","title":"let\u3001const"},{"location":"web/es6/#importexport","text":"import\u5bfc\u5165\u6a21\u5757\u3001export\u5bfc\u51fa\u6a21\u5757 // \u5168\u90e8\u5bfc\u5165 import people from './example' // \u5c06\u6574\u4e2a\u6a21\u5757\u5f53\u4f5c\u5355\u4e00\u5bf9\u8c61\u8fdb\u884c\u5bfc\u5165\uff0c\u8be5\u6a21\u5757\u7684\u6240\u6709\u5bfc\u51fa\u90fd\u4f1a\u4f5c\u4e3a\u5bf9\u8c61\u7684\u5c5e\u6027\u5b58\u5728 import * as example from \"./example.js\" console . log ( example . name ) console . log ( example . getName ()) // \u5bfc\u5165\u90e8\u5206\uff0c\u5f15\u5165\u975e default \u65f6\uff0c\u4f7f\u7528\u82b1\u62ec\u53f7 import { name , age } from './example' // \u5bfc\u51fa\u9ed8\u8ba4, \u6709\u4e14\u53ea\u6709\u4e00\u4e2a\u9ed8\u8ba4 export default App // \u90e8\u5206\u5bfc\u51fa export class App extend Component {};","title":"import\u3001export"},{"location":"web/es6/#classextendssuper","text":"ES5\u4e2d\u6700\u4ee4\u4eba\u5934\u75bc\u7684\u7684\u51e0\u4e2a\u90e8\u5206\uff1a\u539f\u578b\u3001\u6784\u9020\u51fd\u6570\uff0c\u7ee7\u627f\uff0c\u6709\u4e86ES6\u6211\u4eec\u4e0d\u518d\u70e6\u607c\uff01 ES6\u5f15\u5165\u4e86Class\uff08\u7c7b\uff09\u8fd9\u4e2a\u6982\u5ff5\u3002 class Animal { constructor () { this . type = 'animal' ; } says ( say ) { console . log ( this . type + ' says ' + say ); } } let animal = new Animal (); animal . says ( 'hello' ); //animal says hello class Cat extends Animal { constructor () { super (); this . type = 'cat' ; } } let cat = new Cat (); cat . says ( 'hello' ); //cat says hello \u4e0a\u9762\u4ee3\u7801\u9996\u5148\u7528class\u5b9a\u4e49\u4e86\u4e00\u4e2a\u201c\u7c7b\u201d\uff0c\u53ef\u4ee5\u770b\u5230\u91cc\u9762\u6709\u4e00\u4e2aconstructor\u65b9\u6cd5\uff0c\u8fd9\u5c31\u662f\u6784\u9020\u65b9\u6cd5\uff0c\u800cthis\u5173\u952e\u5b57\u5219\u4ee3\u8868\u5b9e\u4f8b\u5bf9\u8c61\u3002\u7b80\u5355\u5730\u8bf4\uff0cconstructor\u5185\u5b9a\u4e49\u7684\u65b9\u6cd5\u548c\u5c5e\u6027\u662f\u5b9e\u4f8b\u5bf9\u8c61\u81ea\u5df1\u7684\uff0c\u800cconstructor\u5916\u5b9a\u4e49\u7684\u65b9\u6cd5\u548c\u5c5e\u6027\u5219\u662f\u6240\u6709\u5b9e\u529b\u5bf9\u8c61\u53ef\u4ee5\u5171\u4eab\u7684\u3002 Class\u4e4b\u95f4\u53ef\u4ee5\u901a\u8fc7extends\u5173\u952e\u5b57\u5b9e\u73b0\u7ee7\u627f\uff0c\u8fd9\u6bd4ES5\u7684\u901a\u8fc7\u4fee\u6539\u539f\u578b\u94fe\u5b9e\u73b0\u7ee7\u627f\uff0c\u8981\u6e05\u6670\u548c\u65b9\u4fbf\u5f88\u591a\u3002\u4e0a\u9762\u5b9a\u4e49\u4e86\u4e00\u4e2aCat\u7c7b\uff0c\u8be5\u7c7b\u901a\u8fc7extends\u5173\u952e\u5b57\uff0c\u7ee7\u627f\u4e86Animal\u7c7b\u7684\u6240\u6709\u5c5e\u6027\u548c\u65b9\u6cd5\u3002 super\u5173\u952e\u5b57\uff0c\u5b83\u6307\u4ee3\u7236\u7c7b\u7684\u5b9e\u4f8b\uff08\u5373\u7236\u7c7b\u7684this\u5bf9\u8c61\uff09\u3002\u5b50\u7c7b\u5fc5\u987b\u5728constructor\u65b9\u6cd5\u4e2d\u8c03\u7528super\u65b9\u6cd5\uff0c\u5426\u5219\u65b0\u5efa\u5b9e\u4f8b\u65f6\u4f1a\u62a5\u9519\u3002\u8fd9\u662f\u56e0\u4e3a\u5b50\u7c7b\u6ca1\u6709\u81ea\u5df1\u7684this\u5bf9\u8c61\uff0c\u800c\u662f\u7ee7\u627f\u7236\u7c7b\u7684this\u5bf9\u8c61\uff0c\u7136\u540e\u5bf9\u5176\u8fdb\u884c\u52a0\u5de5\u3002\u5982\u679c\u4e0d\u8c03\u7528super\u65b9\u6cd5\uff0c\u5b50\u7c7b\u5c31\u5f97\u4e0d\u5230this\u5bf9\u8c61\u3002 ES6\u7684\u7ee7\u627f\u673a\u5236\uff0c\u5b9e\u8d28\u662f\u5148\u521b\u9020\u7236\u7c7b\u7684\u5b9e\u4f8b\u5bf9\u8c61this\uff08\u6240\u4ee5\u5fc5\u987b\u5148\u8c03\u7528super\u65b9\u6cd5\uff09\uff0c\u7136\u540e\u518d\u7528\u5b50\u7c7b\u7684\u6784\u9020\u51fd\u6570\u4fee\u6539this\u3002 // ES5 var Shape = function ( id , x , y ) { this . id = id , this . move ( x , y ); }; Shape . prototype . move = function ( x , y ) { this . x = x ; this . y = y ; }; var Rectangle = function id ( ix , x , y , width , height ) { Shape . call ( this , id , x , y ); this . width = width ; this . height = height ; }; Rectangle . prototype = Object . create ( Shape . prototype ); Rectangle . prototype . constructor = Rectangle ; var Circle = function ( id , x , y , radius ) { Shape . call ( this , id , x , y ); this . radius = radius ; }; Circle . prototype = Object . create ( Shape . prototype ); Circle . prototype . constructor = Circle ; // ES6 class Shape { constructor ( id , x , y ) { this . id = id this . move ( x , y ); } move ( x , y ) { this . x = x this . y = y ; } } class Rectangle extends Shape { constructor ( id , x , y , width , height ) { super ( id , x , y ) this . width = width this . height = height ; } } class Circle extends Shape { constructor ( id , x , y , radius ) { super ( id , x , y ) this . radius = radius ; } }","title":"class\u3001extends\u3001super"},{"location":"web/es6/#arrow-functions","text":"\u51fd\u6570\u7684\u5feb\u6377\u5199\u6cd5\u3002\u4e0d\u9700\u8981 function \u5173\u952e\u5b57\u6765\u521b\u5efa\u51fd\u6570\uff0c\u7701\u7565 return \u5173\u952e\u5b57\uff0c\u7ee7\u627f\u5f53\u524d\u4e0a\u4e0b\u6587\u7684 this \u5173\u952e\u5b57 // ES5 var arr1 = [ 1 , 2 , 3 ]; var newArr1 = arr1 . map ( function ( x ) { return x + 1 ; }); // ES6 let arr2 = [ 1 , 2 , 3 ]; let newArr2 = arr2 . map (( x ) => { x + 1 }); \u7bad\u5934\u51fd\u6570\u5c0f\u7ec6\u8282\uff1a\u5f53\u4f60\u7684\u51fd\u6570\u6709\u4e14\u4ec5\u6709\u4e00\u4e2a\u53c2\u6570\u7684\u65f6\u5019\uff0c\u662f\u53ef\u4ee5\u7701\u7565\u6389\u62ec\u53f7\u7684\uff1b\u5f53\u4f60\u51fd\u6570\u4e2d\u6709\u4e14\u4ec5\u6709\u4e00\u4e2a\u8868\u8fbe\u5f0f\u7684\u65f6\u5019\u53ef\u4ee5\u7701\u7565{} let arr2 = [ 1 , 2 , 3 ]; let newArr2 = arr2 . map ( x => x + 1 ); JavaScript\u8bed\u8a00\u7684this\u5bf9\u8c61\u4e00\u76f4\u662f\u4e00\u4e2a\u4ee4\u4eba\u5934\u75db\u7684\u95ee\u9898\uff0c\u8fd0\u884c\u4e0a\u9762\u7684\u4ee3\u7801\u4f1a\u62a5\u9519\uff0c\u8fd9\u662f\u56e0\u4e3asetTimeout\u4e2d\u7684this\u6307\u5411\u7684\u662f\u5168\u5c40\u5bf9\u8c61\u3002 class Animal { constructor () { this . type = 'animal' ; } says ( say ) { setTimeout ( function () { console . log ( this . type + ' says ' + say ); }, 1000 ); } } var animal = new Animal (); animal . says ( 'hi' ); //undefined says hi \u89e3\u51b3\u529e\u6cd5\uff1a // \u4f20\u7edf\u65b9\u6cd51: \u5c06this\u4f20\u7ed9self,\u518d\u7528self\u6765\u6307\u4ee3this says ( say ) { var self = this ; setTimeout ( function () { console . log ( self . type + ' says ' + say ); }, 1000 ); } // \u4f20\u7edf\u65b9\u6cd52: \u7528bind(this),\u5373 says ( say ) { setTimeout ( function () { console . log ( this . type + ' says ' + say ); }. bind ( this ), 1000 ); } // ES6: \u7bad\u5934\u51fd\u6570 // \u5f53\u6211\u4eec\u4f7f\u7528\u7bad\u5934\u51fd\u6570\u65f6\uff0c\u51fd\u6570\u4f53\u5185\u7684this\u5bf9\u8c61\uff0c\u5c31\u662f\u5b9a\u4e49\u65f6\u6240\u5728\u7684\u5bf9\u8c61 says ( say ) { setTimeout (() => { console . log ( this . type + ' says ' + say ); }, 1000 ); }","title":"arrow functions \uff08\u7bad\u5934\u51fd\u6570\uff09"},{"location":"web/es6/#template-string","text":"\u89e3\u51b3\u4e86 ES5 \u5728\u5b57\u7b26\u4e32\u529f\u80fd\u4e0a\u7684\u75db\u70b9\u3002 \u7b2c\u4e00\u4e2a\u7528\u9014\uff1a\u5b57\u7b26\u4e32\u62fc\u63a5\u3002\u5c06\u8868\u8fbe\u5f0f\u5d4c\u5165\u5b57\u7b26\u4e32\u4e2d\u8fdb\u884c\u62fc\u63a5\uff0c\u7528 \u548c${} \u6765\u754c\u5b9a\u3002 // es5 var name1 = \"bai\" ; console . log ( 'hello' + name1 ); // es6 const name2 = \"ming\" ; console . log ( `hello ${ name2 } ` ); \u7b2c\u4e8c\u4e2a\u7528\u9014\uff1a\u5728ES5\u65f6\u6211\u4eec\u901a\u8fc7\u53cd\u659c\u6760\u6765\u505a\u591a\u884c\u5b57\u7b26\u4e32\u62fc\u63a5\u3002ES6\u53cd\u5f15\u53f7 `` \u76f4\u63a5\u641e\u5b9a\u3002 // es5 var msg = \"Hi \\ man!\" ; // es6 const template = `<div> <span>hello world</span> </div>` ; \u53e6\u5916\uff1aincludes repeat // includes\uff1a\u5224\u65ad\u662f\u5426\u5305\u542b\u7136\u540e\u76f4\u63a5\u8fd4\u56de\u5e03\u5c14\u503c let str = 'hahah' ; console . log ( str . includes ( 'y' )); // false // repeat: \u83b7\u53d6\u5b57\u7b26\u4e32\u91cd\u590dn\u6b21 let s = 'he' ; console . log ( s . repeat ( 3 )); // 'hehehe'","title":"template string \uff08\u6a21\u677f\u5b57\u7b26\u4e32\uff09"},{"location":"web/es6/#destructuring","text":"\u7b80\u5316\u6570\u7ec4\u548c\u5bf9\u8c61\u4e2d\u4fe1\u606f\u7684\u63d0\u53d6\u3002 ES6\u524d\uff0c\u6211\u4eec\u4e00\u4e2a\u4e00\u4e2a\u83b7\u53d6\u5bf9\u8c61\u4fe1\u606f\uff1b ES6\u540e\uff0c\u89e3\u6784\u80fd\u8ba9\u6211\u4eec\u4ece\u5bf9\u8c61\u6216\u8005\u6570\u7ec4\u91cc\u53d6\u51fa\u6570\u636e\u5b58\u4e3a\u53d8\u91cf // ES5 var people1 = { name : 'bai' , age : 20 , color : [ 'red' , 'blue' ] }; var myName = people1 . name ; var myAge = people1 . age ; var myColor = people1 . color [ 0 ]; console . log ( myName + '----' + myAge + '----' + myColor ); // ES6 let people2 = { name : 'ming' , age : 20 , color : [ 'red' , 'blue' ] } let { name , age } = people2 ; let [ first , second ] = people2 . color ; console . log ( ` ${ name } ---- ${ age } ---- ${ first } ` );","title":"destructuring \uff08\u89e3\u6784\uff09"},{"location":"web/es6/#default","text":"// ES5 \u7ed9\u51fd\u6570\u5b9a\u4e49\u53c2\u6570\u9ed8\u8ba4\u503c function foo ( num ) { num = num || 200 ; return num ; } // ES6 function foo ( num = 200 ) { return num ; }","title":"default \u51fd\u6570\u9ed8\u8ba4\u53c2\u6570"},{"location":"web/es6/#rest-arguments-rest","text":"\u89e3\u51b3\u4e86 es5 \u590d\u6742\u7684 arguments \u95ee\u9898 function foo ( x , y , ... rest ) { return (( x + y ) * rest . length ); } foo ( 1 , 2 , 'hello' , true , 7 ); // 9","title":"rest arguments \uff08rest\u53c2\u6570\uff09"},{"location":"web/es6/#spread-operator","text":"\u7b2c\u4e00\u4e2a\u7528\u9014\uff1a\u7ec4\u88c5\u6570\u7ec4 let color = [ 'red' , 'yellow' ]; let colorful = [... color , 'green' , 'blue' ]; console . log ( colorful ); // [\"red\", \"yellow\", \"green\", \"blue\"] \u7b2c\u4e8c\u4e2a\u7528\u9014\uff1a\u83b7\u53d6\u6570\u7ec4\u9664\u4e86\u67d0\u51e0\u9879\u7684\u5176\u4ed6\u9879 let num = [ 1 , 3 , 5 , 7 , 9 ]; let [ first , second , ... rest ] = num ; console . log ( rest ); // [5, 7, 9]","title":"Spread Operator \uff08\u5c55\u5f00\u8fd0\u7b97\u7b26\uff09"},{"location":"web/es6/#_2","text":"\u5bf9\u8c61\u521d\u59cb\u5316\u7b80\u5199 // ES5 function people ( name , age ) { return { name : name , age : age }; } // ES6 function people ( name , age ) { return { name , age }; } \u5bf9\u8c61\u5b57\u9762\u91cf\u7b80\u5199\uff08\u7701\u7565\u5192\u53f7\u4e0e function \u5173\u952e\u5b57\uff09 // ES5 var people1 = { name : 'bai' , getName : function () { console . log ( this . name ); } }; // ES6 let people2 = { name : 'bai' , getName () { console . log ( this . name ); } }; \u53e6\u5916\uff1aObject.assign() ES6 \u5bf9\u8c61\u63d0\u4f9b\u4e86Object.assign()\u8fd9\u4e2a\u65b9\u6cd5\u6765\u5b9e\u73b0\u6d45\u590d\u5236\u3002Object.assign()\u53ef\u4ee5\u628a\u4efb\u610f\u591a\u4e2a\u6e90\u5bf9\u8c61\u81ea\u8eab\u53ef\u679a\u4e3e\u7684\u5c5e\u6027\u62f7\u8d1d\u7ed9\u76ee\u6807\u5bf9\u8c61\uff0c\u7136\u540e\u8fd4\u56de\u76ee\u6807\u5bf9\u8c61\u3002\u7b2c\u4e00\u53c2\u6570\u5373\u4e3a\u76ee\u6807\u5bf9\u8c61\u3002\u5728\u5b9e\u9645\u9879\u76ee\u4e2d\uff0c\u6211\u4eec\u4e3a\u4e86\u4e0d\u6539\u53d8\u6e90\u5bf9\u8c61\u3002\u4e00\u822c\u4f1a\u628a\u76ee\u6807\u5bf9\u8c61\u4f20\u4e3a{} const obj = Object . assign ({}, objA , objB ) // \u7ed9\u5bf9\u8c61\u6dfb\u52a0\u5c5e\u6027 this . seller = Object . assign ({}, this . seller , response . data )","title":"\u5bf9\u8c61"},{"location":"web/es6/#promise","text":"\u7528\u540c\u6b65\u7684\u65b9\u5f0f\u53bb\u5199\u5f02\u6b65\u4ee3\u7801 // \u53d1\u8d77\u5f02\u6b65\u8bf7\u6c42 fetch ( '/api/todos' ) . then ( res => res . json ()) . then ( data => ({ data })) . catch ( err => ({ err }));","title":"Promise"},{"location":"web/es6/#generators","text":"\u751f\u6210\u5668\uff08 generator\uff09\u662f\u80fd\u8fd4\u56de\u4e00\u4e2a\u8fed\u4ee3\u5668\u7684\u51fd\u6570\u3002 \u751f\u6210\u5668\u51fd\u6570\u4e5f\u662f\u4e00\u79cd\u51fd\u6570\uff0c\u6700\u76f4\u89c2\u7684\u8868\u73b0\u5c31\u662f\u6bd4\u666e\u901a\u7684function\u591a\u4e86\u4e2a\u661f\u53f7*\uff0c\u5728\u5176\u51fd\u6570\u4f53\u5185\u53ef\u4ee5\u4f7f\u7528yield\u5173\u952e\u5b57,\u6709\u610f\u601d\u7684\u662f\u51fd\u6570\u4f1a\u5728\u6bcf\u4e2ayield\u540e\u6682\u505c\u3002 \u8fd9\u91cc\u751f\u6d3b\u4e2d\u6709\u4e00\u4e2a\u6bd4\u8f83\u5f62\u8c61\u7684\u4f8b\u5b50\u3002\u54b1\u4eec\u5230\u94f6\u884c\u529e\u7406\u4e1a\u52a1\u65f6\u5019\u90fd\u5f97\u5411\u5927\u5385\u7684\u673a\u5668\u53d6\u4e00\u5f20\u6392\u961f\u53f7\u3002\u4f60\u62ff\u5230\u4f60\u7684\u6392\u961f\u53f7\uff0c\u673a\u5668\u5e76\u4e0d\u4f1a\u81ea\u52a8\u4e3a\u4f60\u518d\u51fa\u4e0b\u4e00\u5f20\u7968\u3002\u4e5f\u5c31\u662f\u8bf4\u53d6\u7968\u673a\u201c\u6682\u505c\u201d\u4f4f\u4e86\uff0c\u76f4\u5230\u4e0b\u4e00\u4e2a\u4eba\u518d\u6b21\u5524\u8d77\u624d\u4f1a\u7ee7\u7eed\u5410\u7968\u3002 \u8fed\u4ee3\u5668\uff1a\u5f53\u4f60\u8c03\u7528\u4e00\u4e2agenerator\u65f6\uff0c\u5b83\u5c06\u8fd4\u56de\u4e00\u4e2a\u8fed\u4ee3\u5668\u5bf9\u8c61\u3002\u8fd9\u4e2a\u8fed\u4ee3\u5668\u5bf9\u8c61\u62e5\u6709\u4e00\u4e2a\u53eb\u505anext\u7684\u65b9\u6cd5\u6765\u5e2e\u52a9\u4f60\u91cd\u542fgenerator\u51fd\u6570\u5e76\u5f97\u5230\u4e0b\u4e00\u4e2a\u503c\u3002next\u65b9\u6cd5\u4e0d\u4ec5\u8fd4\u56de\u503c\uff0c\u5b83\u8fd4\u56de\u7684\u5bf9\u8c61\u5177\u6709\u4e24\u4e2a\u5c5e\u6027\uff1adone\u548cvalue\u3002value\u662f\u4f60\u83b7\u5f97\u7684\u503c\uff0cdone\u7528\u6765\u8868\u660e\u4f60\u7684generator\u662f\u5426\u5df2\u7ecf\u505c\u6b62\u63d0\u4f9b\u503c\u3002\u7ee7\u7eed\u7528\u521a\u521a\u53d6\u7968\u7684\u4f8b\u5b50\uff0c\u6bcf\u5f20\u6392\u961f\u53f7\u5c31\u662f\u8fd9\u91cc\u7684value\uff0c\u6253\u5370\u7968\u7684\u7eb8\u662f\u5426\u7528\u5b8c\u5c31\u8fd9\u662f\u8fd9\u91cc\u7684done\u3002 // \u751f\u6210\u5668 function * createIterator () { yield 1 ; yield 2 ; yield 3 ; } // \u751f\u6210\u5668\u80fd\u50cf\u6b63\u89c4\u51fd\u6570\u90a3\u6837\u88ab\u8c03\u7528\uff0c\u4f46\u4f1a\u8fd4\u56de\u4e00\u4e2a\u8fed\u4ee3\u5668 let iterator = createIterator (); console . log ( iterator . next (). value ); // 1 console . log ( iterator . next (). value ); // 2 console . log ( iterator . next (). value ); // 3 \u8fed\u4ee3\u5668\u5bf9\u5f02\u6b65\u7f16\u7a0b\u4f5c\u7528\u5f88\u5927\uff0c\u5f02\u6b65\u8c03\u7528\u5bf9\u4e8e\u6211\u4eec\u6765\u8bf4\u662f\u5f88\u56f0\u96be\u7684\u4e8b\uff0c\u6211\u4eec\u7684\u51fd\u6570\u5e76\u4e0d\u4f1a\u7b49\u5f85\u5f02\u6b65\u8c03\u7528\u5b8c\u518d\u6267\u884c\uff0c\u4f60\u53ef\u80fd\u4f1a\u60f3\u5230\u7528\u56de\u8c03\u51fd\u6570\uff0c\uff08\u5f53\u7136\u8fd8\u6709\u5176\u4ed6\u65b9\u6848\u6bd4\u5982Promise\u6bd4\u5982Async/await\uff09\u3002 \u751f\u6210\u5668\u53ef\u4ee5\u8ba9\u6211\u4eec\u7684\u4ee3\u7801\u8fdb\u884c\u7b49\u5f85\u3002\u5c31\u4e0d\u7528\u5d4c\u5957\u7684\u56de\u8c03\u51fd\u6570\u3002\u4f7f\u7528generator\u53ef\u4ee5\u786e\u4fdd\u5f53\u5f02\u6b65\u8c03\u7528\u5728\u6211\u4eec\u7684generator\u51fd\u6570\u8fd0\u884c\u4e00\u4e0b\u884c\u4ee3\u7801\u4e4b\u524d\u5b8c\u6210\u65f6\u6682\u505c\u51fd\u6570\u7684\u6267\u884c\u3002 \u90a3\u4e48\u95ee\u9898\u6765\u4e86\uff0c\u54b1\u4eec\u4e5f\u4e0d\u80fd\u624b\u52a8\u4e00\u76f4\u8c03\u7528next()\u65b9\u6cd5\uff0c\u4f60\u9700\u8981\u4e00\u4e2a\u80fd\u591f\u8c03\u7528\u751f\u6210\u5668\u5e76\u542f\u52a8\u8fed\u4ee3\u5668\u7684\u65b9\u6cd5\u3002\u5c31\u50cf\u8fd9\u6837\u5b50\u7684\uff1a function run ( taskDef ) { // taskDef \u5373\u4e00\u4e2a\u751f\u6210\u5668\u51fd\u6570 // \u521b\u5efa\u8fed\u4ee3\u5668\uff0c\u8ba9\u5b83\u5728\u522b\u5904\u53ef\u7528 let task = taskDef (); // \u542f\u52a8\u4efb\u52a1 let result = task . next (); // \u9012\u5f52\u4f7f\u7528\u51fd\u6570\u6765\u4fdd\u6301\u5bf9 next() \u7684\u8c03\u7528 function step () { // \u5982\u679c\u8fd8\u6709\u66f4\u591a\u8981\u505a\u7684 if ( ! result . done ) { result = task . next (); step (); } } // \u5f00\u59cb\u5904\u7406\u8fc7\u7a0b step (); }","title":"Generators"},{"location":"web/es6/#_3","text":"\u4ee5\u4e0a\u5c31\u662f ES6 \u6700\u5e38\u7528\u7684\u4e00\u4e9b\u8bed\u6cd5\uff0c\u53ef\u4ee5\u8bf4\u8fd920%\u7684\u8bed\u6cd5\uff0c\u5728ES6\u7684\u65e5\u5e38\u4f7f\u7528\u4e2d\u5360\u4e8680% \u66f4\u591aES6\u8bed\u6cd5\u70b9\u51fb\u8fd9\u91cc","title":"\u603b\u7ed3"},{"location":"web/node.js/","text":"node.js \u57fa\u7840 \u00b6 \u5b98\u65b9\u6587\u6863 \u83dc\u9e1f\u6587\u6863 \u5ed6\u96ea\u5cf0\u6587\u6863","title":"node.js\u6587\u6863"},{"location":"web/node.js/#nodejs","text":"\u5b98\u65b9\u6587\u6863 \u83dc\u9e1f\u6587\u6863 \u5ed6\u96ea\u5cf0\u6587\u6863","title":"node.js \u57fa\u7840"}]}